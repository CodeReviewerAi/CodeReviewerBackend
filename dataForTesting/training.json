{
    "24petwatch": {
        "blocks/cards/cards.js::createBlogCard": {
            "changes_after_merge": 2,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function createBlogCard(item = {}) {\n  let { title, image, path } = item;\n  const { description } = item;\n\n  path = new URL(path, 'https://main--24petwatch--hlxsites.hlx.live').toString();\n\n  try {\n    image = new URL(image, 'https://main--24petwatch--hlxsites.hlx.live');\n    image.hostname = 'main--24petwatch--hlxsites.hlx.live';\n  } catch (e) { /* ignore */ }\n  if (title.startsWith('24Petwatch: ')) {\n    title = title.replace('24Petwatch: ', '');\n  }\n\n  return document.createRange().createContextualFragment(`\n    <div>\n      <picture>\n        <img loading=\"lazy\" alt=\"${title}\" src=\"${image.toString()}\">\n      </picture>\n    </div>\n    <div>\n      <h4>${title}</h4>\n      <p>${description}</p>\n      <p>\n        <a href=\"${path}\">Read more</a>\n      </p>\n    </div>\n  `);\n}",
            "score": -0.9069767441860466
        },
        "blocks/cards/cards.js::createFilterSelect": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "async function createFilterSelect(block, total, currentTag) {\n  const tags = await getTagFilters();\n\n  const onChange = (e) => {\n    const newUrl = new URL(window.location);\n    if (e.target.value !== '') {\n      newUrl.searchParams.set('tag', e.target.value);\n    } else {\n      newUrl.searchParams.delete('tag');\n    }\n    newUrl.searchParams.set('page', 1);\n    window.history.pushState({}, '', newUrl.toString());\n    // eslint-disable-next-line no-use-before-define\n    decorate(block);\n  };\n\n  const filterselect = document.createRange().createContextualFragment(`\n    <div class=\"cards-filterselect\">\n      <div class=\"total\">${total} Results</div>\n      <label for=\"filter\">Filter by:</label>\n      <div class=\"select-group\">\n        <select id=\"filter\">\n          <option value=\"\">Topic</option>\n          ${tags.map(({ Name, Value }) => `<option value=\"${Value}\" ${Value === currentTag ? 'selected=\"selected\"' : ''}>${Name}</option>`).join('')}\n        </select>\n      </div>\n    </div>\n  `);\n  block.closest('.cards-wrapper').insertBefore(filterselect, block.closest('.cards-wrapper').querySelector('.block'));\n  block.closest('.cards-wrapper').querySelector('.cards-filterselect select').addEventListener('change', onChange);\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::createPagination": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function createPagination(block, pages, currentPage) {\n  let pageSet = new Set([1, pages, currentPage, currentPage - 1, currentPage + 1]);\n  pageSet = Array.from(pageSet)\n    .filter((a) => a > 0 && a <= pages)\n    .sort((a, b) => a - b);\n\n  const onPaginate = (e) => {\n    const hrefPage = parseInt(new URL(e.target.href).searchParams.get('page'), 10);\n    const newUrl = new URL(window.location);\n    newUrl.searchParams.set('page', hrefPage);\n    window.history.pushState({}, '', newUrl.toString());\n    e.preventDefault();\n    // eslint-disable-next-line no-use-before-define\n    decorate(block);\n  };\n\n  const pagination = document.createRange().createContextualFragment(`\n    <div class=\"cards-pagination\">\n      <ul>\n        ${currentPage > 1 ? `<li class=\"prev\"><a href=\"?page=${currentPage - 1}\">Prev</a></li>` : ''}\n        ${pageSet.map((p, index) => {\n    const item = index > 0 && p - pageSet[index - 1] > 1 ? '<li class=\"dots\">...</li>' : '';\n    return `${item}<li class=\"${p === currentPage ? 'active' : ''}\"><a href=\"?page=${p}\">${p}</a></li>`;\n  }).join('')}\n        ${currentPage < pages ? `<li class=\"next\"><a href=\"?page=${currentPage + 1}\">Next</a></li>` : ''}\n      </ul>\n    </div>`);\n  block.closest('.cards-wrapper').appendChild(pagination);\n  block.closest('.cards-wrapper').querySelectorAll('.cards-pagination a').forEach((a) => a.addEventListener('click', onPaginate));\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::createSearchBox": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function createSearchBox(block, searchTerm) {\n  const onSubmit = (e) => {\n    const newSearchTerm = e.target.querySelector('input').value;\n    const newUrl = new URL(window.location);\n    if (newSearchTerm !== '') {\n      newUrl.searchParams.set('search', newSearchTerm);\n    } else {\n      newUrl.searchParams.delete('search');\n    }\n    newUrl.searchParams.set('page', 1);\n    window.history.pushState({}, '', newUrl.toString());\n    e.preventDefault();\n    // eslint-disable-next-line no-use-before-define\n    decorate(block);\n  };\n\n  const searchbar = document.createRange().createContextualFragment(`\n    <div class=\"cards-searchbar\">\n      <form>\n        <label for=\"search\">Search</label>\n        <input type=\"search\" id=\"search\" name=\"search\" placeholder=\"Search blog\" value=\"${searchTerm}\">\n      </form>\n      ${searchTerm ? `<div class=\"searchbar-results\">Search results for \"${searchTerm}\"</div>` : ''}\n    </div>\n  `);\n  block.closest('.cards-wrapper').prepend(searchbar);\n  block.closest('.cards-wrapper').querySelector('.cards-searchbar form').addEventListener('submit', onSubmit);\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "async function decorate(block) {\n  const isBlogTeaser = block.classList.contains('blog-teaser');\n  if (isBlogTeaser) {\n    await populateBlogTeaser(block);\n  }\n\n  const isBlogGrid = block.classList.contains('blog-grid');\n  if (isBlogGrid) {\n    block.textContent = '';\n    block.closest('.cards-wrapper').querySelectorAll(':scope > *:not(.block)').forEach((e) => e.remove());\n    await populateBlogGrid(block);\n  }\n\n  /* change to ul, li */\n  const ul = document.createElement('ul');\n  [...block.children].forEach((row) => {\n    const li = document.createElement('li');\n    li.innerHTML = row.innerHTML;\n    [...li.children].forEach((div) => {\n      const href = li.querySelector('a')?.href;\n      if (div.children.length === 1 && div.querySelector('picture')) {\n        div.className = 'cards-card-image';\n        wrapInAnchor(div, href);\n      } else {\n        div.className = 'cards-card-body';\n        const h4 = li.querySelector('h4');\n        if (h4) {\n          wrapInAnchor(h4, href);\n        }\n      }\n    });\n\n    if (li.textContent.trim() !== '') {\n      ul.append(li);\n    }\n  });\n\n  [...ul.querySelectorAll('img')]\n    .forEach((img) => img.closest('picture').replaceWith(createOptimizedPicture(img.src, img.alt, false, [{ width: '750' }])));\n  block.textContent = '';\n  block.append(ul);\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::fetchBlogPosts": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "fetchBlogPosts = async (page = 1, tags = [], searchTerm = '', pagesize = 9) => {\n  let { data, total } = await loadBlogPosts();\n\n  // Filter by tags\n  if (tags.length > 0) {\n    data = data.filter(({ tags: blogTag }) => tags.some((t) => blogTag.includes(t)));\n    total = data.length;\n  }\n\n  // Filter by search term\n  if (searchTerm) {\n    data = data\n      .filter(({ title, description }) => title.toLowerCase().includes(searchTerm.toLowerCase())\n        || description.toLowerCase().includes(searchTerm.toLowerCase()));\n    total = data.length;\n  }\n\n  // Filter by page\n  const start = (page - 1) * pagesize;\n  const end = start + pagesize;\n\n  let currentPage = page;\n  if (currentPage > Math.ceil(total / pagesize)) {\n    currentPage = Math.ceil(total / pagesize);\n  }\n  if (currentPage < 1) {\n    currentPage = 1;\n  }\n\n  return {\n    items: data.slice(start, end),\n    pages: Math.ceil(total / pagesize),\n    currentPage,\n    total,\n  };\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::getTagFilters": {
            "changes_after_merge": 2,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "async function getTagFilters() {\n  let index = new URL(`${isCanada ? '/ca' : ''}/blog/tag-filters.json`, window.location.origin);\n  if (!window.location.hostname.includes('24petwatch.com')) {\n    index = new URL(`https://main--24petwatch--hlxsites.hlx.live${isCanada ? '/ca' : ''}/blog/tag-filters.json`);\n  }\n  const response = await fetch(index);\n  const json = await response.json();\n  return json.data;\n}",
            "score": -0.9069767441860466
        },
        "blocks/cards/cards.js::loadBlogPosts": {
            "changes_after_merge": 2,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "async function loadBlogPosts() {\n  let index = new URL(`${isCanada ? '/ca' : ''}/blog/query-index.json`, window.location.origin);\n  if (!window.location.hostname.includes('24petwatch.com')) {\n    index = new URL(`https://main--24petwatch--hlxsites.hlx.live${isCanada ? '/ca' : ''}/blog/query-index.json`);\n  }\n  const chunkSize = 100;\n  const loadChunk = async (offset) => {\n    index.searchParams.set('limit', chunkSize);\n    index.searchParams.set('offset', offset);\n\n    const response = await fetch(index);\n    const json = await response.json();\n\n    // Check if more has to be loaded\n    if (json.total > offset + chunkSize) {\n      return {\n        data: [...json.data, ...(await loadChunk(offset + 100)).data],\n        total: json.total,\n      };\n    }\n    return {\n      data: json.data,\n      total: json.total,\n    };\n  };\n\n  if (!window.blogPosts) {\n    window.blogPosts = await loadChunk(0);\n  }\n  return window.blogPosts;\n}",
            "score": -0.9069767441860466
        },
        "blocks/cards/cards.js::loadChunk": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "loadChunk = async (offset) => {\n    index.searchParams.set('limit', chunkSize);\n    index.searchParams.set('offset', offset);\n\n    const response = await fetch(index);\n    const json = await response.json();\n\n    // Check if more has to be loaded\n    if (json.total > offset + chunkSize) {\n      return {\n        data: [...json.data, ...(await loadChunk(offset + 100)).data],\n        total: json.total,\n      };\n    }\n    return {\n      data: json.data,\n      total: json.total,\n    };\n  }",
            "score": -1.0
        },
        "blocks/cards/cards.js::onChange": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "onChange = (e) => {\n    const newUrl = new URL(window.location);\n    if (e.target.value !== '') {\n      newUrl.searchParams.set('tag', e.target.value);\n    } else {\n      newUrl.searchParams.delete('tag');\n    }\n    newUrl.searchParams.set('page', 1);\n    window.history.pushState({}, '', newUrl.toString());\n    // eslint-disable-next-line no-use-before-define\n    decorate(block);\n  }",
            "score": -1.0
        },
        "blocks/cards/cards.js::onPaginate": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "onPaginate = (e) => {\n    const hrefPage = parseInt(new URL(e.target.href).searchParams.get('page'), 10);\n    const newUrl = new URL(window.location);\n    newUrl.searchParams.set('page', hrefPage);\n    window.history.pushState({}, '', newUrl.toString());\n    e.preventDefault();\n    // eslint-disable-next-line no-use-before-define\n    decorate(block);\n  }",
            "score": -1.0
        },
        "blocks/cards/cards.js::onSubmit": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "onSubmit = (e) => {\n    const newSearchTerm = e.target.querySelector('input').value;\n    const newUrl = new URL(window.location);\n    if (newSearchTerm !== '') {\n      newUrl.searchParams.set('search', newSearchTerm);\n    } else {\n      newUrl.searchParams.delete('search');\n    }\n    newUrl.searchParams.set('page', 1);\n    window.history.pushState({}, '', newUrl.toString());\n    e.preventDefault();\n    // eslint-disable-next-line no-use-before-define\n    decorate(block);\n  }",
            "score": -1.0
        },
        "blocks/cards/cards.js::populateBlogGrid": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "async function populateBlogGrid(block) {\n  const searchParams = new URLSearchParams(window.location.search);\n  const page = parseInt(searchParams.get('page'), 10) || 1;\n  const searchTerm = searchParams.get('search') || '';\n  const tags = (searchParams.get('tag') ? [searchParams.get('tag')] : []).map((t) => t.replace(/[^a-z0-9-]/g, ''));\n  const {\n    items, pages, currentPage, total,\n  } = await fetchBlogPosts(page, tags, searchTerm.replace(/[^a-zA-Z0-9 ]/g, ''), 9);\n  items.forEach((item) => {\n    const card = document.createElement('div');\n    card.appendChild(createBlogCard(item));\n    block.appendChild(card);\n  });\n\n  if (items.length === 0) {\n    block.closest('.cards-wrapper').prepend(document.createRange().createContextualFragment(`\n      <h3>Sorry, there are no results that match your search</h3>\n      <p>Please check your spelling or try again using different keywords</p>\n    `));\n  } else {\n    createFilterSelect(block, total, tags.length > 0 ? tags[0] : null);\n  }\n\n  createSearchBox(block, searchTerm);\n  createPagination(block, pages, currentPage);\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::populateBlogTeaser": {
            "changes_after_merge": 1,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "async function populateBlogTeaser(block) {\n  const tags = getMetadata('article:tag').split(', ');\n  const response = await fetchBlogPosts(1, tags, '', 3);\n  response.items.forEach((item) => {\n    const card = document.createElement('div');\n    card.appendChild(createBlogCard(item));\n    block.appendChild(card);\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/cards/cards.js::wrapInAnchor": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function wrapInAnchor(element, href) {\n  const anchor = document.createElement('a');\n  anchor.classList.add('wrapping-anchor');\n  anchor.href = href;\n  element.replaceWith(anchor);\n  anchor.appendChild(element);\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function decorate(block) {\n  const cfg = readBlockConfig(block);\n  block.textContent = '';\n\n  // fetch footer content\n  const footerPath = cfg.footer || '/fragments/footer/master';\n  const resp = await fetch(`${footerPath}.plain.html`, window.location.pathname.endsWith('/footer') ? { cache: 'reload' } : {});\n\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // decorate footer DOM\n    const footer = document.createElement('div');\n    footer.classList.add('footer-section-wrapper');\n\n    // transform given html\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n\n    const container = doc.querySelectorAll('div');\n    container.forEach((div) => {\n      div.classList.add('footer-container');\n      const headings = div.querySelectorAll('h1, h2, h3, h4');\n      const logos = [...div.querySelectorAll('p > picture')]\n        .map((picture) => picture.parentElement);\n\n      if (headings.length > 0) {\n        const headingWrapper = document.createElement('div');\n        headingWrapper.classList.add('footer-heading-wrapper');\n\n        let currentSection;\n\n        headings.forEach((heading) => {\n          heading.classList.add('footer-heading');\n          if (heading.tagName === 'H3') {\n            heading.addEventListener('click', () => {\n              heading.parentElement.classList.toggle('collapsed');\n            });\n          }\n\n          const nextSibling = heading.nextElementSibling;\n\n          if (heading.tagName === 'H4') {\n            const subheadingContainer = document.createElement('div');\n            subheadingContainer.classList.add('footer-subheading-container');\n            subheadingContainer.classList.add('collapsed');\n\n            subheadingContainer.addEventListener('click', () => {\n              subheadingContainer.classList.toggle('collapsed');\n            });\n\n            heading.classList.add('footer-subheading');\n            const subList = heading.nextElementSibling;\n            subheadingContainer.appendChild(heading);\n            subheadingContainer.appendChild(subList);\n            if (currentSection) {\n              currentSection.appendChild(subheadingContainer);\n            }\n          } else {\n            currentSection = document.createElement('div');\n            currentSection.classList.add('footer-heading-section');\n            currentSection.appendChild(heading);\n            currentSection.appendChild(nextSibling);\n            headingWrapper.appendChild(currentSection);\n\n            if (currentSection.querySelector('h2')) {\n              currentSection.classList.add('h2-container');\n            } else {\n              currentSection.classList.add('collapsed');\n            }\n\n            [...currentSection.querySelectorAll('span.icon')].forEach((icon) => {\n              if (icon.nextElementSibling.tagName === 'A') {\n                icon.nextElementSibling.prepend(icon);\n              }\n            });\n          }\n        });\n        footer.appendChild(headingWrapper);\n      } else if (logos.length > 0) {\n        const logo = document.createElement('div');\n        logo.classList.add('footer-logo');\n        logos.forEach((img) => {\n          logo.appendChild(img);\n        });\n        footer.appendChild(logo);\n      } else {\n        footer.appendChild(div);\n      }\n    });\n\n    decorateIcons(footer);\n    decorateLinks(footer);\n    instrumentTrackingEvents(footer);\n    block.append(footer);\n  }\n}",
            "score": -0.8604651162790697
        },
        "blocks/footer/footer.js::instrumentTrackingEvents": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function instrumentTrackingEvents(footer) {\n  footer.querySelectorAll('a')\n    .forEach((anchor) => {\n      anchor.addEventListener('click', (e) => {\n        const menuLocation = isMobile.matches ? 'mobile' : 'footer';\n        const pageLocation = window.location.pathname;\n        const pageUrl = window.location.href;\n        const linkText = (e.target.textContent || '').trim();\n        const linkUrl = e.target.href;\n\n        // track navigation events\n        trackGTMEvent('navigation', {\n          menu_location: menuLocation,\n          link_text: linkText,\n          link_url: linkUrl,\n        });\n\n        // track social media clicks\n        const socialNetwork = socialNetworks\n          .find((social) => linkUrl.includes(social.toLowerCase()));\n\n        if (socialNetwork) {\n          trackGTMEvent('social_interactions', {\n            page_location: pageLocation,\n            social_network: socialNetwork,\n          });\n        }\n\n        // track clicks to call\n        if (linkUrl.startsWith('tel')) {\n          trackGTMEvent('click_to_call', {\n            page_url: pageUrl,\n          });\n        }\n      });\n    });\n}",
            "score": -1.0
        },
        "blocks/header/header.js::closeAllMenus": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function closeAllMenus(nav, navSections) {\n  const wrapper = nav.closest('.nav-wrapper');\n  nav.setAttribute('aria-expanded', 'false');\n  wrapper?.setAttribute('aria-expanded', 'false');\n  wrapper?.querySelector('.nav-secondary')?.querySelector('.language-selector')?.setAttribute('aria-expanded', 'false');\n  toggleAllNavSections(navSections, 'false');\n}",
            "score": -1.0
        },
        "blocks/header/header.js::closeOnEscape": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function closeOnEscape(e) {\n  if (e.code === 'Escape') {\n    const nav = document.getElementById('nav');\n    const navSections = nav.querySelector('.nav-sections');\n    const navSectionExpanded = navSections.querySelector('[aria-expanded=\"true\"]');\n    if (navSectionExpanded && isTablet.matches) {\n      // eslint-disable-next-line no-use-before-define\n      toggleAllNavSections(navSections);\n      navSectionExpanded.focus();\n    } else if (!isTablet.matches) {\n      // eslint-disable-next-line no-use-before-define\n      toggleMenu(nav, navSections);\n      nav.querySelector('button').focus();\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::decorate": {
            "changes_after_merge": 11,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function decorate(block) {\n  // fetch nav content\n  const navMeta = getMetadata('nav');\n  block.textContent = '';\n\n  const navPath = navMeta ? new URL(navMeta).pathname : '/fragments/header/master';\n  const resp = await fetch(`${navPath}.plain.html`);\n\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // decorate nav DOM\n    const nav = document.createElement('nav');\n    nav.id = 'nav';\n    nav.innerHTML = html;\n\n    const classes = ['brand', 'get-quote', 'sections', 'secondary'];\n    classes.forEach((c, i) => {\n      const section = nav.children[i];\n      if (section) section.classList.add(`nav-${c}`);\n    });\n\n    const navSections = nav.querySelector('.nav-sections');\n    if (navSections) {\n      navSections.querySelectorAll(':scope > ul > li').forEach((navSection) => {\n        if (navSection.querySelector('ul')) {\n          navSection.classList.add('nav-drop');\n          const dropdownAnchor = document.createElement('a');\n          dropdownAnchor.href = '#';\n          dropdownAnchor.ariaLabel = 'Open dropdown menu';\n          dropdownAnchor.classList.add('icon-arrow');\n          dropdownAnchor.addEventListener('click', (e) => {\n            e.preventDefault();\n          });\n          navSection.append(dropdownAnchor);\n        }\n        navSection.addEventListener('click', (e) => {\n          if (!isTablet.matches && !isDesktop.matches && e.target.tagName === 'A') return;\n\n          const expanded = navSection.getAttribute('aria-expanded') === 'true';\n          navSection.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n        });\n        navSection.addEventListener('mouseenter', () => {\n          if (isDesktop.matches) {\n            navSection.setAttribute('aria-expanded', 'true');\n          }\n        });\n        navSection.addEventListener('mouseleave', () => {\n          if (isDesktop.matches) {\n            navSection.setAttribute('aria-expanded', 'false');\n          }\n        });\n      });\n    }\n\n    // hamburger for mobile\n    const hamburger = document.createElement('div');\n    hamburger.classList.add('nav-hamburger');\n    hamburger.innerHTML = `<button type=\"button\" aria-controls=\"nav\" aria-label=\"Open navigation\">\n        <span></span><span></span><span></span>\n      </button>`;\n    hamburger.addEventListener('click', () => toggleMenu(nav, navSections));\n    nav.prepend(hamburger);\n    nav.setAttribute('aria-expanded', 'false');\n    // prevent mobile nav behavior on window resize\n    toggleMenu(nav, navSections, isTablet.matches);\n    isTablet.addEventListener('change', () => closeAllMenus(nav, navSections));\n\n    // language selector\n    const secondaryMenu = nav.querySelector('.nav-secondary');\n    decorateLanguageSelector(secondaryMenu);\n\n    decorateIcons(nav);\n    decorateButtons(nav);\n    decorateLinks(nav);\n    instrumentTrackingEvents(nav);\n    const navWrapper = document.createElement('div');\n    navWrapper.className = 'nav-wrapper';\n    navWrapper.append(nav);\n    block.append(navWrapper);\n\n    window.addEventListener('scroll', () => {\n      if (window.pageYOffset - positionY > SCROLL_STEP && !navWrapper.classList.contains('slide-up')) {\n        navWrapper.classList.remove('slide-down');\n        navWrapper.classList.add('slide-up');\n      }\n      if (positionY - window.pageYOffset > SCROLL_STEP && !navWrapper.classList.contains('slide-down')) {\n        navWrapper.classList.remove('slide-up');\n        navWrapper.classList.add('slide-down');\n      }\n\n      positionY = window.pageYOffset;\n    }, false);\n  }\n}",
            "score": -0.4883720930232558
        },
        "blocks/header/header.js::decorateLanguageSelector": {
            "changes_after_merge": 8,
            "file_path": "blocks/header/header.js",
            "merged_function": "function decorateLanguageSelector(block) {\n  const languageSelector = document.createElement('li');\n  languageSelector.classList.add('language-selector');\n  languageSelector.innerHTML = `<span class=\"icon icon-flagusa\"></span>\n      <ul>\n        <li><a href=\"https://www.24petwatch.com/ca\" hreflang=\"en-CA\" rel=\"alternate\" title=\"Canada\"><span class=\"icon icon-flagcanada\"></span>Canada</a></li>\n      </ul>`;\n  block.querySelector(':scope > ul').prepend(languageSelector);\n\n  languageSelector.setAttribute('aria-expanded', 'false');\n  languageSelector.addEventListener('click', () => {\n    if (!isTablet.matches) {\n      const expanded = languageSelector.getAttribute('aria-expanded') === 'true';\n      languageSelector.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n    }\n  });\n  languageSelector.addEventListener('mouseenter', () => {\n    if (isTablet.matches) {\n      languageSelector.setAttribute('aria-expanded', 'true');\n    }\n  });\n  languageSelector.addEventListener('mouseleave', () => {\n    if (isTablet.matches) {\n      languageSelector.setAttribute('aria-expanded', 'false');\n    }\n  });\n}",
            "score": -0.627906976744186
        },
        "blocks/header/header.js::focusNavSection": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function focusNavSection() {\n  document.activeElement.addEventListener('keydown', openOnKeydown);\n}",
            "score": -1.0
        },
        "blocks/header/header.js::instrumentTrackingEvents": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function instrumentTrackingEvents(header) {\n  header.querySelectorAll('a')\n    .forEach((anchor) => {\n      anchor.addEventListener('click', (e) => {\n        const menuLocation = isMobile.matches ? 'mobile' : 'header';\n        const linkText = (e.target.textContent || '').trim();\n        const linkUrl = e.target.href;\n        const title = (e.target.title || '').trim();\n\n        // track navigation events\n        trackGTMEvent('navigation', {\n          menu_location: menuLocation,\n          link_text: linkText,\n          link_url: linkUrl,\n        });\n\n        // track cta clicks on header\n        if (e.target.classList.contains('button')) {\n          trackGTMEvent('cta_click', {\n            link_text: linkText,\n            link_url: linkUrl,\n          });\n        }\n\n        // track report lost and found pet\n        if (title === 'Report a Lost or Found Pet') {\n          trackGTMEvent('pet_lost_found_report_click');\n        }\n      });\n    });\n}",
            "score": -1.0
        },
        "blocks/header/header.js::openOnKeydown": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function openOnKeydown(e) {\n  const focused = document.activeElement;\n  const isNavDrop = focused.className === 'nav-drop';\n  if (isNavDrop && (e.code === 'Enter' || e.code === 'Space')) {\n    const dropExpanded = focused.getAttribute('aria-expanded') === 'true';\n    // eslint-disable-next-line no-use-before-define\n    toggleAllNavSections(focused.closest('.nav-sections'));\n    focused.setAttribute('aria-expanded', dropExpanded ? 'false' : 'true');\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::toggleAllNavSections": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function toggleAllNavSections(sections, expanded = false) {\n  sections.querySelectorAll('.nav-sections > ul > li').forEach((section) => {\n    section.setAttribute('aria-expanded', expanded);\n  });\n}",
            "score": -1.0
        },
        "blocks/header/header.js::toggleMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function toggleMenu(nav, navSections, closeAll = null) {\n  const expanded = closeAll !== null ? !closeAll : nav.getAttribute('aria-expanded') === 'true';\n  const button = nav.querySelector('.nav-hamburger button');\n  const wrapper = nav.closest('.nav-wrapper');\n\n  nav.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n  wrapper?.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n  toggleAllNavSections(navSections, expanded);\n  button.setAttribute('aria-label', expanded ? 'Open navigation' : 'Close navigation');\n  // enable nav dropdown keyboard accessibility\n  const navDrops = navSections.querySelectorAll('.nav-drop');\n  if (isTablet.matches) {\n    navDrops.forEach((drop) => {\n      if (!drop.hasAttribute('tabindex')) {\n        drop.setAttribute('role', 'button');\n        drop.setAttribute('tabindex', 0);\n        drop.addEventListener('focus', focusNavSection);\n      }\n    });\n  } else {\n    navDrops.forEach((drop) => {\n      drop.removeAttribute('role');\n      drop.removeAttribute('tabindex');\n      drop.removeEventListener('focus', focusNavSection);\n    });\n  }\n  // enable menu collapse on escape keypress\n  if (!expanded || isTablet.matches) {\n    // collapse menu on escape press\n    window.addEventListener('keydown', closeOnEscape);\n  } else {\n    window.removeEventListener('keydown', closeOnEscape);\n  }\n}",
            "score": -1.0
        },
        "plugins/rum-conversion/src/index.js::findConversionValue": {
            "changes_after_merge": 0,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "function findConversionValue(parent, fieldName) {\n  // Try to find the element by Id or Name\n  const valueElement = document.getElementById(fieldName) || parent.querySelector(`[name='${fieldName}']`);\n  if (valueElement) {\n    return valueElement.value;\n  }\n  // Find the element by the inner text of the label\n  return Array.from(parent.getElementsByTagName('label'))\n    .filter((l) => l.innerText.trim().toLowerCase() === fieldName.toLowerCase())\n    .map((label) => document.getElementById(label.htmlFor))\n    .filter((field) => !!field)\n    .map((field) => field.value)\n    .pop();\n}",
            "score": -1.0
        },
        "plugins/rum-conversion/src/index.js::getConversionNameMetadata": {
            "changes_after_merge": 0,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "function getConversionNameMetadata(element) {\n  const text = element.title || element.textContent;\n  return this.getMetadata(`conversion-name--${text.toLowerCase().replace(/[^0-9a-z]/gi, '-')}-`);\n}",
            "score": -1.0
        },
        "plugins/rum-conversion/src/index.js::getLinkLabel": {
            "changes_after_merge": 0,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "function getLinkLabel(element) {\n  return element.title ? this.toClassName(element.title) : this.toClassName(element.textContent);\n}",
            "score": -1.0
        },
        "plugins/rum-conversion/src/index.js::initConversionTracking": {
            "changes_after_merge": 0,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "async function initConversionTracking(parent = document, defaultFormConversionName = '') {\n  const conversionElements = {\n    form: () => {\n      // Track all forms\n      parent.querySelectorAll('form').forEach((element) => {\n        const section = element.closest('div.section');\n        if (section.dataset.conversionValueField) {\n          const cvField = section.dataset.conversionValueField.trim();\n          // this will track the value of the element with the id specified in\n          // the \"Conversion Element\" field.\n          // ideally, this should not be an ID, but the case-insensitive name label of the element.\n          sampleRUM.convert(undefined, (cvParent) => findConversionValue(cvParent, cvField), element, ['submit']);\n        }\n        let formConversionName = section.dataset.conversionName || this.getMetadata('conversion-name');\n        if (!formConversionName) {\n          // if no conversion name is defined in the metadata,\n          // use the conversion name passed as parameter or the form or id\n          formConversionName = defaultFormConversionName\n            ? this.toClassName(defaultFormConversionName) : element.id;\n        }\n        sampleRUM.convert(formConversionName, undefined, element, ['submit']);\n      });\n    },\n    link: () => {\n      // track all links\n      Array.from(parent.querySelectorAll('a[href]'))\n        .map((element) => ({\n          element,\n          cevent: getConversionNameMetadata.call(this, element) || this.getMetadata('conversion-name') || getLinkLabel.call(this, element),\n        }))\n        .forEach(({ element, cevent }) => {\n          sampleRUM.convert(cevent, undefined, element, ['click']);\n        });\n    },\n    'labeled-link': () => {\n      // track only the links configured in the metadata\n      const linkLabels = this.getMetadata('conversion-link-labels') || '';\n      const trackedLabels = linkLabels.split(',')\n        .map((p) => p.trim())\n        .map(this.toClassName);\n\n      Array.from(parent.querySelectorAll('a[href]'))\n        .filter((element) => trackedLabels.includes(getLinkLabel.call(this, element)))\n        .map((element) => ({\n          element,\n          cevent: getConversionNameMetadata.call(this, element) || this.getMetadata('conversion-name') || getLinkLabel.call(this, element),\n        }))\n        .forEach(({ element, cevent }) => {\n          sampleRUM.convert(cevent, undefined, element, ['click']);\n        });\n    },\n  };\n\n  const declaredConversionElements = this.getMetadata('conversion-element') ? this.getMetadata('conversion-element').split(',').map((ce) => this.toClassName(ce.trim())) : [];\n\n  Object.keys(conversionElements)\n    .filter((ce) => declaredConversionElements.includes(ce))\n    .forEach((cefn) => conversionElements[cefn]());\n}",
            "score": -1.0
        },
        "plugins/rum-conversion/src/index.js::registerConversionListener": {
            "changes_after_merge": 0,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "function registerConversionListener(elements) {\n    // if elements is an array or nodelist, register a conversion event for each element\n    if (Array.isArray(elements) || elements instanceof NodeList) {\n      elements.forEach((e) => registerConversionListener(e, listenTo, cevent, cvalueThunk));\n    } else {\n      listenTo.forEach((eventName) => element.addEventListener(\n        eventName,\n        (e) => trackConversion(e.target),\n      ));\n    }\n  }",
            "score": -1.0
        },
        "plugins/rum-conversion/src/index.js::trackConversion": {
            "changes_after_merge": 0,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "async function trackConversion(celement) {\n    const MAX_SESSION_LENGTH = 1000 * 60 * 60 * 24 * 30; // 30 days\n    try {\n      // get all stored experiments from local storage (unified-decisioning-experiments)\n      const experiments = JSON.parse(localStorage.getItem('unified-decisioning-experiments'));\n      if (experiments) {\n        Object.entries(experiments)\n          .map(([experiment, { treatment, date }]) => ({ experiment, treatment, date }))\n          .filter(({ date }) => Date.now() - new Date(date) < MAX_SESSION_LENGTH)\n          .forEach(({ experiment, treatment }) => {\n            // send conversion event for each experiment that has been seen by this visitor\n            sampleRUM('variant', { source: experiment, target: treatment });\n          });\n      }\n      // send conversion event\n      const cvalue = typeof cvalueThunk === 'function' ? await cvalueThunk(element) : cvalueThunk;\n\n      const data = { source: cevent, target: cvalue, element: celement };\n      sampleRUM('convert', data);\n      // Following if statement must be removed once always mechanism is present in the boilerplate\n      if (sampleRUM.always && sampleRUM.always.convert) {\n        sampleRUM.always.convert(data);\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log('error reading experiments', e);\n    }\n  }",
            "score": -1.0
        },
        "scripts/delayed.js::createInlineScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function createInlineScript(innerHTML, parent) {\n  const script = document.createElement('script');\n  script.innerHTML = innerHTML;\n  parent.appendChild(script);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::addClasses": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::buildBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::createOptimizedPicture": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }]) {\n  let url;\n  let pathname;\n  if (!window.location.hostname.includes('24petwatch.com')) {\n    url = new URL(src);\n    pathname = src;\n  } else {\n    url = new URL(src, window.location.href);\n    pathname = url.pathname;\n  }\n  const picture = document.createElement('picture');\n\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.dataset.blockName = shortBlockName;\n    block.dataset.blockStatus = 'initialized';\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateButtons": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateIcons": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function decorateIcons(element) {\n  // Prepare the inline sprite\n  let svgSprite = document.getElementById('franklin-svg-sprite');\n  if (!svgSprite) {\n    const div = document.createElement('div');\n    div.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"franklin-svg-sprite\" style=\"display: none\"></svg>';\n    svgSprite = div.firstElementChild;\n    document.body.append(div.firstElementChild);\n  }\n\n  // Download all new icons\n  const icons = [...element.querySelectorAll('span.icon')];\n  await Promise.all(icons.map(async (span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    if (!ICONS_CACHE[iconName]) {\n      ICONS_CACHE[iconName] = true;\n      try {\n        const response = await fetch(`${window.hlx.codeBasePath}/icons/${iconName}.svg`);\n        if (!response.ok) {\n          ICONS_CACHE[iconName] = false;\n          return;\n        }\n        // Styled icons don't play nice with the sprite approach because of shadow dom isolation\n        const svg = await response.text();\n        if (svg.match(/(<style | class=)/)) {\n          ICONS_CACHE[iconName] = { styled: true, html: svg };\n        } else {\n          ICONS_CACHE[iconName] = {\n            html: svg\n              .replace('<svg', `<symbol id=\"icons-sprite-${iconName}\"`)\n              .replace(/ width=\".*?\"/, '')\n              .replace(/ height=\".*?\"/, '')\n              .replace('</svg>', '</symbol>'),\n          };\n        }\n      } catch (error) {\n        ICONS_CACHE[iconName] = false;\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    }\n  }));\n\n  const symbols = Object\n    .keys(ICONS_CACHE).filter((k) => !svgSprite.querySelector(`#icons-sprite-${k}`))\n    .map((k) => ICONS_CACHE[k])\n    .filter((v) => !v.styled)\n    .map((v) => v.html)\n    .join('\\n');\n  svgSprite.innerHTML += symbols;\n\n  icons.forEach((span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    const parent = span.firstElementChild?.tagName === 'A' ? span.firstElementChild : span;\n    // Styled icons need to be inlined as-is, while unstyled ones can leverage the sprite\n    if (ICONS_CACHE[iconName].styled) {\n      parent.innerHTML = ICONS_CACHE[iconName].html;\n    } else {\n      parent.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\"><use href=\"#icons-sprite-${iconName}\"/></svg>`;\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateLinks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateLinks(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    // open non (www)?.24petwatch.com pages in new tab\n    if (!/^https:\\/\\/(www\\.)?24petwatch.com/.test(a.href)) {\n      a.target = '_blank';\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateSections": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateTemplateAndTheme": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateTemplateAndTheme() {\n  const addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::defer": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::fetchPlaceholders": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n        .then((resp) => {\n          if (resp.ok) {\n            return resp.json();\n          }\n          throw new Error(`${resp.status}: ${resp.statusText}`);\n        }).then((json) => {\n          const placeholders = {};\n          json.data\n            .filter((placeholder) => placeholder.Key)\n            .forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n          window.placeholders[prefix] = placeholders;\n          resolve();\n        }).catch((error) => {\n          // error loading placeholders\n          window.placeholders[prefix] = {};\n          reject(error);\n        });\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return window.placeholders[prefix];\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::hashCode": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0)",
            "score": -1.0
        },
        "scripts/lib-franklin.js::init": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function init() {\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlock(block) {\n  const status = block.dataset.blockStatus;\n  if (status !== 'loading' && status !== 'loaded') {\n    block.dataset.blockStatus = 'loading';\n    const { blockName } = block.dataset;\n    try {\n      const cssLoaded = loadCSS(`${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`);\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(`../blocks/${blockName}/${blockName}.js`);\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.dataset.blockStatus = 'loaded';\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadCSS": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadCSS(href) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.append(link);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadFooter": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadHeader": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadScript(src, attrs) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > script[src=\"${src}\"]`)) {\n      const script = document.createElement('script');\n      script.src = src;\n      if (attrs) {\n      // eslint-disable-next-line no-restricted-syntax, guard-for-in\n        for (const attr in attrs) {\n          script.setAttribute(attr, attrs[attr]);\n        }\n      }\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.append(script);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::normalizeHeadings": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::readBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope > div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::sampleRUM": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.always = sampleRUM.always || [];\n  sampleRUM.always.on = (chkpnt, fn) => { sampleRUM.always[chkpnt] = fn; };\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      const urlSanitizers = {\n        full: () => window.location.href,\n        origin: () => window.location.origin,\n        path: () => window.location.href.replace(/\\?.*$/, ''),\n      };\n      // eslint-disable-next-line object-curly-newline, max-len\n      window.hlx.rum = { weight, id, random, isSelected, sampleRUM, sanitizeURL: urlSanitizers[window.hlx.RUM_MASK_URL || 'path'] };\n    }\n    const { weight, id } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n    if (sampleRUM.always[checkpoint]) { sampleRUM.always[checkpoint](data); }\n  } catch (error) {\n    // something went wrong\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::sendPing": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::setup": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.RUM_MASK_URL = 'full';\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::toCamelCase": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::toClassName": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-').replace(/-+/g, '-').replace(/^-|-$/g, '')\n    : '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::updateSectionsStatus": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.dataset.sectionStatus;\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.dataset.sectionStatus = 'loading';\n        break;\n      } else {\n        section.dataset.sectionStatus = 'loaded';\n        section.style.display = null;\n      }\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::waitForLCP": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.dataset.blockName));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.body.style.display = null;\n  const lcpCandidate = document.querySelector('main img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::buildAutoBlocks": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildAutoBlocks(main) {\n  try {\n    buildHeroBlock(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::buildHeroBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildHeroBlock(main) {\n  const h1 = main.querySelector('h1');\n  const picture = main.querySelector('picture');\n  // eslint-disable-next-line no-bitwise\n  if (h1 && picture && (h1.compareDocumentPosition(picture) & Node.DOCUMENT_POSITION_PRECEDING)) {\n    const section = document.createElement('div');\n    section.append(buildBlock('hero', { elems: [picture, h1] }));\n    main.prepend(section);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateMain": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  decorateLinks(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::initializeConversionTracking": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function initializeConversionTracking() {\n  const context = {\n    getMetadata,\n    toClassName,\n  };\n  // eslint-disable-next-line import/no-relative-packages\n  const { initConversionTracking } = await import('../plugins/rum-conversion/src/index.js');\n  await initConversionTracking.call(context, document);\n\n  let conversionEvent;\n\n  // call upon conversion events, sends them to alloy\n  sampleRUM.always.on('convert', async (data) => {\n    const { element } = data;\n    // eslint-disable-next-line no-undef\n    if (element && alloy) {\n      // form tracking related logic should be added here if need be.\n      // see https://github.com/adobe/franklin-rum-conversion#integration-with-analytics-solutions\n      if (element.tagName === 'A') {\n        conversionEvent = {\n          event: 'Link Click',\n          ...(data.source ? { conversionName: data.source } : {}),\n          ...(data.target ? { conversionValue: data.target } : {}),\n        };\n        analyticsTrackLinkClicks(element, 'other', {\n          conversion: {\n            ...(conversionEvent.conversionName\n              ? { conversionName: `${conversionEvent.conversionName}` }\n              : {}),\n            ...(conversionEvent.conversionValue\n              ? { conversionValue: `${conversionEvent.conversionValue}` }\n              : {}),\n          },\n        });\n        conversionEvent = undefined;\n      }\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::loadDelayed": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadEager": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    createInlineScript(document, document.body, getAlloyInitScript(), 'text/javascript');\n    decorateMain(main);\n    document.body.classList.add('appear');\n    await waitForLCP(LCP_BLOCKS);\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::loadLazy": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadBlocks(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  sampleRUM('lazy');\n  sampleRUM.observe(main.querySelectorAll('div[data-block-name]'));\n  sampleRUM.observe(main.querySelectorAll('picture > img'));\n\n  await setupAnalyticsTrackingWithAlloy(document);\n  analyticsSetConsent(true);\n  await initializeConversionTracking();\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::loadPage": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/express.js::handler": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/express.js",
            "merged_function": "handler = (req, res) => {\n  // eslint-disable-next-line prefer-const\n  let { path, query } = req;\n  const params = {\n    ...query,\n  };\n\n  if (AEM_USER && AEM_PASSWORD) {\n    params.authorization = `Basic ${Buffer.from(`${AEM_USER}:${AEM_PASSWORD}`).toString('base64')}`;\n    params.wcmmode = 'disabled';\n  }\n\n  let serveMd = false;\n  if (path.endsWith('.md')) {\n    serveMd = true;\n    path = `${path.substring(0, path.length - 3)}.html`;\n  }\n\n  render(path, params).then(({ html, md, error }) => {\n    if (error) {\n      res.status(error.code || 503);\n      res.send(error.message);\n      return;\n    }\n\n    res.status(200);\n\n    if (serveMd) {\n      res.contentType('.md');\n      res.send(md.md);\n    } else {\n      res.send(html);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/index.js::main": {
            "changes_after_merge": 1,
            "file_path": "tools/actions/convert/src/index.js",
            "merged_function": "async function main(params) {\n  const path = params.__ow_path ? params.__ow_path : '';\n  const authorization = params.__ow_headers ? params.__ow_headers.authorization : '';\n\n  const { html, error } = await render(path, { ...params, authorization });\n\n  if (!error) {\n    return {\n      headers: {\n        'x-html2md-img-src': converterCfg.env.aemURL,\n      },\n      statusCode: 200,\n      body: html,\n    };\n  }\n\n  return { statusCode: error.code, body: error.message };\n}",
            "score": -0.9534883720930233
        },
        "tools/actions/convert/src/index.js::render": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/index.js",
            "merged_function": "async function render(path, params, cfg = converterCfg) {\n  const mappedPath = mapInbound(path);\n\n  const { authorization, wcmmode } = params;\n  const url = new URL(mappedPath, cfg.env.aemURL);\n  if (wcmmode) {\n    url.searchParams.set('wcmmode', wcmmode);\n  }\n\n  const headers = { 'cache-control': 'no-cache' };\n  if (authorization) {\n    headers.authorization = authorization;\n  }\n\n  const resp = await fetch(url, { headers });\n\n  if (!resp.ok) {\n    console.log(`Error fetching ${url}: ${resp.status} ${resp.statusText}`);\n    return { error: { code: resp.status, message: resp.statusText } };\n  }\n\n  const text = await resp.text();\n  const { document } = new jsdom.JSDOM(text, { url }).window;\n  const md = await WebImporter.html2md(url, document, transformCfg);\n  const html = md2html(md);\n  return { md, html };\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/modules/mapping.js::mapInbound": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/modules/mapping.js",
            "merged_function": "function mapInbound(path, cfg = pathsCfg) {\n  if (cfg.mappings) {\n    let extension = '';\n    // remove .html extension;\n    if (path.endsWith('.html')) {\n      extension = '.html';\n      path = path.substring(0, path.length - extension.length);\n    }\n\n    const reversedMappings = cfg.mappings.reverse();\n    for (let i = 0; i < reversedMappings.length; i += 1) {\n      const mapping = reversedMappings[i];\n      const [from, to] = mapping.split(':', 2);\n      if (path.startsWith(to)) {\n        // mapping from folder or single page?\n        if (from.endsWith('/')) {\n          // folder, e.g. /content/site/us/en/:/us/en/\n          // mapping to folder\n          if (to.endsWith('/')) {\n            return from + path.substring(to.length) + extension;\n          }\n          // else, ignore folder => single page as this is not reversible\n        } else {\n          // single page\n          // mapping to a folder aka. /index, e.g. /content/site/us/en:/\n          // mapping to a single page, aka. exect match, /content/site/us/en/page:/vanity\n          // eslint-disable-next-line no-lonely-if\n          if ((to.endsWith('/') && path.endsWith('/index')) || to === path) {\n            return from + extension;\n          }\n        }\n      }\n    }\n    // restore extension\n    path += extension;\n  }\n  return path;\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/modules/mapping.js::mapOutbound": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/modules/mapping.js",
            "merged_function": "function mapOutbound(path, cfg = pathsCfg) {\n  if (cfg.mappings) {\n    // remove .html extension, if any;\n    if (path.endsWith('.html')) {\n      path = path.substring(0, path.length - 5);\n    }\n    const reversedMappings = cfg.mappings.reverse();\n    for (let i = 0; i < reversedMappings.length; i += 1) {\n      const mapping = reversedMappings[i];\n      const [from, to] = mapping.split(':', 2);\n      if (path.startsWith(from)) {\n        // mapping from folder or single page?\n        if (from.endsWith('/')) {\n          // folder, e.g. /content/site/us/en/:/us/en/\n          // mapping to folder\n          if (to.endsWith('/')) {\n            // special handling for the /index pages\n            if (path.endsWith('/index')) {\n              return to;\n            }\n            return to + path.substring(from.length);\n          }\n          // else, ignore folder => single page as this is not reversible\n        } else {\n          // single page\n          // mapping to folder or single page, exact match only\n          // eslint-disable-next-line no-lonely-if\n          if (path === from) {\n            return to;\n          }\n        }\n      }\n    }\n  }\n  return path;\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/utils.js::createPipeline": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/utils.js",
            "merged_function": "function createPipeline() {\n  return pipeline()\n    .use(transformMdast, { transformers: [...DEFAULT_TRANSFORMERS] });\n}",
            "score": -1.0
        },
        "tools/importer/import.js::block": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "block = () => {\n    const list = document.createElement('ul');\n    items.forEach((item) => {\n      const li = document.createElement('li');\n      li.append(item[0]);\n      li.append(item[1]);\n      list.append(li);\n    });\n    return list;\n  }",
            "score": -1.0
        },
        "tools/importer/import.js::createBrandNavigation": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createBrandNavigation = (brandNavigationEl, document, main) => {\n  // eslint-disable-next-line no-undef\n  const brands = JSON.parse(decodeHtmlEntities(brandNavigationEl.getAttribute('brands')));\n  const items = [];\n  brands.forEach((brand) => {\n    const a = document.createElement('a');\n    a.setAttribute('href', brand.brandlink);\n    a.textContent = brand.brandimagealt;\n    const img = document.createElement('img');\n    img.setAttribute('src', brand.brandimage);\n    img.setAttribute('alt', brand.brandimagealt);\n    items.push([img, a]);\n  });\n  const block = () => {\n    const list = document.createElement('ul');\n    items.forEach((item) => {\n      const li = document.createElement('li');\n      li.append(item[0]);\n      li.append(item[1]);\n      list.append(li);\n    });\n    return list;\n  };\n  main.append(block());\n  main.append(document.createElement('hr'));\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createCards": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createCards = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach((fl) => {\n    const cards = [];\n    fl.querySelectorAll('grid[columns=\"3\"] > template').forEach((tmp) => {\n      const h2 = tmp.content.querySelector('h2');\n      const articleCard = tmp.content.querySelector('articlecard');\n      if (articleCard) {\n        const cardImg = articleCard.getAttribute('cardimg');\n        const cardTitle = articleCard.getAttribute('cardtitle');\n        const cardDescription = articleCard.getAttribute('carddescription');\n        const cardHref = articleCard.getAttribute('cardhref');\n        const cardLinkText = articleCard.getAttribute('linktext');\n\n        const leftDiv = document.createElement('div');\n        if (h2) {\n          leftDiv.append(h2);  \n        }\n        const img = document.createElement('img');\n        img.setAttribute('src', cardImg);\n        leftDiv.append(img);\n        const rightDiv = document.createElement('div');\n        const h3 = document.createElement('h3');\n        h3.textContent = cardTitle;\n        rightDiv.append(h3);\n        const p = document.createElement('p');\n        p.textContent = cardDescription;\n        const a = document.createElement('a');\n        a.setAttribute('href', cardHref);\n        a.textContent = cardLinkText;\n        p.append(a);\n        rightDiv.append(p);\n        cards.push([leftDiv, rightDiv]);\n      }\n    });\n    const cells = [\n      ['Cards (articlecard)'],\n      ...cards,\n    ];\n\n    if (cards.length > 0) {\n      fl.before(document.createElement('hr'));\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      fl.append(block);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createColumns": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/import.js",
            "merged_function": "createColumns = (main, document, newMain) => {\n  \n  const columns = main.querySelectorAll('div.teaser');\n\n  if (columns) {\n\n    const cols = [];\n\n    for ( let i = 0; i < columns.length; i += 1) {\n      const div = document.createElement('div');\n      const img = document.createElement('img');\n      const p = document.createElement('p');\n\n      const imgSrc = columns[i].querySelector('img').getAttribute('src');\n      img.setAttribute('src', imgSrc);\n      \n      const text = columns[i].querySelector('h4').textContent;\n      p.textContent = text;\n      \n      div.append(img);\n      div.append(p);\n      cols.push(div);\n    }\n  \n    const cells = [\n      ['Columns'],\n      cols,\n    ];\n  \n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    newMain.append(block);\n\n  }\n\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/import.js::createFeatureImage": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createFeatureImage = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach((fl) => {\n    fl.querySelectorAll('grid[columns=\"2\"]').forEach((item) => {\n      const columns = [];\n      const templates = item.querySelectorAll('template');\n      if (templates.length > 2) {\n        const featureImage = templates[0].content.querySelector('div.featureimage');\n        const imageText = templates[1].content.querySelector('imagetext');\n        if (featureImage) {\n          columns.push(featureImage);\n        }\n        if (imageText) {\n          const img = document.createElement('img');\n          img.setAttribute('src', imageText.getAttribute('image'));\n          columns.push(img);\n        }\n        const cells = [\n          ['Columns'],\n          [...columns],\n        ];\n\n        if (columns.length > 0) {\n          const block = WebImporter.DOMUtils.createTable(cells, document);\n          fl.append(block);\n        }\n      }\n    });\n  });\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createFooter": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createFooter = (main, document) => {\n  main.querySelectorAll('footer > div > div > div').forEach((e) => {\n    main.append(e);\n  });\n  const copyright = main.querySelector('footer > div > div:last-child');\n  if (copyright) {\n    main.append(document.createElement('hr'));\n    main.append(copyright);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createFullLayoutSection": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createFullLayoutSection = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach((e) => {\n    const div = e.querySelector('div');\n    const style = div.getAttribute('class');\n    const cells = [['Section Metadata'], ['style', style]];\n    const table = WebImporter.DOMUtils.createTable(cells, document);\n    e.after(table);\n    table.after(document.createElement('hr'));\n  });\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createHeader": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createHeader = async (main, document) => {\n  const danaherHeaderEl = main.querySelector('danaher-header');\n  if (danaherHeaderEl) {\n    const templates = Array.from(danaherHeaderEl.getElementsByTagName('template'));\n    // eslint-disable-next-line no-restricted-syntax\n    for await (const t of templates) {\n      const brandNavigationEl = t.content.querySelector('brand-navigation');\n      if (brandNavigationEl) {\n        createBrandNavigation(brandNavigationEl, document, main);\n      }\n\n      const navBarEl = t.content.querySelector('navbar');\n      if (navBarEl) {\n        createNavBar(navBarEl, main, document);\n      }\n\n      const megaMenuHoverEl = t.content.querySelector('megamenuhover');\n      if (megaMenuHoverEl) {\n        await createMegaMenu(megaMenuHoverEl, main, document);\n      }\n    }\n  }\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createHero": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/import.js",
            "merged_function": "createHero = (main, document, newMain) => {\n  const hero = main.querySelector('div#mainContent > div > div:first-child');\n  if (hero) {\n    const titleNodes = hero.querySelector('h1').childNodes;\n\n    const h1 = document.createElement('h1');\n    for (let i = 0; i < titleNodes.length; i += 1) {\n      const node = titleNodes[i];\n      if (node.nodeType === 3) {\n        const text = document.createTextNode(node.textContent);\n        h1.append(text);\n      }\n      if (node.nodeType === 1) {\n        if (node.tagName === 'BR') {\n          h1.append(document.createElement('br'));\n        }\n\n        if (node.tagName === 'SPAN') {\n          const em = document.createElement('em');\n          em.textContent = node.textContent;\n          h1.append(em);\n        }\n      }\n    }\n\n    const description = hero.querySelector('h4').textContent;\n    const ctaText = hero.querySelector('a').textContent;\n    const ctaHref = hero.querySelector('a').getAttribute('href');\n    const imgSrc = hero.querySelector('img').getAttribute('src');\n    const imgAlt = hero.querySelector('img').getAttribute('alt');\n\n    const img = document.createElement('img');\n    img.setAttribute('src', imgSrc);\n    img.setAttribute('alt', imgAlt);\n\n    const div = document.createElement('div');\n    div.append(h1);\n    const p1 = document.createElement('p');\n    p1.textContent = description;\n    div.append(p1);\n    const p2 = document.createElement('p');\n    const a = document.createElement('a');\n    const strong = document.createElement('strong');\n    a.setAttribute('href', ctaHref);\n    a.textContent = ctaText;\n    strong.append(a);\n    p2.append(strong);\n    div.append(p2);\n\n    const cells = [\n      ['Hero'],\n      [div, img],\n    ];\n\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    newMain.append(block);\n    //hero.append(block);\n  }\n\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/import.js::createLogoCloud": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createLogoCloud = (main, document) => {\n  const logoCloud = main.querySelector('logo-cloud');\n  if (logoCloud) {\n    const div = document.createElement('div');\n    const template = logoCloud.querySelector('template');\n    div.append(template.content.querySelector('h2'));\n    template.content.querySelectorAll('p').forEach((item) => div.append(item));\n\n    const items = [];\n    // eslint-disable-next-line no-undef\n    const logos = JSON.parse(decodeHtmlEntities(logoCloud.getAttribute('logos')));\n    logos.forEach((logo) => {\n      const a = document.createElement('a');\n      a.setAttribute('href', logo.imageLink);\n      a.textContent = logo.imageAlt;\n      const img = document.createElement('img');\n      img.setAttribute('src', logo.image);\n      img.setAttribute('alt', logo.imageAlt);\n      items.push([img, a]);\n    });\n\n    const cells = [\n      ['Logo Clouds'],\n      [div],\n      ...items,\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    const sectionCells = [['Section Metadata'], ['style', 'bg-gray-200']];\n    const table = WebImporter.DOMUtils.createTable(sectionCells, document);\n    logoCloud.after(block, table, document.createElement('hr'));\n  }\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createMegaMenu": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createMegaMenu = async (megaMenuHoverEl, main, document) => {\n  // eslint-disable-next-line no-undef\n  const skipItems = JSON.parse(decodeHtmlEntities(megaMenuHoverEl.getAttribute('menuheadervalues')));\n  const response = await fetch('https://lifesciences.danaher.com/content/dam/danaher/system/navigation/megamenu_items_us.json');\n  const data = await response.json();\n  if (data.length > 0) {\n    const list = document.createElement('ul');\n    const homeItem = document.createElement('li');\n    const homeAnc = document.createElement('a');\n    homeAnc.setAttribute('href', '/');\n    homeAnc.append('Life Sciences :home-icon:');\n    homeItem.append(homeAnc);\n    list.append(homeItem);\n    data.sort((a, b) => a.displayOrder - b.displayOrder).forEach((i) => {\n      if (skipItems.length > 0 && skipItems.includes(i.name)) {\n        return;\n      }\n      const listItem = document.createElement('li');\n      if (i.href) {\n        const anc = document.createElement('a');\n        anc.setAttribute('href', i.href);\n        anc.append(i.name);\n        listItem.append(anc);\n      } else {\n        listItem.append(i.name);\n      }\n      if (i.items.length > 0) {\n        const subList = document.createElement('ul');\n        i.items.forEach((j) => {\n          const subListItem = document.createElement('li');\n          const anc = document.createElement('a');\n          anc.setAttribute('href', j.href);\n          anc.append(j.name);\n          subListItem.append(anc);\n          subList.append(subListItem);\n        });\n        listItem.append(subList);\n      }\n      list.append(listItem);\n    });\n    main.append(list);\n    main.append(document.createElement('hr'));\n  }\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createMetadata": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createMetadata = (main, document) => {\n  const meta = {};\n\n  const title = document.querySelector('title');\n  if (title) {\n    meta.Title = title.textContent.replace(/[\\n\\t]/gm, '');\n  }\n\n  const desc = document.querySelector('[property=\"og:description\"]');\n  if (desc) {\n    meta.Description = desc.content;\n  }\n\n  const img = document.querySelector('[property=\"og:image\"]');\n  if (img && img.content) {\n    const el = document.createElement('img');\n    el.src = img.content;\n    meta.Image = el;\n  }\n\n  if (meta.Title && (meta.Title === 'Footer' || meta.Title === 'Header')) {\n    meta.Robots = 'noindex, nofollow';\n    delete meta.Title;\n  }\n\n  const block = WebImporter.Blocks.getMetadataBlock(document, meta);\n  main.append(block);\n\n  return meta;\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createNavBar": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createNavBar = (navBarEl, main, document) => {\n  const logoTemplateEl = navBarEl.querySelector('template[\\\\#logo]');\n  if (logoTemplateEl) {\n    const logo = logoTemplateEl.content.querySelector('logo');\n    if (logo) {\n      const imgSrc = '/content/dam/danaher/brand-logos/svg/1-color/danaher-1c.svg';\n      const imgAlt = 'Danaher';\n      const link = '/';\n      const img = document.createElement('img');\n      img.setAttribute('src', imgSrc);\n      img.setAttribute('alt', imgAlt);\n      const anc = document.createElement('a');\n      anc.setAttribute('href', link);\n      anc.append(imgAlt);\n      main.append(img);\n      main.append(anc);\n    }\n  }\n  const linkTemplateEl = navBarEl.querySelector('template[\\\\#links]');\n  if (linkTemplateEl) {\n    const headerLinksEl = linkTemplateEl.content.querySelector('header-links');\n    if (headerLinksEl) {\n      // eslint-disable-next-line no-undef\n      const headerLinks = JSON.parse(decodeHtmlEntities(headerLinksEl.getAttribute('headerlinks')));\n      const list = document.createElement('ul');\n      headerLinks.forEach((i) => {\n        const item = document.createElement('li');\n        const anc = document.createElement('a');\n        anc.setAttribute('href', i.linkUrl);\n        anc.append(`:${i.linkIcon.replace(/[A-Z]/g, (match, offset) => (offset > 0 ? '-' : '') + match.toLowerCase())}: ${i.linkName}`);\n        item.append(anc);\n        list.append(item);\n      });\n      main.append(list);\n    }\n  }\n\n  main.append(document.createElement('hr'));\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createWeSee": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createWeSee = (main, document) => {\n  const weSee = main.querySelector('wesee');\n  if (weSee) {  \n    const anc = document.createElement('a');\n    anc.setAttribute('href', 'https://main--danaher-ls-aem--hlxsites.hlx.page/fragments/wesee');\n    anc.textContent = 'WeSee';\n    weSee.after(WebImporter.DOMUtils.createTable([['We See'], [anc]], document), document.createElement('hr'));\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/bold.js::createBold": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/bold.js",
            "merged_function": "function createBold(main, document) {\n    main.querySelectorAll('span.cmp-text--largetext').forEach((e) => {\n        e.outerHTML = `<b>${e.textContent}</b>`\n    });\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/cards.js::createCards": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/cards.js",
            "merged_function": "createCards = (main, document) => {\n    main.querySelectorAll('fulllayout').forEach((fl) => {\n      const cards = [];\n      fl.querySelectorAll('grid[columns=\"3\"] > template').forEach((tmp) => {\n        const h2 = tmp.content.querySelector('h2');\n        const articleCard = tmp.content.querySelector('articlecard');\n        if (articleCard) {\n          const cardImg = articleCard.getAttribute('cardimg');\n          const cardTitle = articleCard.getAttribute('cardtitle');\n          const cardDescription = articleCard.getAttribute('carddescription');\n          const cardHref = articleCard.getAttribute('cardhref');\n          const cardLinkText = articleCard.getAttribute('linktext');\n  \n          const leftDiv = document.createElement('div');\n          if (h2) {\n            leftDiv.append(h2);  \n          }\n          const img = document.createElement('img');\n          img.setAttribute('src', cardImg);\n          leftDiv.append(img);\n          const rightDiv = document.createElement('div');\n          const h3 = document.createElement('h3');\n          h3.textContent = cardTitle;\n          rightDiv.append(h3);\n          const p = document.createElement('p');\n          p.textContent = cardDescription;\n          const a = document.createElement('a');\n          a.setAttribute('href', cardHref);\n          a.textContent = cardLinkText;\n          p.append(a);\n          rightDiv.append(p);\n          cards.push([leftDiv, rightDiv]);\n        }\n      });\n      const cells = [\n        ['Cards (articlecard)'],\n        ...cards,\n      ];\n  \n      if (cards.length > 0) {\n        fl.before(document.createElement('hr'));\n        const block = WebImporter.DOMUtils.createTable(cells, document);\n        fl.append(block);\n      }\n    });\n  }",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/carousel.js::createCarousel": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/carousel.js",
            "merged_function": "function createCarousel(currentBlock, main, document) {\n\n    // Find carousel items and start array of items\n    let carouselItems = currentBlock.querySelectorAll('div.cmp-carousel__item');\n    let carousel = [['Carousel']];\n\n    // Iterate through items\n    for (let i = 0; i < carouselItems.length; i += 1) {\n       \n        // Add divs for text and image elements\n        const text = document.createElement('div');\n        const image = document.createElement('div');\n\n        // Start array for single item to hold both text and image\n        let carouselItem = [];\n    \n        // Text\n        if (carouselItems[i].querySelector('div.text')) {\n            const p = document.createElement('p');\n            p.textContent = carouselItems[i].querySelector('p').textContent;\n            text.append(p);\n        }\n\n        // Image\n        if (carouselItems[i].querySelector('img')) {\n            const img = document.createElement('img');\n            const imgSrc = carouselItems[i].querySelector('img').getAttribute('src');\n            img.setAttribute('src', imgSrc);\n            image.append(img);\n        }\n\n        // Concatenate text and image in array element and push to items\n        carouselItem = [text, image];\n        carousel.push(carouselItem);\n    \n    }\n \n    // Output carousel items array of arrays as a table\n    const block = WebImporter.DOMUtils.createTable(carousel, document);\n    main.append(block);\n\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/cleanUpHTML.js::cleanUpHTML": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/transformers/cleanUpHTML.js",
            "merged_function": "function cleanUpHTML(main, document) {\n  // to remove /content/24petwatch/us/en' from internal URL\n  main.querySelectorAll('a').forEach((anc) => {\n    anc.href = anc.href.replace('/content/24petwatch/us/en', '');\n    anc.href = anc.href.replace('/content/24petwatch/language-masters/en', '');\n  });\n\n  main.querySelectorAll('span.cmp-text--largetext').forEach((e) => {\n    e.outerHTML = `<b>${e.textContent}</b>`;\n  });\n\n  main.querySelectorAll('div.cmp-text-specialfineprint ').forEach((e) => {\n    e.outerHTML = `<em>${e.textContent}</em>`;\n  });\n\n  main.querySelectorAll('div.button').forEach((e) => {\n    const importedLink = e.querySelector('a');\n    const buttonType = importedLink.getAttribute('href').startsWith('https://')\n      ? 'em'\n      : 'strong';\n    const cta = document.createElement('a');\n    const button = document.createElement(buttonType);\n    cta.setAttribute('href', importedLink.getAttribute('href'));\n    cta.textContent = importedLink.textContent;\n    button.append(cta);\n    e.outerHTML = button.outerHTML;\n  });\n\n  return main;\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/transformers/columns.js::createColumns": {
            "changes_after_merge": 7,
            "file_path": "tools/importer/transformers/columns.js",
            "merged_function": "createColumns = (main, document, newMain) => {\n  \n    const columns = main.querySelectorAll('div.teaser');\n  \n    if (columns) {\n  \n      const cols = [];\n  \n      for ( let i = 0; i < columns.length; i += 1) {\n        const div = document.createElement('div');\n        const img = document.createElement('img');\n        const p = document.createElement('p');\n  \n        const imgSrc = columns[i].querySelector('img').getAttribute('src');\n        img.setAttribute('src', imgSrc);\n        \n        const text = columns[i].querySelector('h4').textContent;\n        p.textContent = text;\n        \n        div.append(img);\n        div.append(p);\n        cols.push(div);\n      }\n    \n      const cells = [\n        ['Columns'],\n        cols,\n      ];\n    \n      if (cols.length > 0) {\n        const block = WebImporter.DOMUtils.createTable(cells, document);\n        columns.replaceWith(block);\n      }\n    }\n  \n  }",
            "score": -0.6744186046511628
        },
        "tools/importer/transformers/columns.js::createSection": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/columns.js",
            "merged_function": "function createSection(currentBlock, main, document) {\n\n    //const cols = currentBlock.querySelectorAll('div.aem-GridColumn--default--6');\n    const grid = currentBlock.querySelector('div.aem-Grid div.aem-GridColumn--default--6')\n    \n    if (currentBlock.textContent.trim() === '') {\n        return;\n    }\n\n    if (grid) {\n        createColumns(currentBlock, main, document);\n    } else {\n        main.append(currentBlock);\n    }\n\n    main.append(document.createElement('hr'));\n}",
            "score": -1.0
        },
        "tools/importer/transformers/columnsFlex.js::createColumnsFlex": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/columnsFlex.js",
            "merged_function": "function createColumnsFlex(currentBlock, main, document) {\n  const cols = currentBlock.querySelectorAll('.cmp-container--layoutflex > div > div > div.aem-GridColumn--default--12:not(.aem-GridColumn--default--hide)');\n  if (cols.length === 0) {\n    return;\n  }\n  const cells = [];\n\n  for (let i = 0; i < cols.length; i += 1) {\n    cells.push(cols[i]);\n  }\n\n  const columns = [\n    ['Columns'],\n    cells,\n  ];\n  const block = WebImporter.DOMUtils.createTable(columns, document);\n  main.append(block);\n}",
            "score": -1.0
        },
        "tools/importer/transformers/featureImage.js::createFeatureImage": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/featureImage.js",
            "merged_function": "createFeatureImage = (main, document) => {\n    main.querySelectorAll('fulllayout').forEach((fl) => {\n      fl.querySelectorAll('grid[columns=\"2\"]').forEach((item) => {\n        const columns = [];\n        const templates = item.querySelectorAll('template');\n        if (templates.length > 2) {\n          const featureImage = templates[0].content.querySelector('div.featureimage');\n          const imageText = templates[1].content.querySelector('imagetext');\n          if (featureImage) {\n            columns.push(featureImage);\n          }\n          if (imageText) {\n            const img = document.createElement('img');\n            img.setAttribute('src', imageText.getAttribute('image'));\n            columns.push(img);\n          }\n          const cells = [\n            ['Columns'],\n            [...columns],\n          ];\n  \n          if (columns.length > 0) {\n            const block = WebImporter.DOMUtils.createTable(cells, document);\n            fl.append(block);\n          }\n        }\n      });\n    });\n  }",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/footer.js::createFooter": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/transformers/footer.js",
            "merged_function": "createFooter = (main, document) => {\n    const footer = main.querySelector('footer');\n\n    if (!footer) {\n        return;\n    }\n    \n    main.querySelectorAll('#footer-labels > div.aem-Grid > div.aem-GridColumn').forEach((e) => {\n        let isAccordion = false;\n        e.querySelectorAll('div.cmp-accordion__item').forEach((e) => {\n            isAccordion = true;\n            processEntry(e, main, document);\n        });\n\n        if (!isAccordion) {\n            processEntry(e, main, document);\n        }\n    });\n\n    main.append(document.createElement('hr'));\n\n    main.querySelectorAll('div.image').forEach((img) => {\n        main.append(img);\n    });\n\n    main.append(document.createElement('hr'));\n\n    main.querySelectorAll('div#footer-links-container a').forEach((link) => {\n        main.append(link);\n    });\n\n    main.append(main.querySelector('div#footer-notice-global'))\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/transformers/footer.js::getIconLink": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/footer.js",
            "merged_function": "function getIconLink(link) {\n  const iconLink = Object.keys(iconLinks).find((key) => link.startsWith(key));\n  return iconLink ? iconLinks[iconLink] : null;\n}",
            "score": -1.0
        },
        "tools/importer/transformers/footer.js::processEntry": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/footer.js",
            "merged_function": "function processEntry (entry, main, document) {\n    const title = entry.querySelector('*:is(h2, h3, h4, h5, h6)')\n    const ul = document.createElement('ul');\n    entry.querySelectorAll('div.text p').forEach((e) => {\n        const li = document.createElement('li');\n        li.append(e);\n        ul.append(li);\n    });\n    if (title !== null) {\n        main.append(title);\n        main.append(ul);\n    }\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/fullLayoutSection.js::createFullLayoutSection": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/fullLayoutSection.js",
            "merged_function": "createFullLayoutSection = (main, document) => {\n    main.querySelectorAll('fulllayout').forEach((e) => {\n      const div = e.querySelector('div');\n      const style = div.getAttribute('class');\n      const cells = [['Section Metadata'], ['style', style]];\n      const table = WebImporter.DOMUtils.createTable(cells, document);\n      e.after(table);\n      table.after(document.createElement('hr'));\n    });\n  }",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/header.js::createHeader": {
            "changes_after_merge": 7,
            "file_path": "tools/importer/transformers/header.js",
            "merged_function": "createHeader = async (main, document) => {\n  const header = main.querySelector('div.page-header');\n  if (header) {\n    const logo = document.createElement('span');\n    logo.classList.add('icon');\n    logo.classList.add('icon-logo');\n    logo.textContent = 'Logo';\n    main.append(logo)\n\n    main.append(document.createElement('hr'));\n\n    const strong = document.createElement('strong');\n    strong.append(document.querySelector('div.page-header__get-quote'))\n    main.append(strong);\n\n    main.append(document.createElement('hr'));\n\n    main.append(document.querySelector('ul.cmp-navigation__group'));\n\n    main.append(document.createElement('hr'));\n\n    const ul = document.createElement('ul');\n    document.querySelectorAll('div.page-header__notificationBar > div > div').forEach(element => {\n      if (!element.classList.contains('languagenavigation')) {\n        const li = document.createElement('li');\n        li.append(element);\n        ul.append(li);\n      }\n    });\n    main.append(ul);\n\n    header.innerHTML = '';\n  };\n}",
            "score": -0.6744186046511628
        },
        "tools/importer/transformers/hero.js::createHero": {
            "changes_after_merge": 4,
            "file_path": "tools/importer/transformers/hero.js",
            "merged_function": "createHero = (main, document, newMain) => {\n    const hero = main.querySelector('div#mainContent > div > div:first-child');\n    if (hero) {\n      const titleNodes = hero.querySelector('h1').childNodes;\n  \n      const h1 = document.createElement('h1');\n      for (let i = 0; i < titleNodes.length; i += 1) {\n        const node = titleNodes[i];\n        if (node.nodeType === 3) {\n          const text = document.createTextNode(node.textContent);\n          h1.append(text);\n        }\n        if (node.nodeType === 1) {\n          if (node.tagName === 'BR') {\n            h1.append(document.createElement('br'));\n          }\n  \n          if (node.tagName === 'SPAN') {\n            const em = document.createElement('em');\n            em.textContent = node.textContent;\n            h1.append(em);\n          }\n        }\n      }\n  \n      const description = hero.querySelector('h4').textContent;\n      const ctaText = hero.querySelector('a').textContent;\n      const ctaHref = hero.querySelector('a').getAttribute('href');\n      const imgSrc = hero.querySelector('img').getAttribute('src');\n      const imgAlt = hero.querySelector('img').getAttribute('alt');\n  \n      const img = document.createElement('img');\n      img.setAttribute('src', imgSrc);\n      img.setAttribute('alt', imgAlt);\n  \n      const div = document.createElement('div');\n      div.append(h1);\n      const p1 = document.createElement('p');\n      p1.textContent = description;\n      div.append(p1);\n      const p2 = document.createElement('p');\n      const a = document.createElement('a');\n      const strong = document.createElement('strong');\n      a.setAttribute('href', ctaHref);\n      a.textContent = ctaText;\n      strong.append(a);\n      p2.append(strong);\n      div.append(p2);\n  \n      const cells = [\n        ['Hero'],\n        [div, img],\n      ];\n  \n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      hero.replaceWith(block);\n    }\n  \n  }",
            "score": -0.813953488372093
        },
        "tools/importer/transformers/homepage.js::createHomepage": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/homepage.js",
            "merged_function": "createHomepage = (main, document) => {\n\n    // Find all aem-GridColumn--default--6 that are children of aem-Grid--12\n    const sectionRaw = main.querySelectorAll('div#mainContent > div.aem-Grid > div.aem-GridColumn--default--12:nth-child(2) > div.cmp-container > div.aem-Grid > div.aem-GridColumn');\n\n    if (sectionRaw) {\n\n        for (let i = 0; i < sectionRaw.length; i += 1) {\n            createSection(sectionRaw[i], main, document);\n        }\n    }\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/homepage.js::createSection": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/homepage.js",
            "merged_function": "function createSection(currentBlock, main, document) {\n    if (currentBlock.textContent.trim() === '') {\n        return;\n    }\n\n    const headers = currentBlock.querySelector('div.headers.aem-GridColumn--default--12');\n    if (headers) {\n        main.append(headers);\n    }\n\n    const teaser = currentBlock.querySelector('div.teaser');\n    if (teaser) {\n        createTeaser(main, document);\n    }\n\n    const carousel = currentBlock.querySelector('div.carousel')\n    if (carousel) {\n        createCarousel(currentBlock, main, document);\n    }\n\n    const grid = currentBlock.querySelector('div.aem-Grid div.aem-GridColumn')\n    if (!teaser && grid) {\n        createColumns(currentBlock, main, document);\n    }\n\n    const imageList = currentBlock.querySelector('div.aem-Grid.aem-Grid--12.aem-Grid--default--12 ul.cmp-image-list__list');\n    if ( imageList ) {\n        createImageList(currentBlock, main, document);\n    }\n\n    // Add metadata to end of section\n    // Get metadata from background color defined in class of the block\n    for (let i=0; i<currentBlock.classList.length; i+=1){\n        // Iterate over block classes to find background class\n        if (currentBlock.classList[i].match('cmp-container--bg*')){\n            const cells = [\n                ['Section Metadata'],\n                ['Style', currentBlock.classList[i].substring(17)],\n              ];\n          \n              const metadata = WebImporter.DOMUtils.createTable(cells, document);\n              main.append(metadata);\n            break;\n        }\n    }\n\n    main.append(document.createElement('hr'));\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/imageList.js::createImageList": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/imageList.js",
            "merged_function": "function createImageList(currentBlock, main, document) {\n\n    // Find if there is a heading before the image list\n    const heading = currentBlock.closest('div.container').querySelectorAll('p');\n\n    // If there is a heading, add to document\n    if ( heading ) {\n\n        const div = document.createElement('div');\n        const p = document.createElement('p');\n\n        p.textContent = heading.textContent;      \n        div.append(p);\n        main.append(div);\n\n    }\n\n    // Build array for image list and add to document as a table with one cell\n    const cells = [\n        ['Cards (blog-teaser)'],\n      ];\n\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    main.append(block);\n\n\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/logoCloud.js::createLogoCloud": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/logoCloud.js",
            "merged_function": "createLogoCloud = (main, document) => {\n    const logoCloud = main.querySelector('logo-cloud');\n    if (logoCloud) {\n      const div = document.createElement('div');\n      const template = logoCloud.querySelector('template');\n      div.append(template.content.querySelector('h2'));\n      template.content.querySelectorAll('p').forEach((item) => div.append(item));\n  \n      const items = [];\n      // eslint-disable-next-line no-undef\n      const logos = JSON.parse(decodeHtmlEntities(logoCloud.getAttribute('logos')));\n      logos.forEach((logo) => {\n        const a = document.createElement('a');\n        a.setAttribute('href', logo.imageLink);\n        a.textContent = logo.imageAlt;\n        const img = document.createElement('img');\n        img.setAttribute('src', logo.image);\n        img.setAttribute('alt', logo.imageAlt);\n        items.push([img, a]);\n      });\n  \n      const cells = [\n        ['Logo Clouds'],\n        [div],\n        ...items,\n      ];\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      const sectionCells = [['Section Metadata'], ['style', 'bg-gray-200']];\n      const table = WebImporter.DOMUtils.createTable(sectionCells, document);\n      logoCloud.after(block, table, document.createElement('hr'));\n    }\n  }",
            "score": -1.0
        },
        "tools/importer/transformers/metadata.js::createMetadata": {
            "changes_after_merge": 6,
            "file_path": "tools/importer/transformers/metadata.js",
            "merged_function": "createMetadata = (main, document) => {\n    const meta = {};\n  \n    const title = document.querySelector('title');\n    if (title) {\n      meta.Title = title.textContent.replace(/[\\n\\t]/gm, '');\n    }\n  \n    const desc = document.querySelector('[property=\"og:description\"]');\n    if (desc) {\n      meta.Description = desc.content;\n    }\n  \n    const img = document.querySelector('[property=\"og:image\"]');\n    if (img && img.content) {\n      const el = document.createElement('img');\n      el.src = img.content;\n      meta.Image = el;\n    }\n  \n    if (meta.Title && (meta.Title === 'Footer' || meta.Title === 'Header')) {\n      meta.Robots = 'noindex, nofollow';\n      delete meta.Title;\n    }\n  \n    const block = WebImporter.Blocks.getMetadataBlock(document, meta);\n    main.append(block);\n  \n    return meta;\n  }",
            "score": -0.7209302325581395
        },
        "tools/importer/transformers/overflowHero.js::createOverflowHero": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/overflowHero.js",
            "merged_function": "function createOverflowHero(currentBlock, main, document) {\n  const overflowHero = [\n    ['OverflowHero'],\n    [currentBlock],\n  ];\n\n  const block = WebImporter.DOMUtils.createTable(overflowHero, document);\n\n  main.append(block);\n}",
            "score": -1.0
        },
        "tools/importer/transformers/teaser.js::createTeaser": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/teaser.js",
            "merged_function": "createTeaser = (main, document) => {\n  \n    const columns = main.querySelectorAll('div.teaser');\n  \n    if (columns) {\n\n      const centered = main.querySelector('div.cmp-container--aligncenter') !== null;\n  \n      const cols = [];\n  \n      for ( let i = 0; i < columns.length; i += 1) {\n        const div = document.createElement('div');\n        const img = document.createElement('img');\n        const p = document.createElement('p');\n  \n        const imgSrc = columns[i].querySelector('img').getAttribute('src');\n        img.setAttribute('src', imgSrc);\n        \n        const text = columns[i].querySelector('h4').textContent;\n        p.textContent = text;\n        \n        div.append(img);\n        div.append(p);\n        cols.push(div);\n      }\n\n      let columnsName = 'Columns';\n      if (centered) {\n        columnsName = 'Columns (text-center)';\n      }\n\n      const cells = [\n        [columnsName],\n        cols,\n      ];\n    \n      if (cols.length > 0) {\n        const block = WebImporter.DOMUtils.createTable(cells, document);\n        main.append(block);\n      }\n    }\n  \n  }",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/weSee.js::createWeSee": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/weSee.js",
            "merged_function": "createWeSee = (main, document) => {\n    const weSee = main.querySelector('wesee');\n    if (weSee) {  \n      const anc = document.createElement('a');\n      anc.setAttribute('href', 'https://main--danaher-ls-aem--hlxsites.hlx.page/fragments/wesee');\n      anc.textContent = 'WeSee';\n      weSee.after(WebImporter.DOMUtils.createTable([['We See'], [anc]], document), document.createElement('hr'));\n    }\n  }",
            "score": -1.0
        }
    },
    "danaher-ls-aem": {
        "blocks/accordion/accordion.js::createAccordionBlock": {
            "changes_after_merge": 5,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function createAccordionBlock(question, answer) {\n  const divEl = div();\n  const btn = dt(\n    { class: 'close button' },\n    button(\n      { type: 'button', class: 'flex w-full items-start justify-between text-left text-gray-900' },\n      h3({ class: 'text-base font-semibold leading-7' }, question),\n      span({ class: 'ml-6 flex h-14 items-center pr-2' }),\n    ),\n  );\n  btn.querySelector('span').innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"ml-2 h-5 w-5 transition\"><path fill-rule=\"evenodd\" d=\"M12.53 16.28a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 011.06-1.06L12 14.69l6.97-6.97a.75.75 0 111.06 1.06l-7.5 7.5z\"></path></svg>';\n\n  const panel = dd(\n    { class: 'hidden panal mt-2 pr-12 pb-4' },\n    p({ class: 'text-base leading-7 text-gray-600 href-text' }),\n    p(answer),\n  );\n\n  btn.addEventListener('click', () => toggleAccordion(btn, panel));\n  divEl.append(document.createElement('hr'), btn, panel);\n  return divEl;\n}",
            "score": -0.7674418604651163
        },
        "blocks/accordion/accordion.js::decorate": {
            "changes_after_merge": 13,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function decorate(block) {\n  const questions = [...block.children].map((element) => ({\n    question: element.querySelector('strong').textContent,\n    answer: element.querySelectorAll('p')[1].textContent,\n  }));\n\n  const accordionItems = questions\n    .map((question, index) => createAccordionBlock(question.question, question.answer, index));\n  const accordion = dl(\n    { class: 'mt-10 space-y-4 divide-y divide-gray-900/10' },\n    div({ class: 'pt-6' }),\n  );\n  accordionItems.map((items) => accordion.querySelector('div.pt-6').append(items));\n\n  block.innerHTML = '';\n  block.className = 'divide-y divide-gray-900/10';\n  block.append(accordion);\n}",
            "score": -0.39534883720930236
        },
        "blocks/accordion/accordion.js::toggleAccordion": {
            "changes_after_merge": 1,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function toggleAccordion(activeButton, panel) {\n  const isOpen = activeButton.classList.contains('open');\n  activeButton.classList.toggle('open', !isOpen);\n  activeButton.classList.toggle('close', isOpen);\n  activeButton.querySelector('span svg').classList.toggle('rotate-180', !isOpen);\n  panel.classList.toggle('hidden', isOpen);\n}",
            "score": -0.9534883720930233
        },
        "blocks/articles-list/articles-list.js::decorate": {
            "changes_after_merge": 7,
            "file_path": "blocks/articles-list/articles-list.js",
            "merged_function": "async function decorate(block) {\n  block.parentNode.classList.add('pt-6');\n  block.parentNode.prepend(div({ class: 'border-t-0-5 border-solid border-black' }));\n  const brand = getMetadata('brand');\n  let articles = await ffetch('/us/en/article-index.json')\n    .filter((article) => brand === article.brand)\n    .all();\n\n  articles = articles.sort((item1, item2) => item2.publishDate - item1.publishDate).slice(0, 3);\n  const cardList = ul({\n    class:\n          'container grid max-w-7xl w-full mx-auto gap-6 grid-cols-1 sm:grid-cols-1 lg:grid-cols-3 px-3 sm:px-0 justify-items-center mt-3 mb-3',\n  });\n  articles.forEach((article, index) => {\n    cardList.appendChild(createCard(article, index === 0));\n  });\n  block.textContent = '';\n  block.classList.add('pb-10');\n  const divEl = articles.length > 0 ? div({ class: 'text-lg font-semibold float-left py-6' }, `${brand} in the news`) : '';\n  const ancEl = articles.length > 0 ? a({ class: 'text-lg font-normal float-right py-6 text-danaherpurple-500', href: '/us/en/news' }, 'See all \u2192') : '';\n  block.append(divEl, ancEl, cardList);\n}",
            "score": -0.6744186046511628
        },
        "blocks/banner/banner.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/banner/banner.js",
            "merged_function": "function decorate(block) {\n  const main = document.querySelector('main');\n  main.prepend(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/blog-hero/blog-hero.js::decorate": {
            "changes_after_merge": 20,
            "file_path": "blocks/blog-hero/blog-hero.js",
            "merged_function": "function decorate(block) {\n  block.querySelector('h1').className = 'text-gray-900 my-2 font-extrabold text-4xl pt-10';\n  block.querySelector('img').className = 'mt-8';\n\n  const authorName = getMetadata('authorname');\n  const blogTitle = getMetadata('blogtitle');\n  const publishDate = getMetadata('publishdate');\n  const readingTime = getMetadata('readingtime');\n\n  block.append(\n    div(\n      { class: 'articleinfo' },\n      div(\n        { class: 'max-w-7xl mx-auto grid grid-cols-2 lg:grid-cols-4 gap-x-20 mt-4 mb-2' },\n        div(\n          { class: 'items-center flex justify-start w-full ml-2 col-span-2' },\n          div(\n            { class: 'space-y-1 text-lg leading-6 pl-7' },\n            div({ class: 'text-danaherblack-500 font-medium' }, authorName),\n            div({ class: 'text-sm text-danaherlightblue-500 w-full' }, blogTitle),\n          ),\n        ),\n        div(\n          { class: 'items-center flex justify-start col-span-1 ml-4 my-4' },\n          div({ class: 'reading-icon' }),\n          div({ class: 'text-sm text-danahergray-500 pl-1' }, readingTime),\n        ),\n        div(\n          { class: 'items-center flex justify-end col-span-1' },\n          div({ class: 'text-sm mr-4 text-danahergray-500' }, publishDate),\n        ),\n      ),\n    ),\n  );\n  block.querySelector('.reading-icon').innerHTML = `\n    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M9.01172 5.66667V9L11.5117 11.5M16.5117 9C16.5117 13.1421 13.1539 16.5 9.01172 16.5C4.86958 16.5 1.51172 13.1421 1.51172 9C1.51172 4.85786 4.86958 1.5 9.01172 1.5C13.1539 1.5 16.5117 4.85786 16.5117 9Z\" stroke=\"#6B7280\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n    </svg>\n  `;\n}",
            "score": -0.06976744186046513
        },
        "blocks/breadcrumb/breadcrumb.js::decorate": {
            "changes_after_merge": 13,
            "file_path": "blocks/breadcrumb/breadcrumb.js",
            "merged_function": "function decorate(block) {\n  const clonedBlock = block.cloneNode(true);\n  const listsClone = clonedBlock.querySelector('div > ul').cloneNode(true);\n  listsClone.className = 'max-w-screen-xl w-full mx-auto px-4 flex gap-4 sm:px-6 lg:px-7 overflow-x-auto';\n  listsClone.setAttribute('role', 'list');\n  const homeIconLi = document.createElement('li');\n  homeIconLi.className = 'flex items-center gap-x-3 text-sm font-medium text-gray-500 whitespace-nowrap hover:text-gray-700';\n  homeIconLi.innerHTML = '<a href=\"/\" title=\"Home\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" class=\"flex-shrink-0 h-5 w-5\" data-di-rand=\"1697430026535\"><path d=\"M11.47 3.84a.75.75 0 011.06 0l8.69 8.69a.75.75 0 101.06-1.06l-8.689-8.69a2.25 2.25 0 00-3.182 0l-8.69 8.69a.75.75 0 001.061 1.06l8.69-8.69z\"></path><path d=\"M12 5.432l8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 01-.75-.75v-4.5a.75.75 0 00-.75-.75h-3a.75.75 0 00-.75.75V21a.75.75 0 01-.75.75H5.625a1.875 1.875 0 01-1.875-1.875v-6.198a2.29 2.29 0 00.091-.086L12 5.43z\"></path></svg></a>';\n  listsClone.prepend(homeIconLi);\n  Array.from(listsClone.children).forEach((element, index) => {\n    element.className = 'flex items-center gap-x-3 text-sm font-medium text-gray-500 whitespace-nowrap hover:text-gray-700';\n    element.setAttribute('aria-hidden', 'true');\n    element.setAttribute('data-acsb-hidden', 'true');\n    element.setAttribute('data-acsb-force-hidden', 'true');\n    const anchorText = element.children[0];\n    if ((listsClone.children.length - 1) !== index) element.innerHTML = \"<svg class='w-6 h-5/6 flex-shrink-0 text-gray-300' viewBox='0 0 24 44' preserveAspectRatio='none' fill='currentColor' xmlns='http://www.w3.org/2000/svg' aria-hidden='true' data-acsb-hidden='true' data-acsb-force-hidden='true' data-di-rand='1697196048881'><path d='M.293 0l22 22-22 22h1.414l22-22-22-22H.293z'></path></svg>\";\n    element.prepend(anchorText);\n  });\n  document.getElementsByClassName('breadcrumb-wrapper')[0].innerHTML = '';\n  document.getElementsByClassName('breadcrumb-wrapper')[0].append(listsClone);\n  const mainElement = document.querySelector('main');\n  mainElement.parentNode.insertBefore(document.getElementsByClassName('breadcrumb-wrapper')[0], mainElement);\n}",
            "score": -0.39534883720930236
        },
        "blocks/call-to-action/call-to-action.js::decorate": {
            "changes_after_merge": 21,
            "file_path": "blocks/call-to-action/call-to-action.js",
            "merged_function": "function decorate(block) {\n  block.classList.add(...'ctasection mx-auto max-w-7xl sm:px-6 lg:py-8 lg:px-6'.split(' '));\n  block.querySelector(':scope div > div').classList.add(...'md:flex space-y-8 md:space-y-0 md:flex-row w-full py-8 md:py-16 md:px-12 px-6 items-center md:justify-between bg-danaherpurple-800'.split(' '));\n  block.querySelector('h2').classList.add(...'text-2xl p-0 m-0 tracking-tight sm:text-3xl text-white font-normal'.split(' '));\n  block.querySelector('p').classList.add(...'show-modal-btn btn btn-outline-trending-brand rounded-full px-6 py-3'.split(' '));\n  decorateModals(block);\n}",
            "score": -0.023255813953488413
        },
        "blocks/card-list/applicationCard.js::createCard": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list/applicationCard.js",
            "merged_function": "function createCard(article) {\n  const cardTitle = article.title.indexOf('| Danaher Life Sciences') > -1\n    ? article.title.split('| Danaher Life Sciences')[0]\n    : article.title;\n\n  const cardWrapper = a(\n    { href: makePublicUrl(article.path), title: article.title },\n    h2(\n      {\n        class:\n          '!px-6 !text-lg !font-semibold !text-danahergray-900 !mb-4 !line-clamp-3 !h-20 !break-words',\n      },\n      cardTitle,\n    ),\n    p(\n      { class: 'px-6 text-sm text-gray-500 pb-0 pt-0 pb-4 line-clamp-4 h-20 break-words' },\n      article.description,\n    ),\n    div(\n      {\n        class:\n          'inline-flex w-full px-6 py-5 text-base text-danaherblue-600 font-semibold',\n      },\n      'View Application \u2192',\n    ),\n  );\n\n  return li(\n    {\n      class:\n        'w-full flex flex-col col-span-1 relative mx-auto justify-center transform transition duration-500 border hover:scale-105 shadow-lg rounded-lg overflow-hidden bg-white max-w-xl',\n    },\n    cardWrapper,\n  );\n}",
            "score": -1.0
        },
        "blocks/card-list/articleCard.js::createCard": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list/articleCard.js",
            "merged_function": "function createCard(article, firstCard = false) {\n  const cardTitle = article.title.indexOf('| Danaher Life Sciences') > -1\n    ? article.title.split('| Danaher Life Sciences')[0]\n    : article.title;\n\n  const cardWrapper = a(\n    { href: makePublicUrl(article.path), title: article.title },\n    imageHelper(article.image, article.title, firstCard),\n    p(\n      { class: 'cards !px-6 !py-1 !pt-4 !text-sm !text-danaherpurple-500' },\n      article.brand || 'Danaher Corporation',\n    ),\n    p(\n      { class: '!px-6 !pb-3 !text-gray-500 !text-sm' },\n      time(\n        { datetime: formatDateUTCSeconds(article.publishDate) },\n        formatDateUTCSeconds(article.publishDate, { month: 'long' }),\n      ),\n      span({ class: 'pl-2' }, `${article.readingTime} min read`),\n    ),\n    h2(\n      {\n        class:\n          '!px-6 !text-lg !font-semibold !text-danahergray-900 !mb-4 !line-clamp-3 !h-20 !break-words',\n      },\n      cardTitle,\n    ),\n    div(\n      {\n        class:\n          'mt-auto inline-flex w-full px-6 py-5 text-base text-danaherpurple-500 font-semibold',\n      },\n      'Read Article \u2192',\n    ),\n  );\n\n  return li(\n    {\n      class:\n        'w-full flex flex-col col-span-1 relative mx-auto justify-center transform transition duration-500 border hover:scale-105 shadow-lg rounded-lg overflow-hidden bg-white max-w-xl',\n    },\n    cardWrapper,\n  );\n}",
            "score": -1.0
        },
        "blocks/card-list/card-list.js::createCard": {
            "changes_after_merge": 4,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "createCard = (article, firstCard = false) => {\n  const cardTitle = article.title.indexOf('| Danaher Life Sciences') > -1\n    ? article.title.split('| Danaher Life Sciences')[0]\n    : article.title;\n\n  const cardWrapper = a(\n    { href: makePublicUrl(article.path), title: article.title },\n    imageHelper(article.image, article.title, firstCard),\n    p(\n      { class: 'px-6 py-1 pt-4 text-sm font-semibold text-lightblue-500' },\n      article.brand || 'Danaher Corporation',\n    ),\n    p(\n      { class: 'px-6 pb-3 text-gray-500 text-sm' },\n      time(\n        { datetime: formatDateUTCSeconds(article.publishDate) },\n        formatDateUTCSeconds(article.publishDate, { month: 'long' }),\n      ),\n      span({ class: 'pl-2' }, `${article.readingTime} min read`),\n    ),\n    h2(\n      {\n        class: 'px-6 text-lg font-semibold text-danahergray-900 mb-4 line-clamp-3 h-20 break-words',\n      },\n      cardTitle,\n    ),\n    div(\n      { class: 'mt-auto inline-flex w-full px-6 py-5 text-base text-danaherblue-600 font-semibold' },\n      'Read Article \u2192',\n    ),\n  );\n\n  return li({\n    class:\n      'w-full flex flex-col col-span-1 relative mx-auto justify-center transform transition duration-500 border hover:scale-105 shadow-lg rounded-lg overflow-hidden bg-white max-w-xl',\n  }, cardWrapper);\n}",
            "score": -0.813953488372093
        },
        "blocks/card-list/card-list.js::createFilters": {
            "changes_after_merge": 3,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "createFilters = (articles, activeTag) => {\n  // collect tag filters\n  const allKeywords = articles.map((item) => item.keywords.replace(/,\\s*/g, ',').split(','));\n  const keywords = new Set([].concat(...allKeywords));\n  keywords.delete('');\n  keywords.delete('Blog'); // filter out generic blog tag\n  keywords.delete('News'); // filter out generic news tag\n\n  // render tag cloud\n  const newUrl = new URL(window.location);\n  newUrl.searchParams.delete('tag');\n  newUrl.searchParams.delete('page');\n  const tags = div(\n    { class: 'flex flex-wrap gap-2 mb-4' },\n    a(\n      {\n        class:\n          'text-center my-2 inline-block rounded-full px-4 py-2 font-semibold bg-d text-danaherpurple-500 bg-danaherpurple-50 hover:bg-gray-100 hover:text-gray-500',\n        href: newUrl.toString(),\n      },\n      'View All',\n    ),\n  );\n  [...keywords].sort().forEach((keyword) => {\n    newUrl.searchParams.set('tag', toClassName(keyword).toLowerCase());\n    const tagAnchor = a(\n      {\n        class:\n          'text-center my-2 inline-block rounded-full px-4 py-2 font-semibold bg-d hover:bg-gray-100 hover:text-gray-500',\n        href: newUrl.toString(),\n      },\n      keyword,\n    );\n    if (toClassName(keyword).toLowerCase() === activeTag) {\n      tagAnchor.classList.add('bg-danaherpurple-500', 'text-white');\n      tagAnchor.setAttribute('aria-current', 'tag');\n    } else {\n      tagAnchor.classList.add('text-danaherpurple-500', 'bg-danaherpurple-50');\n    }\n    tags.append(tagAnchor);\n  });\n  return tags;\n}",
            "score": -0.8604651162790697
        },
        "blocks/card-list/card-list.js::createPagination": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "createPagination = (entries, page, limit) => {\n  const paginationNav = document.createElement('nav');\n  paginationNav.className = 'flex items-center justify-between border-t py-4 md:py-0 mt-8 md:mt-12';\n\n  if (entries.length > limit) {\n    const maxPages = Math.ceil(entries.length / limit);\n    const paginationPrev = div({ class: 'flex flex-1 w-0 -mt-px' });\n    const paginationPages = div({ class: 'hidden md:flex grow justify-center w-0 -mt-px' });\n    const paginationNext = div({ class: 'flex flex-1 w-0 -mt-px justify-end' });\n\n    if (page > 1) {\n      paginationPrev.append(createPaginationLink(page - 1, '\u2190 Previous'));\n    }\n    for (let i = 1; i <= maxPages; i += 1) {\n      if (i === 1 || i === maxPages || (i >= page - 2 && i <= page + 2)) {\n        paginationPages.append(createPaginationLink(i, i, i === page));\n      } else if (\n        paginationPages.lastChild && !paginationPages.lastChild.classList.contains('ellipsis')\n      ) {\n        paginationPages.append(\n          span(\n            { class: 'ellipsis font-medium text-sm leading-5 pt-4 px-4 items-center inline-flex' },\n            '...',\n          ),\n        );\n      }\n    }\n    if (page < maxPages) {\n      paginationNext.append(createPaginationLink(page + 1, 'Next \u2192'));\n    }\n\n    paginationNav.append(paginationPrev, paginationPages, paginationNext);\n  }\n  const listPagination = div({ class: 'mx-auto' }, paginationNav);\n  return listPagination;\n}",
            "score": -1.0
        },
        "blocks/card-list/card-list.js::createPaginationLink": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "createPaginationLink = (page, label, current = false) => {\n  const newUrl = new URL(window.location);\n  newUrl.searchParams.set('page', page);\n  const link = a(\n    {\n      href: newUrl.toString(),\n      class:\n        'font-medium text-sm leading-5 pt-4 px-4 items-center inline-flex hover:border-t-2 hover:border-gray-300 hover:text-gray-700',\n    },\n    label || page,\n  );\n  if (current) {\n    link.setAttribute('aria-current', 'page');\n    link.classList.add('text-danaherpurple-500', 'border-danaherpurple-500', 'border-t-2');\n  } else {\n    link.classList.add('text-danahergray-700');\n  }\n  return link;\n}",
            "score": -1.0
        },
        "blocks/card-list/card-list.js::decorate": {
            "changes_after_merge": 18,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "async function decorate(block) {\n  const articleType = block.classList.length > 2 ? block.classList[1] : '';\n  if (articleType) block.classList.remove(articleType);\n  const articles = await ffetch('/us/en/query-index.json')\n    .chunks(500)\n    .filter(({ type }) => type.toLowerCase() === articleType)\n    .all();\n  articles.sort((card1, card2) => card2.publishDate - card1.publishDate);\n\n  const cardList = ul({\n    class:\n      'container grid max-w-7xl w-full mx-auto gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 px-4 sm:px-0 justify-items-center mt-3 mb-3',\n  });\n  articles.forEach((article, index) => {\n    cardList.appendChild(createCard(article, index === 0));\n  });\n  block.textContent = '';\n  block.append(cardList);\n}",
            "score": -0.16279069767441856
        },
        "blocks/card-list/card-list.js::getSelectionFromUrl": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "getSelectionFromUrl = (field) => toClassName(new URLSearchParams(window.location.search).get(field)) || ''",
            "score": -1.0
        },
        "blocks/card-list/card-list.js::imageHelper": {
            "changes_after_merge": 1,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "imageHelper = (imageUrl, imageAlt, eager = false) => {\n  if (imageUrl.startsWith('/is/image')) {\n    const prodHost = /main--danaher-ls-aem-prod|lifesciences\\.danaher\\.com/;\n    const s7Host = prodHost.test(window.location.host)\n      ? 'https://danaherls.scene7.com'\n      : 'https://s7d9.scene7.com/';\n    return img({\n      src: `${s7Host}${imageUrl}`,\n      alt: imageAlt,\n      loading: eager ? 'eager' : 'lazy',\n      class: 'mb-2 h-48 w-full object-cover',\n    });\n  }\n  const cardImage = createOptimizedPicture(imageUrl, imageAlt, eager, [{ width: '750' }]);\n  cardImage.querySelector('img').className = 'mb-2 h-48 w-full object-cover';\n  return cardImage;\n}",
            "score": -0.9534883720930233
        },
        "blocks/card-list/libraryCard.js::createCard": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list/libraryCard.js",
            "merged_function": "function createCard(article, firstCard = false) {\n  const cardTitle = article.title.indexOf('| Danaher Life Sciences') > -1\n    ? article.title.split('| Danaher Life Sciences')[0]\n    : article.title.trim();\n  const cardImage = createOptimizedPicture(article.image, article.title, firstCard, [{ media: '(min-width: 1024px)', width: '320' }, { media: '(min-width: 640px)', width: '520' }, { width: '420' }]);\n  cardImage.querySelector('img').className = 'mb-2 h-48 w-full object-cover';\n\n  const cardWrapper = a(\n    { href: makePublicUrl(article.path), title: article.title },\n    cardImage,\n    h2(\n      {\n        class:\n          '!px-6 !text-lg !font-semibold !text-danahergray-900 !mb-4 !line-clamp-3 !h-20 !break-words',\n      },\n      cardTitle,\n    ),\n    article.description ? p(\n      {\n        class: 'px-6 text-sm text-gray-500 pb-0 pt-0 pb-4 line-clamp-4 h-20 break-words',\n      },\n      article.description,\n    ) : '',\n    div(\n      {\n        class:\n          'mt-auto inline-flex w-full px-6 py-5 text-base text-danaherpurple-500 font-semibold',\n      },\n      'Learn More \u2192',\n    ),\n  );\n\n  return li(\n    {\n      class:\n        'w-full flex flex-col col-span-1 relative mx-auto justify-center transform transition duration-500 border hover:scale-105 shadow-lg rounded-lg overflow-hidden bg-white max-w-xl',\n    },\n    cardWrapper,\n  );\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::decorate": {
            "changes_after_merge": 15,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function decorate(block) {\n  /* change to ul, li */\n  const ul = document.createElement('ul');\n\n  [...block.children].forEach((row) => {\n    const li = document.createElement('li');\n    const heading = row.querySelector('h2');\n    heading.className = 'card-title';\n    const link = row.querySelector('a');\n    link.className = 'card-link';\n    link.innerHTML += ' &rarr;';\n\n    const cardWrapper = document.createElement('div');\n    cardWrapper.className = 'card-wrapper';\n    cardWrapper.append(heading);\n    li.innerHTML = row.innerHTML;\n\n    [...li.children].forEach((div) => {\n      if (div.querySelector('picture')) div.className = 'cards-card-image';\n      else div.className = 'cards-card-body';\n    });\n\n    li.addEventListener('click', () => {\n      link.click();\n    });\n\n    cardWrapper.append(li);\n    ul.append(cardWrapper);\n    li.querySelector('div.cards-card-body').append(link);\n  });\n  ul.querySelectorAll('img').forEach((img) => img.closest('picture').replaceWith(createOptimizedPicture(img.src, img.alt, false, [{ width: '750' }])));\n  block.textContent = '';\n  block.append(ul);\n}",
            "score": -0.3023255813953488
        },
        "blocks/carousel/carousel.js::Carousel": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function Carousel(carouselEl, items, options) {\n  /**\n   * Clears the cycling interval\n   */\n  const pause = () => clearInterval(this._intervalInstance);\n\n  /**\n   * Get the currently active item\n  */\n  const getActiveItem = () => this._activeItem;\n\n  /**\n   * Set the currently active item and data attribute\n   * @param {*} position\n  */\n  const setActiveItem = (item) => {\n    this._activeItem = item;\n    const { position } = item;\n\n    // update the indicators if available\n    if (this._indicators.length) {\n      this._indicators = this._indicators.map((indicator) => {\n        indicator.el.setAttribute('aria-current', 'false');\n        indicator.el.classList.remove(...this._options.indicators.activeClasses.split(' '));\n        indicator.el.classList.add(...this._options.indicators.inactiveClasses.split(' '));\n        return indicator;\n      });\n      this._indicators[position].el.classList.add(...this._options.indicators.activeClasses.split(' '));\n      this._indicators[position].el.classList.remove(...this._options.indicators.inactiveClasses.split(' '));\n      this._indicators[position].el.setAttribute('aria-current', 'true');\n    }\n  };\n\n  /**\n   * Set an interval to loop through the carousel items\n  */\n  this.loop = () => {\n    if (typeof window !== 'undefined') {\n      this._intervalInstance = window.setInterval(() => {\n        this.next();\n      }, this._intervalDuration);\n    }\n  };\n\n  /**\n   * This method applies the transform classes\n   * based on the left, middle, and right rotation carousel items\n   * @param {*} rotationItems\n  */\n  const rotate = (rotationItems) => {\n    // reset\n    this._slides = this._slides.map((item) => {\n      item.el.classList.add('hidden');\n      return item;\n    });\n\n    if (\n      this._slides.length === 2\n      && parseInt(rotationItems.left.position, 10) === parseInt(rotationItems.right.position, 10)\n    ) {\n      if (parseInt(rotationItems.middle.position, 10) === 0) {\n        // left item (previously active)\n        rotationItems.left.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n        rotationItems.left.el.classList.add(...'-translate-x-full z-[1]'.split(' '));\n      } else if (parseInt(rotationItems.middle.position, 10) === 1) {\n        // right item (upcoming active)\n        rotationItems.right.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n        rotationItems.right.el.classList.add(...'translate-x-full z-[1]'.split(' '));\n      }\n      // currently active item\n      rotationItems.middle.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[1]'.split(' '));\n      rotationItems.middle.el.classList.add(...'translate-x-0 z-[2]'.split(' '));\n    } else {\n      // left item (previously active)\n      rotationItems.left.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n      rotationItems.left.el.classList.add(...'-translate-x-full z-[1]'.split(' '));\n\n      // currently active item\n      rotationItems.middle.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[1]'.split(' '));\n      rotationItems.middle.el.classList.add(...'translate-x-0 z-[2]'.split(' '));\n\n      // right item (upcoming active)\n      rotationItems.right.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n      rotationItems.right.el.classList.add(...'translate-x-full z-[1]'.split(' '));\n    }\n  };\n\n  /**\n   * Slide to the element based on id\n   * @param {*} position\n  */\n  const slideTo = (position) => {\n    const nextItem = this._slides[position];\n    const rotationItems = {\n      left:\n        nextItem.position === 0\n          ? this._slides[this._slides.length - 1]\n          : this._slides[nextItem.position - 1],\n      middle: nextItem,\n      right:\n        nextItem.position === this._slides.length - 1\n          ? this._slides[0]\n          : this._slides[nextItem.position + 1],\n    };\n    if (this._slides.length > 1) rotate(rotationItems);\n    setActiveItem(nextItem);\n    if (this._intervalInstance) {\n      pause();\n      this.loop();\n    }\n\n    this._options.onChange(position);\n  };\n\n  /**\n   * Based on the currently active item it will go to the next position\n  */\n  this.next = () => {\n    const activeItem = getActiveItem();\n    const { position } = activeItem;\n    let nextItem = null;\n\n    // check if last item\n    if (position === this._slides.length - 1) {\n      // eslint-disable-next-line prefer-destructuring\n      nextItem = this._slides[0];\n    } else nextItem = this._slides[position + 1];\n\n    slideTo(nextItem.position);\n\n    // callback function\n    this._options.onNext(nextItem.position);\n  };\n\n  /**\n   * Based on the currently active item it will go to the previous position\n  */\n  this.prev = () => {\n    const activeItem = getActiveItem();\n    let prevItem = null;\n\n    // check if first item\n    if (activeItem.position === 0) {\n      prevItem = this._slides[this._slides.length - 1];\n    } else {\n      prevItem = this._slides[activeItem.position - 1];\n    }\n\n    slideTo(prevItem.position);\n\n    // callback function\n    this._options.onPrev(prevItem.position);\n  };\n\n  const getItem = (position) => this._slides[position];\n\n  const init = () => {\n    if (this._slides.length && !this._initialized) {\n      this._slides = this._slides.map((item) => {\n        item.el.classList.add(...'absolute inset-0 transition-transform transform'.split(' '));\n        return item;\n      });\n\n      // if no active item is set then first position is default\n      if (getActiveItem()) slideTo(getActiveItem().position);\n      else slideTo(0);\n\n      this._indicators = this._indicators.map((indicator, position) => {\n        indicator.el.addEventListener('click', () => {\n          slideTo(position);\n        });\n        return indicator;\n      });\n\n      this._initialized = true;\n    }\n  };\n\n  this._element = carouselEl;\n  this._slides = items;\n  this._options = {\n    ...DEFAULT,\n    ...options,\n    indicators: { ...DEFAULT.indicators, ...options.indicators },\n  };\n  this._activeItem = getItem(this._options.defaultPosition);\n  this._indicators = this._options.indicators.items;\n  this._intervalDuration = this._options.interval;\n  this._intervalInstance = null;\n  this._initialized = false;\n  init();\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::configureNavigation": {
            "changes_after_merge": 8,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function configureNavigation(element) {\n  const elementControls = element.querySelector('.carousel-controls');\n  const previousBtn = button({ type: 'button', class: 'flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none', 'data-carousel-prev': '' });\n  previousBtn.element = element;\n  previousBtn.innerHTML = `\n    <span\n      class=\"inline-flex items-center justify-center w-10 h-10 rounded-full bg-danaherpurple-50 group-hover:danaherpurple-25\"\n    >\n      <svg class=\"w-4 h-4 text-danaherpurple-500\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\n        <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5 1 1 5l4 4\" />\n      </svg>\n      <span class=\"sr-only\">Previous</span>\n    </span>\n  `;\n  const nextBtn = button({ type: 'button', class: 'flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none', 'data-carousel-next': '' });\n  nextBtn.element = element;\n  nextBtn.innerHTML = `\n    <span class=\"inline-flex items-center justify-center w-10 h-10 rounded-full bg-danaherpurple-50 group-hover:danaherpurple-25\">\n      <svg class=\"w-4 h-4 text-danaherpurple-500\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 6 10\">\n        <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"m1 9 4-4-4-4\" />\n      </svg>\n      <span class=\"sr-only\">Next</span>\n    </span>\n  `;\n  elementControls.prepend(previousBtn);\n  elementControls.append(nextBtn);\n  return elementControls;\n}",
            "score": -0.627906976744186
        },
        "blocks/carousel/carousel.js::configurePagination": {
            "changes_after_merge": 8,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function configurePagination(element) {\n  const paginateWrapper = div({ class: 'carousel-controls absolute z-10 flex items-center -translate-x-1/2 bottom-5 left-32 space-x-3' });\n  paginateWrapper.append(span({ class: 'carousel-paginate text-base font-bold' }, `1/${element.querySelectorAll('.carousel-slider').length}`));\n  element.append(paginateWrapper);\n}",
            "score": -0.627906976744186
        },
        "blocks/carousel/carousel.js::decorate": {
            "changes_after_merge": 14,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function decorate(block) {\n  const uuid = crypto.randomUUID(4).substring(0, 6);\n  block.classList.add(...'relative h-56 md:h-[40rem] overflow-hidden'.split(' '));\n  const groupElements = [...block.children].reduce((prev, curr) => {\n    prev.push([...curr.children]);\n    return prev;\n  }, []);\n  block.innerHTML = '';\n  const slides = groupElements.map((ele, eleIndex) => {\n    if (ele.length > 1) {\n      const carouselSlider = div({ class: `${eleIndex} carousel-slider duration-${SLIDE_TRANSITION} ease-in-out absolute inset-0 transition-transform transform z-10`, 'data-carousel-item': '' });\n      ele.map((el, index) => {\n        if (index === 0) {\n          el.classList.add(...'px-4 sm:px-10 lg:w-1/2 xl:pr-10 space-y-6 pb-20 pt-8 md:pt-16 lg:py-20'.split(' '));\n          if (el.querySelector('h2')) el.querySelector('h2').classList.add(...'text-4xl font-normal leading-[64px] tracking-tight'.split(' '));\n          if (el.querySelector('p')) el.querySelector('p').classList.add(...'text-xl font-extralight tracking-tight'.split(' '));\n          if (el.querySelector('.button-container')) {\n            el.querySelector('.button-container').querySelectorAll('.btn').forEach((elBtn, elBtnIndex) => {\n              if (index === 0) elBtn.className = `btn btn-lg ${elBtnIndex === 0 ? 'btn-primary-purple' : 'btn-outline-trending-brand'} rounded-full px-6`;\n            });\n          }\n          carouselSlider.append(div({ class: 'mx-auto w-full max-w-7xl h-97 md:h-auto overflow-hidden lg:text-left' }, el));\n        } else {\n          el.classList.add(...'relative h-1/2 w-full md:h-96 lg:absolute lg:inset-y-0 lg:right-0 lg:h-full lg:w-1/2'.split(' '));\n          el.querySelector('img').classList.add(...'absolute block w-full h-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2'.split(' '));\n          carouselSlider.append(el);\n        }\n        return index;\n      });\n      block.append(carouselSlider);\n      return { position: parseInt(eleIndex, 10), el: carouselSlider };\n    }\n    return null;\n  }).filter((item) => item);\n  if (block.parentElement.className.includes('carousel-wrapper')) {\n    let controls;\n    block.parentElement.classList.add(...'relative w-full'.split(' '));\n    block.parentElement.setAttribute('data-carousel', 'slide');\n    block.parentElement.setAttribute('id', uuid);\n    if (block.children.length > 1) {\n      configurePagination(block.parentElement);\n      controls = configureNavigation(block.parentElement);\n    }\n    const options = {\n      defaultPosition: 0,\n      interval: SLIDE_DELAY,\n      onChange: (elIndex) => {\n        block.parentElement.querySelector('.carousel-paginate').innerHTML = `${elIndex + 1}/${slides.length}`;\n      },\n    };\n    const carousel = new Carousel(block, slides, options);\n    if (block.children.length > 1) {\n      controls.querySelector('button[data-carousel-prev]').addEventListener('click', carousel.prev);\n      controls.querySelector('button[data-carousel-next]').addEventListener('click', carousel.next);\n      carousel.loop();\n    }\n  }\n}",
            "score": -0.34883720930232553
        },
        "blocks/carousel/carousel.js::getActiveItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "getActiveItem = () => this._activeItem",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::getItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "getItem = (position) => this._slides[position]",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::init": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "init = () => {\n    if (this._slides.length && !this._initialized) {\n      this._slides = this._slides.map((item) => {\n        item.el.classList.add(...'absolute inset-0 transition-transform transform'.split(' '));\n        return item;\n      });\n\n      // if no active item is set then first position is default\n      if (getActiveItem()) slideTo(getActiveItem().position);\n      else slideTo(0);\n\n      this._indicators = this._indicators.map((indicator, position) => {\n        indicator.el.addEventListener('click', () => {\n          slideTo(position);\n        });\n        return indicator;\n      });\n\n      this._initialized = true;\n    }\n  }",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::pause": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "pause = () => clearInterval(this._intervalInstance)",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::rotate": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "rotate = (rotationItems) => {\n    // reset\n    this._slides = this._slides.map((item) => {\n      item.el.classList.add('hidden');\n      return item;\n    });\n\n    if (\n      this._slides.length === 2\n      && parseInt(rotationItems.left.position, 10) === parseInt(rotationItems.right.position, 10)\n    ) {\n      if (parseInt(rotationItems.middle.position, 10) === 0) {\n        // left item (previously active)\n        rotationItems.left.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n        rotationItems.left.el.classList.add(...'-translate-x-full z-[1]'.split(' '));\n      } else if (parseInt(rotationItems.middle.position, 10) === 1) {\n        // right item (upcoming active)\n        rotationItems.right.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n        rotationItems.right.el.classList.add(...'translate-x-full z-[1]'.split(' '));\n      }\n      // currently active item\n      rotationItems.middle.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[1]'.split(' '));\n      rotationItems.middle.el.classList.add(...'translate-x-0 z-[2]'.split(' '));\n    } else {\n      // left item (previously active)\n      rotationItems.left.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n      rotationItems.left.el.classList.add(...'-translate-x-full z-[1]'.split(' '));\n\n      // currently active item\n      rotationItems.middle.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[1]'.split(' '));\n      rotationItems.middle.el.classList.add(...'translate-x-0 z-[2]'.split(' '));\n\n      // right item (upcoming active)\n      rotationItems.right.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n      rotationItems.right.el.classList.add(...'translate-x-full z-[1]'.split(' '));\n    }\n  }",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::setActiveItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "setActiveItem = (item) => {\n    this._activeItem = item;\n    const { position } = item;\n\n    // update the indicators if available\n    if (this._indicators.length) {\n      this._indicators = this._indicators.map((indicator) => {\n        indicator.el.setAttribute('aria-current', 'false');\n        indicator.el.classList.remove(...this._options.indicators.activeClasses.split(' '));\n        indicator.el.classList.add(...this._options.indicators.inactiveClasses.split(' '));\n        return indicator;\n      });\n      this._indicators[position].el.classList.add(...this._options.indicators.activeClasses.split(' '));\n      this._indicators[position].el.classList.remove(...this._options.indicators.inactiveClasses.split(' '));\n      this._indicators[position].el.setAttribute('aria-current', 'true');\n    }\n  }",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::slideTo": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "slideTo = (position) => {\n    const nextItem = this._slides[position];\n    const rotationItems = {\n      left:\n        nextItem.position === 0\n          ? this._slides[this._slides.length - 1]\n          : this._slides[nextItem.position - 1],\n      middle: nextItem,\n      right:\n        nextItem.position === this._slides.length - 1\n          ? this._slides[0]\n          : this._slides[nextItem.position + 1],\n    };\n    if (this._slides.length > 1) rotate(rotationItems);\n    setActiveItem(nextItem);\n    if (this._intervalInstance) {\n      pause();\n      this.loop();\n    }\n\n    this._options.onChange(position);\n  }",
            "score": -1.0
        },
        "blocks/category-family/category-family.js::decorate": {
            "changes_after_merge": 17,
            "file_path": "blocks/category-family/category-family.js",
            "merged_function": "async function decorate(block) {\n  const paths = window.location.pathname.split('/');\n  const category = paths.splice(4, paths.length).join('|');\n  const host = (window.location.host === 'lifesciences.danaher.com') ? window.location.host : 'stage.lifesciences.danaher.com';\n  loadScript('https://static.cloud.coveo.com/atomic/v2/atomic.esm.js', { type: 'module' });\n\n  block.innerHTML = categoryFamily;\n  await import('../../scripts/libs/coveo-atomic/atomic.esm.js');\n  await customElements.whenDefined('atomic-search-interface');\n  const categorySearchInterface = document.querySelector('atomic-search-interface.category-search');\n\n  await categorySearchInterface.initialize({\n    accessToken: window.DanaherConfig.categoryProductKey,\n    organizationId: window.DanaherConfig.searchOrg,\n    organizationEndpoints: await categorySearchInterface\n      .getOrganizationEndpoints(window.DanaherConfig.searchOrg),\n  });\n\n  const isInternal = typeof getCookie('exclude-from-analytics') !== 'undefined';\n  const { engine } = categorySearchInterface;\n  const { loadContextActions } = await import('../../scripts/libs/coveo-headless/headless.esm.js');\n  engine.dispatch(loadContextActions(engine).setContext({\n    categories: category,\n    host,\n    internal: isInternal,\n  }));\n\n  if (!isOTEnabled()) {\n    categorySearchInterface.analytics = false;\n  }\n  categorySearchInterface.executeFirstSearch();\n\n  engine.subscribe(() => {\n    const totalCount = engine?.state?.search?.response?.totalCount;\n    if (totalCount !== undefined && totalCount === 0\n        && document.querySelector('div.coveocategory') !== null) {\n      document.querySelector('div.coveocategory').remove();\n    }\n  });\n}",
            "score": -0.2093023255813954
        },
        "blocks/category-family/category-family.js::getCookie": {
            "changes_after_merge": 0,
            "file_path": "blocks/category-family/category-family.js",
            "merged_function": "getCookie = (cname) => {\n  const name = `${cname}=`;\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const cookies = decodedCookie.split(';');\n  cookies.forEach((cookie) => {\n    while (cookie.charAt(0) === ' ') {\n      // eslint-disable-next-line no-param-reassign\n      cookie = cookie.substring(1);\n    }\n    if (cookie.indexOf(name) === 0) {\n      return cookie.substring(name.length, cookie.length);\n    }\n    return '';\n  });\n}",
            "score": -1.0
        },
        "blocks/category-family/category-family.js::isOTEnabled": {
            "changes_after_merge": 0,
            "file_path": "blocks/category-family/category-family.js",
            "merged_function": "isOTEnabled = () => {\n  const otCookie = getCookie('OptanonConsent');\n  if (typeof otCookie === 'string') {\n    return otCookie.includes('C0002:1');\n  }\n  return true;\n}",
            "score": -1.0
        },
        "blocks/columns/columns.js::decorate": {
            "changes_after_merge": 16,
            "file_path": "blocks/columns/columns.js",
            "merged_function": "function decorate(block) {\n  const cols = [...block.firstElementChild.children];\n  block.classList.add(`columns-${cols.length}-cols`);\n\n  const imageAspectRatio = 1.7778;\n\n  // setup image columns\n  [...block.children].forEach((row) => {\n    [...row.children].forEach((col) => {\n      const img = col.querySelector('img');\n      if (img) {\n        // eslint-disable-next-line func-names\n        img.onerror = function () {\n          img.width = this.width;\n          img.height = Math.floor(this.width / imageAspectRatio);\n        };\n      }\n\n      const pic = col.querySelector('picture');\n      if (pic) {\n        const picWrapper = pic.closest('div');\n        if (picWrapper && picWrapper.children.length === 1) {\n          // picture is only content in column\n          picWrapper.classList.add('columns-img-col');\n        }\n      }\n    });\n  });\n}",
            "score": -0.2558139534883721
        },
        "blocks/embed/embed.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function decorate(block) {\n  const link = block.querySelector('a').href;\n  block.textContent = '';\n\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      loadEmbed(block, link);\n    }\n  });\n  observer.observe(block);\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::embedPdfViewer": {
            "changes_after_merge": 1,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "embedPdfViewer = (block, url) => {\n  loadScript('https://acrobatservices.adobe.com/view-sdk/viewer.js');\n\n  const pdfEmbedKey = window.DanaherConfig !== undefined ? window.DanaherConfig.pdfEmbedKey : '';\n\n  const VIEWER_CONFIG = [\n    { 'sized-container': { embedMode: 'SIZED_CONTAINER' } },\n    { showfullscreen: { showFullScreen: true } },\n    { showdownload: { showDownloadPDF: true } },\n    { showannotationtools: { showAnnotationTools: true } },\n    { showprint: { showPrintPDF: true } },\n  ];\n\n  const config = [...block.classList].filter((item) => item !== 'embed' && item !== 'block').map((item) => {\n    const configItem = VIEWER_CONFIG.find((cfg) => cfg[item]);\n    return Object.entries(configItem)[0][1];\n  });\n\n  const embedHTML = div({ id: 'adobe-dc-view', style: 'width: 100%; height: 500px' });\n  const fileName = url.pathname.split('/').pop();\n  document.addEventListener('adobe_dc_view_sdk.ready', () => {\n    // eslint-disable-next-line no-undef\n    const adobeDCView = new AdobeDC.View({\n      clientId: pdfEmbedKey,\n      divId: 'adobe-dc-view',\n    });\n    adobeDCView.previewFile(\n      {\n        content: { location: { url } },\n        metaData: { fileName },\n      },\n      JSON.stringify(Object.assign({}, ...config)),\n    );\n  });\n  return embedHTML.outerHTML;\n}",
            "score": -0.9534883720930233
        },
        "blocks/embed/embed.js::embedVidyard": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "embedVidyard = (block, url, autoplay) => {\n  const video = url.pathname.split('/').pop();\n  const suffix = autoplay ? '?muted=1&autoplay=1' : '';\n  const embedHTML = `<div style=\"flex justify-center left: 0; width: 100%; height: 0; position: relative; padding-bottom: 56.25%;\">\n      <iframe src=\"https://play.vidyard.com/${video}${suffix}\" \n      style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" \n      frameborder=\"0\" allowtransparency=\"true\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen  \n      title=\"video\" loading=\"lazy\"></iframe>\n    </div>`;\n  return embedHTML;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::embedVimeo": {
            "changes_after_merge": 3,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "embedVimeo = (url, autoplay) => {\n  const video = url.pathname.split('/').pop();\n  const suffix = autoplay ? '?muted=1&autoplay=1' : '';\n  const embedHTML = `<div style=\"flex justify-center left: 0; width: 100%; height: 0; position: relative; padding-bottom: 56.25%;\">\n      <iframe src=\"https://player.vimeo.com/video/${video}${suffix}\" \n      style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" \n      frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen  \n      title=\"Content from Vimeo\" loading=\"lazy\"></iframe>\n    </div>`;\n  return embedHTML;\n}",
            "score": -0.8604651162790697
        },
        "blocks/embed/embed.js::embedYoutube": {
            "changes_after_merge": 3,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "embedYoutube = (url, autoplay) => {\n  const usp = new URLSearchParams(url.search);\n  const suffix = autoplay ? '&muted=1&autoplay=1' : '';\n  let vid = usp.get('v') ? encodeURIComponent(usp.get('v')) : '';\n  const embed = url.pathname;\n  if (url.origin.includes('youtu.be')) {\n    [, vid] = url.pathname.split('/');\n  }\n  const embedHTML = `<div style=\"flex justify-center left: 0; width: 100%; height: 0; position: relative; padding-bottom: 56.25%;\">\n        <iframe src=\"https://www.youtube.com${vid ? `/embed/${vid}?rel=0&v=${vid}${suffix}` : embed}\"\n        style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" \n        allow=\"autoplay; fullscreen; picture-in-picture; encrypted-media; accelerometer; gyroscope; picture-in-picture\" allowfullscreen=\"\" scrolling=\"no\" title=\"Content from Youtube\" loading=\"lazy\"></iframe>\n      </div>`;\n  return embedHTML;\n}",
            "score": -0.8604651162790697
        },
        "blocks/embed/embed.js::getDefaultEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "getDefaultEmbed = (url) => `<div style=\"flex justify-center left: 0; width: 100%; height: 0; position: relative; padding-bottom: 56.25%;\">\n      <iframe src=\"${url.href}\" style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" allowfullscreen=\"\"\n        scrolling=\"no\" allow=\"encrypted-media\" title=\"Content from ${url.hostname}\" loading=\"lazy\">\n      </iframe>\n    </div>`",
            "score": -1.0
        },
        "blocks/embed/embed.js::loadEmbed": {
            "changes_after_merge": 7,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "loadEmbed = (block, link, autoplay) => {\n  if (block.classList.contains('embed-is-loaded')) {\n    return;\n  }\n\n  const EMBEDS_CONFIG = [\n    {\n      match: ['youtube', 'youtu.be'],\n      embed: embedYoutube,\n    },\n    {\n      match: ['vimeo'],\n      embed: embedVimeo,\n    },\n  ];\n\n  const config = EMBEDS_CONFIG.find((e) => e.match.some((match) => link.includes(match)));\n  const url = new URL(link);\n  if (config) {\n    block.innerHTML = config.embed(url, autoplay);\n    block.classList = `block embed embed-${config.match[0]} my-8 mx-auto text-center max-w-3xl`;\n  } else {\n    block.innerHTML = getDefaultEmbed(url);\n    block.classList = 'block embed my-8 mx-auto text-center max-w-3xl';\n  }\n  block.classList.add('embed-is-loaded');\n}",
            "score": -0.6744186046511628
        },
        "blocks/errors/errors.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/errors/errors.js",
            "merged_function": "async function decorate(block) {\n  if (block.getAttribute('data-request-status') == 404) block.innerHTML = notFound;\n}",
            "score": -0.9534883720930233
        },
        "blocks/footer/footer.js::decorate": {
            "changes_after_merge": 11,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function decorate(block) {\n  const cfg = readBlockConfig(block);\n  block.textContent = '';\n\n  // fetch footer content\n  const footerPath = cfg.footer || '/fragments/footer/';\n  const resp = await fetch(`${footerPath}master.plain.html`, window.location.pathname.endsWith('/master.plain.html') ? { cache: 'reload' } : {});\n\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // decorate footer DOM\n    const footer = document.createElement('div');\n    footer.innerHTML = html;\n\n    decorateIcons(footer);\n    block.append(footer);\n  }\n}",
            "score": -0.4883720930232558
        },
        "blocks/footer/footer.js::generateStickyFooter": {
            "changes_after_merge": 16,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function generateStickyFooter(stickyFooter) {\n  const stickyFooterClone = stickyFooter[0].cloneNode(true);\n  const allNestedAnchorChilds = stickyFooterClone.querySelectorAll('a');\n  const container = document.createElement('div');\n  container.className = 'sticky-footer';\n  const wrapper = document.createElement('div');\n  wrapper.className = 'btn-group';\n  allNestedAnchorChilds.forEach((child) => {\n    const childClone = child.cloneNode(true);\n    childClone.className = 'btn';\n    wrapper.appendChild(childClone);\n  });\n  const topFeature = document.createElement('button');\n  topFeature.className = 'btn';\n  topFeature.title = 'Top';\n  topFeature.setAttribute('aria-label', 'scroll to top of the page');\n  topFeature.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" class=\"w-5 h-5\" data-di-rand=\"1694779822323\"><path fill-rule=\"evenodd\" d=\"M11.47 7.72a.75.75 0 011.06 0l7.5 7.5a.75.75 0 11-1.06 1.06L12 9.31l-6.97 6.97a.75.75 0 01-1.06-1.06l7.5-7.5z\" clip-rule=\"evenodd\"></path></svg> Top';\n  topFeature.addEventListener('click', scrollToTop);\n  wrapper.appendChild(topFeature);\n  stickyFooter[0].remove();\n  container.append(wrapper);\n  const accessibe = document.createElement('button');\n  accessibe.setAttribute('aria-label', 'users');\n  accessibe.setAttribute('data-acsb-custom-trigger', 'true');\n  accessibe.className = 'accessibility';\n  accessibe.innerHTML = `<svg class=\"w-5 md:w-6 h-5 md:h-6\" viewBox=\"0 0 22 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M10.6019 4.99946C11.7063 4.99946 12.6016 4.10415 12.6016 2.99973C12.6016 1.89531 11.7063 1 10.6019 1C9.49748 1 8.60217 1.89531 8.60217 2.99973C8.60217 4.10415 9.49748 4.99946 10.6019 4.99946Z\" stroke=\"white\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n      <path d=\"M8.01355 13.9217C8.15836 13.0188 8.22333 12.1455 7.98878 11.5421C7.78891 11.0229 7.35395 10.7327 6.82869 10.5345L2.20211 9.03747C1.60197 8.83761 1.04147 8.5023 1.00238 7.84049C0.952275 6.99039 1.70217 6.44035 2.45262 6.64077C2.45262 6.64077 6.85236 8.19783 10.6024 8.19783C14.3525 8.19783 18.7021 6.64792 18.7021 6.64792C19.6023 6.39796 20.2019 7.09775 20.2019 7.83719C20.2019 8.57663 19.6519 8.79741 19.0022 9.03417L14.6024 10.6298C14.2027 10.7795 13.5525 11.0796 13.3025 11.5388C13.0024 12.0762 13.0525 13.0155 13.1973 13.9184L13.4924 15.4001L15.3628 23.595C15.5026 24.2524 15.0478 24.8668 14.3927 24.9819C13.7375 25.097 13.2023 24.6499 13.0079 24.014L11.1299 18.2174C11.0396 17.9394 10.9597 17.658 10.8898 17.3739L10.6019 16.2001L10.337 17.2825C10.2528 17.6277 10.1564 17.9691 10.0469 18.3066L8.20185 24.009C8.00199 24.6516 7.47673 25.0964 6.82208 24.9819C6.16688 24.8674 5.70219 24.2023 5.84919 23.595L7.71844 15.4034L8.01355 13.9217Z\" stroke=\"white\" stroke-width=\"2\" stroke-linejoin=\"round\"/>\n  </svg>`;\n  container.append(accessibe);\n  document.body.appendChild(container);\n}",
            "score": -0.2558139534883721
        },
        "blocks/footer/footer.js::getFragmentFromFile": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function getFragmentFromFile(fragmentURL) {\n  const response = await fetch(fragmentURL);\n  if (!response.ok) {\n    // eslint-disable-next-line no-console\n    console.error('error loading fragment details', response);\n    return null;\n  }\n  const text = await response.text();\n  if (!text) {\n    // eslint-disable-next-line no-console\n    console.error('fragment details empty', fragmentURL);\n    return null;\n  }\n  const parser = new DOMParser();\n  const html = parser.parseFromString(text, 'text/html');\n  return html.body.children;\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::loadAccessibe": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function loadAccessibe() {\n  loadScript('../../scripts/lib-accessibe.js');\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::scrollToTop": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n}",
            "score": -1.0
        },
        "blocks/header/header.js::addEventToSearchInput": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header.js",
            "merged_function": "function addEventToSearchInput(searchBlock) {\n  const searchbox = searchBlock.querySelector('.searchbox');\n  const searchInput = searchbox.querySelector('input');\n  searchBlock.querySelector('.searchbox-clear').addEventListener('click', async (e) => {\n    const { target } = e;\n    searchInput.value = '';\n    searchInput.focus();\n    target.closest('.searchbox-clear').classList.add('hidden');\n    await buildSearchSuggestions(searchbox);\n  });\n  searchInput.addEventListener('input', handleSearchInput);\n  searchInput.addEventListener('change', handleSearchInput);\n  searchInput.addEventListener('focusin', async () => {\n    await buildSearchSuggestions(searchbox);\n    searchbox.querySelector('.search-suggestions-wrapper').classList.remove('hidden');\n  });\n  searchInput.addEventListener('focusout', (e) => {\n    setTimeout(() => {\n      if (!searchInput.matches(':focus')) {\n        e.target.closest('.searchbox').querySelector('.search-suggestions-wrapper').classList.add('hidden');\n      }\n    }, 200);\n  });\n  searchInput.addEventListener('keydown', async (e) => {\n    const { key } = e;\n    const searchValue = searchInput.value;\n    const suggestionChildren = Array.from(searchbox.querySelectorAll('.search-suggestions button.suggestion')) || [];\n    const suggestionCount = suggestionChildren.length;\n    const handleKeyNavigation = () => {\n      searchInput.value = suggestionChildren[selectedSuggestionIndex].querySelector('span.search-suggestion-text').innerText;\n      setTimeout(() => {\n        searchInput.selectionStart = searchInput.value.length;\n        searchInput.selectionEnd = searchInput.value.length;\n        handleSearchClear(searchbox, searchInput);\n      }, 100);\n      suggestionChildren.forEach((suggestionItem, idx) => {\n        suggestionItem.classList.toggle('selected', idx === selectedSuggestionIndex);\n      });\n    };\n    if (key === 'Enter') {\n      await submitSearchQuery(searchValue);\n    } else if (e.key === 'ArrowUp') {\n      selectedSuggestionIndex = selectedSuggestionIndex > 0\n        ? selectedSuggestionIndex - 1\n        : suggestionCount - 1;\n      handleKeyNavigation();\n    } else if (e.key === 'ArrowDown') {\n      selectedSuggestionIndex = selectedSuggestionIndex < suggestionCount - 1\n        ? selectedSuggestionIndex + 1\n        : 0;\n      handleKeyNavigation();\n    }\n  });\n  searchBlock.querySelector('.searchbox .search-enter-button').addEventListener('click', async () => {\n    await submitSearchQuery(searchInput.value);\n  });\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/header.js::buildFlyoutMenus": {
            "changes_after_merge": 18,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildFlyoutMenus(headerBlock) {\n  headerBlock.querySelectorAll('.menu-flyout').forEach((menuItemEl) => {\n    menuItemEl.className = 'menu-flyout hidden flex fixed top-0 left-0 h-screen space-y-5 text-white duration-1000 ease-out transition-all w-full backdrop-brightness-50 z-50';\n    const menuPath = menuItemEl.querySelector(':scope > p').textContent;\n    const menuPathTokens = menuPath.split('|');\n    menuItemEl.id = getMenuIdFromPath(menuPath);\n    const menuTitle = menuPathTokens[menuPathTokens.length - 1];\n    const linkList = menuItemEl.querySelector(':scope > ul');\n    linkList.className = 'space-y-1';\n    linkList.querySelectorAll(':scope > li').forEach((linkItem) => {\n      linkItem.className = '';\n      const linkItemName = linkItem.innerText;\n      const linkItemArrowRight = linkItem.querySelector('span.icon-arrow-right');\n\n      if (linkItemArrowRight) {\n        const arrowRight = span({ class: 'icon-arrow-right inline-block' });\n        arrowRight.innerHTML = `\n          <svg data-v-174698b9=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" class=\"w-3 h-3\" data-di-rand=\"1694443063567\">\n            <path fill-rule=\"evenodd\" d=\"M4.5 5.653c0-1.426 1.529-2.33 2.779-1.643l11.54 6.348c1.295.712 1.295 2.573 0 3.285L7.28 19.991c-1.25.687-2.779-.217-2.779-1.643V5.653z\" clip-rule=\"evenodd\"></path>\n          </svg>\n        `;\n        linkItem.innerHTML = '';\n        linkItem.append(a(\n          {\n            href: '#',\n            onclick: (e) => {\n              e.preventDefault();\n              hideFlyoutMenu(e);\n              showFlyoutMenu(`${menuPath}|${linkItemName}`);\n            },\n          },\n          span(linkItemName),\n          arrowRight,\n        ));\n      }\n      linkItem.querySelector('a').className = 'flex items-center justify-between w-72 menu-link rounded-md p-2 text-base leading-6';\n    });\n    const flyoutBlock = div(\n      { class: 'grid grid-flow-col grid-cols-1 fixed h-full justify-evenly duration-300 ease-out transition-all' },\n      div(\n        { class: 'bg-white text-black overflow-auto space-y-3 max-w-sm' },\n        div(\n          { class: 'flex items-center justify-between px-3 mt-2' },\n          a({\n            class: 'back-button',\n            href: '#',\n            onclick: (e) => {\n              e.preventDefault();\n              hideFlyoutMenu(e);\n              showFlyoutMenu(menuPathTokens.slice(0, menuPathTokens.length - 1).join('|'));\n            },\n          }),\n          a({\n            class: 'close-button ml-auto text-3xl text-gray-500',\n            href: '#',\n            onclick: hideFlyoutMenu,\n          }, '\u00d7'),\n        ),\n        div(\n          { class: 'flex flex-col px-3 secCol' },\n          div(\n            { class: 'inline-flex justify-between items-center mb-2' },\n            span({ class: 'text-left text-xl font-bold py-2 pl-1 text-gray-900 w-1/2' }, menuTitle),\n            menuItemEl.querySelector(':scope > p > a')\n              ? a({ class: 'btn btn-info', href: menuItemEl.querySelector(':scope > p > a').href }, 'Explore All') : '',\n          ),\n          linkList,\n        ),\n      ),\n    );\n    flyoutBlock.querySelector('a.back-button').innerHTML = `\n      <svg data-v-174698b9=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" class=\"chevy w-5 h-5\" data-di-rand=\"1694164856713\">\n        <path fill-rule=\"evenodd\" d=\"M11.03 3.97a.75.75 0 010 1.06l-6.22 6.22H21a.75.75 0 010 1.5H4.81l6.22 6.22a.75.75 0 11-1.06 1.06l-7.5-7.5a.75.75 0 010-1.06l7.5-7.5a.75.75 0 011.06 0z\" clip-rule=\"evenodd\"></path>\n      </svg>\n    `;\n    menuItemEl.innerHTML = '';\n    menuItemEl.append(flyoutBlock);\n    if (menuTitle === 'Menu') {\n      menuItemEl.querySelector('a.back-button').classList.add('hidden');\n    }\n  });\n}",
            "score": -0.16279069767441856
        },
        "blocks/header/header.js::buildLoggedInUserBlock": {
            "changes_after_merge": 9,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildLoggedInUserBlock(loginLink, user) {\n  loginLink.className = 'relative flex items-center justify-between h-15 w-15';\n  loginLink.href = '/us/en/signin/dashboard.html';\n  const loginUser = span({ class: 'w-12 h-12 p-2 mb-2 overflow-hidden border rounded-full bg-danaherlightblue-500' }, span({ class: 'text-white' }, shortName(user)));\n  const loginSpan = span({ class: 'pl-1 text-xs font-semibold text-white' }, 'My Account');\n  loginLink.textContent = '';\n  loginLink.append(loginUser);\n  loginLink.append(loginSpan);\n}",
            "score": -0.5813953488372092
        },
        "blocks/header/header.js::buildLoginBlock": {
            "changes_after_merge": 11,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildLoginBlock(loginLink) {\n  loginLink.className = 'text-white hover:text-white relative lg:inline-flex text-xs pr-3 font-semibold';\n  const loginIcon = loginLink.querySelector('span');\n  loginIcon.className = '';\n  loginIcon.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\" class=\"w-6 h-6 text-white rounded-full\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0zM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632z\"/>\n    </svg>\n  `;\n  loginIcon.setAttribute('style', 'filter: brightness(0) invert(1);');\n  const loginSpan = span({ class: 'w-12 pl-2 lg:block hidden lg:inline' }, loginLink.textContent);\n  loginLink.textContent = '';\n  loginLink.append(loginIcon);\n  loginLink.append(loginSpan);\n}",
            "score": -0.4883720930232558
        },
        "blocks/header/header.js::buildLogosBlock": {
            "changes_after_merge": 9,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildLogosBlock(headerBlock) {\n  const logoHtmlBlock = headerBlock.children[0];\n  logoHtmlBlock.className = 'bg-danaherblue-600 hidden lg:block';\n  const logoUl = logoHtmlBlock.querySelector('ul');\n  logoUl.className = 'h-14 flex justify-center';\n  const logoLis = logoUl.querySelectorAll(':scope > li');\n  logoLis.forEach((logoLi) => {\n    logoLi.className = 'group md:mx-5 mx-10';\n    const logoLink = logoLi.querySelector(':scope > a');\n    const logoPicture = logoLi.querySelector(':scope > picture');\n    const logoImg = logoPicture.querySelector('img');\n    logoImg.className = 'h-7 w-auto px-4';\n    const logoTitle = logoLink.textContent;\n    logoImg.setAttribute('alt', logoTitle);\n    logoPicture.setAttribute('style', 'filter: brightness(0) invert(1);');\n    logoLink.textContent = '';\n    logoLink.className = 'h-full flex items-center group-hover:bg-danaherblue-700';\n    logoLink.append(logoPicture);\n    logoLi.innerHTML = '';\n    logoLi.append(logoLink);\n  });\n}",
            "score": -0.5813953488372092
        },
        "blocks/header/header.js::buildNavBlock": {
            "changes_after_merge": 21,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildNavBlock(headerBlock) {\n  const menuLinks = [];\n  [...headerBlock.children].slice(2).forEach((menuItemEl) => {\n    menuItemEl.className = menuItemEl.innerHTML ? 'menu-flyout hidden' : '';\n    if (menuItemEl.querySelector(':scope > p')?.textContent === 'Menu') {\n      menuItemEl.querySelectorAll(':scope > ul > li').forEach((childMenuItem) => {\n        menuLinks.push(childMenuItem);\n      });\n    }\n  });\n  const navHtmlBlock = div({ class: 'bg-danaherblue-900 hidden lg:block' });\n\n  // home link\n  const homeLink = a({ class: 'flex items-center !text-white text-lg hover:text-white', href: '/' }, 'Life Sciences');\n  const homeLinkImg = span({ class: 'inline-block w-5 ml-2', style: 'filter: brightness(0) invert(0.5);' });\n  homeLinkImg.className = 'inline-block w-5 ml-2';\n  homeLinkImg.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" class=\"inline-block h-5 w-5 ml-3 text-gray-500\" data-di-rand=\"1693233993608\">\n      <path d=\"M11.47 3.84a.75.75 0 0 1 1.06 0l8.69 8.69a.75.75 0 1 0 1.06-1.06l-8.689-8.69a2.25 2.25 0 0 0-3.182 0l-8.69 8.69a.75.75 0 0 0 1.061 1.06l8.69-8.69z\"/>\n      <path d=\"m12 5.432 8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 0 1-.75-.75v-4.5a.75.75 0 0 0-.75-.75h-3a.75.75 0 0 0-.75.75V21a.75.75 0 0 1-.75.75H5.625a1.875 1.875 0 0 1-1.875-1.875v-6.198a2.29 2.29 0 0 0 .091-.086L12 5.43z\"/>\n    </svg>\n  `;\n  homeLink.append(homeLinkImg);\n\n  // main nav\n  const navWrapper = div({ class: 'megamenu mx-auto max-w-7xl bg-danaherblue-900' });\n  const pageNav = nav({ class: 'flex content-start' });\n  pageNav.append(\n    div(\n      { class: 'flex-none flex-grow-0 ml-1 mr-14 lg:flex lg:pl-8 xl:pl-4 items-center' },\n      homeLink,\n    ),\n  );\n  menuLinks.forEach((item) => {\n    const menuItemName = item.innerText;\n    const expandIcon = item.querySelector('span.icon-arrow-right');\n    const menuItemEl = div(\n      { class: 'py-4 space-x-4 hoverable' },\n      a(\n        {\n          class: 'btn !bg-transparent !text-white !font-medium !ring-0 !border-0 !ring-offset-0 group relative',\n          href: item.querySelector('a')?.href || '#',\n        },\n        span(menuItemName),\n        expandIcon ? span({ class: 'up hidden group-hover:block' }) : '',\n        expandIcon ? span({ class: 'down group-hover:hidden' }) : '',\n      ),\n    );\n    if (expandIcon) {\n      menuItemEl.querySelector('.up').innerHTML = `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#3BC7E5\" aria-hidden=\"true\" class=\"chevy h-5 w-5 transition\" data-di-rand=\"1693233993612\">\n          <path fill-rule=\"evenodd\" d=\"M11.47 7.72a.75.75 0 0 1 1.06 0l7.5 7.5a.75.75 0 1 1-1.06 1.06L12 9.31l-6.97 6.97a.75.75 0 0 1-1.06-1.06l7.5-7.5z\" clip-rule=\"evenodd\"/>\n        </svg>`;\n      menuItemEl.querySelector('.down').innerHTML = `\n        <svg data-v-5a2dd2cf=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"chevy h-5 w-5 transition\" data-di-rand=\"1694003395964\">\n          <path fill-rule=\"evenodd\" d=\"M12.53 16.28a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 011.06-1.06L12 14.69l6.97-6.97a.75.75 0 111.06 1.06l-7.5 7.5z\" clip-rule=\"evenodd\"></path>\n        </svg>`;\n      menuItemEl.querySelector('a.btn').addEventListener('click', (e) => {\n        e.preventDefault();\n        showFlyoutMenu(`Menu|${menuItemName}`);\n      });\n    }\n    pageNav.append(menuItemEl);\n  });\n  navWrapper.append(pageNav);\n  navHtmlBlock.append(navWrapper);\n  headerBlock.append(navHtmlBlock);\n}",
            "score": -0.023255813953488413
        },
        "blocks/header/header.js::buildSearchBlock": {
            "changes_after_merge": 38,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildSearchBlock(headerBlock) {\n  const searchHtmlBlock = headerBlock.children[1];\n  searchHtmlBlock.className = 'bg-danaherblue-600 flex-grow';\n  const searchHtmlBlockInner = div({ class: 'flex mx-auto items-center max-w-7xl flex-col md:flex-row' });\n  const searchNewBlock = div();\n\n  // danaher logo\n  const logoBlock = div({ class: 'flex items-center justify-center md:justify-start h-full w-full md:w-1/4' });\n  const logoPictureBlock = searchHtmlBlock.querySelector(':scope > p > picture');\n  const logoLinkBlock = searchHtmlBlock.querySelector(':scope > p > a');\n  logoPictureBlock.setAttribute('alt', logoLinkBlock.textContent);\n  logoPictureBlock.querySelector('img').className = 'h-full object-contain py-2 md:pb-1 lg:py-0 pr-8 md:pr-0 md:pl-2 mx-auto lg:ml-4';\n  logoPictureBlock.setAttribute('style', 'filter: brightness(0) invert(1);');\n  logoLinkBlock.className = 'w-44 md:w-28 lg:w-44 lg:h-8';\n  logoLinkBlock.innerHTML = '';\n  logoLinkBlock.append(logoPictureBlock);\n  const titleLinkBlock = div(\n    { class: 'bg-danaherblue-900 w-full rounded-tr-lg overflow-hidden hidden md:block lg:hidden' },\n    a({ class: 'h-full flex pl-2 py-2 items-center text-sm text-white rounded-tr-lg overflow-hidden', href: '/' }, 'Life Sciences'),\n  );\n  const logoGroupBlock = div(\n    { class: 'flex flex-col lg:py-0 mx-auto md:mx-0 gap-2' },\n    logoLinkBlock,\n    titleLinkBlock,\n  );\n  const hamburgerIcon = div({ id: 'nav-hamburger', class: 'md:bg-danaherblue-900 md:py-6 h-full lg:hidden h-full px-2 my-auto !ring-0 !ring-offset-0 cursor-pointer sticky' });\n  hamburgerIcon.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" class=\"h-8 w-8 text-danaherlightblue-500 hover:text-danaherlightblue-50\" data-di-rand=\"1693233993603\">\n      <path fill-rule=\"evenodd\" d=\"M3 6.75A.75.75 0 0 1 3.75 6h16.5a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 6.75zM3 12a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75A.75.75 0 0 1 3 12zm0 5.25a.75.75 0 0 1 .75-.75h16.5a.75.75 0 0 1 0 1.5H3.75a.75.75 0 0 1-.75-.75z\" clip-rule=\"evenodd\"/>\n    </svg>\n  `;\n  logoBlock.append(hamburgerIcon);\n  logoBlock.append(logoGroupBlock);\n  searchHtmlBlockInner.append(logoBlock);\n\n  // log in  & quote\n  const loginBlock = div({ class: 'f-col w-full md:w-1/4 my-auto order-last md:ml-auto md:mr-2 h-full md:justify-end' });\n  const loginBlockInner = div({ class: 'flex flex-row items-center justify-end md:h-20 gap-2' });\n  const searchLinks = searchHtmlBlock.querySelectorAll(':scope > ul > li > a');\n  const loginLink = searchLinks[0];\n  loginLink.className = 'text-white hover:text-white relative lg:inline-flex text-xs pr-3 font-semibold';\n  const loginIcon = loginLink.querySelector('span');\n  loginIcon.className = '';\n  loginIcon.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\" class=\"w-6 h-6 text-white rounded-full\" data-di-rand=\"1693233993603\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0zM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632z\"/>\n    </svg>\n  `;\n  loginIcon.setAttribute('style', 'filter: brightness(0) invert(1);');\n  const loginSpan = span({ class: 'w-12 pl-2 lg:block hidden lg:inline' }, loginLink.textContent);\n  loginLink.textContent = '';\n  loginLink.append(loginIcon);\n  loginLink.append(loginSpan);\n  const quoteLink = searchLinks[1];\n  quoteLink.className = 'text-white hover:text-white relative lg:inline-flex text-xs pr-3 font-semibold';\n  const quoteIcon = quoteLink.querySelector('span');\n  quoteIcon.className = '';\n  quoteIcon.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\" class=\"w-6 h-6 text-white rounded-full\" data-di-rand=\"1693233993603\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8.625 9.75a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0zm0 0H8.25m4.125 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0zm0 0H12m4.125 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 0 1 .778-.332 48.294 48.294 0 0 0 5.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0 0 12 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z\"/>\n    </svg>\n  `;\n  quoteIcon.setAttribute('style', 'filter: brightness(0) invert(1);');\n  const quoteSpan = span({ class: 'w-12 pl-2 lg:block hidden lg:inline' }, quoteLink.textContent);\n  const quoteCount = span({ class: 'absolute top-4 left-6 text-lightblue-500' }, 0);\n  quoteLink.textContent = '';\n  quoteLink.append(quoteIcon);\n  quoteLink.append(quoteSpan);\n  quoteLink.append(quoteCount);\n  const searchIcon = div({ class: 'search-icon pr-3 md:hidden' });\n  searchIcon.innerHTML = `\n    <svg data-v-7a6a1796=\"\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" class=\"h-6 w-6 text-white\" data-di-rand=\"1694019027553\">\n      <path data-v-7a6a1796=\"\" fill-rule=\"evenodd\" d=\"M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5z\" clip-rule=\"evenodd\"></path>\n    </svg>\n  `;\n  const mobileHomeLink = a({\n    class: 'h-full flex block md:hidden bg-danaherblue-900 py-2.5 px-3 items-center text-base text-white rounded-tr-xl overflow-hidden mr-auto',\n    href: '/',\n  }, 'Life Sciences');\n  loginBlockInner.append(mobileHomeLink);\n  loginBlockInner.append(searchIcon);\n  loginBlockInner.append(loginLink);\n  loginBlockInner.append(quoteLink);\n  loginBlock.append(loginBlockInner);\n  searchHtmlBlockInner.append(loginBlock);\n\n  // search box\n  searchHtmlBlockInner.append(div(\n    { class: 'hidden md:block md:w-1/2 pl-0 md:pl-12 lg:pl-0' },\n    input({\n      type: 'text',\n      placeholder: 'Search',\n      class: 'h-full outline-none w-full grow px-4 py-3.5 text-neutral-dark placeholder-neutral-dark text-lg rounded-md',\n    }),\n  ));\n\n  // aggregation\n  searchNewBlock.append(searchHtmlBlockInner);\n  searchHtmlBlock.innerHTML = searchNewBlock.innerHTML;\n  searchHtmlBlock.querySelector('.search-icon').addEventListener('click', toggleSearchBoxMobile);\n  searchHtmlBlock.querySelector('#nav-hamburger').addEventListener('click', (e) => {\n    e.preventDefault();\n    showFlyoutMenu('Menu');\n  });\n}",
            "score": 0.7674418604651163
        },
        "blocks/header/header.js::buildSearchBlockMobile": {
            "changes_after_merge": 23,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildSearchBlockMobile(headerBlock) {\n  const searchBlockMobile = div(\n    { class: 'mobile-search hidden justify-center w-full bg-danaherblue-900 py-4' },\n    div(\n      { class: 'flex items-center gap-2 md:block mx-6 lg:my-4' },\n      input({\n        type: 'text',\n        placeholder: 'Search',\n        class: 'h-full outline-none w-full grow px-4 py-3.5 text-neutral-dark placeholder-neutral-dark text-lg rounded-md',\n      }),\n      div({ class: 'close', onclick: toggleSearchBoxMobile }),\n    ),\n  );\n  searchBlockMobile.querySelector('div.close').innerHTML = `\n    <svg data-v-7a6a1796=\"\" class=\"w-8 h-8 text-white md:hidden\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n      <path data-v-7a6a1796=\"\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"></path>\n    </svg>\n  `;\n  headerBlock.append(searchBlockMobile);\n}",
            "score": 0.06976744186046502
        },
        "blocks/header/header.js::buildSearchSuggestion": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildSearchSuggestion(searchText, suggestionType) {\n  const searchSuggestion = button(\n    {\n      class: 'suggestion flex px-4 min-h-[40px] items-center text-left cursor-pointer hover:bg-danahergray-100',\n    },\n    div(\n      {\n        class: 'flex items-center',\n      },\n      span({\n        class: 'w-4 h-4 mr-2 shrink-0 search-suggestion-icon',\n      }),\n      span({ class: 'search-suggestion-text break-all line-clamp-2' }),\n    ),\n  );\n  searchSuggestion.querySelector('span.search-suggestion-icon').innerHTML = suggestionType === 'recent'\n    ? `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"currentColor\" fill=\"none\">\n        <circle r=\"7.5\" cy=\"8\" cx=\"8\"></circle><path d=\"m8.5 4.5v4\"></path><path d=\"m10.3066 10.1387-1.80932-1.5768\"></path>\n      </svg>\n    `\n    : `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n        <path d=\"m6.4 0c3.5 0 6.4 2.9 6.4 6.4 0 1.4-.4 2.7-1.2 3.7l4 4c.4.4.4 1 .1 1.5l-.1.1c-.2.2-.5.3-.8.3s-.6-.1-.8-.3l-4-4c-1 .7-2.3 1.2-3.7 1.2-3.4-.1-6.3-3-6.3-6.5s2.9-6.4 6.4-6.4zm0 2.1c-2.3 0-4.3 1.9-4.3 4.3s1.9 4.3 4.3 4.3 4.3-1.9 4.3-4.3-1.9-4.3-4.3-4.3z\"></path>\n      </svg>\n    `;\n  searchSuggestion.querySelector('span.search-suggestion-text').innerHTML = searchText;\n  searchSuggestion.addEventListener('click', async (e) => {\n    const searchInput = e.target.closest('.searchbox').querySelector('input');\n    searchInput.value = e.target.closest('button').querySelector('span.search-suggestion-text').innerText;\n    searchInput.focus();\n    await submitSearchQuery(searchInput.value);\n  });\n  return searchSuggestion;\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/header.js::buildSearchSuggestions": {
            "changes_after_merge": 9,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function buildSearchSuggestions(searchbox) {\n  selectedSuggestionIndex = -1;\n  const searchboxInput = searchbox.querySelector('input');\n  const inputText = searchboxInput.value;\n  const requestPayload = getCoveoApiPayload(inputText);\n  const suggestionsResponseData = await makeCoveoApiRequest('/rest/search/v2/querySuggest', requestPayload);\n  const suggestions = suggestionsResponseData.completions;\n  const wrapper = searchbox.querySelector('.search-suggestions-wrapper');\n  const searchSuggestions = wrapper.querySelector('.search-suggestions');\n  searchSuggestions.innerHTML = '';\n  const recentSearches = getRecentSearches();\n  if (!inputText && recentSearches.length > 0) {\n    const recentSearchesHeading = div(\n      { class: 'flex items-center px-4 py-2 text-danahergrey-900' },\n      span({ class: 'font-bold' }, 'Recent Searches'),\n      button({\n        class: 'ml-auto text-sm hover:text-cyan-600',\n        onclick: () => {\n          localStorage.removeItem('coveo-recent-queries');\n          buildSearchSuggestions(searchbox);\n          searchboxInput.focus();\n        },\n      }, 'Clear'),\n    );\n    searchSuggestions.append(recentSearchesHeading);\n    recentSearches.forEach((recentSearch) => searchSuggestions.append(buildSearchSuggestion(recentSearch, 'recent')));\n  }\n  suggestions.forEach((suggestion) => searchSuggestions.append(\n    buildSearchSuggestion(formatSuggestionString(suggestion.highlighted, inputText)),\n  ));\n}",
            "score": -0.5813953488372092
        },
        "blocks/header/header.js::decorate": {
            "changes_after_merge": 27,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function decorate(block) {\n  const resp = await fetch('/fragments/header/master.plain.html');\n\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // build header DOM\n    const headerBlock = div({ class: 'px-2 md:px-0 bg-danaherblue-600 relative z-20' });\n    headerBlock.innerHTML = html;\n\n    buildLogosBlock(headerBlock);\n    buildSearchBlock(headerBlock);\n    buildNavBlock(headerBlock);\n    buildSearchBlockMobile(headerBlock);\n    buildFlyoutMenus(headerBlock);\n\n    decorateIcons(headerBlock);\n    block.append(headerBlock);\n  }\n  return block;\n}",
            "score": 0.2558139534883721
        },
        "blocks/header/header.js::formatSuggestionString": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function formatSuggestionString(highlightedText, inputText) {\n  return highlightedText.replace(/\\[([^\\]]+)\\]/g, inputText ? '<span class=\"font-bold\">$1</span>' : '$1').replace(/\\{([^}]+)\\}/g, '$1');\n}",
            "score": -1.0
        },
        "blocks/header/header.js::getCoveoApiPayload": {
            "changes_after_merge": 6,
            "file_path": "blocks/header/header.js",
            "merged_function": "function getCoveoApiPayload(searchValue) {\n  const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const userTimestamp = new Date().toISOString();\n  const clientId = getCookie('coveo_visitorId');\n  const searchHistoryString = localStorage.getItem('__coveo.analytics.history');\n  const searchHistory = searchHistoryString ? JSON.parse(searchHistoryString) : [];\n  const payload = {\n    actionsHistory: searchHistory.map(({ time, value, name }) => ({ time, value, name })),\n    analytics: {\n      clientId,\n      clientTimestamp: userTimestamp,\n      documentLocation: window.location.href,\n      documentReferrer: document.referrer,\n      originContext: 'Search',\n    },\n    clientId,\n    clientTimestamp: userTimestamp,\n    originContext: 'Search',\n    count: 8,\n    locale: 'en',\n    pipeline: COVEO_PIPELINE,\n    q: searchValue,\n    searchHub: COVEO_SEARCH_HUB,\n    referrer: document.referrer,\n    timezone: userTimeZone,\n    visitorId: clientId,\n  };\n  return payload;\n}",
            "score": -0.7209302325581395
        },
        "blocks/header/header.js::getMenuIdFromPath": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function getMenuIdFromPath(menuPath) {\n  const menuPathTokens = menuPath.split('|');\n  const menuId = menuPathTokens.join('--').toLowerCase().replace(' ', '-');\n  return menuId;\n}",
            "score": -1.0
        },
        "blocks/header/header.js::getQuote": {
            "changes_after_merge": 4,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function getQuote(headerBlock) {\n  // get the user login state\n\n  const reqHeaders = new Headers();\n  if (localStorage.getItem('authToken')) {\n    reqHeaders.append('Authorization', `Bearer ${localStorage.getItem('authToken')}`);\n  } else if (getCookie('ProfileData')) {\n    const { customerToken } = getCookie('ProfileData');\n    reqHeaders.append('authentication-token', customerToken);\n  } else if (getCookie('apiToken')) {\n    const apiToken = getCookie('apiToken');\n    reqHeaders.append('authentication-token', apiToken);\n  } else if (!refresh) {\n    refresh = true;\n    const formData = 'grant_type=anonymous&scope=openid+profile&client_id=';\n    const authRequest = await fetch(`${baseURL}/token`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: formData,\n    });\n    if (authRequest.ok) {\n      const data = await authRequest.json();\n      const expiresIn = data.expires_in * 1000;\n      setCookie('apiToken', data.access_token, expiresIn, '/');\n      reqHeaders.append('authentication-token', data.access_token);\n      localStorage.setItem('refreshToken', data.refresh_token);\n    }\n  }\n\n  if (reqHeaders.has('authentication-token') || reqHeaders.has('Authorization')) {\n    const quoteRequest = await fetch(`${baseURL}/rfqcart/-`, { headers: reqHeaders });\n    if (quoteRequest.ok) {\n      const data = await quoteRequest.json();\n      if (data && data.items) {\n        const rfqQuantity = data.items.length;\n        if (rfqQuantity !== 0) {\n          const quantityElement = headerBlock.querySelector('a.quote span.quantity');\n          if (quantityElement) quantityElement.textContent = rfqQuantity;\n          const dotElement = headerBlock.querySelector('a.quote span.dot');\n          if (dotElement) dotElement.classList.remove('hidden');\n        }\n      }\n    } else if (quoteRequest.status !== 404) {\n      // eslint-disable-next-line no-console\n      console.warn('Failed to load quote cart');\n    }\n  }\n}",
            "score": -0.813953488372093
        },
        "blocks/header/header.js::getRecentSearches": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function getRecentSearches() {\n  const recentSearchesString = localStorage.getItem('coveo-recent-queries');\n  const recentSearches = recentSearchesString ? JSON.parse(recentSearchesString) : [];\n  return recentSearches;\n}",
            "score": -1.0
        },
        "blocks/header/header.js::getSearchInput": {
            "changes_after_merge": 21,
            "file_path": "blocks/header/header.js",
            "merged_function": "function getSearchInput() {\n  return input({\n    type: 'text',\n    placeholder: 'Search',\n    class: 'h-full outline-none w-full grow px-4 py-3.5 text-neutral-dark placeholder-neutral-dark text-lg rounded-md',\n  });\n}",
            "score": -0.023255813953488413
        },
        "blocks/header/header.js::getUser": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function getUser() {\n  if (isLoggedInUser()) {\n    return { fname: getCookie('first_name'), lname: getCookie('last_name') };\n  }\n  return undefined;\n}",
            "score": -1.0
        },
        "blocks/header/header.js::handleKeyNavigation": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header.js",
            "merged_function": "handleKeyNavigation = () => {\n      searchInput.value = suggestionChildren[selectedSuggestionIndex].querySelector('span.search-suggestion-text').innerText;\n      setTimeout(() => {\n        searchInput.selectionStart = searchInput.value.length;\n        searchInput.selectionEnd = searchInput.value.length;\n        handleSearchClear(searchbox, searchInput);\n      }, 100);\n      suggestionChildren.forEach((suggestionItem, idx) => {\n        suggestionItem.classList.toggle('selected', idx === selectedSuggestionIndex);\n      });\n    }",
            "score": -0.8604651162790697
        },
        "blocks/header/header.js::handleScroll": {
            "changes_after_merge": 11,
            "file_path": "blocks/header/header.js",
            "merged_function": "function handleScroll() {\n  if (window.pageYOffset >= 95) {\n    document.getElementById('sticky-header').classList.add('fixed', 'inset-x-0', 'top-0', 'w-full');\n    document.getElementById('sticky-header').classList.replace('bg-danaherblue-600', 'bg-danaherblue-900');\n    document.getElementById('sticky-header').firstElementChild.classList.add('bg-danaherblue-600');\n    document.getElementById('nav-hamburger').classList.remove('lg:hidden');\n    document.getElementById('nav-hamburger').nextElementSibling.classList.add('md:h-20', 'justify-between');\n    document.getElementById('opco-title').classList.remove('lg:hidden');\n    document.getElementById('opco-title').parentElement.classList.remove('lg:bg-danaherblue-600');\n  } else if (window.pageYOffset < 95) {\n    document.getElementById('sticky-header').classList.remove('fixed', 'inset-x-0', 'top-0', 'w-full');\n    document.getElementById('sticky-header').classList.replace('bg-danaherblue-900', 'bg-danaherblue-600');\n    document.getElementById('sticky-header').firstElementChild.classList.remove('bg-danaherblue-600');\n    document.getElementById('nav-hamburger').classList.add('lg:hidden');\n    document.getElementById('nav-hamburger').nextElementSibling.classList.remove('md:h-20', 'justify-between');\n    document.getElementById('opco-title').classList.add('lg:hidden');\n    document.getElementById('opco-title').parentElement.classList.add('lg:bg-danaherblue-600');\n  }\n}",
            "score": -0.4883720930232558
        },
        "blocks/header/header.js::handleSearchClear": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function handleSearchClear(searchBox, searchInput) {\n  const clearIcon = searchBox.querySelector('.searchbox-clear');\n  if (searchInput.value) {\n    clearIcon.classList.remove('hidden');\n  } else {\n    clearIcon.classList.add('hidden');\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::handleSearchInput": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function handleSearchInput(e) {\n  const { target } = e;\n  const searchBox = target.closest('.searchbox');\n  handleSearchClear(searchBox, target);\n  await buildSearchSuggestions(searchBox);\n}",
            "score": -1.0
        },
        "blocks/header/header.js::hideFlyoutMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function hideFlyoutMenu(e) {\n  e.preventDefault();\n  const { target } = e;\n  target.closest('.menu-flyout').classList.add('hidden');\n}",
            "score": -1.0
        },
        "blocks/header/header.js::makeCoveoApiRequest": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function makeCoveoApiRequest(path, payload = {}) {\n  const accessToken = window.DanaherConfig !== undefined\n    ? window.DanaherConfig.searchKey\n    : 'xx2a2e7271-78c3-4e3b-bac3-2fcbab75323b';\n  const organizationId = window.DanaherConfig !== undefined\n    ? window.DanaherConfig.searchOrg\n    : 'danahernonproduction1892f3fhz';\n  const resp = await fetch(`https://${organizationId}.org.coveo.com${path}?organizationId=${organizationId}`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${accessToken}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  });\n  const jsonData = await resp.json();\n  return jsonData;\n}",
            "score": -1.0
        },
        "blocks/header/header.js::setRecentSearches": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function setRecentSearches(searchValue) {\n  const recentSearches = getRecentSearches();\n  const searchValueIndex = recentSearches.findIndex((search) => search === searchValue);\n  if (searchValueIndex > -1) recentSearches.splice(searchValueIndex, 1);\n  recentSearches.unshift(searchValue);\n  localStorage.setItem('coveo-recent-queries', JSON.stringify(recentSearches.slice(0, COVEO_MAX_RECENT_SEARCHES)));\n}",
            "score": -1.0
        },
        "blocks/header/header.js::shortName": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function shortName(user) {\n  if (user) {\n    return `${user.fname[0].toUpperCase()}${user.lname[0].toUpperCase()}`;\n  }\n  return '';\n}",
            "score": -1.0
        },
        "blocks/header/header.js::showFlyoutMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function showFlyoutMenu(menuPath) {\n  const menuId = getMenuIdFromPath(menuPath);\n  const menuEl = document.getElementById(menuId);\n  menuEl.classList.remove('hidden');\n}",
            "score": -1.0
        },
        "blocks/header/header.js::submitSearchQuery": {
            "changes_after_merge": 19,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function submitSearchQuery(searchTerm) {\n  let searchLocation = 'https://lifesciences.danaher.com/us/en/search.html';\n  if (searchTerm) {\n    const requestPayload = getCoveoApiPayload(searchTerm);\n    requestPayload.analytics.actionCause = 'searchboxSubmit';\n    await makeCoveoApiRequest('/rest/search/v2', requestPayload);\n    setRecentSearches(searchTerm);\n    searchLocation = `${searchLocation}#q=${encodeURIComponent(searchTerm)}`;\n  }\n  window.location = searchLocation;\n}",
            "score": -0.11627906976744184
        },
        "blocks/header/header.js::toggleSearchBoxMobile": {
            "changes_after_merge": 4,
            "file_path": "blocks/header/header.js",
            "merged_function": "function toggleSearchBoxMobile(e) {\n  e.preventDefault();\n  const searchBox = document.querySelector('.mobile-search');\n  searchBox.classList.toggle('hidden');\n  if (!searchBox.classList.contains('hidden')) searchBox.querySelector('input').focus();\n}",
            "score": -0.813953488372093
        },
        "blocks/hero/hero.js::buildVideoModal": {
            "changes_after_merge": 1,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "buildVideoModal = async (href) => {\n  await loadScript('https://player.vimeo.com/api/player.js');\n  const videoClose = button({ class: 'place-self-end', 'aria-label': 'close' });\n  videoClose.innerHTML = `<svg data-v-26c7660b=\"\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n    viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" aria-hidden=\"true\" class=\"h-12 w-12\n    font-extrabold text-white rounded-xl\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"></path>\n    </svg>`;\n  const videoContent = div({ class: 'relative overflow-hidden max-w-full pb-[56.25%]', id: 'vimeo-player' });\n  let playerSize = window.innerWidth - 50;\n  if (window.innerWidth > 760) playerSize = window.innerWidth - 350;\n  const options = {\n    id: getVimeoDescriptor(href).id,\n    width: playerSize,\n    loop: true,\n  };\n\n  // eslint-disable-next-line no-undef\n  const player = new Vimeo.Player(videoContent, options);\n  player.setVolume(1);\n\n  const videoContainer = div(\n    { class: 'flex flex-col' },\n    videoClose,\n    div({ class: 'bg-transparent p-2 rounded' }, videoContent),\n  );\n  const videoModal = div(\n    {\n      class:\n        'video-modal hidden fixed inset-0 bg-black/25 backdrop-brightness-50 flex item-center justify-center overflow-hidden z-50',\n      'aria-modal': 'true',\n      role: 'dialog',\n      onclick: toggleVideoOverlay,\n    },\n    videoContainer,\n  );\n\n  return videoModal;\n}",
            "score": -0.9534883720930233
        },
        "blocks/hero/hero.js::decorate": {
            "changes_after_merge": 10,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function decorate(block) {\n  const img = block.querySelector('img');\n  const imgWrapper = img.parentElement;\n  const content = block.querySelector('div > div > div:nth-child(2)');\n  img.closest('div.block').prepend(img);\n  imgWrapper.remove();\n\n  // add video overlay\n  const videoButton = content.querySelector('a');\n  if (videoButton && videoButton.href.indexOf('player.vimeo.com/') > -1) {\n    videoButton.addEventListener('click', async (e) => {\n      e.preventDefault();\n      const modal = block.querySelector(videoModalSelector);\n      if (!modal && videoButton.href) {\n        const videoModal = await buildVideoModal(videoButton.href);\n        block.append(videoModal);\n      }\n      toggleVideoOverlay();\n    });\n  }\n\n  // decorate styles\n  const contentWrapper = content.parentElement;\n  const heroNumber = content.querySelector('strong');\n  const heading = contentWrapper.querySelector('h2');\n  const text = contentWrapper.querySelector('p');\n  block.classList.add('relative', 'w-full');\n  img.className = 'h-72 w-full md:h-full object-cover z-50';\n  contentWrapper.className = 'absolute top-0 left-0 w-full';\n  content.className = 'relative mx-auto max-w-7xl mt-8 md:mt-16 p-4 md:p-6 z-10';\n  heroNumber.className = 'mb-1 lg:mb-8 font-normal text-6xl lg:text-[11rem] leading-none font-fort';\n  heading.className = 'mb-1 font-semibold tracking-wide text-2xl font-fort';\n  text.className = 'mb-2 max-w-sm text-2xl font-fort text-gray-600';\n  videoButton.className = 'btn bg-transparent rounded-lg md:px-8 border border-purple-200 hover:text-white hover:bg-purple-200 text-purple-200 md:btn-lg';\n}",
            "score": -0.5348837209302326
        },
        "blocks/hero/hero.js::getVimeoDescriptor": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "getVimeoDescriptor = (href) => {\n  const descriptor = href.replace('https://player.vimeo.com/video/', '');\n  const descriptorParts = descriptor.split('?');\n  if (descriptorParts.length === 2) {\n    return {\n      id: descriptorParts[0],\n      params: descriptorParts[1],\n    };\n  }\n  if (descriptorParts.length === 1) {\n    return {\n      id: descriptorParts[0],\n    };\n  }\n  return null;\n}",
            "score": -1.0
        },
        "blocks/hero/hero.js::removeVideoOverlay": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "removeVideoOverlay = () => {\n  const modal = document.querySelector(videoModalSelector);\n  modal?.remove();\n}",
            "score": -1.0
        },
        "blocks/hero/hero.js::toggleVideoOverlay": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "toggleVideoOverlay = () => {\n  const modal = document.querySelector(videoModalSelector);\n  modal?.classList.toggle('hidden');\n}",
            "score": -1.0
        },
        "blocks/logo-clouds/logo-clouds.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/logo-clouds/logo-clouds.js",
            "merged_function": "function decorate(block) {\n  const mainContainer = div({ class: MAIN_CONTAINER_CLASS });\n\n  const leftContainer = div();\n  const rightContainer = div({ class: RIGHT_CONTAINER_CLASS });\n\n  organizeChildren(block, leftContainer, rightContainer);\n\n  mainContainer.appendChild(leftContainer);\n  mainContainer.appendChild(rightContainer);\n\n  block.classList.add('flex', 'justify-center', 'items-center');\n  block.appendChild(mainContainer);\n}",
            "score": -1.0
        },
        "blocks/logo-clouds/logo-clouds.js::organizeChildren": {
            "changes_after_merge": 0,
            "file_path": "blocks/logo-clouds/logo-clouds.js",
            "merged_function": "function organizeChildren(block, leftContainer, rightContainer) {\n  const children = [...block.children];\n\n  if (children.length === 0) {\n    return;\n  }\n\n  leftContainer.appendChild(styleForLeftContainer(children[0]));\n\n  children.slice(1).forEach((row) => {\n    styleRowForRightContainer(row);\n    rightContainer.appendChild(row);\n  });\n}",
            "score": -1.0
        },
        "blocks/logo-clouds/logo-clouds.js::styleForLeftContainer": {
            "changes_after_merge": 4,
            "file_path": "blocks/logo-clouds/logo-clouds.js",
            "merged_function": "function styleForLeftContainer(element) {\n  element.className = 'content-visibility mx-auto my-2 max-w-7xl';\n  element.firstElementChild.className = 'relative grid items-center grid-cols-1 py-4 mx-auto gap-x-6';\n  return element;\n}",
            "score": -0.813953488372093
        },
        "blocks/logo-clouds/logo-clouds.js::styleRowForRightContainer": {
            "changes_after_merge": 1,
            "file_path": "blocks/logo-clouds/logo-clouds.js",
            "merged_function": "function styleRowForRightContainer(row) {\n  row.className = 'col-span-1 flex justify-center py-8 px-8 rounded-xl border-2 border-transparent bg-white';\n  row.querySelector('img').className = 'h-12 transform transition duration-500 hover:scale-105';\n\n  const anchor = row.querySelector('a');\n  anchor.className = '';\n  anchor.innerHTML = '';\n  anchor.appendChild(row.firstElementChild);\n}",
            "score": -0.9534883720930233
        },
        "blocks/mini-teasers/mini-teasers.js::decorate": {
            "changes_after_merge": 9,
            "file_path": "blocks/mini-teasers/mini-teasers.js",
            "merged_function": "function decorate(block) {\n  block.parentNode.prepend(document.createElement('hr'));\n  block.classList.add(...'grid max-w-7xl w-full mx-auto gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 px-4 sm:px-0 my-16'.split(' '));\n  [...block.children].forEach((element) => {\n    element.classList.add(...'items-start mr-20 lg:mr-56'.split(' '));\n    element.querySelector('img')?.classList.add('py-1');\n    element.querySelector('h3')?.classList.add(...'text-base p-0 my-1 sm:text-sm font-normal'.split(' '));\n    const link = element.querySelector('a');\n    if (link) {\n      link.innerHTML += ' ->';\n      link.classList.add(...'text-sm font-medium text-danaherpurple-500'.split(' '));\n      if (link.href.endsWith('#RequestAQuote')) link.classList.add('show-modal-btn');\n    }\n  });\n  block.parentNode.append(document.createElement('hr'));\n  block.parentNode.classList.add('py-6');\n  decorateModals(block);\n}",
            "score": -0.5813953488372092
        },
        "blocks/product-category-list/filter.js::createFilters": {
            "changes_after_merge": 7,
            "file_path": "blocks/product-category-list/filter.js",
            "merged_function": "createFilters = (items, activeTag, tagName) => {\n  // collect tag filters\n  const allTags = items.map((item) => item[tagName].replace(/,\\s*/g, ',').split(','));\n  const filterTags = new Set([].concat(...allTags));\n  filterTags.delete('');\n  filterTags.delete('Blog'); // filter out generic blog tag\n  filterTags.delete('News'); // filter out generic news tag\n  // render tag cloud\n  const newUrl = new URL(window.location);\n  newUrl.searchParams.delete('tag');\n  newUrl.searchParams.delete('page');\n  const tags = div(\n    { class: 'flex flex-wrap gap-2 mt-10 mb-4' },\n    a(\n      {\n        class:\n            'text-center my-2 inline-block rounded-full px-4 py-1 text-sm font-bold bg-d text-danaherpurple-500 bg-danaherpurple-50 hover:bg-gray-100 hover:text-gray-500',\n        href: newUrl.toString(),\n      },\n      'View All',\n    ),\n  );\n  [...filterTags].sort().forEach((tag) => {\n    newUrl.searchParams.set('tag', toClassName(tag).toLowerCase());\n    const tagAnchor = a(\n      {\n        class:\n            'text-center my-2 inline-block rounded-full px-4 py-1 text-sm font-bold bg-d hover:bg-gray-100 hover:text-gray-500',\n        href: newUrl.toString(),\n      },\n      tag,\n    );\n    if (toClassName(tag).toLowerCase() === activeTag) {\n      tagAnchor.classList.add('bg-danaherpurple-500', 'text-white');\n      tagAnchor.setAttribute('aria-current', 'tag');\n    } else {\n      tagAnchor.classList.add('text-danaherpurple-500', 'bg-danaherpurple-50');\n    }\n    tags.append(tagAnchor);\n  });\n  return tags;\n}",
            "score": -0.6744186046511628
        },
        "blocks/product-category-list/product-category-list.js::createCard": {
            "changes_after_merge": 11,
            "file_path": "blocks/product-category-list/product-category-list.js",
            "merged_function": "function createCard(product, firstCard = false) {\n  const cardWrapper = a(\n    { href: makePublicUrl(product.path), title: product.title },\n    imageHelper(product.image, product.title, firstCard),\n    h4(\n      {\n        class: '!text-sm !font-normal !text-danahergray-900 !break-words !h-16',\n      },\n      product.title,\n      span({ class: 'text-lg font-semibold text-danaherpurple-500' }, ' \u2192'),\n    ),\n  );\n  const card = li({\n    class:\n        'w-52 lg:w-40 h-52 flex flex-col col-span-1 relative mx-auto justify-center transform transition duration-500 border-l-0-5 border-black hover:scale-105 overflow-hidden bg-white max-w-xl pl-6 pr-6 lg:pr-0',\n  }, cardWrapper);\n  card.querySelector('img').className = 'mb-2 h-24 w-full object-cover';\n  return card;\n}",
            "score": -0.4883720930232558
        },
        "blocks/product-category-list/product-category-list.js::createOpcoCard": {
            "changes_after_merge": 5,
            "file_path": "blocks/product-category-list/product-category-list.js",
            "merged_function": "function createOpcoCard(product, firstCard = false) {\n  const cardWrapper = a(\n    { href: makePublicUrl(product.path), title: product.title },\n    imageHelper(product.image, product.title, firstCard),\n    h4(\n      {\n        class: '!text-sm !font-normal !text-danahergray-900 !break-words !h-16',\n      },\n      product.title,\n      span({ class: 'text-lg font-semibold text-danaherpurple-500' }, ' \u2192'),\n    ),\n  );\n  const card = li({\n    class:\n        'h-52 flex flex-col col-span-1 relative mx-auto justify-center transform transition duration-500 hover:scale-105 overflow-hidden bg-white max-w-xl pl-6 pr-6 lg:pl-0 lg:pr-0',\n  }, cardWrapper);\n  card.querySelector('img').className = 'mb-2 h-24 w-full object-cover';\n  return card;\n}",
            "score": -0.7674418604651163
        },
        "blocks/product-category-list/product-category-list.js::decorate": {
            "changes_after_merge": 10,
            "file_path": "blocks/product-category-list/product-category-list.js",
            "merged_function": "async function decorate(block) {\n  block.parentElement.parentElement.classList.add('!pb-0');\n\n  let products = await ffetch('/us/en/products-index.json')\n    .filter(({ fullCategory }) => fullCategory.split('|').length === 1)\n    .filter(({ fullCategory }) => fullCategory !== '')\n    .filter(({ path }) => !path.includes('/topics'))\n    .filter(({ path }) => !path.includes('/product-coveo'))\n    .filter(({ path }) => !path.includes('/brands'))\n    .all();\n\n  const activeTagFilter = getSelectionFromUrl('tag');\n  let filteredProducts = products;\n  products = products.sort((item1, item2) => item1.title.localeCompare(item2.title));\n  if (activeTagFilter) {\n    filteredProducts = products.filter(\n      (item) => toClassName(item.brand).toLowerCase().indexOf(activeTagFilter) > -1,\n    );\n  }\n\n  const cardList = ul({\n    class:\n          'container grid max-w-7xl w-full mx-auto gap-6 grid-cols-1 sm:grid-cols-3 lg:grid-cols-6 px-4 py-4 sm:px-0 justify-items-center mt-3 mb-3',\n  });\n\n  filteredProducts.forEach((product, index) => {\n    cardList.append(createCard(product, index === 0));\n  });\n  const filterTags = createFilters(products, activeTagFilter, 'brand');\n  block.textContent = '';\n  block.append(filterTags, cardList);\n}",
            "score": -0.5348837209302326
        },
        "blocks/product-category-list/product-category-list.js::getSelectionFromUrl": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-category-list/product-category-list.js",
            "merged_function": "getSelectionFromUrl = (field) => toClassName(new URLSearchParams(window.location.search).get(field)) || ''",
            "score": -1.0
        },
        "blocks/product-category/product-category.js::createCard": {
            "changes_after_merge": 3,
            "file_path": "blocks/product-category/product-category.js",
            "merged_function": "function createCard(product, firstCard = false) {\n  const cardWrapper = a(\n    { href: makePublicUrl(product.path), title: product.title },\n    imageHelper(product.image, product.title, firstCard),\n    h2(\n      {\n        class: '!px-7 !text-lg !font-semibold !text-danahergray-900 !line-clamp-3 !break-words !h-14',\n      },\n      product.title,\n    ),\n    p({ class: '!px-7 mb-4 text-sm text-gray-900 break-words line-clamp-4 !h-20' }, product.description),\n    div(\n      { class: 'inline-flex items-center w-full px-6 py-5 space-x-4 bg-gray-100' },\n      span({ class: 'btn-primary-purple border-8 px-2 !rounded-full' }, 'View Products'),\n    ),\n  );\n  return li({\n    class:\n        'w-full flex flex-col col-span-1 relative mx-auto justify-center transform transition duration-500 border hover:scale-105 shadow-lg rounded-lg overflow-hidden bg-white max-w-xl',\n  }, cardWrapper);\n}",
            "score": -0.8604651162790697
        },
        "blocks/product-category/product-category.js::decorate": {
            "changes_after_merge": 8,
            "file_path": "blocks/product-category/product-category.js",
            "merged_function": "async function decorate(block) {\n  const category = getMetadata('category');\n\n  let products = await ffetch('/us/en/products-index.json')\n    .filter(({ parentCategory }) => parentCategory.toLowerCase() === category.toLowerCase())\n    .all();\n\n  products = products.sort((item1, item2) => item1.title.localeCompare(item2.title));\n\n  const cardList = ul({\n    class:\n          'container grid max-w-7xl w-full mx-auto gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 px-4 py-4 sm:px-0 justify-items-center mt-3 mb-3',\n  });\n\n  products.forEach((product, index) => {\n    cardList.append(createCard(product, index === 0));\n  });\n\n  block.textContent = '';\n  if (products.length <= 0) {\n    document.getElementById('categories').remove();\n    return;\n  }\n  block.append(cardList);\n}",
            "score": -0.627906976744186
        },
        "blocks/recent-articles/recent-articles.js::decorate": {
            "changes_after_merge": 35,
            "file_path": "blocks/recent-articles/recent-articles.js",
            "merged_function": "async function decorate(block) {\n  let blogs = await ffetch('/us/en/query-index.json')\n    .all();\n\n  blogs = blogs.sort((item1, item2) => item2.publishDate - item1.publishDate).slice(0, 6);\n  block.innerHTML = '';\n  const divEl = div(\n    { class: 'article-summary-heading flex justify-between items-center m-2 mt-0 p-2 border-b-2' },\n    div({ class: 'text-xl font-bold tracking-tight text-danahergray-900 sm:text-xl' }, 'Recent Articles'),\n    a({ class: 'text-xs text-danaherblue-600 hover:font-bold', href: '/us/en/blog' }, 'View All'),\n  );\n  block.append(divEl);\n\n  const ulEl = ul({ class: 'article-summary-body space-y-2 px-2' });\n  blogs.forEach((blog) => {\n    const liEl = li(\n      { class: 'mb-0.5 py-4 px-1.5 border-b border-dashed rounded transition transform hover:bg-gray-50 hover:scale-95' },\n      a(\n        { class: 'text-xs text-danaherblue-600', href: blog.path },\n        p({ class: 'text-sm font-medium text-danahergray-500 pb-2' }, blog.title),\n        p(\n          { class: 'flex justify-between items-center' },\n          span({ class: 'text-xs text-danahergray-500' }),\n          span({ class: 'flex items-center text-xs font-bold text-danaherblue-600', id: 'read-article' }),\n        ),\n      ),\n    );\n    liEl.querySelector('#read-article').innerHTML = `Read Article <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" class=\"w-4 h-4 ml-0.5\" data-di-res-id=\"e64c7d67-741d6760\" data-di-rand=\"1697538734744\">\n        <path fill-rule=\"evenodd\" d=\"M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z\" clip-rule=\"evenodd\"></path>\n        </svg>`;\n    ulEl.append(liEl);\n  });\n  block.append(ulEl);\n  console.log(blogs);\n}",
            "score": 0.627906976744186
        },
        "blocks/related-articles/related-articles.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/related-articles/related-articles.js",
            "merged_function": "async function decorate(block) {\n  const articleType = getMetadata('template').toLowerCase();\n  const articleKeyword = getMetadata('keywords')?.toLowerCase();\n  const url = new URL(getMetadata('og:url'));\n  let articles = await ffetch('/us/en/article-index.json')\n    .filter(({ type }) => type.toLowerCase() === articleType)\n    .filter(({ keywords }) => keywords.toLowerCase() === articleKeyword)\n    .filter((article) => url.pathname !== article.path)\n    .all();\n\n  articles = articles.sort((item1, item2) => item2.publishDate - item1.publishDate).slice(0, 2);\n\n  const cardList = ul({\n    class:\n          'container grid max-w-7xl w-full mx-auto gap-6 grid-cols-1 sm:grid-cols-1 lg:grid-cols-2 px-3 sm:px-0 justify-items-center mt-3 mb-3',\n  });\n  articles.forEach((article, index) => {\n    cardList.appendChild(createCard(article, index === 0));\n  });\n  block.textContent = '';\n  const spanEl = articles.length > 0 ? span({ class: 'text-lg font-semibold' }, 'You may be interested in') : '';\n  block.append(spanEl, cardList);\n}",
            "score": -0.9534883720930233
        },
        "blocks/side-nav/side-nav.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/side-nav/side-nav.js",
            "merged_function": "async function decorate(block) {\n  let sideNavItems = [];\n  let sideNavTitle = 'Side Navigation';\n  let selectedNavItem = null;\n  let sideNavElements = div();\n  if (block.classList.contains('topics')) {\n    const category = getMetadata('fullcategory');\n    sideNavItems = await fetchTopicsForCategory(category);\n    const categoryObj = await ffetch('/us/en/products-index.json')\n      .filter(({ path }) => path === `/us/en/products/${category}`)\n      .first();\n    sideNavTitle = categoryObj?.title || category || sideNavTitle;\n  } else if (block.classList.contains('products')) {\n    sideNavItems = await fetchAllProductCategories();\n    sideNavTitle = 'Products';\n  }\n  sideNavElements = renderSideNav(sideNavItems);\n  selectedNavItem = sideNavElements.querySelector(`.side-nav-item a[href=\"${window.location.pathname}\"]`)?.closest('.side-nav-item');\n  if (selectedNavItem) selectedNavItem.classList.add('font-bold', 'bg-danaherpurple-50', 'hover:bg-danaherpurple-50', 'rounded-md');\n  block.append(div({ class: 'text-lg px-5 py-4' }, strong(sideNavTitle)), sideNavElements);\n  block.classList.add('pt-6', 'pr-2');\n  return block;\n}",
            "score": -1.0
        },
        "blocks/side-nav/side-nav.js::fetchAllProductCategories": {
            "changes_after_merge": 0,
            "file_path": "blocks/side-nav/side-nav.js",
            "merged_function": "async function fetchAllProductCategories() {\n  const topicHubs = await ffetch('/us/en/products-index.json')\n    .filter(({ type }) => type === 'TopicHub')\n    .all();\n  return topicHubs.sort((item1, item2) => item1.title.localeCompare(item2.title));\n}",
            "score": -1.0
        },
        "blocks/side-nav/side-nav.js::renderSideNav": {
            "changes_after_merge": 0,
            "file_path": "blocks/side-nav/side-nav.js",
            "merged_function": "function renderSideNav(sideNavItems) {\n  const sideNavElements = div({ class: 'flex flex-col items-start' });\n  sideNavItems.forEach((sideNavItem) => {\n    sideNavElements.append(div(\n      {\n        class: 'w-full side-nav-item hover:bg-danaherpurple-25 hover:rounded-md',\n      },\n      div(\n        {\n          class: 'flex gap-3',\n        },\n        a({\n          class: 'px-6 py-2 text-base',\n          href: makePublicUrl(sideNavItem.path),\n        }, sideNavItem.title),\n      ),\n    ));\n  });\n  return sideNavElements;\n}",
            "score": -1.0
        },
        "blocks/social-media/social-media.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/social-media/social-media.js",
            "merged_function": "function decorate(block) {\n  block.innerHTML = social;\n  decorateIcons(block);\n}",
            "score": -0.9069767441860466
        },
        "blocks/social-media/social-media.js::goBack": {
            "changes_after_merge": 0,
            "file_path": "blocks/social-media/social-media.js",
            "merged_function": "function goBack() {\n  const backArr = window.location.pathname.split('/');\n  const backNavigationPath = backArr.slice(0, (backArr.length - 1)).join('/');\n  window.location.href = backNavigationPath;\n}",
            "score": -1.0
        },
        "blocks/table/table.js::buildCell": {
            "changes_after_merge": 2,
            "file_path": "blocks/table/table.js",
            "merged_function": "function buildCell(rowIndex) {\n  const cell = rowIndex ? td({ class: 'text-left text-gray-900' }) : th({ class: 'text-left text-gray-900 font-normal' });\n  if (!rowIndex) cell.setAttribute('scope', 'col');\n  return cell;\n}",
            "score": -0.9069767441860466
        },
        "blocks/table/table.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/table/table.js",
            "merged_function": "async function decorate(block) {\n  const t = table({\n    class: 'w-full max-w-full',\n    cellpadding: 1,\n    cellspacing: 0,\n    border: 1,\n  });\n  const head = thead();\n  const body = tbody();\n  t.append(head, body);\n  [...block.children].forEach((child, i) => {\n    const row = tr();\n    if (i) body.append(row);\n    else head.append(row);\n    [...child.children].forEach((col) => {\n      const cell = buildCell(i);\n      cell.innerHTML = col.innerHTML;\n      row.append(cell);\n    });\n  });\n  block.innerHTML = '';\n  block.classList.add('w-full', 'overflow-x-auto');\n  block.append(t);\n}",
            "score": -0.9534883720930233
        },
        "blocks/takeway/takeway.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/takeway/takeway.js",
            "merged_function": "function decorate(block) {\n  block.classList.add(...'mb-20 bg-danaherpurple-50 border-t-8 border-danaherpurple-500 px-6 lg:px-10 py-6 space-y-4 leading-7 text-base text-danahergray-700'.split(' '));\n}",
            "score": -1.0
        },
        "blocks/testimonial/testimonial.js::decorate": {
            "changes_after_merge": 6,
            "file_path": "blocks/testimonial/testimonial.js",
            "merged_function": "async function decorate(block) {\n  const buildQuote = div(span({ class: 'icon icon-quote' }));\n  block.querySelector('.testimonial').classList.add('py-6');\n  decorateIcons(buildQuote);\n  buildQuote.firstChild.classList.add('absolute', 'top-16', 'left-28', 'text-indigo-200', 'w-36', 'h-36', '-translate-x-8', '-translate-y-24', 'transform', 'opacity-50');\n  const image = block.querySelector('img');\n  const imagecopy = image ? img({ src: image?.src, class: 'rounded-full h-16 w-16' }) : null;\n  if (image) {\n    block.classList.add('has-image');\n    image.classList.add('main-image');\n  }\n  const divElem = block.querySelector('.testimonial .testimonial > div');\n  const footerElem = div(\n    { class: 'flex testimonial-footer' },\n    imagecopy || '',\n    div({ class: 'flex flex-col' }, divElem?.querySelectorAll('div')[image ? 2 : 1] ? divElem?.querySelectorAll('div')[image ? 2 : 1] : '', divElem?.querySelectorAll('div')[image ? 3 : 2] ? divElem?.querySelectorAll('div')[image ? 3 : 2] : ''),\n  );\n  divElem?.querySelectorAll('div')[image ? 1 : 0]?.append(footerElem);\n  divElem?.querySelectorAll('div')[image ? 1 : 0]?.append(buildQuote);\n}",
            "score": -0.7209302325581395
        },
        "blocks/topic-list/topic-list.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/topic-list/topic-list.js",
            "merged_function": "async function decorate(block) {\n  const topics = await fetchTopicsForCategory();\n  block.classList.add('pt-10', 'pb-10');\n  block.append(hr({ class: 'h-1 bg-black' }));\n  const topicCards = div({ class: 'flex flex-col items-start' });\n\n  topics.forEach((topic) => {\n    topicCards.append(div(\n      {\n        class: 'w-full',\n      },\n      div(\n        {\n          class: 'flex gap-3 py-9',\n        },\n        h2({ class: 'text-xl' }, topic.title),\n        a({\n          class: 'rounded-full px-6 py-3 ml-auto btn-outline-trending-brand text-base',\n          href: makePublicUrl(topic.path),\n        }, 'Read Topic'),\n      ),\n      hr(),\n    ));\n  });\n  block.append(topicCards);\n}",
            "score": -0.8604651162790697
        },
        "blocks/topic-list/topic-list.js::fetchTopicsForCategory": {
            "changes_after_merge": 2,
            "file_path": "blocks/topic-list/topic-list.js",
            "merged_function": "async function fetchTopicsForCategory() {\n  const category = getMetadata('fullcategory');\n  if (!category) return [];\n  const topics = await ffetch('/us/en/products-index.json')\n    .filter(({ fullCategory, type }) => fullCategory === category && type === 'Topic')\n    .all();\n  return topics.sort((item1, item2) => item2.lastModified - item1.lastModified);\n}",
            "score": -0.9069767441860466
        },
        "blocks/we-see/we-see.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/we-see/we-see.js",
            "merged_function": "async function decorate(block) {\n  const url = block.querySelector('a').href;\n  if (new URL(url).origin !== window.location.origin) {\n    block.innerHTML = '<p>Cannot use unsafe cross-origin reference for the HTML Snippets.<p>';\n    return;\n  }\n\n  if (!url) {\n    block.textContent = '';\n    // eslint-disable-next-line no-console\n    console.warn('no snippet found');\n    return;\n  }\n\n  try {\n    // get the content\n    const fragment = await getFragmentFromFile(url);\n    block.innerHTML = fragment;\n\n    // prepare the animations\n    await loadScript('https://unpkg.com/scroll-out/dist/scroll-out.min.js');\n    // eslint-disable-next-line no-undef\n    ScrollOut({\n      // eslint-disable-next-line func-names, object-shorthand\n      onShown: function (el) {\n        const ani = el.getAttribute('data-animation');\n        el.classList.remove(ani);\n        // eslint-disable-next-line no-void\n        void el.offsetWidth;\n        el.classList.add(ani);\n      },\n    });\n  } catch (e) {\n    block.textContent = '';\n    // eslint-disable-next-line no-console\n    console.warn(`cannot load snippet at ${url}: ${e}`);\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/we-see/we-see.js::getFragmentFromFile": {
            "changes_after_merge": 0,
            "file_path": "blocks/we-see/we-see.js",
            "merged_function": "async function getFragmentFromFile(fragmentURL) {\n  const response = await fetch(fragmentURL);\n  if (!response.ok) {\n    // eslint-disable-next-line no-console\n    console.error('error loading fragment details', response);\n    return null;\n  }\n  const text = await response.text();\n  if (!text) {\n    // eslint-disable-next-line no-console\n    console.error('fragment details empty', fragmentURL);\n    return null;\n  }\n  return text;\n}",
            "score": -1.0
        },
        "scripts/Carousel.js::Carousel": {
            "changes_after_merge": 1,
            "file_path": "scripts/Carousel.js",
            "merged_function": "function Carousel(carouselEl, items, options) {\n  /**\n   * Clears the cycling interval\n   */\n  const pause = () => clearInterval(this._intervalInstance);\n\n  /**\n   * Get the currently active item\n  */\n  const getActiveItem = () => this._activeItem;\n\n  /**\n   * Set the currently active item and data attribute\n   * @param {*} position\n  */\n  const setActiveItem = (item) => {\n    this._activeItem = item;\n    const { position } = item;\n\n    // update the indicators if available\n    if (this._indicators.length) {\n      this._indicators = this._indicators.map((indicator) => {\n        indicator.el.setAttribute('aria-current', 'false');\n        indicator.el.classList.remove(...this._options.indicators.activeClasses.split(' '));\n        indicator.el.classList.add(...this._options.indicators.inactiveClasses.split(' '));\n        return indicator;\n      });\n      this._indicators[position].el.classList.add(...this._options.indicators.activeClasses.split(' '));\n      this._indicators[position].el.classList.remove(...this._options.indicators.inactiveClasses.split(' '));\n      this._indicators[position].el.setAttribute('aria-current', 'true');\n    }\n  };\n\n  /**\n   * Set an interval to loop through the carousel items\n  */\n  this.loop = () => {\n    if (typeof window !== 'undefined') {\n      this._intervalInstance = window.setInterval(() => {\n        this.next();\n      }, this._intervalDuration);\n    }\n  };\n\n  /**\n   * This method applies the transform classes\n   * based on the left, middle, and right rotation carousel items\n   * @param {*} rotationItems\n  */\n  const rotate = (rotationItems) => {\n    // reset\n    this._slides = this._slides.map((item) => {\n      item.el.classList.add('hidden');\n      return item;\n    });\n\n    // left item (previously active)\n    rotationItems.left.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n    rotationItems.left.el.classList.add(...'-translate-x-full z-[1]'.split(' '));\n\n    // currently active item\n    rotationItems.middle.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[1]'.split(' '));\n    rotationItems.middle.el.classList.add(...'translate-x-0 z-[2]'.split(' '));\n\n    // right item (upcoming active)\n    rotationItems.right.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n    rotationItems.right.el.classList.add(...'translate-x-full z-[1]'.split(' '));\n  };\n\n  /**\n   * Slide to the element based on id\n   * @param {*} position\n  */\n  const slideTo = (position) => {\n    const nextItem = this._slides[position];\n    const rotationItems = {\n      left:\n        nextItem.position === 0\n          ? this._slides[this._slides.length - 1]\n          : this._slides[nextItem.position - 1],\n      middle: nextItem,\n      right:\n        nextItem.position === this._slides.length - 1\n          ? this._slides[0]\n          : this._slides[nextItem.position + 1],\n    };\n    rotate(rotationItems);\n    setActiveItem(nextItem);\n    if (this._intervalInstance) {\n      pause();\n      this.loop();\n    }\n\n    this._options.onChange(position);\n  };\n\n  /**\n   * Based on the currently active item it will go to the next position\n  */\n  this.next = () => {\n    const activeItem = getActiveItem();\n    const { position } = activeItem;\n    let nextItem = null;\n\n    // check if last item\n    if (position === this._slides.length - 1) {\n      // eslint-disable-next-line prefer-destructuring\n      nextItem = this._slides[0];\n    } else nextItem = this._slides[position + 1];\n\n    slideTo(nextItem.position);\n\n    // callback function\n    this._options.onNext(nextItem.position);\n  };\n\n  /**\n   * Based on the currently active item it will go to the previous position\n  */\n  this.prev = () => {\n    const activeItem = getActiveItem();\n    let prevItem = null;\n\n    // check if first item\n    if (activeItem.position === 0) {\n      prevItem = this._slides[this._slides.length - 1];\n    } else {\n      prevItem = this._slides[activeItem.position - 1];\n    }\n\n    slideTo(prevItem.position);\n\n    // callback function\n    this._options.onPrev(prevItem.position);\n  };\n\n  const getItem = (position) => this._slides[position];\n\n  const init = () => {\n    if (this._slides.length && !this._initialized) {\n      this._slides = this._slides.map((item) => {\n        item.el.classList.add(...'absolute inset-0 transition-transform transform'.split(' '));\n        return item;\n      });\n\n      // if no active item is set then first position is default\n      if (getActiveItem()) slideTo(getActiveItem().position);\n      else slideTo(0);\n\n      this._indicators = this._indicators.map((indicator, position) => {\n        indicator.el.addEventListener('click', () => {\n          slideTo(position);\n        });\n        return indicator;\n      });\n\n      this._initialized = true;\n    }\n  };\n\n  this._element = carouselEl;\n  this._slides = items;\n  this._options = {\n    ...DEFAULT,\n    ...options,\n    indicators: { ...DEFAULT.indicators, ...options.indicators },\n  };\n  this._activeItem = getItem(this._options.defaultPosition);\n  this._indicators = this._options.indicators.items;\n  this._intervalDuration = this._options.interval;\n  this._intervalInstance = null;\n  this._initialized = false;\n  init();\n}",
            "score": -0.9534883720930233
        },
        "scripts/Carousel.js::getActiveItem": {
            "changes_after_merge": 0,
            "file_path": "scripts/Carousel.js",
            "merged_function": "getActiveItem = () => this._activeItem",
            "score": -1.0
        },
        "scripts/Carousel.js::getItem": {
            "changes_after_merge": 0,
            "file_path": "scripts/Carousel.js",
            "merged_function": "getItem = (position) => this._slides[position]",
            "score": -1.0
        },
        "scripts/Carousel.js::init": {
            "changes_after_merge": 0,
            "file_path": "scripts/Carousel.js",
            "merged_function": "init = () => {\n    if (this._slides.length && !this._initialized) {\n      this._slides = this._slides.map((item) => {\n        item.el.classList.add(...'absolute inset-0 transition-transform transform'.split(' '));\n        return item;\n      });\n\n      // if no active item is set then first position is default\n      if (getActiveItem()) slideTo(getActiveItem().position);\n      else slideTo(0);\n\n      this._indicators = this._indicators.map((indicator, position) => {\n        indicator.el.addEventListener('click', () => {\n          slideTo(position);\n        });\n        return indicator;\n      });\n\n      this._initialized = true;\n    }\n  }",
            "score": -1.0
        },
        "scripts/Carousel.js::pause": {
            "changes_after_merge": 0,
            "file_path": "scripts/Carousel.js",
            "merged_function": "pause = () => clearInterval(this._intervalInstance)",
            "score": -1.0
        },
        "scripts/Carousel.js::rotate": {
            "changes_after_merge": 1,
            "file_path": "scripts/Carousel.js",
            "merged_function": "rotate = (rotationItems) => {\n    // reset\n    this._slides = this._slides.map((item) => {\n      item.el.classList.add('hidden');\n      return item;\n    });\n\n    // left item (previously active)\n    rotationItems.left.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n    rotationItems.left.el.classList.add(...'-translate-x-full z-[1]'.split(' '));\n\n    // currently active item\n    rotationItems.middle.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[1]'.split(' '));\n    rotationItems.middle.el.classList.add(...'translate-x-0 z-[2]'.split(' '));\n\n    // right item (upcoming active)\n    rotationItems.right.el.classList.remove(...'-translate-x-full translate-x-full translate-x-0 hidden z-[2]'.split(' '));\n    rotationItems.right.el.classList.add(...'translate-x-full z-[1]'.split(' '));\n  }",
            "score": -0.9534883720930233
        },
        "scripts/Carousel.js::setActiveItem": {
            "changes_after_merge": 0,
            "file_path": "scripts/Carousel.js",
            "merged_function": "setActiveItem = (item) => {\n    this._activeItem = item;\n    const { position } = item;\n\n    // update the indicators if available\n    if (this._indicators.length) {\n      this._indicators = this._indicators.map((indicator) => {\n        indicator.el.setAttribute('aria-current', 'false');\n        indicator.el.classList.remove(...this._options.indicators.activeClasses.split(' '));\n        indicator.el.classList.add(...this._options.indicators.inactiveClasses.split(' '));\n        return indicator;\n      });\n      this._indicators[position].el.classList.add(...this._options.indicators.activeClasses.split(' '));\n      this._indicators[position].el.classList.remove(...this._options.indicators.inactiveClasses.split(' '));\n      this._indicators[position].el.setAttribute('aria-current', 'true');\n    }\n  }",
            "score": -1.0
        },
        "scripts/Carousel.js::slideTo": {
            "changes_after_merge": 1,
            "file_path": "scripts/Carousel.js",
            "merged_function": "slideTo = (position) => {\n    const nextItem = this._slides[position];\n    const rotationItems = {\n      left:\n        nextItem.position === 0\n          ? this._slides[this._slides.length - 1]\n          : this._slides[nextItem.position - 1],\n      middle: nextItem,\n      right:\n        nextItem.position === this._slides.length - 1\n          ? this._slides[0]\n          : this._slides[nextItem.position + 1],\n    };\n    rotate(rotationItems);\n    setActiveItem(nextItem);\n    if (this._intervalInstance) {\n      pause();\n      this.loop();\n    }\n\n    this._options.onChange(position);\n  }",
            "score": -0.9534883720930233
        },
        "scripts/at-lsig.js::$": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function $(t){return P(t)?!z(t):U(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::$c": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function $c(t,e,n,r){return function(t){return Xi(t[Lt]).then(()=>{$e({metric:t});return h({found:!0},t)})['catch'](()=>(He(\"metric element not found\",t),$e({metric:t,message:\"metric element not found\"}),t))}(n).then(n=>{n.found&&zc(t,e,n,r)})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::$e": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function $e(t){Fe(Kt,\"clientTraces\",t,Pe())}",
            "score": -1.0
        },
        "scripts/at-lsig.js::$i": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function $i(t,e,n){const r=Bi(t,n);J(r)&&(zi(t,n),Fi(e,r,n))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::$n": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function $n(t){return Bn(t).parent()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::$o": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "$o=t=>x(t)&&Fo(t)&&(t=>!m(t.index))(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::$r": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function $r(t){return Tr(\"clientHints\",t),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::$s": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function $s(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{selector:n,response:r}=t;if(zs(r))return Ue(Bt),Fs(n),lr(),Pn({}),bs(\"no-offers-event\"),ln();const o=js(n,r),i=Si(o);if(!U(i)){const{url:t}=i;return Ue(\"Redirect action\",i),Dn({url:t}),bs(\"redirect-offer-event\"),Us(Kt,t),ln()}return An({}),Vs(o),bs(\"cache-updated-event\"),hs(o,e),Hs(o).then(t=>{U(t)||qn({execution:t})})['catch'](t=>Mn({error:t}))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::A": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function A(t){var e=this;const n=t?t.length:0;let r=n;for(;r-=1;)if(!w(t[r]))throw new TypeError(\"Expected a function\");return function(){let r=0;for(var o=arguments.length,i=new Array(o),c=0;c<o;c++)i[c]=arguments[c];let s=n?t[r].apply(e,i):i[0];for(;(r+=1)<n;)s=t[r].call(e,s);return s}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ac": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ac(t,e,n){const r=Pt(),o=rt(),{parameters:i,profileParameters:c,order:s,product:u}=t,a={id:r,type:e,timestamp:o,parameters:i,profileParameters:c,order:s,product:u};return U(n)||(a.tokens=n),a}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ae": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ae(t){const{name:e,value:n,expires:r,domain:o,secure:i}=t,c=ke();c[e]=Te(e,n,Math.ceil(r+rt()/1e3)),_e(c,o,i)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ai": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ai(t,e){const{index:n,name:r,state:o,analytics:i,options:c,metrics:s}=e,u=function(t,e,n){const{prefetch:r={}}=t,{mboxes:o=[]}=r;return U(o)?null:(i=O(t=>function(t,e,n){return t.index===e&&t.name===n}(t,e,n),o))&&i.length?i[0]:void 0;var i}(t,n,r),a={name:r,state:o,analytics:i};return m(u)||Ci(a,u),pn([Ni(c,Yo),Oi(s,Qo)]).then(t=>ki(a,t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::An": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function An(t){const e=In(\"at-content-rendering-start\",t);kn(Kt,Gt,\"at-content-rendering-start\",e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ar": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ar(){return function(){const t=Cr(\"dataProviders\");return m(t)?{}:t}()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::As": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function As(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Dc;if(m(t))return[null];const n=nt(ks,t);return Ts(n)&&He(\"Mboxes rendering failed\",t),e(t),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::At": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function At(){return _t(Ot)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Au": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Au(){He(Iu,arguments)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::B": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function B(t,e){var n,r=t?t.length:0;for(n=0;n<r;n++)this[n]=t[n];this.length=r,this.selector=e||\"\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Bc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Bc=t=>Wo(\"metric\",t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Be": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Be(t,e,n){const r=t[Jt]||[];if(t[Jt]=r,!n)return;const o=r.push;r.version=\"1\",r.settings=function(t){return ct((e,n)=>(e[n]=t[n],e),{},Qt)}(e),r.clientTraces=[],r.serverTraces=[],r.push=function(t){r.serverTraces.push(h({timestamp:rt()},t)),o.call(this,t)}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Bi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Bi(t,e){return Bn(e).attr(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Bn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Bn(t){if(jn(t))return on(t);if(!P(t))return on(t);const e=function(t){const e=t.match(Hn);return U(e)?t:ct((t,e)=>t.replace(e.key,e.val),t,nt(Un,e))}(t);if(-1===e.indexOf(\":eq(\"))return on(e);const n=function(t){const e=[];let n,r,o,i,c=z(t),s=c.indexOf(\":eq(\");for(;-1!==s;)n=z(c.substring(0,s)),r=z(c.substring(s)),i=r.indexOf(\")\"),o=z(r.substring(Vn,i)),c=z(r.substring(i+1)),s=c.indexOf(\":eq(\"),n&&o&&e.push({sel:n,eq:Number(o)});return c&&e.push({sel:c}),e}(e);return ct((t,e)=>{const{sel:n,eq:r}=e;return t=t.find(n),Z(r)&&(t=t.eq(r)),t},on(Gt),n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Br": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Br(t){if(!g(t)||0===t.length)return\"\";let e=\"\";return t.forEach((n,r)=>{const{brand:o,version:i}=n,c=r<t.length-1?\", \":\"\";e+='\"'+o+'\";v=\"'+i+'\"'+c}),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Bs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Bs(t){return J(t)||jn(t)?t:\"head\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::C": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "C=(t,e)=>e.forEach(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Cc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Cc(t){return function(t){return Xi(t[Lt]).then(()=>t)['catch'](()=>{const e=h({},t);return e[Ft]=!0,e})}(t).then(Ec)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ce": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ce(t){const e=at(\"#\",t);return U(e)||e.length<3||isNaN(parseInt(e[2],10))?null:Te(ye(e[0]),ye(e[1]),Number(e[2]))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ci": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ci(t,e){t.parameters=e.parameters,t.profileParameters=e.profileParameters,t.order=e.order,t.product=e.product}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Cn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Cn(t){const e=re();if(!e.overrideMboxEdgeServer)return;const n=e.cookieDomain,r=new Date(rt()+e.overrideMboxEdgeServerTimeout),o=e.secureOnly,i=we(\"mboxEdgeCluster\"),c=h({domain:n,expires:r,secure:o},o?{sameSite:\"None\"}:{});if(J(i))return void Se(\"mboxEdgeCluster\",i,c);const s=function(t){if($(t))return\"\";const e=Tn.exec(t);return U(e)||2!==e.length?\"\":e[1]}(t);$(s)||Se(\"mboxEdgeCluster\",s,c)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Co": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Co(t,e,n){const r=function(t){const e=re().globalMboxName;return h({},t,jr(e))}(n),o=En(),i=r.mbox3rdPartyId;const c=gr(xr()),s=go(t.id||{},o,i,e,c),u=function(t,e){if(!m(t)&&J(t.token))return t;const n={},r=e.at_property;return J(r)&&(n.token=r),n}(t.property,r),a=vo(t.experienceCloud||{},e),f=function(t){if(!m(t)&&J(t.authorizationToken))return t;const e={},n=qr();return J(n)&&(e.authorizationToken=n),e}(t.trace),l=yo(t.preview),d=bo(t.qaMode),p=function(t,e,n){const{execute:r={}}=t,o={};if(U(r))return o;const{pageLoad:i}=r;m(i)||(o.pageLoad=wo(i,e));const{mboxes:c}=r;if(!m(c)&&g(c)&&!U(c)){const t=O(io,nt(t=>So(t,e,n),c));U(t)||(o.mboxes=t)}return o}(t,r,n),v=Eo(t,r,n),{notifications:y}=t;let b={};return b.requestId=Pt(),b.context=function(t){if(!m(t)&&\"web\"===t.channel)return t;const e=re(),n=Cr(\"clientHints\")||{},r=t||{},{beacon:o}=r;return{userAgent:Kt.navigator.userAgent,clientHints:n,timeOffsetInMinutes:-(new Date).getTimezoneOffset(),channel:\"web\",screen:fo(),window:lo(),browser:po(),address:ho(),geo:t&&t.geo,crossDomain:e.crossDomain,beacon:o}}(t.context),U(s)||(b.id=s),U(u)||(b.property=u),U(f)||(b.trace=f),U(a)||(b.experienceCloud=a),U(l)||(b.preview=l),U(d)||(b.qaMode=d),U(p)||(b.execute=p),U(v)||(b.prefetch=v),U(y)||(b.notifications=y),b=Kt.__target_telemetry.addTelemetryToDeliveryRequest(b),b}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Cr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Cr(t){return Er[t]}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Cs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Cs(t){const{status:e,data:n}=t,r={status:e,pageLoad:!0};return m(n)||(r.data=n),r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ct": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ct(){let t=[];return{addEntry:function(e){t.push(e)},getAndClearEntries:function(){const e=t;return t=[],e},hasEntries:function(){return t.length>0}}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::D": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function D(t){if(!P(t))return-1;let e=0;const{length:n}=t;for(let r=0;r<n;r+=1)e=(e<<5)-e+t.charCodeAt(r)&4294967295;return e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Dc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Dc(t){const e=re().globalMboxName,n=[],r=Zt;if(q(t=>{const{mbox:e,data:o}=t;if(m(o))return;const{eventTokens:i=[]}=o;U(i)||n.push(function(t,e,n){const{name:r,state:o}=t,i=Ac(t,e,n);return i.mbox={name:r,state:o},i}(e,r,i))},t),U(n))return;const o=_c(e,{},n);Ue(\"Mboxes rendered notification\",n),$e({source:\"prefetchMboxes\",event:\"rendered\",request:o}),qc(o)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::De": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function De(){return qe(Kt,Gt,\"mboxEdit\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Di": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Di(t){const e=A([ii,ni,ri])(t),n=function(t){const{response:e}=t,{execute:n}=e;if(!x(n))return ln(null);const{pageLoad:r}=n;if(!x(r))return ln(null);const{analytics:o,options:i,metrics:c}=r,s={analytics:o};return pn([Ni(i,Xo),Oi(c,ti)]).then(t=>ki(s,t))}(e),r=function(t){const{response:e}=t,{execute:n}=e;if(!x(n))return ln([]);const{mboxes:r}=n;return!g(r)||U(r)?ln([]):pn(nt(_i,O(zo,r))).then(Lo)}(e),o=function(t){const{request:e,response:n}=t,{prefetch:r}=n;if(!x(r))return ln([]);const{mboxes:o}=r;return!g(o)||U(o)?ln([]):pn(nt(t=>Ai(e,t),O($o,o))).then(Lo)}(e),i=function(t){const{request:e,response:n}=t,{prefetch:r}=n;if(!x(r))return ln([]);const{views:o}=r;return!g(o)||U(o)?ln([]):pn(nt(t=>qi(e,t),O(Jo,o))).then(Lo)}(e),c=function(t){const{response:e}=t,{prefetch:n}=e;if(!x(n))return ln([]);const{metrics:r}=n;return Oi(r,ti)}(e),s=function(t){const{response:e}=t,{remoteMboxes:n,remoteViews:r,decisioningMethod:o}=e,i={};return x(n)&&(i.remoteMboxes=n),x(r)&&(i.remoteViews=r),P(o)&&(i.decisioningMethod=o),ln(i)}(e),u=function(t){const{response:e}=t,{notifications:n}=e;return g(n)?pn(nt(Mi,n)).then(Lo):ln([])}(e);return pn([n,r,o,i,c,s,u]).then(Pi)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Dn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Dn(t){const e=In(\"at-content-rendering-redirect\",t);kn(Kt,Gt,\"at-content-rendering-redirect\",e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Do": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Do=t=>\"actions\"===t.type",
            "score": -1.0
        },
        "scripts/at-lsig.js::Dr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Dr(t){if(!w(t))return{};let e=null;try{e=t()}catch(t){return{}}return m(e)?{}:g(e)?function(t){const e=ct((t,e)=>(t.push(function(t){const e=t.indexOf(\"=\");return-1===e?[]:[t.substr(0,e),t.substr(e+1)]}(e)),t),[],O(J,t));return ct((t,e)=>(t[ye(z(e[0]))]=ye(z(e[1])),t),{},O(Mr,e))}(e):P(e)&&J(e)?O((t,e)=>J(e),ge(e)):x(e)?function(t,e){const n={};return m(e)?Pr(t,[],n,S):Pr(t,[],n,e),n}(e):{}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ds": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ds(t){return dn(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Du": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Du(){function t(t){return\"tgt:tlm:\"+t}function e(t){const e=localStorage.getItem(t);let n=parseInt(e,10);return Number.isNaN(n)&&(n=-1),n}function n(t,e){localStorage.setItem(t,e)}function r(e){const n=t(e),r=localStorage.getItem(n);return localStorage.removeItem(n),r}return{addEntry:function(r){!function(e,n){Pu(t(e),n)}(function(){const t=e(\"tgt:tlm:upper\")+1;return n(\"tgt:tlm:upper\",t),t}(),r)},getAndClearEntries:function(){return function(){const t=[],o=e(\"tgt:tlm:lower\")||-1,i=e(\"tgt:tlm:upper\")||-1;for(let e=i;e>o;e-=1){const n=r(e);n&&t.push(JSON.parse(n))}return n(\"tgt:tlm:lower\",i),t}()},hasEntries:function(){const n=t(e(\"tgt:tlm:upper\"));return!!localStorage.getItem(n)}}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::E": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function E(t){return w(t)?t:S}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ec": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ec(t){return function(t){const{key:e}=t;if($(e))return!0;if(\"customCode\"===t[Dt])return t.page;const n=Bi(\"at-action-key\",t[Lt]);return n!==e||n===e&&!t.page}(t)?bc(t).then(()=>(Ue(\"Action rendered successfully\",t),$e({action:t}),function(t){const{key:e}=t;if($(e))return;if(!xc(t))return;Fi(\"at-action-key\",e,t[Lt])}(t),Sc(t),t))['catch'](e=>{He(\"Unexpected error\",e),$e({action:t,error:e}),Sc(t);const n=h({},t);return n[Ft]=!0,n}):(Sc(t),t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ei": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ei(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{analytics:e}=t;return U(e)?[]:[e]}",
            "score": -1.0
        },
        "scripts/at-lsig.js::En": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function En(){return Ie(\"PC\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Eo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Eo(t,e,n){const{prefetch:r={}}=t,o={};if(U(r))return o;const{mboxes:i}=r;m(i)||!g(i)||U(i)||(o.mboxes=nt(t=>So(t,e,n),i));const{views:c}=r;return m(c)||!g(c)||U(c)||(o.views=nt(t=>function(t,e){const{name:n,address:r}=t,o=wo(t,e);return J(n)&&(o.name=n),U(r)||(o.address=r),o}(t,e),c)),o}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Es": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Es(t,e,n){return n?Ss(e):function(t,e){const n={};if(U(e))return n;const r=[],o=[];q(t=>{switch(t.action){case\"setContent\":r.push({type:\"html\",content:t.content});break;case\"setJson\":U(t.content)||q(t=>r.push({type:\"json\",content:t}),t.content);break;case\"redirect\":r.push(ws(t));break;case\"signalClick\":o.push({type:\"click\",eventToken:t.clickTrackId})}},e);const i={name:t};if(!U(r)&&(i.options=r),!U(o)&&(i.metrics=o),U(i))return n;const c={},s=[i];return c.mboxes=s,n.execute=c,n}(t,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Et": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Et(t){return!!t.prefetch&&!!t.prefetch.views&&t.prefetch.views.length||0}",
            "score": -1.0
        },
        "scripts/at-lsig.js::F": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function F(t,n,r){for(e in n)r&&(R(n[e])||_(n[e]))?(R(n[e])&&!R(t[e])&&(t[e]={}),_(n[e])&&!_(t[e])&&(t[e]=[]),F(t[e],n[e],r)):void 0!==n[e]&&(t[e]=n[e])}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Fc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Fc(t,e,n){if(!m(Vc[t]))return;const r=T(Vc);U(r)||q(t=>{q(r=>{const o=Vc[t][r];!function(t,e,n){Bn(n).off(t,e)}(e,o,n)},T(Vc[t])),delete Vc[t]},r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Fe": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Fe(t,e,n,r){\"serverTraces\"===e&&t[Jt].push(n),r&&\"serverTraces\"!==e&&t[Jt][e].push(h({timestamp:rt()},n))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Fi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Fi(t,e,n){return Bn(n).attr(t,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Fn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Fn(t){return Bn(t).length>0}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Fo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Fo=t=>J(t.name)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Fr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Fr(t){const{mobile:e,platform:n,brands:r}=t;return{mobile:e,platform:n,browserUAWithMajorVersion:Br(r)}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Fs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Fs(t){Hi(\"at-element-marker\",t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::G": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function G(t,e){var n=t.className||\"\",r=n&&void 0!==n.baseVal;if(void 0===e)return r?n.baseVal:n;r?n.baseVal=e:t.className=e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Gc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Gc(t){const{name:e}=t;return Jc(e,!0,Hc(t),Rc)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ge": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ge(){}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Gi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Gi(){return\"visible\"===Gt.visibilityState}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Gn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Gn(){if(!De())return;Kt._AT=Kt._AT||{},Kt._AT.querySelectorAll=Bn;const t=re().authoringScriptUrl;Ue(\"Loading target-vec.js\"),Ln(t).then(()=>{Gt.addEventListener(\"click\",t=>{w(Kt._AT[Zn])&&Kt._AT[Zn](t)},!0)})['catch'](()=>He(\"Unable to load target-vec.js\"))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Gr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Gr(){const{screen:t}=Kt,{orientation:e,width:n,height:r}=t;if(m(e))return n>r?\"landscape\":\"portrait\";if(m(e.type))return null;const o=at(\"-\",e.type);if(U(o))return null;const i=o[0];return m(i)?null:i}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Gs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Gs(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n={selector:\"head\",response:t};Ue(Js,\"response\",t),$e({source:Js,response:t}),$s(n,e)['catch'](Zs)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::H": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function H(t,e){return\"number\"!=typeof e||p[j(t)]?e:e+\"px\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::He": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function He(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];je(Kt,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Hi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Hi(t,e){return Bn(e).addClass(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Hs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Hs(t){const e=[],{execute:n={}}=t,{pageLoad:r={},mboxes:o=[]}=n;U(r)?e.push(ln(null)):e.push(function(t){return as(t,e=>us(\"pageLoad\",t,e),Kc)}(r)),U(o)?e.push(ln(null)):e.push(function(t){return pn(nt(ls,t))}(o));const{prefetch:i={}}=t,{mboxes:c=[],metrics:s=[]}=i;return U(c)?e.push(ln(null)):e.push(function(t){return pn(nt(ds,t))}(c)),g(s)&&!U(s)?e.push(function(t){return pn([Wc(t)]).then(us)}(i)):e.push(ln(null)),lr(),pn(e).then(Ps)['catch'](Ds)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::I": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "I=(t,e)=>e.filter(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ic": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ic(t){const e=t.name,n=Cr(\"views\")||{};n[e]=t,Tr(\"views\",n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ie": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ie(t){const e=ke()[t];return x(e)?e.value:\"\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ii": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ii(t){const{type:e}=t;switch(e){case\"redirect\":return ln(function(t){const e=t.content;if($(e))return Ue(\"Action has no url\",t),null;const n=h({},t);return n.content=ai(e,{}),n}(t));case\"dynamic\":return function(t){const{content:e}=t;return di(pi(e,{},re().timeout)).then(hi)['catch'](()=>null)}(t);case\"actions\":return ln(function(t){const e=t[Rt];if(!g(e))return null;if(U(e))return null;const n=O(yi,nt(xi,e));if(U(n))return null;const r=h({},t);return r.content=n,r}(t));default:return ln(t)}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::In": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function In(t,e){const{mbox:n,error:r,url:o,analyticsDetails:i,responseTokens:c,execution:s}=e,u={type:t,tracking:function(t,e){const n=t(),r=e(),o={};return o.sessionId=n,J(r)?(o.deviceId=r,o):o}(Sn,En)};return m(n)||(u.mbox=n),m(r)||(u.error=r),m(o)||(u.url=o),U(i)||(u.analyticsDetails=i),U(c)||(u.responseTokens=c),U(s)||(u.execution=s),u}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Io": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Io(t,e){const n=re();return pn([uo(),Zr(Rr(),n.allowHighEntropyClientHints)]).then(n=>{let[r]=n;return ko(t,e,r)})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ir": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ir(t,e,n,r,o,i){const c={};c[t]=e,c[n]=r,c[o]=i;const s={};return s.dataProvider=c,s}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Is": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Is(t){const{status:e,view:n,data:r}=t,{name:o}=n,i={status:e,view:o};return m(r)||(i.data=r),i}",
            "score": -1.0
        },
        "scripts/at-lsig.js::J": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "J=t=>!$(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Jc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Jc(t,e,n,r){return pn(nt(n=>$c(t,e,n,r),n)).then(Uc)['catch'](Bc)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ji": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ji(t){return new Error(\"Could not find: \"+t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Jn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Jn(t,e){return Bn(e).find(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Jo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Jo=t=>x(t)&&Fo(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Jr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Jr(t){return ln(t).then($r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::K": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function K(t){try{return t?\"true\"==t||\"false\"!=t&&(\"null\"==t?null:+t+\"\"==t?+t:/^[\\[\\{]/.test(t)?n.parseJSON(t):t):t}catch(e){return t}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Kc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Kc(t){return Jc(\"pageLoadMetrics\",!1,Hc(t),Mc)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ke": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ke(t){if(!(this instanceof Ke))throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof t)throw new TypeError(\"not a function\");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],en(t,this)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ki": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ki(t,e,n){return fn((r,o)=>{!function e(){const o=n(t);U(o)?Kt.requestAnimationFrame(e):r(o)}(),ft(()=>{o(Ji(t))},e)})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Kn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Kn=t=>!m(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ko": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ko(t,e){return{status:$t,type:t,data:e}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Kr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Kr(t){return-1!==t.indexOf(\"profile.\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ks": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ks(t){const e=function(t){return t.serverState}(t),{request:n,response:r}=e;Ue(Js,\"Using server state\"),$e({source:Js,serverState:e});const o=function(t,e){const n=h({},e),{execute:r,prefetch:o}=n,i=t.pageLoadEnabled,c=t.viewsEnabled;return r&&(n.execute.mboxes=void 0),r&&!i&&(n.execute.pageLoad=void 0),o&&(n.prefetch.mboxes=void 0),o&&!c&&(n.prefetch.views=void 0),n}(t,r);hs(o),function(t){const{prefetch:e={}}=t,{views:n=[]}=e;if(U(n))return;ns(_(nt(rs,n)))}(o),function(t){window.__target_telemetry.addServerStateEntry(t)}(n),Di({request:n,response:o}).then(t=>Gs(t,!0))['catch'](Zs)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::L": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "L=(t,e)=>e.map(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Lc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Lc(t){const{viewName:e,impressionId:n}=t,r=jr(re().globalMboxName),o=Ac(wo({},r),Zt,[]);o.view={name:e},Ue(\"View triggered notification\",e),function(t,e,n){return Io(Oc(t),e).then(t=>(t.notifications=n,t))}(e,r,[o]).then(t=>{t.impressionId=n,$e({view:e,event:\"triggered\",request:t}),qc(t)})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Le": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Le(t,e){const{console:n}=t;return!m(n)&&w(n[e])}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Li": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Li(t){const e=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{execute:e={},prefetch:n={}}=t,{pageLoad:r={},mboxes:o=[]}=e,{mboxes:i=[],views:c=[]}=n,s=wi(r),u=_(nt(wi,o)),a=_(nt(wi,i)),f=_(nt(wi,c));return _([s,u,a,f])}(t),n={};return U(e)||(n.responseTokens=e),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ln": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Ln=function(t){var e=document.createElement(\"script\");e.src=t,e.async=!0;var n=function(t,e){return new Rn((function(n,r){e.onload=function(){n(e)},e.onerror=function(){r(new Error(\"Failed to load script \"+t))}}))}(t,e);return document.getElementsByTagName(\"head\")[0].appendChild(e),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Lr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Lr(t){return h({},t,Dr(Kt.targetPageParamsAll))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ls": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ls(t,e){const{metrics:n}=e;if(U(n))return;const{name:r}=e;q(e=>{e.name=r,e.selector=e.selector||t},n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::M": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function M(t){return null!=t&&\"object\"==typeof t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Mc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Mc(t,e,n){const r=jr(re().globalMboxName),o=Ac(wo({},r),e,[n]),i=_c(Pt(),r,[o]);Ue(\"Event handler notification\",t,o),$e({source:t,event:e,request:i}),qc(i)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Me": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Me(){return re().enabled&&function(){const t=re(),e=t.cookieDomain,n=t.secureOnly,r=h({domain:e,secure:n},n?{sameSite:\"None\"}:{});Se(\"at_check\",\"true\",r);const o=\"true\"===we(\"at_check\");return Ee(\"at_check\"),o}()&&!qe(Kt,Gt,\"mboxDisable\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Mi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Mi(t){if(m(t)||$(t.id))return ln(null);const{id:e}=t;return ln({id:e})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Mn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Mn(t){const e=In(\"at-content-rendering-failed\",t);kn(Kt,Gt,\"at-content-rendering-failed\",e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Mo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Mo=t=>e=>O(t,e)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Mr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Mr(t){return!U(t)&&2===t.length&&J(t[0])}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ms": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ms(t){if(m(t))return[null];const e=nt(Ns,[t]);return Ts(e)&&He(\"Prefetch rendering failed\",t),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Mt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Mt(t){const e=t();return e[6]=15&e[6]|64,e[8]=63&e[8]|128,function(t){const e=[];for(let n=0;n<16;n+=1)e.push(qt[t[n]]);return tt(\"\",e).toLowerCase()}(e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Mu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Mu=t=>qu.test(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::N": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "N=(t,e)=>{const n={};return k((e,r)=>{t(e,r)&&(n[r]=e)},e),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Nc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Nc(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{page:n=!0}=e,r=Cr(\"views\")||{},o=r[t];if(m(o))return o;const{impressionId:i}=e;return m(i)?o:h({page:n,impressionId:i},o)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ne": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ne(t){return tt(\"#\",[be(t.name),be(t.value),t.expires])}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ni": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ni(t,e){if(!g(t))return ln([]);if(U(t))return ln([]);const n=O(e,t);if(U(n))return ln([]);return pn(nt(t=>Ii(t),n)).then(Lo)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Nn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Nn(t){const e=In(\"at-request-start\",t);kn(Kt,Gt,\"at-request-start\",e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::No": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function No(t,e){return Ue(\"request\",t),$e({request:t}),oo(t,e,dt).then(e=>(Ue(\"response\",e),$e({response:e}),{request:t,response:e}))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Nr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Nr(t){const e=t.name,n=t.version,r=t.timeout||2e3;return hn(function(t){return fn((e,n)=>{t((t,r)=>{m(t)?e(r):n(t)})})}(t.provider),r,\"timed out\").then(t=>{const r=Ir(\"name\",e,\"version\",n,\"params\",t);return Ue(\"Data provider\",$t,r),$e(r),t})['catch'](t=>{const r=Ir(\"name\",e,\"version\",n,Ft,t);return Ue(\"Data provider\",Ft,r),$e(r),{}})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ns": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ns(t){const{status:e,data:n}=t,r={status:e,prefetchMetrics:!0};return m(n)||(r.data=n),r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Nu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Nu(){He(Tu,arguments)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::O": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function O(t,e){if(m(e))return[];return(g(e)?I:N)(E(t),e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Oc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Oc(t){const e=To(t,{}),n={context:{beacon:!0}};if(!U(e)){const t={};t.analytics=e,n.experienceCloud=t}return n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Oe": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Oe(t){return t.expires}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Oi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Oi(t,e){return g(t)?U(t)?ln([]):ln(O(e,t)):ln([])}",
            "score": -1.0
        },
        "scripts/at-lsig.js::On": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function On(t,e){const n=In(\"at-request-succeeded\",t);n.redirect=e,kn(Kt,Gt,\"at-request-succeeded\",n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Oo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Oo=t=>e=>e[t]",
            "score": -1.0
        },
        "scripts/at-lsig.js::Or": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Or(t){const e=ct((t,e)=>h(t,e),{},t);return Tr(\"dataProviders\",e),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Os": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Os(t){if(m(t))return[null];const e=nt(Cs,[t]);return Ts(e)&&He(\"Page load rendering failed\",t),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ou": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ou(){He(Cu,arguments)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::P": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function P(t){return\"string\"==typeof t||!g(t)&&M(t)&&\"[object String]\"===b(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Pc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Pc(t,e,n){const r=jr(t),o=Ac(wo({},r),e,[n]);o.mbox={name:t};const i=_c(Pt(),r,[o]);Ue(\"Mbox event handler notification\",t,o),$e({mbox:t,event:e,request:i}),qc(i)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Pe": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Pe(){return qe(Kt,Gt,\"mboxDebug\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Pi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Pi(t){const e=t[0],n=t[1],r=t[2],o=t[3],i=t[4],c=t[5],s=t[6],u={},a={};x(e)&&(a.pageLoad=e),U(n)||(a.mboxes=n);const f={};return U(r)||(f.mboxes=r),U(o)||(f.views=o),U(i)||(f.metrics=i),U(a)||(u.execute=a),U(f)||(u.prefetch=f),U(c)||(u.meta=c),U(s)||(u.notifications=s),u}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Pn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Pn(t){const e=In(\"at-content-rendering-no-offers\",t);kn(Kt,Gt,\"at-content-rendering-no-offers\",e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Po": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Po=t=>t.status===Ft",
            "score": -1.0
        },
        "scripts/at-lsig.js::Pr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Pr(t,e,n,r){q((t,o)=>{x(t)?(e.push(o),Pr(t,e,n,r),e.pop()):U(e)?n[r(o)]=t:n[r(tt(\".\",e.concat(o)))]=t},t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ps": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ps(t){const e=_([Os(t[0]),_s(t[1]),As(t[2]),Ms(t[3])]),n=O(Ao,e),r=O(Po,n);return U(r)?ln(n):dn(r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Pt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Pt(){return Mt(At)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Pu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Pu(t,e){try{localStorage.setItem(t,JSON.stringify(e))}catch(t){Object.keys(localStorage).filter(Mu).forEach(t=>localStorage.removeItem(t))}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Q": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Q(t){if(!M(t)||\"[object Object]\"!==b(t))return!1;const e=function(t){return Object.getPrototypeOf(Object(t))}(t);if(null===e)return!0;const n=X.call(e,\"constructor\")&&e.constructor;return\"function\"==typeof n&&n instanceof n&&W.call(n)===Y}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Qc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Qc=t=>Wo(\"render\",t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::Qe": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Qe(t){2===t._state&&0===t._deferreds.length&&Ke._immediateFn((function(){t._handled||Ke._unhandledRejectionFn(t._value)}));for(var e=0,n=t._deferreds.length;e<n;e++)We(t,t._deferreds[e]);t._deferreds=null}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Qi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Qi(t){return J(Bi(\"data-at-src\",t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Qn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Qn(t){return O(Kn,nt(Yn,t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Qo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Qo(t){return!U(t)&&!$(t.type)&&J(t.eventToken)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Qr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Qr(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return ct((t,n,r)=>{const o=e?Xr(r):r;return e&&!Kr(r)||$(o)||(t[o]=m(n)?\"\":n),t},{},t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Qs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Qs(t){return $(t)?Ys(\"mbox option is required\"):t.length>250?Ys(\"mbox option is too long\"):Xs()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::R": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function R(t){return null!=t&&function(t){return\"number\"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}(t.length)&&!w(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Rc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Rc(t,e,n){const r=jr(re().globalMboxName),o=Ac(wo({},r),e,[n]);o.view={name:t};const i=_c(Pt(),r,[o]);Ue(\"View event handler notification\",t,o),$e({view:t,event:e,request:i}),qc(i)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ri": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ri(t){return!U(Si(t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ro": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Ro=t=>\"redirect\"===t.type",
            "score": -1.0
        },
        "scripts/at-lsig.js::Rr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Rr(){const{userAgentData:t}=window.navigator;return t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Rs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Rs(t,e){if(U(e))return;const{options:n}=e;U(n)||q(e=>{if(\"html\"!==e.type)return;const{content:n}=e;e.type=\"actions\",e.content=[{type:\"setHtml\",selector:t,content:n}]},n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::S": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function S(t){return t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Sc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Sc(t){if(!xc(t))return void wc(t);const e=t[Lt];!function(t){return\"trackClick\"===t[Dt]||\"signalClick\"===t[Dt]}(t)?(Hi(\"at-element-marker\",e),wc(t)):Hi(\"at-element-click-tracking\",e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Si": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Si(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{execute:e={}}=t,{pageLoad:n={},mboxes:r=[]}=e,o=Vo(n)||[],i=_(Lo(nt(Vo,r))),c=_([o,i]),s=_(nt(Ho,O(Do,c))),u=O(Ro,c),a=O(Ro,s),f=u.concat(a),l={};if(U(f))return l;const d=f[0],p=d.content;return $(p)||(l.url=p),l}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Sn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Sn(){if(vn()&&!yn())return xn;const t=function(){const{location:t}=Kt,{search:e}=t;return ge(e).mboxSession}();if(J(t))return wn(t),Ie(\"session\");const e=Ie(\"session\");return $(e)?wn(xn):wn(e),Ie(\"session\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::So": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function So(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=re(),o=r.globalMboxName,{index:i,name:c,address:s}=t,u=h({},c===o?e:n,jr(c)),a=wo(t,u);return m(i)||(a.index=i),J(c)&&(a.name=c),U(s)||(a.address=s),a}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Sr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Sr(t){return function(t,e){if(m(t))return null;const n=t[e];return m(n)?null:n}(xr(),t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ss": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ss(t){const e={};if(U(t))return e;const n=[],r=[],o=[];q(t=>{switch(t.action){case\"setContent\":J((e=t).selector)&&J(e.cssSelector)?o.push(function(t){const e={type:\"setHtml\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t)):n.push({type:\"html\",content:t.content});break;case\"setJson\":U(t.content)||q(t=>n.push({type:\"json\",content:t}),t.content);break;case\"setText\":o.push(function(t){const e={type:\"setText\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"appendContent\":o.push(function(t){const e={type:\"appendHtml\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"prependContent\":o.push(function(t){const e={type:\"prependHtml\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"replaceContent\":o.push(function(t){const e={type:\"replaceHtml\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"insertBefore\":o.push(function(t){const e={type:\"insertBefore\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"insertAfter\":o.push(function(t){const e={type:\"insertAfter\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"customCode\":o.push(function(t){const e={type:\"customCode\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"setAttribute\":o.push(function(t){const e={};if(e.selector=t.selector,e.cssSelector=t.cssSelector,t.attribute===jt)return e.type=\"setImageSource\",e.content=t.value,e;e.type=\"setAttribute\";const n={};return n[t.attribute]=t.value,e.content=n,e}(t));break;case\"setStyle\":o.push(function(t){const{style:e={}}=t,n={};return n.selector=t.selector,n.cssSelector=t.cssSelector,m(e.left)||m(e.top)?m(e.width)||m(e.height)?(n.type=\"setStyle\",n.content=e,n):(n.type=\"resize\",n.content=e,n):(n.type=\"move\",n.content=e,n)}(t));break;case\"remove\":o.push(function(t){const e={type:\"remove\"};return e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"rearrange\":o.push(function(t){const e={};e.from=t.from,e.to=t.to;const n={type:\"rearrange\"};return n.selector=t.selector,n.cssSelector=t.cssSelector,n.content=e,n}(t));break;case\"redirect\":n.push(ws(t));break;case\"trackClick\":r.push({type:\"click\",selector:t.selector,eventToken:t.clickTrackId})}var e},t);const i={};!U(o)&&n.push({type:\"actions\",content:o});!U(n)&&(i.options=n);if(!U(r)&&(i.metrics=r),U(i))return e;const c={};return c.pageLoad=i,e.execute=c,e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::St": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function St(t){return!!t.prefetch&&!!t.prefetch.mboxes&&t.prefetch.mboxes.length||0}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Su": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Su(t,e){if(!re().viewsEnabled)return void He(\"[triggerView()]\",\"Views are not enabled\");if(!P(t)||$(t))return He(\"[triggerView()]\",\"View name should be a non-empty string\",t),void $e({source:\"[triggerView()]\",view:t,error:\"View name should be a non-empty string\"});const n=t.toLowerCase(),r=function(t,e){const n={};return n.viewName=t,n.impressionId=Pt(),n.page=!0,U(e)||(n.page=!!e.page),n}(n,e);Ue(\"[triggerView()]\",n,r),De()?function(t){const e=t.viewName;Kt._AT.currentView=e}(r):($e({source:\"[triggerView()]\",view:n,options:r}),function(t){vu.push(t),0!==yu&&xu()}(r))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::T": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function T(t){return m(t)?[]:Object.keys(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Tc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Tc(t){const e=O(t=>!0===t[Ft],t);return U(e)?ln():(function(t){q(Sc,t)}(e),dn(t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Te": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Te(t,e,n){return{name:t,value:e,expires:n}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ti": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ti(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{execute:e={},prefetch:n={}}=t,{pageLoad:r={},mboxes:o=[]}=e,{mboxes:i=[],views:c=[],metrics:s=[]}=n,u=Ei(r),a=_(nt(Ei,o)),f=_(nt(Ei,i)),l=_(nt(Ei,c)),d=_(nt(Ei,s));return _([u,a,f,l,d])}",
            "score": -1.0
        },
        "scripts/at-lsig.js::To": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function To(t,e){if(vn()&&!gn(Kt,\"ANALYTICS\"))return null;const n=re(),r=wr(t),o=Sr(\"trackingServer\"),i=Sr(\"trackingServerSecure\"),{experienceCloud:c={}}=e,{analytics:s={}}=c,{logging:u,supplementalDataId:a,trackingServer:f,trackingServerSecure:l}=s,d={};return m(u)?d.logging=n.analyticsLogging:d.logging=u,m(a)||(d.supplementalDataId=a),J(r)&&(d.supplementalDataId=r),m(f)||(d.trackingServer=f),J(o)&&(d.trackingServer=o),m(l)||(d.trackingServerSecure=l),J(i)&&(d.trackingServerSecure=i),U(d)?null:d}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Tr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Tr(t,e){Er[t]=e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ts": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Ts=t=>!U(O(Po,t))",
            "score": -1.0
        },
        "scripts/at-lsig.js::Tt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Tt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;if(t&&Z(t))return+t.toFixed(e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::U": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function U(t){if(null==t)return!0;if(R(t)&&(g(t)||P(t)||w(t.splice)))return!t.length;for(const e in t)if(H.call(t,e))return!1;return!0}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Uc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "Uc=()=>Ko(\"metric\")",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ue": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ue(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];Ve(Kt,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ui": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ui(t,e){return Bn(e).css(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Un": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Un(t){const e=t.charAt(0),n=t.charAt(1),r=t.charAt(2),o={key:t};return o.val=\"-\"===n?\"\"+e+n+\"\\\\3\"+r+\" \":e+\"\\\\3\"+n+\" \",o}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ur": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ur(){let{devicePixelRatio:t}=Kt;if(!m(t))return t;t=1;const{screen:e}=Kt,{systemXDPI:n,logicalXDPI:r}=e;return!m(n)&&!m(r)&&n>r&&(t=n/r),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Us": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Us(t,e){ft(()=>t.location.replace(e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::V": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function V(t){return t in d?d[t]:d[t]=new RegExp(\"(^|\\\\s)\"+t+\"(\\\\s|$)\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ve": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ve(t,e){const{console:n}=t;Le(t,\"debug\")&&Pe()&&n.debug.apply(n,[Re].concat(e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Vi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Vi(t){const e=re().globalMboxName,{consumerId:n=e,request:r,timeout:o,page:i=!0}=t,c=To(n,r);if(r.impressionId=r.impressionId||function(t){return!t&&co||(co=Pt()),co}(i),!U(c)){const t=r.experienceCloud||{};t.analytics=c,r.experienceCloud=t}return Nn({}),Io(r,{}).then(t=>No(t,o)).then(Di).then(t=>function(t){const e=Li(t),n=Ti(t);return U(n)||(e.analyticsDetails=n),Ue(\"request succeeded\",t),On(e,Ri(t)),ln(t)}(t))['catch'](t=>function(t){return He(\"request failed\",t),_n({error:t}),dn(t)}(t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Vs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Vs(t){const{prefetch:e={}}=t,{views:n=[]}=e;U(n)||function(t){q(Ic,t)}(n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::W": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function W(t,e){e(t);for(var n=0,r=t.childNodes.length;n<r;n++)W(t.childNodes[n],e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Wc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Wc(t){return Jc(\"prefetchMetrics\",!1,Hc(t),Mc)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::We": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function We(t,e){for(;3===t._state;)t=t._value;0!==t._state?(t._handled=!0,Ke._immediateFn((function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null!==n){var r;try{r=n(t._value)}catch(t){return void Ye(e.promise,t)}Xe(e.promise,r)}else(1===t._state?Xe:Ye)(e.promise,t._value)}))):t._deferreds.push(e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Wi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Wi(t,e,n){return fn((r,o)=>{!function e(){const o=n(t);U(o)?ft(e,100):r(o)}(),ft(()=>{o(Ji(t))},e)})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Wn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Wn(t){const e=function(t){return parseInt(t,10)}(t);return isNaN(e)?null:e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Wo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Wo(t,e){return{status:Ft,type:t,data:e}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Wr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Wr(t){return Kr(t)||function(t){return\"mbox3rdPartyId\"===t}(t)||function(t){return\"at_property\"===t}(t)||function(t){return\"orderId\"===t}(t)||function(t){return\"orderTotal\"===t}(t)||function(t){return\"productPurchasedId\"===t}(t)||function(t){return\"productId\"===t}(t)||function(t){return\"categoryId\"===t}(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ws": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ws(){if(!Me())return He(Js,Vt),void $e({source:Js,error:Vt});const t=re();if(function(t){const e=t.serverState;if(U(e))return!1;const{request:n,response:r}=e;return!U(n)&&!U(r)}(t))return void Ks(t);const e=t.pageLoadEnabled,n=t.viewsEnabled;if(!e&&!n)return Ue(Js,\"Page load disabled\"),void $e({source:Js,error:\"Page load disabled\"});fr();const r={};if(e){const t={pageLoad:{}};r.execute=t}if(n){const t={views:[{}]};r.prefetch=t}const o=t.timeout;Ue(Js,\"request\",r),$e({source:Js,request:r});const i={request:r,timeout:o};vn()&&!yn()?bn().then(()=>{Vi(i).then(Gs)['catch'](Zs)})['catch'](Zs):Vi(i).then(Gs)['catch'](Zs)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::X": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function X(t,e,n){const r=t.getElementsByTagName(\"script\")[0];if(!r)return;const o=r.parentNode;if(!o)return;const i=t.createElement(\"script\");i.innerHTML=e,J(n)&&i.setAttribute(\"nonce\",n),o.appendChild(i),o.removeChild(i)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Xe": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Xe(t,e){try{if(e===t)throw new TypeError(\"A promise cannot be resolved with itself.\");if(e&&(\"object\"==typeof e||\"function\"==typeof e)){var n=e.then;if(e instanceof Ke)return t._state=3,t._value=e,void Qe(t);if(\"function\"==typeof n)return void en((r=n,o=e,function(){r.apply(o,arguments)}),t)}t._state=1,t._value=e,Qe(t)}catch(e){Ye(t,e)}var r,o}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Xi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Xi(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:re().selectorsPollingTimeout,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Bn;const r=n(t);return U(r)?sn()?Zi(t,e,n):Gi()?Ki(t,e,n):Wi(t,e,n):ln(r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Xn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Xn(t){return at(\"_\",t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Xo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Xo(t){return x(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Xr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Xr(t){return t.substring(\"profile.\".length)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Xs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Xs(){const t={valid:!0};return t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ye": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ye(t,e){t._state=2,t._value=e,Qe(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Yi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Yi(t){return Bi(\"data-at-src\",t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Yn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Yn(t){const e=at(\"_\",t),n=Wn(e[0]);if(m(n))return null;const r={};r.activityIndex=n;const o=Wn(e[1]);return m(o)||(r.experienceIndex=o),r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Yo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Yo(t){return!!Xo(t)&&J(t.eventToken)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Yr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Yr(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return ct((t,e,n)=>(Wr(n)||(t[n]=m(e)?\"\":e),t),{},t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ys": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ys(t){const e={valid:!1};return e[Ft]=t,e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Z": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Z(t){return\"number\"==typeof t||M(t)&&\"[object Number]\"===b(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Zc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Zc(t){const{name:e}=t;return Jc(e,!1,Hc(t),Pc)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Ze": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Ze(t){return Boolean(t&&void 0!==t.length)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Zi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Zi(t,e,n){return fn((r,o)=>{const i=un(()=>{const e=n(t);U(e)||(i.disconnect(),r(e))});ft(()=>{i.disconnect(),o(Ji(t))},e),i.observe(Gt,{childList:!0,subtree:!0})})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Zr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Zr(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=Cr(\"clientHints\");if(gt(n))return Jr(n);if(mt(t))return Jr({});const r=Fr(t);return Jr(e?zr(t,r):r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::Zs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function Zs(t){He(Js,\"View delivery error\",t),bs(\"no-offers-event\"),$e({source:Js,error:t}),lr()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::_": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function _(t){return m(t)?[]:[].concat.apply([],t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::_c": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function _c(t,e,n){const r=function(t,e){return ko(t,e,ao())}(Oc(t),e);return r.notifications=n,r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::_e": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function _e(t,e,n){const r=j(t),o=Math.abs(1e3*function(t){const e=nt(Oe,t);return Math.max.apply(null,e)}(r)-rt()),i=tt(\"|\",nt(Ne,r)),c=new Date(rt()+o),s=h({domain:e,expires:c,secure:n},n?{sameSite:\"None\"}:{});Se(\"mbox\",i,s)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::_i": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function _i(t){const{name:e,analytics:n,options:r,metrics:o}=t,i={name:e,analytics:n};return pn([Ni(r,Xo),Oi(o,Qo)]).then(t=>ki(i,t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::_n": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function _n(t){const e=In(\"at-request-failed\",t);kn(Kt,Gt,\"at-request-failed\",e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::_o": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "_o=t=>e=>!t(e)",
            "score": -1.0
        },
        "scripts/at-lsig.js::_r": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function _r(t){if(!function(t){const e=t.targetGlobalSettings;if(m(e))return!1;const n=e.dataProviders;return!(!g(n)||U(n))}(t))return ln({});return pn(nt(Nr,O(kr,t.targetGlobalSettings.dataProviders))).then(Or)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::_s": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function _s(t){if(m(t))return[null];const e=nt(ks,t);return Ts(e)&&He(\"Mboxes rendering failed\",t),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::_u": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function _u(){He(ku,arguments)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::a": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function a(t){if(t.__esModule)return t;var e=Object.defineProperty({},\"__esModule\",{value:!0});return Object.keys(t).forEach((function(n){var r=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,r.get?r:{enumerable:!0,get:function(){return t[n]}})})),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ac": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ac(t,e){return n=cr(e),Bn(t).html(n);var n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ae": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "ae=function(t){switch(typeof t){case\"string\":return t;case\"boolean\":return t?\"true\":\"false\";case\"number\":return isFinite(t)?t:\"\";default:return\"\"}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ai": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ai(t,e){return ui(t,e,ci)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::an": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function an(){const t=Gt.createTextNode(\"\"),e=[];return un(()=>{const t=e.length;for(let n=0;n<t;n+=1)e[n]();e.splice(0,t)}).observe(t,{characterData:!0}),n=>{e.push(n),t.textContent=t.textContent.length>0?\"\":\"a\"}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ao": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ao(){return[br(xr(),re().optoutEnabled),Ar()]}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ar": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ar(t,e){if(U(e)||Fn(\"#at-views\"))return;ir(function(t,e){return sr(\"at-views\",e+\" {\"+t+\"}\")}(t.defaultContentHiddenStyle,tt(\", \",e)),\"head\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::as": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function as(t,e,n){return pn(ss(t=>is(t,!0),t)).then(e).then(e=>(n(t),e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::at": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function at(t,e){return $(e)?[]:e.split(t||\"\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::b": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function b(t){return function(t){return y.call(t)}(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::bc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function bc(t){const e=sc(t);switch(e[Dt]){case\"setHtml\":return function(t){return Ue(\"Rendering action\",t),cc(ac,t)}(e);case\"setText\":return fc(e);case\"appendHtml\":return function(t){return Ue(\"Rendering action\",t),cc(lc,t)}(e);case\"prependHtml\":return function(t){return Ue(\"Rendering action\",t),cc(dc,t)}(e);case\"replaceHtml\":return function(t){return Ue(\"Rendering action\",t),cc(pc,t)}(e);case\"insertBefore\":return function(t){return Ue(\"Rendering action\",t),cc(hc,t)}(e);case\"insertAfter\":return function(t){return Ue(\"Rendering action\",t),cc(mc,t)}(e);case\"customCode\":return function(t){return Ue(\"Rendering action\",t),cc(gc,t)}(e);case\"setAttribute\":return function(t){const e=t[Rt],n=Bn(t[Lt]);return Ue(\"Rendering action\",t),$e({action:t}),q((t,e)=>Fi(e,t,n),e),ln(t)}(e);case\"setImageSource\":return function(t){const e=t[Rt],n=Bn(t[Lt]);return Ue(\"Rendering action\",t),$e({action:t}),zi(jt,n),Fi(jt,nc(e),n),ln(t)}(e);case\"setStyle\":return vc(e);case\"resize\":return function(t){const e=Bn(t[Lt]),n=t[Rt];return n.width=uc(n.width),n.height=uc(n.height),Ue(\"Rendering action\",t),$e({action:t}),Ui(n,e),ln(t)}(e);case\"move\":return function(t){const e=Bn(t[Lt]),n=t[Rt];return n.left=uc(n.left),n.top=uc(n.top),Ue(\"Rendering action\",t),$e({action:t}),Ui(n,e),ln(t)}(e);case\"remove\":return function(t){const e=Bn(t[Lt]);return Ue(\"Rendering action\",t),$e({action:t}),nr(e),ln(t)}(e);case\"rearrange\":return yc(e);default:return ln(e)}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::be": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function be(t){try{return encodeURIComponent(t)}catch(e){return t}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::bi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function bi(t){const{selector:e}=t;return!m(e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::bn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function bn(){return function(t,e){if(!mn(t))return ln(!0);const n=t.adobe.optIn,r=(t.adobe.optIn.Categories||{})[e];return fn((t,e)=>{n.fetchPermissions(()=>{n.isApproved(r)?t(!0):e(\"Adobe Target is not opted in\")},!0)})}(Kt,\"TARGET\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::bo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function bo(t){return m(t)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:we;const e=t(\"at_qa_mode\");if($(e))return{};try{return JSON.parse(e)}catch(t){return{}}}():t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::br": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function br(t,e){return m(t)?{}:function(t,e){if(!w(t.getVisitorValues))return{};const n=[\"MCMID\",\"MCAAMB\",\"MCAAMLH\"];e&&n.push(\"MCOPTOUT\");const r={};return t.getVisitorValues(t=>h(r,t),n),r}(t,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::bs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function bs(t,e){!function(t,e,n){t.emit(e,n)}(ys,t,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::bt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function bt(t){return!!t.execute&&!!t.execute.pageLoad}",
            "score": -1.0
        },
        "scripts/at-lsig.js::bu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function bu(t){return ms(t),function(t){const{page:e}=t;return fs(\"view\",t,e,Gc)}(t).then(qs).then(t=>{U(t)||qn({execution:t})})['catch'](t=>{He(\"View rendering failed\",t),Mn({error:t})})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::c": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function c(t,n){if(\"undefined\"!=typeof document){for(var o={},i=document.cookie?document.cookie.split(\"; \"):[],c=0;c<i.length;c++){var s=i[c].split(\"=\"),u=s.slice(1).join(\"=\");n||'\"'!==u.charAt(0)||(u=u.slice(1,-1));try{var a=e(s[0]);if(u=(r.read||r)(u,a)||e(u),n)try{u=JSON.parse(u)}catch(t){}if(o[a]=u,t===a)break}catch(t){}}return t?o[t]:o}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::cc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function cc(t,e){const n=Bn(e[Lt]),r=function(t){return A([tc,rc,ec])(t)}(zn(e[Rt])),o=function(t){return O(J,nt(oc,j(Jn(\"script\",t))))}(r);let i;try{i=ln(t(n,r))}catch(t){return dn(ic(e,t))}return U(o)?i.then(()=>e)['catch'](t=>ic(e,t)):i.then(()=>function(t){return ct((t,e)=>t.then(()=>(Ue(\"Script load\",e),$e({remoteScript:e}),Ln(e))),ln(),t)}(o)).then(()=>e)['catch'](t=>ic(e,t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ci": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ci(t){const e=t.queryKey,n=e.adobe_mc_sdid;if(!P(n))return e;if($(n))return e;const r=Math.round(rt()/1e3);return e.adobe_mc_sdid=n.replace(/\\|TS=\\d+/,\"|TS=\"+r),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::cr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function cr(t){return Bn(t).html()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::cs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function cs(t){return x(t)&&\"json\"!==t.type}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ct": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ct(t,e,n){if(m(n))return e;return(g(n)?ot:it)(E(t),e,n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::cu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function cu(t){const e=function(t){if(!x(t))return Ys(Ht);const e=Qs(t.mbox);return e[zt]?w(t[$t])?w(t[Ft])?Xs():Ys(\"error option is required\"):Ys(\"success option is required\"):e}(t),n=e[Ft];if(!e[zt])return He(ou,n),void $e({source:ou,options:t,error:n});if(!Me())return ft(t[Ft](\"warning\",Vt)),He(ou,Vt),void $e({source:ou,options:t,error:Vt});const r=e=>iu(t,e),o=e=>function(t,e){const n=e.status||\"unknown\";t[Ft](n,e)}(t,e);Ue(ou,t),$e({source:ou,options:t}),vn()&&!yn()?bn().then(()=>{ji(t).then(r)['catch'](o)}):ji(t).then(r)['catch'](o)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::d": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function d(t,e,n,r){if((e=p(e)).ns)var o=(i=e.ns,new RegExp(\"(?:^| )\"+i.replace(\" \",\" .* ?\")+\"(?: |$)\"));var i;return(c[l(t)]||[]).filter((function(t){return t&&(!e.e||t.e==e.e)&&(!e.ns||o.test(t.ns))&&(!n||l(t.fn)===l(n))&&(!r||t.sel==r)}))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::dc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function dc(t,e){return n=cr(e),Bn(t).prepend(n);var n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::di": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function di(t){return li(Kt,t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::dn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function dn(t){return rn.reject(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::dr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function dr(t){return!m(t.id)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ds": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ds(t){return fs(\"mbox\",t,!0,Zc)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::du": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function du(t){const e=re().globalMboxName,{consumerId:n=e,request:r}=t,o=function(t){if(!x(t))return Ys(Ht);const{request:e}=t;if(!x(e))return Ys(\"request option is required\");const{execute:n,prefetch:r,notifications:o}=e;return x(n)||x(r)?Ys(\"execute or prefetch is not allowed\"):g(o)?Xs():Ys(\"notifications are required\")}(t),i=o[Ft];if(!o[zt])return He(\"[sendNotifications()]\",i),void $e({source:\"[sendNotifications()]\",options:t,error:i});if(!Me())return He(\"[sendNotifications()]\",Vt),void $e({source:\"[sendNotifications()]\",options:t,error:Vt});Ue(\"[sendNotifications()]\",t),$e({source:\"[sendNotifications()]\",options:t});const{notifications:c}=r,s=_c(n,{},c);!vn()||yn()?qc(s):He(\"[sendNotifications()]\",\"Adobe Target is not opted in\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::e": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function e(t){return t.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ec": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ec(t){return q(t=>$i(\"data-at-src\",jt,t),j(Jn(\"img\",t))),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ee": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ee(t,e,n){let r=\"\";\"file:\"===t.location.protocol||(r=te(t.location.hostname)),n.cookieDomain=r,n.enabled=function(t){const{compatMode:e}=t;return e&&\"CSS1Compat\"===e}(e)&&function(t){const{documentMode:e}=t;return!e||e>=10}(e),function(t,e){t.enabled&&(m(e.globalMboxAutoCreate)||(t.pageLoadEnabled=e.globalMboxAutoCreate),q(n=>{m(e[n])||(t[n]=e[n])},Qt))}(n,t.targetGlobalSettings||{})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ei": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ei(t){const{id:e}=t;return x(e)&&J(e.tntId)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::en": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function en(t,e){var n=!1;try{t((function(t){n||(n=!0,Xe(e,t))}),(function(t){n||(n=!0,Ye(e,t))}))}catch(t){if(n)return;n=!0,Ye(e,t)}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::eo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function eo(t,e){return Z(e)?e<0?t.timeout:e:t.timeout}",
            "score": -1.0
        },
        "scripts/at-lsig.js::er": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function er(t){const e=function(t){const e=ge(t).at_preview;return $(e)?null:{token:e}}(t.location.search);if(m(e))return;const n=new Date(rt()+186e4),r=re().secureOnly,o=h({expires:n,secure:r},r?{sameSite:\"None\"}:{});Se(\"at_preview_mode\",JSON.stringify(e),o)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::es": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function es(t){const e=nt(Yc,t);var n;n=jo(e),ur(re(),n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::et": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "et=(t,e)=>{const n={};return k((e,r)=>{n[r]=t(e,r)},e),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::eu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function eu(t){const e=[];return q(t=>{const{type:n}=t;switch(n){case\"setHtml\":e.push(function(t){const e={action:\"setContent\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"setText\":e.push(function(t){const e={action:\"setText\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"appendHtml\":e.push(function(t){const e={action:\"appendContent\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"prependHtml\":e.push(function(t){const e={action:\"prependContent\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"replaceHtml\":e.push(function(t){const e={action:\"replaceContent\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"insertBefore\":e.push(function(t){const e={action:\"insertBefore\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"insertAfter\":e.push(function(t){const e={action:\"insertAfter\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"customCode\":e.push(function(t){const e={action:\"customCode\"};return e.content=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"setAttribute\":e.push(function(t){const e=T(t.content)[0],n={action:\"setAttribute\"};return n.attribute=e,n.value=t.content[e],n.selector=t.selector,n.cssSelector=t.cssSelector,n}(t));break;case\"setImageSource\":e.push(function(t){const e={action:\"setAttribute\"};return e.attribute=jt,e.value=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"setStyle\":e.push(function(t){const e={action:\"setStyle\"};return e.style=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"resize\":e.push(function(t){const e={action:\"setStyle\"};return e.style=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"move\":e.push(function(t){const e={action:\"setStyle\"};return e.style=t.content,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"remove\":e.push(function(t){const e={action:\"remove\"};return e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"rearrange\":e.push(function(t){const e={action:\"rearrange\"};return e.from=t.content.from,e.to=t.content.to,e.selector=t.selector,e.cssSelector=t.cssSelector,e}(t));break;case\"redirect\":e.push(tu(t))}},t),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::f": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function f(t,e){s(h(e,{requestId:t,timestamp:rt()}))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::fc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function fc(t){const e=Bn(t[Lt]),n=t[Rt];return Ue(\"Rendering action\",t),$e({action:t}),function(t,e){Bn(e).text(t)}(n,e),ln(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::fi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function fi(t){const e=t.method||\"GET\",n=t.url||function(t){throw new Error(t)}(\"URL is required\"),r=t.headers||{},o=t.data||null,i=t.credentials||!1,c=t.timeout||3e3,s=!!m(t.async)||!0===t.async,u={};return u.method=e,u.url=n,u.headers=r,u.data=o,u.credentials=i,u.timeout=c,u.async=s,u}",
            "score": -1.0
        },
        "scripts/at-lsig.js::fn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function fn(t){return new rn(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::fo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function fo(){const{screen:t}=Kt;return{width:t.width,height:t.height,orientation:Gr(),colorDepth:t.colorDepth,pixelRatio:Ur()}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::fr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function fr(){!function(t){if(!0!==t.bodyHidingEnabled)return;if(Fn(\"#at-body-style\"))return;ir(sr(\"at-body-style\",t.bodyHiddenStyle),\"head\")}(re())}",
            "score": -1.0
        },
        "scripts/at-lsig.js::fs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function fs(t,e,n,r){const{name:o}=e;return pn(ss(t=>is(t,o,n),e)).then(n=>function(t,e,n){const r={status:$t,[t]:e},o=nt(Zo,O(Po,n)),i=nt(Zo,O(ts,n)),c=Lo(nt(Uo,i)),s=Lo(nt(Bo,i)),u={};return U(o)||(r.status=Ft,u.errors=o),U(c)||(u.eventTokens=c),U(s)||(u.responseTokens=s),U(u)||(r.data=u),r}(t,e,n)).then(t=>(r(e),t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ft": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ft(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return setTimeout(t,Number(e)||0)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::fu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function fu(t){const e=Bs(t.selector),n=D(e);Nt.timeStart(n);const r=function(t){if(!x(t))return Ys(Ht);const e=Qs(t.mbox);if(!e[zt])return e;const n=t.offer;return g(n)?Xs():Ys(\"offer option is required\")}(t),o=r[Ft];if(!r[zt])return He(au,t,o),$e({source:au,options:t,error:o}),void Fs(e);if(!Me())return He(au,Vt),$e({source:au,options:t,error:Vt}),void Fs(e);t.selector=e,Ue(au,t),$e({source:au,options:t}),function(t){const{mbox:e,selector:n,offer:r}=t,o=re(),i=e===o.globalMboxName;if(U(r))return Ue(Bt),Fs(n),lr(),void Pn({mbox:e});const c=js(n,Es(e,r,i)),s=Si(c);if(!U(s)){const{url:t}=s;return Ue(\"Redirect action\",s),Dn({url:t}),void Us(Kt,t)}An({mbox:e}),hs(c),Hs(c).then(t=>{U(t)||qn({mbox:e,execution:t})})['catch'](t=>Mn({error:t}))}(t);const i=Nt.timeEnd(n);Nt.clearTiming(n),window.__target_telemetry.addRenderEntry(n,i)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::g": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function g(t,n,r,o,i,s,u){var a=l(t),d=c[a]||(c[a]=[]);n.split(/\\s/).forEach((function(n){if(\"ready\"==n)return e(document).ready(r);var c=p(n);c.fn=r,c.sel=i,c.e in f&&(r=function(t){var n=t.relatedTarget;if(!n||n!==this&&!e.contains(this,n))return c.fn.apply(this,arguments)}),c.del=s;var a=s||r;c.proxy=function(e){if(!(e=S(e)).isImmediatePropagationStopped()){e.data=o;var n=a.apply(t,null==e._args?[e]:[e].concat(e._args));return!1===n&&(e.preventDefault(),e.stopPropagation()),n}},c.i=d.length,d.push(c),\"addEventListener\"in t&&t.addEventListener(m(c.e),c.proxy,h(c,u))}))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::gc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function gc(t,e){return $n(or(cr(e),t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ge": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ge(t){try{return de(t)}catch(t){return{}}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::gn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function gn(t,e){if(!mn(t))return!0;const n=t.adobe.optIn,r=(t.adobe.optIn.Categories||{})[e];return n.isApproved(r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::go": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function go(t,e,n,r,o){const i={};J(e)&&(i.tntId=e),J(n)&&(i.thirdPartyId=n),J(t.thirdPartyId)&&(i.thirdPartyId=t.thirdPartyId);const c=r.MCMID;return J(c)&&(i.marketingCloudVisitorId=c),J(t.marketingCloudVisitorId)&&(i.marketingCloudVisitorId=t.marketingCloudVisitorId),U(t.customerIds)?(U(o)||(i.customerIds=function(t){return nt(mo,t)}(o)),i):(i.customerIds=t.customerIds,i)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::gr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function gr(t){if(m(t))return[];if(!w(t.getCustomerIDs))return[];const e=t.getCustomerIDs(!0);return x(e)?function(t){if(!t.nameSpaces&&!t.dataSources)return mr(t,\"DS\");const e=[];return t.nameSpaces&&e.push.apply(e,mr(t.nameSpaces,\"NS\")),t.dataSources&&e.push.apply(e,mr(t.dataSources,\"DS\")),e}(e):[]}",
            "score": -1.0
        },
        "scripts/at-lsig.js::gt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function gt(t){return!mt(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::gu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function gu(t){const e=function(t){if(!x(t))return Ys(Ht);const e=Qs(t.mbox);return e[zt]?Xs():e}(t),n=e[Ft];if(!e[zt])return He(pu,n),void $e({source:pu,options:t,error:n});const r=function(t,e){const n=e.mbox,r=h({},e),o=x(e.params)?e.params:{};return r.params=h({},jr(n),o),r.timeout=eo(t,e.timeout),r[$t]=w(e[$t])?e[$t]:vt,r[Ft]=w(e[Ft])?e[Ft]:vt,r}(re(),t);if(!Me())return He(pu,Vt),ft(r[Ft](\"warning\",Vt)),void $e({source:pu,options:t,error:Vt});Ue(pu,r),$e({source:pu,options:r}),function(t){const e=t[Dt],n=t[Lt];return J(e)&&(J(n)||jn(n))}(r)?mu(r):hu(r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::h": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function h(t,e){return t.del&&!u&&t.e in a||!!e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::hc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function hc(t,e){return Bn(or(cr(e),t)).prev()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::hi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function hi(t){const{status:e}=t;if(!function(t){return t>=200&&t<300||304===t}(e))return null;const n=t.response;if($(n))return null;const r={type:\"html\"};return r.content=n,r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::hn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function hn(t,e,n){let r=-1;const o=fn((t,o)=>{r=ft(()=>o(new Error(n)),e)});return(i=[t,o],g(i)?rn.race(i):dn(new TypeError(\"Expected an array of promises\"))).then(t=>(lt(r),t),t=>{throw lt(r),t});var i}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ho": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ho(){const{location:t}=Kt;return{url:t.href,referringUrl:Gt.referrer}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::hr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function hr(t){return dr(t)||pr(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::hs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function hs(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(e)return;const{execute:n={}}=t,{pageLoad:r={}}=n;U(r)||ps(r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::hu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function hu(t){if(vn()&&!yn())return He(\"Track event request failed\",\"Adobe Target is not opted in\"),void t[Ft](Ft,\"Adobe Target is not opted in\");!function(t){const{mbox:e,type:n=Zt}=t,r=x(t.params)?t.params:{},o=h({},jr(e),r),i=Ac(wo({},o),n,[]);i.mbox={name:e},qc(_c(e,o,[i])).then(()=>{Ue(\"Track event request succeeded\",t),t[$t]()})['catch'](()=>{He(\"Track event request failed\",t),t[Ft](\"unknown\",\"Track event request failed\")})}(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::i": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function i(e,n,i){if(\"undefined\"!=typeof document){\"number\"==typeof(i=t({path:\"/\"},o.defaults,i)).expires&&(i.expires=new Date(1*new Date+864e5*i.expires)),i.expires=i.expires?i.expires.toUTCString():\"\";try{var c=JSON.stringify(n);/^[\\{\\[]/.test(c)&&(n=c)}catch(t){}n=r.write?r.write(n,e):encodeURIComponent(String(n)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),e=encodeURIComponent(String(e)).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\\(\\)]/g,escape);var s=\"\";for(var u in i)i[u]&&(s+=\"; \"+u,!0!==i[u]&&(s+=\"=\"+i[u].split(\";\")[0]));return document.cookie=e+\"=\"+n+s}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ic": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ic(t,e){return He(\"Unexpected error\",e),$e({action:t,error:e}),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ii": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ii(t){const{response:e}=t,{execute:n={},prefetch:r={},notifications:o={}}=e,{pageLoad:i={},mboxes:c=[]}=n,{mboxes:s=[],views:u=[]}=r;return oi(i),q(oi,c),q(oi,s),q(oi,u),q(oi,o),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::io": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "io=t=>!U(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::ir": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ir(t,e){return Bn(e).append(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::is": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function is(t,e,n){const{eventToken:r,responseTokens:o,content:i}=t;return function(t){return pn(nt(Cc,t)).then(Tc)}(function(t,e,n){return nt(t=>h({key:e,page:n},t),O(os,t))}(i,e,n)).then(()=>Ko(\"render\",{eventToken:r,responseTokens:o}))['catch'](Qc)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::it": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "it=(t,e,n)=>{let r=e;return k((e,n)=>{r=t(r,e,n)},n),r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::iu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function iu(t,e){const n=function(t){const{execute:e={}}=t,{pageLoad:n={}}=e,{mboxes:r=[]}=e,o=[];return o.push.apply(o,ru(n)),o.push.apply(o,_(nt(ru,r))),o}(e);t[$t](n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::j": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function j(t){return m(t)?[]:R(t)?P(t)?t.split(\"\"):function(t){let e=0;const{length:n}=t,r=Array(n);for(;e<n;)r[e]=t[e],e+=1;return r}(t):(e=T(t),n=t,L(t=>n[t],e));var e,n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::jc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function jc(t){if(m(t))return;const{view:e,data:n={}}=t,{eventTokens:r=[]}=n,{name:o,impressionId:i}=e,c=Nc(o);if(m(c))return;const s=_c(o,{},[function(t,e,n){const{name:r,state:o}=t,i=Ac(t,e,n);return i.view={name:r,state:o},i}(c,Zt,r)]);s.impressionId=i,Ue(\"View rendered notification\",o,r),$e({view:o,event:\"rendered\",request:s}),qc(s)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::je": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function je(t,e){const{console:n}=t;Le(t,\"warn\")&&n.warn.apply(n,[Re].concat(e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ji": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ji(t){const e=re().globalMboxName,{mbox:n,timeout:r}=t,o=x(t.params)?t.params:{},i={},c={};n===e?c.pageLoad={}:c.mboxes=[{index:0,name:n}],i.execute=c;const s=To(n,i);if(!U(s)){const t={};t.analytics=s,i.experienceCloud=t}return Nn({mbox:n}),Io(i,o).then(t=>No(t,r)).then(Di).then(t=>function(t,e){const n=Li(e);n.mbox=t;const r=Ti(e);return U(r)||(n.analyticsDetails=r),Ue(\"request succeeded\",e),On(n,Ri(e)),ln(e)}(n,t))['catch'](t=>function(t,e){return He(\"request failed\",e),_n({mbox:t,error:e}),dn(e)}(n,t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::jn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function jn(t){return M(t)&&1===t.nodeType&&!Q(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::jr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function jr(t){const e=re(),n=e.globalMboxName,r=e.mboxParams,o=e.globalMboxParams;return n!==t?Lr(r||{}):h(Lr(r||{}),function(t){return h({},t,Dr(Kt.targetPageParams))}(o||{}))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::js": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function js(t,e){const n=h({},e),{execute:r={},prefetch:o={}}=n,{pageLoad:i={},mboxes:c=[]}=r,{mboxes:s=[]}=o;return Rs(t,i),q(e=>Rs(t,e),c),q(e=>Ls(t,e),c),q(e=>Rs(t,e),s),q(e=>Ls(t,e),s),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::k": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "k=(t,e)=>{C(n=>t(e[n],n),T(e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::kc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function kc(t,e,n){return Bn(n).on(t,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ke": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ke(){const t=nt(Ce,$(e=we(\"mbox\"))?[]:at(\"|\",e));var e;const n=Math.ceil(rt()/1e3);return ct((t,e)=>(t[e.name]=e,t),{},O(t=>x(t)&&n<=t.expires,t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ki": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ki(t,e){const n=e[0],r=e[1],o=!U(n),i=!U(r);return o||i?(o&&(t.options=n),i&&(t.metrics=r),t):t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::kn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function kn(t,e,n,r){const o=new t.CustomEvent(n,{detail:r});e.dispatchEvent(o)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ko": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ko(t,e,n){const r=n[0],o=n[1];return Co(t,r,h({},o,e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::kr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function kr(t){const e=t.name;if(!P(e)||U(e))return!1;const n=t.version;if(!P(n)||U(n))return!1;const r=t.timeout;if(!m(r)&&!Z(r))return!1;return!!w(t.provider)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ks": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ks(t){const{status:e,mbox:n,data:r}=t,{name:o}=n,i={status:e,mbox:o};return m(r)||(i.data=r),i}",
            "score": -1.0
        },
        "scripts/at-lsig.js::l": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function l(t){return t._zid||(t._zid=n++)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::lc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function lc(t,e){return ir(cr(e),t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::li": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function li(t,e){const n=fi(e),r=n.method,o=n.url,i=n.headers,c=n.data,s=n.credentials,u=n.timeout,a=n.async;return fn((e,n)=>{let f=new t.XMLHttpRequest;f=function(t,e,n){return t.onload=()=>{const r=1223===t.status?204:t.status;if(r<100||r>599)return void n(new Error(\"Network request failed\"));const o=t.responseText,i=t.getAllResponseHeaders();e({status:r,headers:i,response:o})},t}(f,e,n),f=function(t,e){return t.onerror=()=>{e(new Error(\"Network request failed\"))},t}(f,n),f.open(r,o,a),f=function(t,e){return!0===e&&(t.withCredentials=e),t}(f,s),f=function(t,e){return q((e,n)=>{q(e=>t.setRequestHeader(n,e),e)},e),t}(f,i),a&&(f=function(t,e,n){return t.timeout=e,t.ontimeout=()=>{n(new Error(\"Request timed out\"))},t}(f,u,n)),f.send(c)})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ln": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ln(t){return rn.resolve(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::lo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function lo(){const{documentElement:t}=Gt;return{width:t.clientWidth,height:t.clientHeight}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::lr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function lr(){!function(t){!0===t.bodyHidingEnabled&&Fn(\"#at-body-style\")&&nr(\"#at-body-style\")}(re())}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ls": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ls(t){return as(t,e=>us(\"mbox\",t,e),Zc)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::lt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function lt(t){clearTimeout(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::lu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function lu(t){const e=Bs(t.selector),n=D(e);Nt.timeStart(n);const r=function(t){if(!x(t))return Ys(Ht);const{response:e}=t;return x(e)?Xs():Ys(\"response option is required\")}(t),o=r[Ft];return r[zt]?Me()?(t.selector=e,Ue(\"[applyOffers()]\",t),$e({source:\"[applyOffers()]\",options:t}),$s(t).then(()=>{const t=Nt.timeEnd(n);Nt.clearTiming(n),window.__target_telemetry.addRenderEntry(n,t)})):(He(\"[applyOffers()]\",Vt),$e({source:\"[applyOffers()]\",options:t,error:Vt}),Fs(e),dn(new Error(Vt))):(He(\"[applyOffers()]\",t,o),$e({source:\"[applyOffers()]\",options:t,error:o}),Fs(e),dn(r))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::m": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function m(t){return null==t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::mc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function mc(t,e){return Bn(rr(cr(e),t)).next()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::mn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function mn(t){if(m(t.adobe))return!1;const e=t.adobe;if(m(e.optIn))return!1;const n=e.optIn;return w(n.fetchPermissions)&&w(n.isApproved)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::mo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function mo(t){const{id:e,integrationCode:n,authenticatedState:r,type:o,primary:i}=t,c={};return J(e)&&(c.id=e),J(n)&&(c.integrationCode=n),J(r)&&(c.authenticatedState=r),J(o)&&(c.type=o),i&&(c.primary=i),c}",
            "score": -1.0
        },
        "scripts/at-lsig.js::mr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function mr(t,e){return ct((t,n,r)=>{const o={};return o.integrationCode=r,dr(n)&&(o.id=n.id),pr(n)&&(o.authenticatedState=function(t){switch(t){case 0:return\"unknown\";case 1:return\"authenticated\";case 2:return\"logged_out\";default:return\"unknown\"}}(n.authState)),o[Dt]=e,function(t){return t.primary}(n)&&(o.primary=!0),t.push(o),t},[],O(hr,t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ms": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ms(t){es(rs(t)),Fn(\"#at-views\")&&nr(\"#at-views\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::mt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function mt(t){return void 0===t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::mu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function mu(t){const e=t[Lt],n=t[Dt],r=j(Bn(e)),o=()=>function(t){return hu(t),!t.preventDefault}(t);q(t=>kc(n,o,t),r)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::n": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function n(t,n){const r=e.createEvent(\"CustomEvent\");return n=n||{bubbles:!1,cancelable:!1,detail:void 0},r.initCustomEvent(t,n.bubbles,n.cancelable,n.detail),r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::nc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function nc(t){return Ue(\"Loading image\",t),Bi(jt,Fi(jt,t,on(\"<img/>\")))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ne": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ne(t){ee(Kt,Gt,t);const e=\"file:\"===Kt.location.protocol;Yt=h({},t),Yt.deviceIdLifetime=t.deviceIdLifetime/1e3,Yt.sessionIdLifetime=t.sessionIdLifetime/1e3,Yt.scheme=Yt.secureOnly||e?\"https:\":\"\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ni": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ni(t){const{response:e}=t;return ei(e)&&function(t){const e=re();Ae({name:\"PC\",value:t,expires:e.deviceIdLifetime,domain:e.cookieDomain,secure:e.secureOnly})}(e.id.tntId),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::no": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function no(t){const e=t.serverDomain;if(!t.overrideMboxEdgeServer)return e;const n=function(){if(!re().overrideMboxEdgeServer)return\"\";const t=we(\"mboxEdgeCluster\");return $(t)?\"\":t}();return $(n)?e:\"mboxedge\"+n+\".tt.omtrdc.net\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::nr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function nr(t){return Bn(t).empty().remove()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ns": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ns(t){const e=nt(Yc,t);var n;n=Lo(e),ar(re(),n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::nt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function nt(t,e){if(m(e))return[];return(g(e)?L:et)(E(t),e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::nu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function nu(t){if(U(t))return[];const e=[];return q(t=>{\"click\"===t.type&&(J(t.selector)?e.push({action:\"trackClick\",selector:t.selector,clickTrackId:t.eventToken}):e.push({action:\"signalClick\",clickTrackId:t.eventToken}))},t),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::o": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function o(){}",
            "score": -1.0
        },
        "scripts/at-lsig.js::oc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function oc(t){const e=Bi(jt,t);return J(e)?e:null}",
            "score": -1.0
        },
        "scripts/at-lsig.js::oi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function oi(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{trace:e}=t;U(e)||ze(e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::oo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function oo(t,e,n){const r=re(),o=ro(r),i={\"Content-Type\":[\"text/plain\"]},c=eo(r,e),s={url:o,headers:i,body:t,timeout:c,async:!0};return Nt.timeStart(t.requestId),to(s).then(e=>{const r={execution:Nt.timeEnd(t.requestId),parsing:e.parsingTime};delete e.parsingTime;const i=function(t,e){if(!performance)return null;const n=performance.getEntriesByType(\"resource\").find(e=>e.name.endsWith(t));if(!n)return null;const r={};return n.domainLookupEnd&&n.domainLookupStart&&(r.dns=n.domainLookupEnd-n.domainLookupStart),n.secureConnectionStart&&n.connectEnd&&(r.tls=n.connectEnd-n.secureConnectionStart),n.responseStart&&(r.timeToFirstByte=n.responseStart-n.requestStart),n.responseEnd&&n.responseStart&&(r.download=n.responseEnd-n.responseStart),n.encodedBodySize?r.responseSize=n.encodedBodySize:e.responseSize&&(r.responseSize=e.responseSize,delete e.responseSize),r}(o,e);return i&&(r.request=i),e.telemetryServerToken&&(r.telemetryServerToken=e.telemetryServerToken),window.__target_telemetry.addDeliveryRequestEntry(t,r,e.status,n),h(e,{decisioningMethod:dt})})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::or": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function or(t,e){return Bn(e).before(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::os": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function os(t){return x(t)&&\"setJson\"!==t.type}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ot": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "ot=(t,e,n)=>n.reduce(t,e)",
            "score": -1.0
        },
        "scripts/at-lsig.js::p": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function p(t){if(null==t)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::pc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function pc(t,e){const n=$n(t);return nr(or(cr(e),t)),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::pi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function pi(t,e,n){const r={method:\"GET\"};return r.url=function(t,e){return ui(t,e,si)}(t,e),r.timeout=n,r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::pn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function pn(t){return g(t)?rn.all(t):dn(new TypeError(\"Expected an array of promises\"))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::po": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function po(){const{location:t}=Kt;return{host:t.hostname,webGLRenderer:Hr}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::pr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function pr(t){return!m(t.authState)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ps": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ps(t){es(rs(t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::q": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function q(t,e){if(m(e))return;(g(e)?C:k)(E(t),e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::qc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function qc(t){return new Promise((e,n)=>{const r=ro(re());if(function(t,e){return\"navigator\"in(n=Kt)&&\"sendBeacon\"in n.navigator?function(t,e,n){return t.navigator.sendBeacon(e,n)}(Kt,t,e):function(t,e,n){const r={\"Content-Type\":[\"text/plain\"]},o={method:\"POST\"};o.url=e,o.data=n,o.credentials=!0,o.async=!1,o.headers=r;try{t(o)}catch(t){return!1}return!0}(di,t,e);var n}(r,JSON.stringify(t)))return Ue(\"Beacon data sent\",r,t),void e();He(\"Beacon data sent failed\",r,t),n()})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::qe": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function qe(t,e,n){return function(t){return J(we(t))}(n)||function(t,e){const{location:n}=t,{search:r}=n,o=ge(r);return J(o[e])}(t,n)||function(t,e){const{referrer:n}=t,r=xe(n).queryKey;return!m(r)&&J(r[e])}(e,n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::qi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function qi(t,e){const{name:n,state:r,analytics:o,options:i,metrics:c}=e,s=function(t){const{prefetch:e={}}=t,{views:n=[]}=e;return U(n)?null:n[0]}(t),u={name:n.toLowerCase(),state:r,analytics:o};return m(s)||Ci(u,s),pn([Ni(i,Yo),Oi(c,ti)]).then(t=>ki(u,t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::qn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function qn(t){const e=In(\"at-content-rendering-succeeded\",t);kn(Kt,Gt,\"at-content-rendering-succeeded\",e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::qr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function qr(){const t=function(t){const{location:e}=t,{search:n}=e,r=ge(n).authorization;return $(r)?null:r}(Kt),e=function(){const t=we(\"mboxDebugTools\");return $(t)?null:t}();return t||e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::qs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function qs(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:jc;if(m(t))return[null];const n=nt(Is,[t]);Ts(n)&&He(\"View rendering failed\",t);const{view:r}=t;return r.page?(e(t),n):n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::r": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function r(e){const n=(gt(t[e])?t[e]:0)+1;return t[e]=n,\"\"+e+n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::rc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function rc(t){const e=O(Qi,j(Jn(\"img\",t)));return U(e)||q(nc,nt(Yi,e)),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::re": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function re(){return Yt}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ri": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ri(t){const{response:e}=t;if(ei(e)){const{id:t}=e,{tntId:n}=t;Cn(n)}return Cn(null),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ro": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ro(t){return t.scheme+\"//\"+no(t)+t.endpoint+\"?\"+ve({client:t.clientCode,sessionId:Sn(),version:t.version})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::rr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function rr(t,e){return Bn(e).after(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::rs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function rs(t){const e=O(Do,Vo(t));return _(nt(Xc,e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::rt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function rt(){return(new Date).getTime()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ru": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ru(t){if(U(t))return[];const e=[],n=[],r=[],{options:o=[],metrics:i=[]}=t;q(t=>{const{type:o}=t;switch(o){case\"html\":e.push(t.content);break;case\"json\":n.push(t.content);break;case\"redirect\":r.push(tu(t));break;case\"actions\":r.push.apply(r,eu(t.content))}},o),U(e)||r.push({action:\"setContent\",content:e.join(\"\")}),U(n)||r.push({action:\"setJson\",content:n});const c=nu(i);return U(c)||r.push.apply(r,c),r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::s": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "s=function(){return t.apply(n,c?c.concat(r.call(arguments)):arguments)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::sc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function sc(t){const e=h({},t),n=e[Rt];if($(n))return e;const r=Bn(e[Lt]);return o=\"head\",Bn(r).is(o)?(e[Dt]=\"appendHtml\",e[Rt]=function(t){return tt(\"\",ct((t,e)=>(t.push(cr(zn(e))),t),[],j(Jn(\"script,link,style\",zn(t)))))}(n),e):e;var o}",
            "score": -1.0
        },
        "scripts/at-lsig.js::si": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function si(t){return t.queryKey}",
            "score": -1.0
        },
        "scripts/at-lsig.js::sn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function sn(){return w(cn)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::so": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function so(t){if(t.MCOPTOUT)throw new Error(\"Disabled due to optout\");return t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::sr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function sr(t,e){return'<style id=\"'+t+'\" class=\"at-flicker-control\">'+e+\"</style>\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ss": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ss(t,e){return nt(t,O(cs,Vo(e)))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::t": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function t(){for(var t=0,e={};t<arguments.length;t++){var n=arguments[t];for(var r in n)e[r]=n[r]}return e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::tc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function tc(t){return q(t=>$i(jt,\"data-at-src\",t),j(Jn(\"img\",t))),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::te": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function te(t){if(function(t){return Wt.test(t)}(t))return t;const e=null==(n=at(\".\",t))?n:ut.call(n);var n;const r=e.length;return r>=3&&Xt.test(e[1])?e[2]+\".\"+e[1]+\".\"+e[0]:1===r?e[0]:e[1]+\".\"+e[0]}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ti": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ti(t){return!!Qo(t)&&J(t.selector)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::tn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function tn(t,e,n){this.onFulfilled=\"function\"==typeof t?t:null,this.onRejected=\"function\"==typeof e?e:null,this.promise=n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::to": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function to(t){let{url:e,headers:n,body:r,timeout:o,async:i}=t;return fn((t,c)=>{let s=new window.XMLHttpRequest;s=function(t,e,n){return t.onload=()=>{const r=1223===t.status?204:t.status;if(r<100||r>599)return void n(new Error(\"Network request failed\"));let o;try{const e=It();o=JSON.parse(t.responseText),o.parsingTime=It()-e,o.responseSize=new Blob([t.responseText]).size}catch(t){return void n(new Error(\"Malformed response JSON\"))}const i=t.getAllResponseHeaders();e({status:r,headers:i,response:o})},t}(s,t,c),s=function(t,e){return t.onerror=()=>{e(new Error(\"Network request failed\"))},t}(s,c),s.open(\"POST\",e,i),s.withCredentials=!0,s=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return q((e,n)=>{g(e)&&q(e=>{t.setRequestHeader(n,e)},e)},e),t}(s,n),i&&(s=function(t,e,n){return t.timeout=e,t.ontimeout=()=>{n(new Error(\"Request timed out\"))},t}(s,o,c)),s.send(JSON.stringify(r))}).then(t=>{const{response:e}=t,{status:n,message:r}=e;if(!m(n)&&!m(r))throw new Error(r);return e})}",
            "score": -1.0
        },
        "scripts/at-lsig.js::tr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function tr(t){const e=ge(t),n=e.at_preview_token;if($(n))return null;const r={};r.token=n;const o=e.at_preview_listed_activities_only;J(o)&&\"true\"===o&&(r.listedActivitiesOnly=!0);const i=e.at_preview_evaluate_as_true_audience_ids;J(i)&&(r.evaluateAsTrueAudienceIds=Xn(i));const c=e.at_preview_evaluate_as_false_audience_ids;J(c)&&(r.evaluateAsFalseAudienceIds=Xn(c));const s=e.at_preview_index;return U(s)||(r.previewIndexes=g(u=s)?Qn(u):Qn([u])),r;var u}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ts": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "ts=t=>_o(Po)(t)&&Go(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::tt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function tt(t,e){return g(e)?e.join(t||\"\"):\"\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::tu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function tu(t){return{action:\"redirect\",url:t.content}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::u": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "u=()=>r(t,o,c)",
            "score": -1.0
        },
        "scripts/at-lsig.js::uc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function uc(t){return t.indexOf(\"px\")===t.length-2?t:t+\"px\"}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ue": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ue(t,e){return Object.prototype.hasOwnProperty.call(t,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ui": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ui(t,e,n){const r=xe(t),{protocol:o}=r,{host:i}=r,{path:c}=r,s=\"\"===r.port?\"\":\":\"+r.port,u=$(r.anchor)?\"\":\"#\"+r.anchor,a=n(r),f=ve(h({},a,e));return o+\"://\"+i+s+c+($(f)?\"\":\"?\"+f)+u}",
            "score": -1.0
        },
        "scripts/at-lsig.js::un": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function un(t){return new cn(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::uo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function uo(){const t=function(){const t=xr(),e=re();return yr(t,e.visitorApiTimeout,e.optoutEnabled)}(),e=_r(Kt);return pn([t.then(so),e])}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ur": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ur(t,e){if(U(e))return;const n=O(t=>!Fn(\"#at-\"+D(t)),e);if(U(n))return;const r=t.defaultContentHiddenStyle;ir(tt(\"\\n\",nt(t=>function(t,e){return sr(\"at-\"+D(e),e+\" {\"+t+\"}\")}(r,t),n)),\"head\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::us": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function us(t,e,n){const r={status:$t,[t]:e},o=nt(Zo,O(Po,n)),i={};return U(o)||(r.status=Ft,i.errors=o),U(i)||(r.data=i),r}",
            "score": -1.0
        },
        "scripts/at-lsig.js::uu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function uu(t){const e=function(t){if(!x(t))return Ys(Ht);const{request:e}=t;if(!x(e))return Ys(\"request option is required\");const{execute:n,prefetch:r}=e;return x(n)||x(r)?Xs():Ys(\"execute or prefetch is required\")}(t),n=e[Ft];return e[zt]?Me()?(Ue(su,t),$e({source:su,options:t}),!vn()||yn()?Vi(t):bn().then(()=>Vi(t))):(He(su,Vt),$e({source:su,options:t,error:Vt}),dn(new Error(Vt))):(He(su,n),$e({source:su,options:t,error:n}),dn(e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::v": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function v(t,e,n,r,o){var i=l(t);(e||\"\").split(/\\s/).forEach((function(e){d(t,e,n,r).forEach((function(e){delete c[i][e.i],\"removeEventListener\"in t&&t.removeEventListener(m(e.e),e.proxy,h(e,o))}))}))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::vc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function vc(t){const e=Bn(t[Lt]),n=t[Rt],r=n.priority;return Ue(\"Rendering action\",t),$e({action:t}),$(r)?Ui(n,e):function(t,e,n){q(t=>{q((e,r)=>t.style.setProperty(r,e,n),e)},j(t))}(e,n,r),ln(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ve": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ve(t){try{return pe(t)}catch(t){return\"\"}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::vi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function vi(t){const e=t[Rt],n=function(t){const e=t[Lt];if($(e))return\"\";const n=mi.exec(e);return U(n)||2!==n.length?\"\":n[1]}(t);if($(n)||$(e))return t;const r=t[Lt];return t[Lt]=r.replace(gi,\"\"),t[Rt]=function(t,e){const n=document.createElement(\"div\");n.innerHTML=e;const r=n.firstElementChild;return m(r)?e:(r.id=t,r.outerHTML)}(n,e),t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::vn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function vn(){const t=re().optinEnabled;return function(t,e){return!!e&&mn(t)}(Kt,t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::vo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function vo(t,e){const n={},r=function(t,e){if(!m(t))return t;const n={};if(U(e))return n;const r=e.MCAAMLH,o=parseInt(r,10);isNaN(o)||(n.locationHint=o);const i=e.MCAAMB;return J(i)&&(n.blob=i),n}(t.audienceManager,e);return U(r)||(n.audienceManager=r),U(t.analytics)||(n.analytics=t.analytics),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::vr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function vr(t){return Ue(\"Visitor API requests error\",t),{}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::vs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function vs(){}",
            "score": -1.0
        },
        "scripts/at-lsig.js::vt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "vt=()=>{}",
            "score": -1.0
        },
        "scripts/at-lsig.js::w": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function w(t){return!!x(t)&&\"[object Function]\"===b(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::wc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function wc(t){const e=t.cssSelector;$(e)||nr(\"#at-\"+D(e))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::wi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function wi(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{options:e}=t;return g(e)?U(e)?[]:Lo(nt(Bo,e)):[]}",
            "score": -1.0
        },
        "scripts/at-lsig.js::wn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function wn(t){!function(t,e){Ae({name:\"session\",value:t,expires:e.sessionIdLifetime,domain:e.cookieDomain,secure:e.secureOnly})}(t,re())}",
            "score": -1.0
        },
        "scripts/at-lsig.js::wo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function wo(t,e){const n={},r=h({},Yr(e),Yr(t.parameters||{})),o=h({},Qr(e),Qr(t.profileParameters||{},!1)),i=h({},xo(e),t.order||{}),c=h({},function(t){const e={},n=function(t){return t.productId}(t);m(n)||(e.id=n);const r=function(t){return t.categoryId}(t);return m(r)||(e.categoryId=r),e}(e),t.product||{});return U(r)||(n.parameters=r),U(o)||(n.profileParameters=o),U(i)||(n.order=i),U(c)||(n.product=c),n}",
            "score": -1.0
        },
        "scripts/at-lsig.js::wr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function wr(t){return function(t,e){return m(t)?null:w(t.getSupplementalDataID)?t.getSupplementalDataID(e):null}(xr(),t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ws": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ws(t){return{type:\"redirect\",content:t.url}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::wt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function wt(t){return!!t.prefetch&&!!t.prefetch.pageLoad}",
            "score": -1.0
        },
        "scripts/at-lsig.js::wu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function wu(){yu=1,xu()}",
            "score": -1.0
        },
        "scripts/at-lsig.js::x": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function x(t){const e=typeof t;return null!=t&&(\"object\"===e||\"function\"===e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::xc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function xc(t){const e=t[Lt];return J(e)||jn(e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::xe": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function xe(t){if(me[t])return me[t];he.href=t;const e=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!t)return;const n={key:[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],q:{name:\"queryKey\",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\\d*))?))?((((?:[^?#/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@/]*@)([^:/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#/]*\\.[^?#/.]+(?:[?#]|$)))*\\/?)?([^?#/]*))(?:\\?([^#]*))?(?:#(.*))?)/}},r=n.parser[e.strictMode?\"strict\":\"loose\"].exec(t),o={};let i=14;for(;i--;)o[n.key[i]]=r[i]||\"\";return o[n.q.name]={},o[n.key[12]].replace(n.q.parser,(function(t,e,r){e&&(o[n.q.name][e]=r)})),o}(he.href);return e.queryKey=ge(e.query),me[t]=e,me[t]}",
            "score": -1.0
        },
        "scripts/at-lsig.js::xi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function xi(t){const e=t[Dt];if($(e))return null;switch(e){case\"setHtml\":return function(t){if(!bi(t))return null;const e=vi(t);return P(e[Rt])?e:(Ue(Ut,e),null)}(t);case\"setText\":return function(t){if(!bi(t))return null;const e=vi(t);return P(e[Rt])?e:(Ue(Ut,e),null)}(t);case\"appendHtml\":return function(t){if(!bi(t))return null;const e=vi(t);return P(e[Rt])?e:(Ue(Ut,e),null)}(t);case\"prependHtml\":return function(t){if(!bi(t))return null;const e=vi(t);return P(e[Rt])?e:(Ue(Ut,e),null)}(t);case\"replaceHtml\":return function(t){if(!bi(t))return null;const e=vi(t);return P(e[Rt])?e:(Ue(Ut,e),null)}(t);case\"insertBefore\":return function(t){if(!bi(t))return null;const e=vi(t);return P(e[Rt])?e:(Ue(Ut,e),null)}(t);case\"insertAfter\":return function(t){if(!bi(t))return null;const e=vi(t);return P(e[Rt])?e:(Ue(Ut,e),null)}(t);case\"customCode\":return function(t){return bi(t)?P(t[Rt])?t:(Ue(Ut,t),null):null}(t);case\"setAttribute\":return function(t){return bi(t)?x(t[Rt])?t:(Ue(\"Action has no attributes\",t),null):null}(t);case\"setImageSource\":return function(t){return bi(t)?P(t[Rt])?t:(Ue(\"Action has no image url\",t),null):null}(t);case\"setStyle\":return function(t){return bi(t)?x(t[Rt])?t:(Ue(\"Action has no CSS properties\",t),null):null}(t);case\"resize\":return function(t){return bi(t)?x(t[Rt])?t:(Ue(\"Action has no height or width\",t),null):null}(t);case\"move\":return function(t){return bi(t)?x(t[Rt])?t:(Ue(\"Action has no left, top or position\",t),null):null}(t);case\"remove\":return function(t){return bi(t)?t:null}(t);case\"rearrange\":return function(t){return bi(t)?x(t[Rt])?t:(Ue(\"Action has no from or to\",t),null):null}(t);case\"redirect\":return function(t){const{content:e}=t;return $(e)?(Ue(\"Action has no url\",t),null):(t.content=ai(e,{}),t)}(t);default:return null}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::xo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function xo(t){const e={},n=function(t){return t.orderId}(t);m(n)||(e.id=n);const r=function(t){return t.orderTotal}(t),o=parseFloat(r);isNaN(o)||(e.total=o);const i=function(t){const e=nt(z,at(\",\",t.productPurchasedId));return O(J,e)}(t);return U(i)||(e.purchasedProductIds=i),e}",
            "score": -1.0
        },
        "scripts/at-lsig.js::xr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function xr(){const t=re(),e=t.imsOrgId,n=t.supplementalDataIdParamTimeout;return function(t,e,n){if($(e))return null;if(m(t.Visitor))return null;if(!w(t.Visitor.getInstance))return null;const r=t.Visitor.getInstance(e,{sdidParamExpiry:n});return x(r)&&w(r.isAllowed)&&r.isAllowed()?r:null}(Kt,e,n)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::xs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function xs(t,e){!function(t,e,n){t.on(e,n)}(ys,t,e)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::xt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function xt(t){return!!t.execute&&!!t.execute.mboxes&&t.execute.mboxes.length||0}",
            "score": -1.0
        },
        "scripts/at-lsig.js::xu": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function xu(){for(;vu.length>0;){const t=vu.pop(),{viewName:e,page:n}=t,r=Nc(e,t);m(r)?n&&Lc(t):bu(r)}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::y": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "y=function(){return!0}",
            "score": -1.0
        },
        "scripts/at-lsig.js::yc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function yc(t){const e=Bn(t[Lt]),n=t[Rt],r=Number(n.from),o=Number(n.to);if(isNaN(r)&&isNaN(o))return Ue('Rearrange has incorrect \"from\" and \"to\" indexes',t),dn(t);const i=j(Bn(e).children());const c=i[r],s=i[o];return Fn(c)&&Fn(s)?(Ue(\"Rendering action\",t),$e({action:t}),r<o?rr(c,s):or(c,s),ln(t)):(Ue(\"Rearrange elements are missing\",t),dn(t))}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ye": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ye(t){try{return decodeURIComponent(t)}catch(e){return t}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::yi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "yi=t=>!m(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::yn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function yn(){return gn(Kt,\"TARGET\")}",
            "score": -1.0
        },
        "scripts/at-lsig.js::yo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function yo(t){return m(t)?function(){const t=we(\"at_preview_mode\");if($(t))return{};try{return JSON.parse(t)}catch(t){return{}}}():t}",
            "score": -1.0
        },
        "scripts/at-lsig.js::yr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function yr(t,e,n){if(m(t))return ln({});return hn(function(t,e){if(!w(t.getVisitorValues))return ln({});const n=[\"MCMID\",\"MCAAMB\",\"MCAAMLH\"];return e&&n.push(\"MCOPTOUT\"),fn(e=>{t.getVisitorValues(t=>e(t),n)})}(t,n),e,\"Visitor API requests timed out\")['catch'](vr)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::yt": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "yt=t=>Promise.resolve(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::z": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function z(t){return m(t)?\"\":F.call(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::zc": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function zc(t,e,n,r){const{type:o,selector:i,eventToken:c}=n,s=D(o+\":\"+i+\":\"+c),u=()=>r(t,o,c);!function(t,e){\"click\"===t&&Hi(\"at-element-click-tracking\",e)}(o,i),e?function(t,e){return!m(Vc[t])&&!m(Vc[t][e])}(t,s)||(Fc(t,o,i),function(t,e,n){Vc[t]=Vc[t]||{},Vc[t][e]=n}(t,s,u),kc(o,u,i)):kc(o,u,i)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::ze": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function ze(t){Fe(Kt,\"serverTraces\",t,Pe())}",
            "score": -1.0
        },
        "scripts/at-lsig.js::zi": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function zi(t,e){return Bn(e).removeAttr(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::zn": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function zn(t){return on(\"<div/>\").append(t)}",
            "score": -1.0
        },
        "scripts/at-lsig.js::zo": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "zo=t=>x(t)&&Fo(t)",
            "score": -1.0
        },
        "scripts/at-lsig.js::zr": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function zr(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{return t.getHighEntropyValues(Vr).then(t=>{const{platformVersion:n,architecture:r,bitness:o,model:i,fullVersionList:c}=t;return h({},e,{model:i,platformVersion:n,browserUAWithFullVersion:Br(c),architecture:r,bitness:o})})}catch(t){return ln(e)}}",
            "score": -1.0
        },
        "scripts/at-lsig.js::zs": {
            "changes_after_merge": 0,
            "file_path": "scripts/at-lsig.js",
            "merged_function": "function zs(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{prefetch:e={}}=t,{execute:n={}}=t,{pageLoad:r={}}=n,{mboxes:o=[]}=n,{pageLoad:i={}}=e,{views:c=[]}=e,{mboxes:s=[]}=e;return U(r)&&U(o)&&U(i)&&U(c)&&U(s)}",
            "score": -1.0
        },
        "scripts/commerce.js::getAuthorization": {
            "changes_after_merge": 0,
            "file_path": "scripts/commerce.js",
            "merged_function": "function getAuthorization() {\n  const authHeader = new Headers();\n  if (localStorage.getItem('authToken')) {\n    authHeader.append('Authorization', `Bearer ${localStorage.getItem('authToken')}`);\n  } else if (getCookie('ProfileData')) {\n    const { customer_token: apiToken } = getCookie('ProfileData');\n    authHeader.append('authentication-token', apiToken);\n  } else if (getCookie('apiToken')) {\n    const apiToken = getCookie('apiToken');\n    authHeader.append('authentication-token', apiToken);\n  }\n  return authHeader;\n}",
            "score": -1.0
        },
        "scripts/commerce.js::getCommerceBase": {
            "changes_after_merge": 0,
            "file_path": "scripts/commerce.js",
            "merged_function": "function getCommerceBase() {\n  return window.DanaherConfig !== undefined ? window.DanaherConfig.intershopDomain + window.DanaherConfig.intershopPath : 'https://shop.lifesciences.danaher.com/INTERSHOP/rest/WFS/DANAHERLS-LSIG-Site/-';\n}",
            "score": -1.0
        },
        "scripts/commerce.js::isLoggedInUser": {
            "changes_after_merge": 0,
            "file_path": "scripts/commerce.js",
            "merged_function": "function isLoggedInUser() {\n  return getCookie('rationalized_id');\n}",
            "score": -1.0
        },
        "scripts/delayed.js::getAuthToken": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function getAuthToken() {\n  if (!refresh) {\n    refresh = true;\n    const formData = 'grant_type=anonymous&scope=openid+profile&client_id=';\n    const authRequest = await fetch(`${baseURL}/token`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: formData,\n    });\n    if (authRequest.ok) {\n      const data = await authRequest.json();\n      const expiresIn = data.expires_in * 1000;\n      setCookie('apiToken', data.access_token, expiresIn, '/');\n      localStorage.setItem('refreshToken', data.refresh_token);\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::loadAT": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function loadAT() {\n  function targetPageParams() {\n    return {\n      'at_property': '6aeb619e-92d9-f4cf-f209-6d88ff58af6a'\n    };\n  }\n  loadScript('/scripts/at-lsig.js');\n}",
            "score": -1.0
        },
        "scripts/delayed.js::loadAccessibe": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function loadAccessibe() {\n  loadScript('/scripts/lib-accessibe.js');\n}",
            "score": -1.0
        },
        "scripts/delayed.js::loadGTM": {
            "changes_after_merge": 3,
            "file_path": "scripts/delayed.js",
            "merged_function": "function loadGTM() {\n  const scriptTag = document.createElement('script');\n  scriptTag.innerHTML = `\n      // googleTagManager\n      (function (w, d, s, l, i) {\n          w[l] = w[l] || [];\n          w[l].push({\n              'gtm.start':\n                  new Date().getTime(), event: 'gtm.js'\n          });\n          var f = d.getElementsByTagName(s)[0],\n              j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';\n          j.async = true;\n          j.src =\n              'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n          f.parentNode.insertBefore(j, f);\n      })(window, document, 'script', 'dataLayer', 'GTM-KCBGM2N');\n      `;\n  document.head.prepend(scriptTag);\n}",
            "score": -0.8604651162790697
        },
        "scripts/delayed.js::targetPageParams": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function targetPageParams() {\n    return {\n      'at_property': '6aeb619e-92d9-f4cf-f209-6d88ff58af6a'\n    };\n  }",
            "score": -1.0
        },
        "scripts/dom-builder.js::a": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function a(...items) { return domEl('a', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::article": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function article(...items) { return domEl('article', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::button": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function button(...items) { return domEl('button', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::dd": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function dd(...items) { return domEl('dd', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::div": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function div(...items) { return domEl('div', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::dl": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function dl(...items) { return domEl('dl', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::domEl": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function domEl(tag, ...items) {\n  const element = document.createElement(tag);\n\n  if (!items || items.length === 0) return element;\n\n  if (!(items[0] instanceof Element || items[0] instanceof HTMLElement) && typeof items[0] === 'object') {\n    const [attributes, ...rest] = items;\n    items = rest;\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      if (!key.startsWith('on')) {\n        element.setAttribute(key, Array.isArray(value) ? value.join(' ') : value);\n      } else {\n        element.addEventListener(key.substring(2).toLowerCase(), value);\n      }\n    });\n  }\n\n  items.forEach((item) => {\n    item = item instanceof Element || item instanceof HTMLElement\n      ? item\n      : document.createTextNode(item);\n    element.appendChild(item);\n  });\n\n  return element;\n}",
            "score": -1.0
        },
        "scripts/dom-builder.js::dt": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function dt(...items) { return domEl('dt', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::fieldset": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function fieldset(...items) { return domEl('fieldset', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::form": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function form(...items) { return domEl('form', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::h1": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function h1(...items) { return domEl('h1', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::h2": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function h2(...items) { return domEl('h2', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::h3": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function h3(...items) { return domEl('h3', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::h4": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function h4(...items) { return domEl('h4', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::h5": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function h5(...items) { return domEl('h5', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::h6": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function h6(...items) { return domEl('h6', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::hr": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function hr(...items) { return domEl('hr', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::i": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function i(...items) { return domEl('i', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::iframe": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function iframe(...items) { return domEl('iframe', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::img": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function img(...items) { return domEl('img', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::input": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function input(...items) { return domEl('input', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::label": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function label(...items) { return domEl('label', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::li": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function li(...items) { return domEl('li', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::nav": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function nav(...items) { return domEl('nav', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::ol": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function ol(...items) { return domEl('ol', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::option": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function option(...items) { return domEl('option', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::p": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function p(...items) { return domEl('p', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::select": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function select(...items) { return domEl('select', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::span": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function span(...items) { return domEl('span', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::strong": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function strong(...items) { return domEl('strong', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::table": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function table(...items) { return domEl('table', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::tbody": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function tbody(...items) { return domEl('tbody', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::td": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function td(...items) { return domEl('td', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::textarea": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function textarea(...items) { return domEl('textarea', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::th": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function th(...items) { return domEl('th', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::thead": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function thead(...items) { return domEl('thead', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::time": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function time(...items) { return domEl('time', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::tr": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function tr(...items) { return domEl('tr', ...items); }",
            "score": -1.0
        },
        "scripts/dom-builder.js::ul": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-builder.js",
            "merged_function": "function ul(...items) { return domEl('ul', ...items); }",
            "score": -1.0
        },
        "scripts/ffetch.js::all": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function all(upstream) {\n  const result = [];\n  for await (const entry of upstream) {\n    result.push(entry);\n  }\n  return result;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::assignOperations": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function assignOperations(generator, context) {\n  // operations that return a new generator\n  function createOperation(fn) {\n    return (...rest) => assignOperations(fn.apply(null, [generator, context, ...rest]), context);\n  }\n  const operations = {\n    skip: createOperation(skip),\n    limit: createOperation(limit),\n    slice: createOperation(slice),\n    map: createOperation(map),\n    filter: createOperation(filter),\n    follow: createOperation(follow),\n  };\n\n  // functions that either return the upstream generator or no generator at all\n  const functions = {\n    chunks: chunks.bind(null, generator, context),\n    all: all.bind(null, generator, context),\n    first: first.bind(null, generator, context),\n    withFetch: withFetch.bind(null, generator, context),\n    withHtmlParser: withHtmlParser.bind(null, generator, context),\n    sheet: sheet.bind(null, generator, context),\n  };\n\n  Object.assign(generator, operations, functions);\n  Object.defineProperty(generator, 'total', { get: () => context.total });\n  return generator;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::chunks": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function chunks(upstream, context, chunkSize) {\n  context.chunkSize = chunkSize;\n  return upstream;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::createOperation": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function createOperation(fn) {\n    return (...rest) => assignOperations(fn.apply(null, [generator, context, ...rest]), context);\n  }",
            "score": -1.0
        },
        "scripts/ffetch.js::fetch": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "fetch = (...rest) => window.fetch.apply(null, rest)",
            "score": -1.0
        },
        "scripts/ffetch.js::ffetch": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function ffetch(url) {\n  let chunkSize = 255;\n  const fetch = (...rest) => window.fetch.apply(null, rest);\n  const parseHtml = (html) => new window.DOMParser().parseFromString(html, 'text/html');\n\n  try {\n    if ('connection' in window.navigator && window.navigator.connection.saveData === true) {\n      // request smaller chunks in save data mode\n      chunkSize = 64;\n    }\n  } catch (e) {\n    /* ignore */\n  }\n\n  const context = { chunkSize, fetch, parseHtml };\n  const generator = request(url, context);\n\n  return assignOperations(generator, context);\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::filter": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* filter(upstream, context, fn) {\n  for await (const entry of upstream) {\n    if (fn(entry)) {\n      yield entry;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::first": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function first(upstream) {\n  /* eslint-disable-next-line no-unreachable-loop */\n  for await (const entry of upstream) {\n    return entry;\n  }\n  return null;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::follow": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function follow(upstream, context, name, newName, maxInFlight = 5) {\n  const { fetch, parseHtml } = context;\n  return map(\n    upstream,\n    context,\n    async (entry) => {\n      const value = entry[name];\n      if (value) {\n        const resp = await fetch(value);\n        return { ...entry, [newName || name]: resp.ok ? parseHtml(await resp.text()) : null };\n      }\n      return entry;\n    },\n    maxInFlight,\n  );\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::limit": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* limit(upstream, context, aLimit) {\n  let yielded = 0;\n  for await (const entry of upstream) {\n    yield entry;\n    yielded += 1;\n    if (yielded === aLimit) {\n      return;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::map": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* map(upstream, context, fn, maxInFlight = 5) {\n  const promises = [];\n  for await (let entry of upstream) {\n    promises.push(fn(entry));\n    if (promises.length === maxInFlight) {\n      for (entry of promises) {\n        entry = await entry;\n        if (entry) yield entry;\n      }\n      promises.splice(0, promises.length);\n    }\n  }\n  for (let entry of promises) {\n    entry = await entry;\n    if (entry) yield entry;\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::parseHtml": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "parseHtml = (html) => new window.DOMParser().parseFromString(html, 'text/html')",
            "score": -1.0
        },
        "scripts/ffetch.js::request": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* request(url, context) {\n  const { chunkSize, sheetName, fetch } = context;\n  for (let offset = 0, total = Infinity; offset < total; offset += chunkSize) {\n    const params = new URLSearchParams(`offset=${offset}&limit=${chunkSize}`);\n    if (sheetName) params.append('sheet', sheetName);\n    const resp = await fetch(`${url}?${params.toString()}`);\n    if (resp.ok) {\n      const json = await resp.json();\n      total = json.total;\n      context.total = total;\n      for (const entry of json.data) yield entry;\n    } else {\n      return;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::sheet": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function sheet(upstream, context, sheetName) {\n  context.sheetName = sheetName;\n  return upstream;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::skip": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* skip(upstream, context, from) {\n  let skipped = 0;\n  for await (const entry of upstream) {\n    if (skipped < from) {\n      skipped += 1;\n    } else {\n      yield entry;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::slice": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function slice(upstream, context, from, to) {\n  return limit(skip(upstream, context, from), context, to - from);\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::withFetch": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function withFetch(upstream, context, fetch) {\n  context.fetch = fetch;\n  return upstream;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::withHtmlParser": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function withHtmlParser(upstream, context, parseHtml) {\n  context.parseHtml = parseHtml;\n  return upstream;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::addClasses": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::buildBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::createOptimizedPicture": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.dataset.blockName = shortBlockName;\n    block.dataset.blockStatus = 'initialized';\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateButtons": {
            "changes_after_merge": 7,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          a.className = 'button primary'; // default\n          up.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}",
            "score": -0.6744186046511628
        },
        "scripts/lib-franklin.js::decorateIcons": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function decorateIcons(element) {\n  // Prepare the inline sprite\n  let svgSprite = document.getElementById('franklin-svg-sprite');\n  if (!svgSprite) {\n    const div = document.createElement('div');\n    div.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"franklin-svg-sprite\" style=\"display: none\"></svg>';\n    svgSprite = div.firstElementChild;\n    document.body.append(div.firstElementChild);\n  }\n\n  // Download all new icons\n  const icons = [...element.querySelectorAll('span.icon')];\n  await Promise.all(icons.map(async (span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    if (!ICONS_CACHE[iconName]) {\n      ICONS_CACHE[iconName] = true;\n      try {\n        const response = await fetch(`${window.hlx.codeBasePath}/icons/${iconName}.svg`);\n        if (!response.ok) {\n          ICONS_CACHE[iconName] = false;\n          return;\n        }\n        // Styled icons don't play nice with the sprite approach because of shadow dom isolation\n        const svg = await response.text();\n        if (svg.match(/(<style | class=)/)) {\n          ICONS_CACHE[iconName] = { styled: true, html: svg };\n        } else {\n          ICONS_CACHE[iconName] = {\n            html: svg\n              .replace('<svg', `<symbol id=\"icons-sprite-${iconName}\"`)\n              .replace(/ width=\".*?\"/, '')\n              .replace(/ height=\".*?\"/, '')\n              .replace('</svg>', '</symbol>'),\n          };\n        }\n      } catch (error) {\n        ICONS_CACHE[iconName] = false;\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    }\n  }));\n\n  const symbols = Object\n    .keys(ICONS_CACHE).filter((k) => !svgSprite.querySelector(`#icons-sprite-${k}`))\n    .map((k) => ICONS_CACHE[k])\n    .filter((v) => !v.styled)\n    .map((v) => v.html)\n    .join('\\n');\n  svgSprite.innerHTML += symbols;\n\n  icons.forEach((span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    const parent = span.firstElementChild?.tagName === 'A' ? span.firstElementChild : span;\n    // Styled icons need to be inlined as-is, while unstyled ones can leverage the sprite\n    if (ICONS_CACHE[iconName].styled) {\n      parent.innerHTML = ICONS_CACHE[iconName].html;\n    } else {\n      parent.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\"><use href=\"#icons-sprite-${iconName}\"/></svg>`;\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::decorateSections": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateTemplateAndTheme": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateTemplateAndTheme() {\n  const addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::defer": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  }",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::fetchPlaceholders": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n        .then((resp) => {\n          if (resp.ok) {\n            return resp.json();\n          }\n          throw new Error(`${resp.status}: ${resp.statusText}`);\n        }).then((json) => {\n          const placeholders = {};\n          json.data\n            .filter((placeholder) => placeholder.Key)\n            .forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n          window.placeholders[prefix] = placeholders;\n          resolve();\n        }).catch((error) => {\n          // error loading placeholders\n          window.placeholders[prefix] = {};\n          reject(error);\n        });\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return window.placeholders[prefix];\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getAllMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getAllMetadata(scope) {\n  return [...document.head.querySelectorAll(`meta[property^=\"${scope}:\"],meta[name^=\"${scope}-\"]`)]\n    .reduce((res, meta) => {\n      const id = toClassName(meta.name\n        ? meta.name.substring(scope.length + 1)\n        : meta.getAttribute('property').split(':')[1]);\n      res[id] = meta.getAttribute('content');\n      return res;\n    }, {});\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getBlockConfig": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getBlockConfig(block) {\n  const { blockName } = block.dataset;\n  const cssPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`;\n  const jsPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.js`;\n  const original = { blockName, cssPath, jsPath };\n  return (window.hlx.patchBlockConfig || [])\n    .filter((fn) => typeof fn === 'function')\n    .reduce((config, fn) => fn(config, original), { blockName, cssPath, jsPath });\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::getMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::hashCode": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0)",
            "score": -1.0
        },
        "scripts/lib-franklin.js::init": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function init() {\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadBlock": {
            "changes_after_merge": 2,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlock(block) {\n  const status = block.dataset.blockStatus;\n  if (status !== 'loading' && status !== 'loaded') {\n    block.dataset.blockStatus = 'loading';\n    const { blockName } = block.dataset;\n    try {\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(`../blocks/${blockName}/${blockName}.js`);\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.dataset.blockStatus = 'loaded';\n  }\n}",
            "score": -0.9069767441860466
        },
        "scripts/lib-franklin.js::loadBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadCSS": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadCSS(href) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.append(link);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadFooter": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadHeader": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadModule": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadModule(name, jsPath, cssPath, ...args) {\n  const cssLoaded = cssPath ? loadCSS(cssPath) : Promise.resolve();\n  const decorationComplete = jsPath\n    ? new Promise((resolve) => {\n      (async () => {\n        let mod;\n        try {\n          mod = await import(jsPath);\n          if (mod.default) {\n            await mod.default.apply(null, args);\n          }\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.log(`failed to load module for ${name}`, error);\n        }\n        resolve(mod);\n      })();\n    })\n    : Promise.resolve();\n  return Promise.all([cssLoaded, decorationComplete])\n    .then(([, api]) => api);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadScript(src, attrs) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > script[src=\"${src}\"]`)) {\n      const script = document.createElement('script');\n      script.src = src;\n      if (attrs) {\n      // eslint-disable-next-line no-restricted-syntax, guard-for-in\n        for (const attr in attrs) {\n          script.setAttribute(attr, attrs[attr]);\n        }\n      }\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.append(script);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::normalizeHeadings": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::parsePluginParams": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function parsePluginParams(id, config) {\n  const pluginId = !config\n    ? id.split('/').splice(id.endsWith('/') ? -2 : -1, 1)[0].replace(/\\.js/, '')\n    : id;\n  const pluginConfig = {\n    load: 'eager',\n    ...(typeof config === 'string' || !config\n      ? { url: (config || id).replace(/\\/$/, '') }\n      : config),\n  };\n  pluginConfig.options ||= {};\n  return { id: pluginId, config: pluginConfig };\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::readBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope > div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::sampleRUM": {
            "changes_after_merge": 2,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      const urlSanitizers = {\n        full: () => window.location.href,\n        origin: () => window.location.origin,\n        path: () => window.location.href.replace(/\\?.*$/, ''),\n      };\n      // eslint-disable-next-line object-curly-newline, max-len\n      window.hlx.rum = { weight, id, random, isSelected, sampleRUM, sanitizeURL: urlSanitizers[window.hlx.RUM_MASK_URL || 'path'] };\n    }\n    const { weight, id } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n  } catch (error) {\n    // something went wrong\n  }\n}",
            "score": -0.9069767441860466
        },
        "scripts/lib-franklin.js::sendPing": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      }",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::setup": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.RUM_MASK_URL = 'full';\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::toCamelCase": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::toClassName": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-').replace(/-+/g, '-').replace(/^-|-$/g, '')\n    : '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::updateSectionsStatus": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.dataset.sectionStatus;\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.dataset.sectionStatus = 'loading';\n        break;\n      } else {\n        section.dataset.sectionStatus = 'loaded';\n        section.style.display = null;\n      }\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::waitForLCP": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.dataset.blockName));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.body.style.display = null;\n  const lcpCandidate = document.querySelector('main img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/modal.js::getModal": {
            "changes_after_merge": 0,
            "file_path": "scripts/modal.js",
            "merged_function": "async function getModal(modalId, createContent, addEventListeners) {\n  let dialogElement = document.getElementById(modalId);\n  if (!dialogElement) {\n    const contentHTML = createContent ? createContent() : '';\n    // eslint-disable-next-line import/no-cycle\n    const { default: quoteModal, addRequestforQuote } = await import('./quote-modal.js');\n    const modalContent = () => div(\n      div(\n        { class: 'justify-between flex item-center mb-2 text-2xl font-bold leading-6 text-gray-900' },\n        div(\n          { class: 'modal-title flex items-center gap-2' },\n          span({ class: 'icon icon-chat-bubble flex items-center justify-center flex-shrink-0 mx-auto bg-gray-200 rounded-full w-10 h-10 p-2' }),\n          'Request for Quote',\n        ),\n        p({ class: 'close-button', name: 'close' }, span({ class: 'icon icon-close cursor-pointer' })),\n      ),\n      quoteModal ? quoteModal() : '',\n    );\n    dialogElement = document.createElement('dialog');\n    dialogElement.id = modalId;\n    dialogElement.append(modalContent());\n    dialogElement.append(contentHTML);\n    decorateIcons(dialogElement);\n    document.body.appendChild(dialogElement);\n    addEventListeners?.(dialogElement);\n    dialogElement.querySelector('button[name=\"continue\"]')?.addEventListener('click', () => {\n      addRequestforQuote(dialogElement);\n    });\n    dialogElement.querySelector('button[name=\"submit\"]')?.addEventListener('click', () => {\n      addRequestforQuote(dialogElement, true);\n    });\n    dialogElement.querySelector('.quote-textarea')?.addEventListener('keypress', () => {\n      const quoteText = document.querySelector('.quote-textarea');\n      quoteText.classList.remove('border-red');\n      document.querySelector('.quote-error').classList.add('hidden');\n    });\n  }\n  dialogElement.className = 'w-full max-w-xl px-6 py-4 overflow-hidden text-left align-middle transition-all transform bg-white rounded-md shadow-xl';\n  return dialogElement;\n}",
            "score": -1.0
        },
        "scripts/modal.js::modalContent": {
            "changes_after_merge": 0,
            "file_path": "scripts/modal.js",
            "merged_function": "modalContent = () => div(\n      div(\n        { class: 'justify-between flex item-center mb-2 text-2xl font-bold leading-6 text-gray-900' },\n        div(\n          { class: 'modal-title flex items-center gap-2' },\n          span({ class: 'icon icon-chat-bubble flex items-center justify-center flex-shrink-0 mx-auto bg-gray-200 rounded-full w-10 h-10 p-2' }),\n          'Request for Quote',\n        ),\n        p({ class: 'close-button', name: 'close' }, span({ class: 'icon icon-close cursor-pointer' })),\n      ),\n      quoteModal ? quoteModal() : '',\n    )",
            "score": -1.0
        },
        "scripts/quote-modal.js::addRequestforQuote": {
            "changes_after_merge": 0,
            "file_path": "scripts/quote-modal.js",
            "merged_function": "function addRequestforQuote(dialogElement, gotoQuoteCart = false) {\n  const quoteText = document.querySelector('.quote-textarea');\n  if (!quoteText?.value) {\n    quoteText.classList.add('border-red-500');\n    quoteText.classList.remove('border-gray-300');\n    document.querySelector('.quote-error').classList.remove('hidden');\n    return false;\n  }\n  quoteText.classList.remove('border-red-500');\n  const image = document.getElementsByClassName('imageviewer')?.item(0)?.getElementsByTagName('img')?.item(0)\n    ?.getAttribute('src') ? `${window.location.origin}${document.getElementsByClassName('imageviewer')?.item(0)?.getElementsByTagName('img')?.item(0)}`\n      ?.getAttribute('src') : undefined;\n  const opco = dialogElement.getAttribute('data-opco');\n  const referrerTitle = dialogElement.getAttribute('data-referrer-title');\n  const country = dialogElement.getAttribute('country');\n  const data = {\n    quantity: {\n      type: 'Quantity',\n      value: 1,\n      unit: 'N/A',\n    },\n    productSKU: ' ',\n    image,\n    brand: opco,\n    productDescription: quoteText.value,\n    referrer: window.location.href,\n    referrerTitle: referrerTitle || document.title.replace('| Danaher Lifesciences', '').replace('| Danaher Life Sciences', '').trim(),\n    country,\n  };\n  const quoteProduct = {\n    event: 'addToQuote',\n    productName: quoteText.value,\n    productID: ' ',\n    productPrice: ' ',\n    productCategory: ' ',\n    productQuantity: '1',\n    productType: ' ',\n    productSubtype: ' ',\n    productEshopEnabled: ' ',\n    productAttributes: ' ',\n    productQuotable: true,\n    productPriceVisible: ' ',\n  };\n  window.dataLayer?.push(quoteProduct);\n  const formData = JSON.stringify(data);\n  const authHeader = getAuthorization();\n  if (authHeader && (authHeader.has('authentication-token') || authHeader.has('Authorization'))) {\n    const quoteRequest = fetch(`${baseURL}/rfqcart/-`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', ...Object.fromEntries(authHeader) },\n      body: formData,\n    });\n    quoteRequest.then(async (response) => {\n      if (response.status === 200) {\n        if (!gotoQuoteCart) {\n          document.querySelector('.quote-textarea').value = '';\n          const responseJson = await response.json();\n          const addedProduct = responseJson?.items?.slice(-1)?.at(0);\n          const { default: getToast } = await import('./toast.js');\n          await getToast('quote-toast', addedProduct);\n          dialogElement.close();\n        } else {\n          window.location.href = window.DanaherConfig.quoteCartPath;\n        }\n      }\n    });\n  }\n  return false;\n}",
            "score": -1.0
        },
        "scripts/quote-modal.js::quoteModal": {
            "changes_after_merge": 0,
            "file_path": "scripts/quote-modal.js",
            "merged_function": "function quoteModal() {\n  return div(\n    div({ class: 'mt-3' }, label({ class: 'text-sm text-gray-500' }, 'Describe your problem or desired solution to add to your quote cart and one of our experts will assist in find the best solution for you')),\n    div({ class: 'mt-3' }, textarea({ class: 'quote-textarea block w-full px-1 py-2 border border-gray-300 rounded-md shadow-sm focus:border-gray-300 focus:ring-gray-300 sm:text-sm', name: 'quote', rows: '4' })),\n    div(\n      { class: 'flex justify-between gap-4 mt-4 quote sm:flex-row flex-col' },\n      button({ class: 'p-2 text-sm text-danaherpurple-500 bg-white border-2 border-danaherpurple-500 hover:text-white hover:bg-danaherpurple-800 rounded-full', name: 'continue' }, 'Add and continue browsing'),\n      button({ class: 'py-2 text-sm btn btn-primary-purple rounded-full', name: 'submit' }, 'Add and complete request'),\n    ),\n    div(\n      { class: 'p-4 mt-4 rounded-md bg-red-50 hidden quote-error' },\n      div({ class: 'flex gap-2' }, span({ class: 'icon icon-xcircle w-4 h-4 text-red-600' }), p({ class: 'text-xs font-medium text-red-600' }, 'Please enter your problem or desired solution.')),\n    ),\n    div({ class: 'flex flex-col p-4 mt-4 rounded-md bg-danaherlightblue-500 bg-opacity-10' }, p({ class: 'text-xs font-medium text-gray-700 m-0' }, 'Quote Tip.'), p({ class: 'font-sans text-xs font-normal text-gray-700' }, 'Be as detailed as possible so we can best serve your request.')),\n  );\n}",
            "score": -1.0
        },
        "scripts/schema.js::buildArticleSchema": {
            "changes_after_merge": 0,
            "file_path": "scripts/schema.js",
            "merged_function": "function buildArticleSchema() {\n  const data = {\n    '@context': 'http://schema.org',\n    '@type': 'Article',\n    '@id': `https://lifesciences.danaher.com${makePublicUrl(window.location.pathname)}`,\n    headline: getMetadata('og:title'),\n    image: getMetadata('og:image'),\n    datePublished: getMetadata('publishdate'),\n    publisher: {\n      '@type': 'Organization',\n      name: 'Danaher Life Sciences',\n      logo: {\n        '@type': 'ImageObject',\n        url: 'https://lifesciences.danaher.com/content/dam/danaher/brand-logos/danaher/Logo.svg',\n      },\n    },\n    description: getMetadata('description'),\n    mainEntityOfPage: {\n      '@type': 'WebPage',\n      '@id': `https://lifesciences.danaher.com${makePublicUrl(window.location.pathname)}`,\n    },\n  };\n\n  if (getMetadata('creationdate')) data.datePublished = getMetadata('creationdate');\n  if (getMetadata('updatedate')) data.dateModified = getMetadata('updatedate');\n  if (getMetadata('authorname')) {\n    data.author = {\n      '@type': 'Person',\n      name: getMetadata('authorname'),\n    };\n  }\n\n  setJsonLd(data, 'article');\n}",
            "score": -1.0
        },
        "scripts/scripts.js::buildAutoBlocks": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildAutoBlocks(main) {\n  try {\n    buildHeroBlock(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::buildHeroBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildHeroBlock(main) {\n  const h1 = main.querySelector('h1');\n  const picture = main.querySelector('picture');\n  // eslint-disable-next-line no-bitwise\n  if (h1 && picture && (h1.compareDocumentPosition(picture) & Node.DOCUMENT_POSITION_PRECEDING)) {\n    const section = document.createElement('div');\n    section.append(buildBlock('hero', { elems: [picture, h1] }));\n    main.prepend(section);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::buildVideo": {
            "changes_after_merge": 5,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildVideo(main) {\n  main.querySelectorAll('a[href*=\"youtube.com\"],a[href*=\"vimeo.com\"]').forEach((link) => {\n    if (link.closest('.block.embed') === null) {\n      link.parentElement.replaceWith(buildBlock('embed', { elems: [link] }));\n      // const observer = new IntersectionObserver((entries) => {\n      //   if (entries.some((e) => e.isIntersecting)) {\n      //     observer.disconnect();\n      //     const [, , video] = link.pathname.split('/');\n      //     const playerURL = link.href.indexOf('youtube') > -1 ? 'https://www.youtube.com/embed/' : 'https://player.vimeo.com/video/';\n      //     const embedHTML = `<div style=\"left: 0; width: 100%; height: 0; position: relative; padding-bottom: 56.25%;\">\n      //         <iframe src=\"${playerURL}${video}\" \n      //         style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" \n      //         frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen  \n      //         title=\"Video Player\" loading=\"lazy\"></iframe>\n      //       </div>`;\n      //     link.parentElement.innerHTML = embedHTML;\n      //   }\n      // });\n      // observer.observe(link.parentElement);\n    }\n  });\n}",
            "score": -0.7674418604651163
        },
        "scripts/scripts.js::content": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "content = () => {\n\n  }",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::decorateMain": {
            "changes_after_merge": 18,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n}",
            "score": -0.16279069767441856
        },
        "scripts/scripts.js::decorateModals": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateModals(main) {\n  const ctaModalButton = main.querySelector('.ctasection p');\n  const quoteModalContent = () => div(\n    div(\n      { class: 'justify-between flex item-center mb-2 text-2xl font-bold leading-6 text-gray-900' },\n      div(\n        { class: 'modal-title flex items-center gap-2' },\n        span({ class: 'icon icon-chat-bubble' }),\n        'Request for Quote',\n      ),\n      p({ class: 'close-button', name: 'close' }, span({ class: 'icon icon-icon-close cursor-pointer' })),\n    ),\n    div({ class: 'mt-3' }, label({ class: 'text-sm text-gray-500' }, 'Describe your problem or desired solution to add to your quote cart and one of our experts will assist in find the best solution for you')),\n    div({ class: 'mt-3' }, textarea({ class: 'quote-textarea', name: 'quote', rows: '4' })),\n    div(\n      { class: 'flex justify-between gap-4 mt-4 quote' },\n      button({ class: 'p-2 text-sm btn-outline-trending-brand rounded-full', name: 'continue' }, 'Add and continue browsing'),\n      button({ class: 'py-2 text-sm btn btn-primary-purple rounded-full', name: 'submit' }, 'Add and complete request'),\n    ),\n    div(\n      { class: 'p-4 mt-4 rounded-md bg-red-50 hidden quote-error' },\n      div({ class: 'flex gap-2' }, span({ class: 'icon icon-xcircle w-4 h-4 text-red-600' }), p({ class: 'text-xs font-medium text-red-600' }, 'Please enter your problem or desired solution.')),\n    ),\n    div({ class: 'quote-tip' }, p({ class: 'text-xs font-medium text-gray-700 m-0' }, 'Quote Tip.'), p({ class: 'font-sans text-xs font-normal text-gray-700' }, 'Be as detailed as possible so we can best serve your request.')),\n  );\n  // Listens to the custom modal button\n  ctaModalButton?.addEventListener('click', async (e) => {\n    e.preventDefault();\n    const { default: getModal } = await import('./modal/modal.js');\n    const customModal = await getModal('custom-modal', quoteModalContent, (modal) => {\n      modal.querySelector('p[name=\"close\"]')?.addEventListener('click', () => modal.close());\n    });\n    customModal.showModal();\n  });\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::decorateTemplates": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function decorateTemplates(main) {\n  try {\n    const template = toClassName(getMetadata('template'));\n    const templates = Object.keys(TEMPLATE_LIST);\n    if (templates.includes(template)) {\n      const templateName = TEMPLATE_LIST[template];\n      const mod = await import(`../templates/${templateName}/${templateName}.js`);\n      if (mod.default) {\n        await mod.default(main);\n      }\n      document.body.classList.add(templateName);\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateTwoColumnSection": {
            "changes_after_merge": 7,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateTwoColumnSection(main) {\n  main.querySelectorAll('.section.container-two-col').forEach((section) => {\n    const defaultContentWrappers = section.querySelectorAll(':scope > .default-content-wrapper');\n    defaultContentWrappers.forEach((contentWrapper) => {\n      [...contentWrapper.children].forEach((child) => {\n        section.appendChild(child);\n      });\n      let nextElement = contentWrapper.nextElementSibling;\n      while (nextElement && !nextElement.classList.contains('default-content-wrapper')) {\n        section.appendChild(nextElement);\n        nextElement = nextElement.nextElementSibling;\n      }\n      section.removeChild(contentWrapper);\n    });\n\n    const newSection = div();\n    let currentDiv = null;\n    [...section.children].forEach((child) => {\n      const childClone = child.cloneNode(true);\n      if (childClone.tagName === 'H2' && childClone.querySelector(':scope > strong')) {\n        if (currentDiv?.classList.contains('col-right')) {\n          newSection.appendChild(currentDiv);\n        }\n        childClone.className = 'text-gray-900 text-base leading-6 font-bold pt-6 pb-4 my-0';\n        newSection.appendChild(\n          div(\n            { class: 'col-left lg:w-1/3 xl:w-1/4 px-3 pt-4 pl-2 !ml-0' },\n            childClone,\n            domEl('hr', {\n              style: 'height: 10px; width: 54px; border-width: 0px; color: rgb(216, 244, 250); background-color: rgb(216, 244, 250);',\n            }),\n          ),\n        );\n        currentDiv = div({ class: 'col-right w-full mt-4 lg:mt-0 lg:w-2/3 xl:w-3/4 py-6 px-2' });\n      } else if (currentDiv?.classList.contains('col-right')) {\n        currentDiv.appendChild(childClone);\n      }\n    });\n    if (currentDiv) {\n      newSection.appendChild(currentDiv);\n    }\n    section.innerHTML = newSection.innerHTML;\n    section.classList.add('max-w-7xl', 'mx-auto', 'w-full', 'flex', 'flex-wrap', 'mb-5', '!px-0');\n  });\n}",
            "score": -0.6744186046511628
        },
        "scripts/scripts.js::formatDateUTCSeconds": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function formatDateUTCSeconds(date, options = {}) {\n  const dateObj = new Date(0);\n  dateObj.setUTCSeconds(date);\n\n  return dateObj.toLocaleDateString('en-US', {\n    month: 'short',\n    day: '2-digit',\n    year: 'numeric',\n    ...options,\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::generateUUID": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function generateUUID() {\n  return Math.floor(1000 + Math.random() * 9000);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getAuthorization": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getAuthorization() {\n  const authHeader = new Headers();\n  if (localStorage.getItem('authToken')) {\n    authHeader.append('Authorization', `Bearer ${localStorage.getItem('authToken')}`);\n  } else if (getCookie('ProfileData')) {\n    const { customer_token: apiToken } = getCookie('ProfileData');\n    authHeader.append('authentication-token', apiToken);\n  } else if (getCookie('apiToken')) {\n    const apiToken = getCookie('apiToken');\n    authHeader.append('authentication-token', apiToken);\n  }\n  return authHeader;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getCookie": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getCookie(cname) {\n  const cName = `${cname}=`;\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const ca = decodedCookie.split(';');\n  /* eslint-disable-next-line no-plusplus */\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(cName) === 0) {\n      return c.substring(cName.length, c.length);\n    }\n  }\n  return '';\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::getFragmentFromFile": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function getFragmentFromFile(url) {\n  const response = await fetch(url);\n  if (!response.ok) {\n    // eslint-disable-next-line no-console\n    console.error('error loading fragment details', response);\n    return null;\n  }\n  const text = await response.text();\n  if (!text) {\n    // eslint-disable-next-line no-console\n    console.error('fragment details empty', url);\n    return null;\n  }\n  return text;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getParameterByName": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getParameterByName(parameter, url = window.location.href) {\n  /* eslint-disable no-eval */\n  const modifiedParameter = parameter.replace(/[[\\]]/g, '$&');\n  const regex = new RegExp(`[?&]${modifiedParameter}(=([^&#]*)|&|#|$)`);\n  const results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getUser": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getUser() {\n  if (isLoggedInUser()) {\n    return { fname: getCookie('first_name'), lname: getCookie('last_name') };\n  }\n  return undefined;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::imageHelper": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function imageHelper(imageUrl, imageAlt, eager = false) {\n  if (imageUrl.startsWith('/is/image')) {\n    const prodHost = /main--danaher-ls-aem-prod|lifesciences\\.danaher\\.com/;\n    const s7Host = prodHost.test(window.location.host)\n      ? 'https://danaherls.scene7.com'\n      : 'https://s7d9.scene7.com/';\n    return img({\n      src: `${s7Host}${imageUrl}`,\n      alt: imageAlt,\n      loading: eager ? 'eager' : 'lazy',\n      class: 'mb-2 h-48 w-full object-cover',\n    });\n  }\n  const cardImage = createOptimizedPicture(imageUrl, imageAlt, eager, [{ width: '500' }]);\n  cardImage.querySelector('img').className = 'mb-2 h-48 w-full object-cover';\n  return cardImage;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::isLoggedInUser": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function isLoggedInUser() {\n  return getCookie('rationalized_id');\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadDelayed": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::loadEager": {
            "changes_after_merge": 6,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    document.body.classList.add('block');\n    await waitForLCP(LCP_BLOCKS);\n  }\n\n  try {\n    /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n    if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n      loadFonts();\n    }\n  } catch (e) {\n    // do nothing\n  }\n}",
            "score": -0.7209302325581395
        },
        "scripts/scripts.js::loadFonts": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadFonts() {\n  await loadCSS(`${window.hlx.codeBasePath}/styles/fonts.css`);\n  try {\n    if (!window.location.hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (e) {\n    // do nothing\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadLazy": {
            "changes_after_merge": 10,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadBlocks(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  loadFonts();\n\n  sampleRUM('lazy');\n  sampleRUM.observe(main.querySelectorAll('div[data-block-name]'));\n  sampleRUM.observe(main.querySelectorAll('picture > img'));\n}",
            "score": -0.5348837209302326
        },
        "scripts/scripts.js::loadPage": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::loadUTMprams": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadUTMprams() {\n  /* eslint-disable no-eval */\n  const utmParameters = [\n    'utm_campaign',\n    'utm_source',\n    'utm_medium',\n    'utm_content',\n    'utm_term',\n    'utm_previouspage',\n  ];\n\n  utmParameters.forEach((param) => {\n    const value = getParameterByName(param);\n    if (value !== null) {\n      window.localStorage.setItem(`danaher_${param}`, value);\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::makeCoveoApiRequest": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function makeCoveoApiRequest(path, accessParam, payload = {}) {\n  const accessToken = window.DanaherConfig !== undefined\n    ? window.DanaherConfig[accessParam]\n    : 'xx2a2e7271-78c3-4e3b-bac3-2fcbab75323b';\n  const organizationId = window.DanaherConfig !== undefined\n    ? window.DanaherConfig.searchOrg\n    : 'danahernonproduction1892f3fhz';\n  const resp = await fetch(`https://${organizationId}.org.coveo.com${path}?organizationId=${organizationId}`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${accessToken}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  });\n  const jsonData = await resp.json();\n  return jsonData;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::makePublicUrl": {
            "changes_after_merge": 6,
            "file_path": "scripts/scripts.js",
            "merged_function": "function makePublicUrl(url) {\n  const isProd = window.location.hostname.includes('lifesciences.danaher.com');\n  try {\n    const newURL = new URL(url);\n    if (isProd) {\n      if (newURL.pathname.endsWith('.html')) {\n        return newURL.toString();\n      }\n      newURL.pathname += '.html';\n      return newURL.toString();\n    }\n    if (newURL.pathname.endsWith('.html')) {\n      newURL.pathname = newURL.pathname.slice(0, -5);\n      return newURL.toString();\n    }\n    return newURL.toString();\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Invalid URL:', error);\n    return url;\n  }\n}",
            "score": -0.7209302325581395
        },
        "scripts/scripts.js::quoteModalContent": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "quoteModalContent = () => div(\n    div(\n      { class: 'justify-between flex item-center mb-2 text-2xl font-bold leading-6 text-gray-900' },\n      div(\n        { class: 'modal-title flex items-center gap-2' },\n        span({ class: 'icon icon-chat-bubble' }),\n        'Request for Quote',\n      ),\n      p({ class: 'close-button', name: 'close' }, span({ class: 'icon icon-icon-close cursor-pointer' })),\n    ),\n    div({ class: 'mt-3' }, label({ class: 'text-sm text-gray-500' }, 'Describe your problem or desired solution to add to your quote cart and one of our experts will assist in find the best solution for you')),\n    div({ class: 'mt-3' }, textarea({ class: 'quote-textarea', name: 'quote', rows: '4' })),\n    div(\n      { class: 'flex justify-between gap-4 mt-4 quote' },\n      button({ class: 'p-2 text-sm btn-outline-trending-brand rounded-full', name: 'continue' }, 'Add and continue browsing'),\n      button({ class: 'py-2 text-sm btn btn-primary-purple rounded-full', name: 'submit' }, 'Add and complete request'),\n    ),\n    div(\n      { class: 'p-4 mt-4 rounded-md bg-red-50 hidden quote-error' },\n      div({ class: 'flex gap-2' }, span({ class: 'icon icon-xcircle w-4 h-4 text-red-600' }), p({ class: 'text-xs font-medium text-red-600' }, 'Please enter your problem or desired solution.')),\n    ),\n    div({ class: 'quote-tip' }, p({ class: 'text-xs font-medium text-gray-700 m-0' }, 'Quote Tip.'), p({ class: 'font-sans text-xs font-normal text-gray-700' }, 'Be as detailed as possible so we can best serve your request.')),\n  )",
            "score": -1.0
        },
        "scripts/scripts.js::setCookie": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function setCookie(cname, cvalue, expTime = 30 * 1000 * 60 * 60 * 24, path = '/') {\n  const today = new Date();\n  today.setTime(today.getTime() + (expTime));\n  const expires = 'expires='.concat(today.toGMTString());\n  const cookieString = cname.concat('=')\n    .concat(cvalue)\n    .concat(';')\n    .concat(expires)\n    .concat(';path=')\n    .concat(path);\n  document.cookie = cookieString; // cname + '=' + cvalue + ';' + expires + ';path=' + path;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::setJsonLd": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function setJsonLd(data, name) {\n  const existingScript = document.head.querySelector(`script[data-name=\"${name}\"]`);\n  if (existingScript) {\n    existingScript.innerHTML = JSON.stringify(data);\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.type = 'application/ld+json';\n\n  script.innerHTML = JSON.stringify(data);\n  script.dataset.name = name;\n  document.head.appendChild(script);\n}",
            "score": -1.0
        },
        "scripts/toast.js::getToast": {
            "changes_after_merge": 0,
            "file_path": "scripts/toast.js",
            "merged_function": "async function getToast(toastId, addedProduct, addEventListeners) {\n  let toast = document.getElementById(toastId);\n  let title = '';\n  let sku = '';\n  if (addedProduct?.product) title = addedProduct?.product.productName;\n  else if (addedProduct.productSKU?.trim().length > 0) {\n    title = addedProduct?.referrerTitle;\n  } else title = addedProduct?.productDescription;\n  if (addedProduct?.product) sku = addedProduct?.product.sku;\n  else if (addedProduct.productSKU?.trim().length > 0) sku = addedProduct?.productSKU;\n  const content = div(\n    { class: 'flex w-full font-sans' },\n    div(\n      { class: 'flex-shrink-0 p-3' },\n      img({ class: 'w-24 h-24 rounded shadow-lg', src: addedProduct.image ? addedProduct.image : '/default-meta-image.png' }),\n    ),\n    div(\n      { class: 'flex flex-col flex-1 w-8/12 py-3 pr-3' },\n      p({ class: 'text-sm text-lightblue-500' }, 'Added to Quote Cart'),\n      div(\n        { class: 'flex flex-col justify-start flex-1' },\n        p({ class: 'text-sm font-medium leading-5 text-gray-900 line-clamp-2' }, title),\n        p({ class: 'text-sm font-normal leading-5 text-gray-500' }, sku),\n      ),\n    ),\n    div(\n      { class: 'flex text-white rounded-r bg-danaherorange-600 goto-quotecart' },\n      div(\n        { class: 'p-4 my-auto' },\n        button({ class: 'text-sm font-medium', name: 'close', type: 'button' }, 'View'),\n      ),\n    ),\n  );\n  if (!toast) {\n    const toastContent = () => div(\n      { class: 'text-sm w-full font-normal break-normal font-serif tracking-wide leading-5 select-none' },\n      div(\n        { class: 'toast-body' },\n        content,\n      ),\n    );\n    toast = div({ class: 'fixed flex flex-col top-0 bottom-0 left-0 right-0 py-40 px-8 overflow-hidden pointer-events-none z-[9999]' }, div(\n      {\n        class: 'max-w-md w-full space-y-4 bg-white rounded-md pointer-events-auto ml-auto', id: toastId, role: 'alert', 'aria-live': 'assertive', 'aria-atomic': 'true',\n      },\n      div({ class: 'w-auto flex gap-2 items-center justify-between  text-white shadow-xl' }, toastContent()),\n    ));\n    addEventListeners?.(toast);\n    setTimeout(() => {\n      toast.remove();\n    }, 5000);\n    toast.querySelector('.goto-quotecart')?.addEventListener('click', () => {\n      window.location.href = window.DanaherConfig.quoteCartPath;\n    });\n    document.body.append(toast);\n  }\n}",
            "score": -1.0
        },
        "scripts/toast.js::toastContent": {
            "changes_after_merge": 0,
            "file_path": "scripts/toast.js",
            "merged_function": "toastContent = () => div(\n      { class: 'text-sm w-full font-normal break-normal font-serif tracking-wide leading-5 select-none' },\n      div(\n        { class: 'toast-body' },\n        content,\n      ),\n    )",
            "score": -1.0
        },
        "templates/blog/blog.js::buildAutoBlocks": {
            "changes_after_merge": 35,
            "file_path": "templates/blog/blog.js",
            "merged_function": "async function buildAutoBlocks() {\n  const main = document.querySelector('main');\n  const mainWrapper = main.querySelector(':scope > div');\n  let blogH1 = '';\n  let blogHeroP1 = '';\n  let blogHeroP2 = '';\n\n  const firstThreeChildren = Array.from(mainWrapper.children).slice(0, 3);\n  firstThreeChildren.every((child) => {\n    if (child.tagName === 'H1' && !blogH1) {\n      blogH1 = child;\n    } else if (child.tagName === 'P' && !blogHeroP1) {\n      blogHeroP1 = child;\n    } else if (child.tagName === 'P' && !blogHeroP2) {\n      blogHeroP2 = child;\n    }\n\n    const imgElement = child.querySelector(':scope > picture, :scope > img');\n    if (imgElement) {\n      return false;\n    }\n    return true;\n  });\n\n  mainWrapper.removeChild(blogH1);\n  let heroBlock = '';\n  let heroElements = [];\n  if (blogHeroP2) {\n    const blogHeroImage = blogHeroP2.querySelector(':scope > picture, :scope > img');\n    mainWrapper.removeChild(blogHeroP1);\n    mainWrapper.removeChild(blogHeroP2);\n    heroElements = [blogH1, blogHeroP1, blogHeroImage];\n  } else if (blogHeroP1) {\n    const blogHeroImage = blogHeroP1.querySelector(':scope > picture, :scope > img');\n    mainWrapper.removeChild(blogHeroP1);\n    heroElements = [blogH1, blogHeroImage];\n  } else {\n    heroElements = [blogH1];\n  }\n  heroBlock = buildBlock('blog-hero', { elems: heroElements });\n  mainWrapper.prepend(\n    buildBlock('social-media', { elems: [] }),\n    heroBlock,\n  );\n  mainWrapper.append(\n    buildBlock('social-media', { elems: [] }),\n    buildBlock('related-articles', { elems: [] }),\n  );\n  if (Array.from(main.children).length > 1) {\n    main.removeChild(main.querySelector(':scope > div:last-child'));\n  }\n  main.append(\n    buildBlock('popular-articles', { elems: [] }),\n  );\n}",
            "score": 0.627906976744186
        },
        "templates/blog/blog.js::buildJsonLd": {
            "changes_after_merge": 0,
            "file_path": "templates/blog/blog.js",
            "merged_function": "function buildJsonLd() {\n  const data = {\n    '@context': 'http://schema.org',\n    '@type': 'Article',\n    '@id': `https://lifesciences.danaher.com${makePublicUrl(window.location.pathname)}`,\n    headline: getMetadata('og:title'),\n    image: getMetadata('og:image'),\n    datePublished: getMetadata('publishdate'),\n    publisher: {\n      '@type': 'Organization',\n      name: 'Danaher Life Sciences',\n      logo: {\n        '@type': 'ImageObject',\n        url: 'https://lifesciences.danaher.com/content/dam/danaher/brand-logos/danaher/Logo.svg',\n      },\n    },\n    description: getMetadata('description'),\n    mainEntityOfPage: {\n      '@type': 'WebPage',\n      '@id': `https://lifesciences.danaher.com${makePublicUrl(window.location.pathname)}`,\n    },\n  };\n\n  if (getMetadata('creationdate')) data.datePublished = getMetadata('creationdate');\n  if (getMetadata('updatedate')) data.dateModified = getMetadata('updatedate');\n  if (getMetadata('authorname')) {\n    data.author = {\n      '@type': 'Person',\n      name: getMetadata('authorname'),\n    };\n  }\n\n  setJsonLd(\n    data,\n    'article',\n  );\n}",
            "score": -1.0
        },
        "templates/library/library.js::buildAutoBlocks": {
            "changes_after_merge": 0,
            "file_path": "templates/library/library.js",
            "merged_function": "async function buildAutoBlocks() {\n  buildArticleSchema();\n}",
            "score": -1.0
        },
        "templates/productDetail/productDetail.js::buildAutoBlocks": {
            "changes_after_merge": 2,
            "file_path": "templates/productDetail/productDetail.js",
            "merged_function": "async function buildAutoBlocks() {\n  const main = document.querySelector('main');\n  const detailedProduct = main.querySelector('.product-details');\n  detailedProduct.parentElement.parentElement.classList.add(...'stretch'.split(' '));\n  makeCoveoApiRequest('/rest/search/v2', 'productKey', getCoveoApiPayload('productid')).then((productData) => {\n    const allImages = productData.results[0]?.raw.images;\n    const verticalImageGallery = imageSlider(allImages);\n    const defaultContent = div();\n    defaultContent.innerHTML = productData.results[0]?.raw.richdescription;\n    defaultContent.prepend(h1({ class: 'title' }, productData.results[0]?.Title));\n    defaultContent.prepend(span({ class: 'category-name' }, productData.results[0]?.raw.defaultcategoryname));\n    defaultContent.append(\n      div(\n        { class: 'basic-info' },\n        div(p('Brand'), p(productData.results[0]?.raw.opco)),\n        div(p('For additional information'), a({ href: `${productData.results[0]?.raw.externallink}?utm_source=dhls_website`, target: '_blank' }, `Visit ${productData.results[0]?.raw.opco}`)),\n      ),\n    );\n    detailedProduct.innerHTML = '';\n    detailedProduct.append(div({ class: 'product-hero-content' }, div({ class: 'hero-default-content' }, defaultContent), verticalImageGallery));\n  });\n}",
            "score": -0.9069767441860466
        },
        "templates/productDetail/productDetail.js::getCoveoApiPayload": {
            "changes_after_merge": 0,
            "file_path": "templates/productDetail/productDetail.js",
            "merged_function": "function getCoveoApiPayload(qParam) {\n  let sku = window.location.pathname.split('/')?.slice(-1);\n  sku = sku.at(0).split('.').at(0);\n  const payload = {\n    context: {\n      host: 'stage.lifesciences.danaher.com',\n      internal: false,\n    },\n    q: `@${qParam}==${sku}`,\n    pipeline: 'Product Details',\n  };\n  return payload;\n}",
            "score": -1.0
        },
        "templates/productDetail/productDetail.js::imageSlider": {
            "changes_after_merge": 0,
            "file_path": "templates/productDetail/productDetail.js",
            "merged_function": "function imageSlider(allImages) {\n  const slideContent = div(img({ src: allImages[0], class: 'image-content' }));\n  const verticalSlides = div();\n  allImages.map((image, index) => {\n    const imageElement = img({ src: image });\n    let imageClass = (index === 0) ? 'active' : '';\n    if (index > 2) imageClass += ' hidden';\n    if (imageClass !== '') imageElement.className = imageClass;\n    imageElement.addEventListener('click', showImage);\n    verticalSlides.append(imageElement);\n    return image;\n  });\n  const showMore = div({ class: 'view-more' }, 'View More ->');\n  showMore.addEventListener('click', loadMore);\n  verticalSlides.append(showMore);\n  return div({ class: 'vertical-gallery-container' }, div(slideContent, verticalSlides));\n}",
            "score": -1.0
        },
        "templates/productDetail/productDetail.js::loadMore": {
            "changes_after_merge": 1,
            "file_path": "templates/productDetail/productDetail.js",
            "merged_function": "function loadMore() {\n  const allImageContainer = document.querySelector('.vertical-gallery-container div div:has(img.active)');\n  const shownImage = allImageContainer.querySelectorAll('img:not(.hidden)');\n  const notShownImage = allImageContainer.querySelectorAll('img.hidden');\n  if (shownImage.length > 0) {\n    if (shownImage[shownImage.length - 1].nextElementSibling && !shownImage[shownImage.length - 1].nextElementSibling.className.includes('view-more')) {\n      shownImage[0].classList.add('hidden');\n      shownImage[shownImage.length - 1].nextElementSibling.classList.remove('hidden');\n    } else {\n      // REMOVE THE LASTS FIRST-INDEXED NON-HIDDEN VALUE\n      const firstNonActive = allImageContainer.querySelector('.hidden');\n      firstNonActive.classList.remove('hidden');\n      // HIDE THE LAST-HIDDEN-ELEMENT'S NEXT-SIBLING\n      notShownImage[notShownImage.length - 1].nextElementSibling.classList.add('hidden');\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "templates/productDetail/productDetail.js::makeCoveoApiRequest": {
            "changes_after_merge": 0,
            "file_path": "templates/productDetail/productDetail.js",
            "merged_function": "async function makeCoveoApiRequest(path, accessParam, payload = {}) {\n  const accessToken = window.DanaherConfig !== undefined\n    ? window.DanaherConfig[accessParam]\n    : 'xx2a2e7271-78c3-4e3b-bac3-2fcbab75323b';\n  const organizationId = window.DanaherConfig !== undefined\n    ? window.DanaherConfig.searchOrg\n    : 'danahernonproduction1892f3fhz';\n  const resp = await fetch(`https://${organizationId}.org.coveo.com${path}?organizationId=${organizationId}`, {\n    method: 'POST',\n    headers: {\n      authorization: `Bearer ${accessToken}`,\n      'content-type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  });\n  const jsonData = await resp.json();\n  return jsonData;\n}",
            "score": -1.0
        },
        "templates/productDetail/productDetail.js::showImage": {
            "changes_after_merge": 0,
            "file_path": "templates/productDetail/productDetail.js",
            "merged_function": "function showImage(e) {\n  const selectedImage = document.querySelector('.image-content');\n  if (e.target) {\n    const currentActive = e.target.parentElement.querySelector('.active');\n    if (currentActive) currentActive.classList.toggle('active');\n    if (e.target.src !== selectedImage.src) {\n      selectedImage.src = e.target.src;\n      e.target.classList.toggle('active');\n    }\n  }\n}",
            "score": -1.0
        },
        "templates/topic/topic.js::buildAutoBlocks": {
            "changes_after_merge": 6,
            "file_path": "templates/topic/topic.js",
            "merged_function": "async function buildAutoBlocks() {\n  const main = document.querySelector('main');\n  const firstWrapper = main.querySelector(':scope > div');\n  firstWrapper.prepend(\n    buildBlock('social-media', { elems: [] }),\n  );\n  const lastWrapper = main.querySelector(':scope > div:last-of-type');\n  lastWrapper.append(\n    buildBlock('social-media', { elems: [] }),\n  );\n}",
            "score": -0.7209302325581395
        },
        "tools/actions/convert/src/express.js::handler": {
            "changes_after_merge": 3,
            "file_path": "tools/actions/convert/src/express.js",
            "merged_function": "handler = (req, res) => {\n  // eslint-disable-next-line prefer-const\n  let { path, query } = req;\n  const params = {\n    ...query,\n  };\n\n  if (AEM_USER && AEM_PASSWORD) {\n    params.authorization = `Basic ${Buffer.from(`${AEM_USER}:${AEM_PASSWORD}`).toString('base64')}`;\n    params.wcmmode = 'disabled';\n  }\n\n  let serveMd = false;\n  if (path.endsWith('.md')) {\n    serveMd = true;\n    path = `${path.substring(0, path.length - 3)}.html`;\n  }\n\n  render(path, params).then(({ html, md, error }) => {\n    if (error) {\n      res.status(error.code || 503);\n      res.send(error.message);\n      return;\n    }\n\n    res.status(200);\n\n    if (serveMd) {\n      res.contentType('.md');\n      res.send(md.md);\n    } else {\n      res.send(html);\n    }\n  });\n}",
            "score": -0.8604651162790697
        },
        "tools/actions/convert/src/index.js::cli": {
            "changes_after_merge": 3,
            "file_path": "tools/actions/convert/src/index.js",
            "merged_function": "async function cli(host, path, auth) {\n  path =  path ? path : '';\n  const params = {\n    __ow_headers : {\n      authorization: auth\n    },\n    'wcmmode': 'disabled'\n  }\n  const fopts = getFetchOptions(params);\n  const { md, html, error } = await render(host, path, fopts);\n  if (error) {\n    console.log(error);\n  } else {\n    console.log(md.md.trim());\n    console.log(html);\n  }\n}",
            "score": -0.8604651162790697
        },
        "tools/actions/convert/src/index.js::getFetchOptions": {
            "changes_after_merge": 1,
            "file_path": "tools/actions/convert/src/index.js",
            "merged_function": "function getFetchOptions(params) {\n  const fetchopts = {\n    headers: {\n      'cache-control': 'no-cache',\n    }\n  };\n\n  const headers = params['__ow_headers'];\n  if (headers.authorization) {\n    fetchopts.headers['Authorization'] = headers.authorization;\n  } else {\n    fetchopts.headers['Authorization'] = 'Basic ' + Buffer.from(params.AEM_USER + \":\" + params.AEM_PASSWORD).toString('base64');\n  }\n\n  if (params.wcmmode) {\n    fetchopts.wcmmode = params.wcmmode;\n  }\n  return fetchopts;\n}",
            "score": -0.9534883720930233
        },
        "tools/actions/convert/src/index.js::main": {
            "changes_after_merge": 16,
            "file_path": "tools/actions/convert/src/index.js",
            "merged_function": "async function main(params) {\n  const host = params.AEM_AUTHOR;\n  const path = params['__ow_path'] ? params['__ow_path'].substring(1) : '';\n  const fopts = getFetchOptions(params);\n  const { html, error } = await render(host, path, fopts);\n  if (error) {\n    return { statusCode: error.code, body: error.message };\n  } else {\n    return { statusCode: 200, body: html };\n  }\n}",
            "score": -0.2558139534883721
        },
        "tools/actions/convert/src/index.js::render": {
            "changes_after_merge": 11,
            "file_path": "tools/actions/convert/src/index.js",
            "merged_function": "async function render(host, path, fopts) {\n  if (mapCfg.mappings) {\n    const mapping = toHash(mapCfg.mappings);\n    if(mapping[path]) {\n      path = mapping[path];\n    }\n  }\n  const url = fopts.wcmmode ? `${host}${path}?` + new URLSearchParams({\n    wcmmode: fopts.wcmmode\n  }): `${host}${path}`;\n  const resp = await fetch(url, fopts);\n\n  if (!resp.ok) {\n      return { error: { code: resp.status, message: resp.statusText } }\n  }\n\n  const text = await resp.text();\n  const { document } = new jsdom.JSDOM(text, { url }).window;\n  const md = await WebImporter.html2md(url, document, transformCfg);\n  const html = md2html(md, host);\n  return { md, html };\n}",
            "score": -0.4883720930232558
        },
        "tools/actions/convert/src/index.js::toHash": {
            "changes_after_merge": 1,
            "file_path": "tools/actions/convert/src/index.js",
            "merged_function": "function toHash(mapping) {\n  return mapping.reduce((table, item) => {\n    const mappingItem = item.split(\":\");\n    table[mappingItem[1].substring(1)] = mappingItem[0].substring(1);\n    return table;\n  }, {});\n}",
            "score": -0.9534883720930233
        },
        "tools/actions/convert/src/modules/mapping.js::mapInbound": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/modules/mapping.js",
            "merged_function": "function mapInbound(path, cfg = pathsCfg) {\n  if (cfg.mappings) {\n    let extension = '';\n    // remove .html extension;\n    if (path.endsWith('.html')) {\n      extension = '.html';\n      path = path.substring(0, path.length - extension.length);\n    }\n    const reversedMappings = cfg.mappings.reverse();\n    for (let i = 0; i < reversedMappings.length; i += 1) {\n      const mapping = reversedMappings[i];\n      const [from, to] = mapping.split(':', 2);\n      if (path.startsWith(to)) {\n        // mapping from folder or single page?\n        if (from.endsWith('/')) {\n          // folder, e.g. /content/site/us/en/:/us/en/\n          // mapping to folder\n          if (to.endsWith('/')) {\n            return from + path.substring(to.length) + extension;\n          }\n          // else, ignore folder => single page as this is not reversible\n        } else {\n          // single page\n          // mapping to a folder aka. /index, e.g. /content/site/us/en:/\n          // mapping to a single page, aka. exect match, /content/site/us/en/page:/vanity\n          // eslint-disable-next-line no-lonely-if\n          if ((to.endsWith('/') && path.endsWith('/index')) || to === path) {\n            return from + extension;\n          }\n        }\n      }\n    }\n    // restore extension\n    path += extension;\n  }\n  return path;\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/modules/mapping.js::mapOutbound": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/modules/mapping.js",
            "merged_function": "function mapOutbound(path, cfg = pathsCfg) {\n  if (cfg.mappings) {\n    // remove .html extension, if any;\n    if (path.endsWith('.html')) {\n      path = path.substring(0, path.length - 5);\n    }\n    const reversedMappings = cfg.mappings.reverse();\n    for (let i = 0; i < reversedMappings.length; i += 1) {\n      const mapping = reversedMappings[i];\n      const [from, to] = mapping.split(':', 2);\n      if (path.startsWith(from)) {\n        // mapping from folder or single page?\n        if (from.endsWith('/')) {\n          // folder, e.g. /content/site/us/en/:/us/en/\n          // mapping to folder\n          if (to.endsWith('/')) {\n            // special handling for the /index pages\n            if (path.endsWith('/index')) {\n              return to;\n            }\n            return to + path.substring(from.length);\n          }\n          // else, ignore folder => single page as this is not reversible\n        } else {\n          // single page\n          // mapping to folder or single page, exact match only\n          // eslint-disable-next-line no-lonely-if\n          if (path === from) {\n            return to;\n          }\n        }\n      }\n    }\n  }\n  return path;\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/modules/md2html.js::md2html": {
            "changes_after_merge": 4,
            "file_path": "tools/actions/convert/src/modules/md2html.js",
            "merged_function": "function md2html(md, params) {\n  // note: we could use the entire unified chain, but it would need to be async -\n  // which would require too much of a change\n  const mdast = unified()\n    .use(remarkParse)\n    .use(remarkGfm)\n    .use(remarkGridTable)\n    .parse(md.md.trim());\n\n  const main = mdast2hast(mdast, {\n    handlers: {\n      ...defaultHandlers,\n      [TYPE_TABLE]: mdast2hastGridTablesHandler(),\n    },\n    allowDangerousHtml: true,\n  });\n\n  const content = {\n    hast: main,\n    host: params.AEM_AUTHOR,\n    domain: params.PUBLIC_DOMAIN\n  };\n\n  rewriteUrls({content: content})\n  fixSections({content: content});\n  createPageBlocks({content: content});\n\n  const hast = h(\"html\", [\n    h(\"body\", [\n      h(\"header\", []), \n      h(\"main\", content.hast), \n      h(\"footer\", [])]\n    ),\n  ]);\n\n  raw(hast);\n  rehypeFormat()(hast);\n\n  return toHtml(hast, {\n    upperDoctype: true,\n  });\n}",
            "score": -0.813953488372093
        },
        "tools/actions/convert/src/modules/utils/hast-utils.js::childNodes": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/modules/utils/hast-utils.js",
            "merged_function": "function childNodes(node) {\n  return node.children.filter((n) => n.type === 'element');\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/modules/utils/hast-utils.js::replace": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/modules/utils/hast-utils.js",
            "merged_function": "function replace(tree, oldNode, newNode) {\n  // $table.parentNode.replaceChild($div, $table);\n  // replace child in parent\n  visit(tree, oldNode, (node, idx, parent) => {\n    parent.children[idx] = newNode;\n    return EXIT;\n  });\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/modules/utils/hast-utils.js::wrapContent": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/modules/utils/hast-utils.js",
            "merged_function": "function wrapContent($parent, $node) {\n  $parent.children.push(...$node.children);\n  $node.children = [$parent];\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/modules/utils/media-utils.js::isBinary": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/modules/utils/media-utils.js",
            "merged_function": "function isBinary(contentType) {\n  if (contentType.startsWith('text/') || contentType.startsWith('message/')) return false;\n  if (contentType.startsWith('audio/') || contentType.startsWith('image/') || contentType.startsWith('video/')) return true;\n  return mediaTypes[contentType];\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/modules/utils/rewrite-urls.js::rewriteUrl": {
            "changes_after_merge": 1,
            "file_path": "tools/actions/convert/src/modules/utils/rewrite-urls.js",
            "merged_function": "function rewriteUrl(content, url, tagName) {\n  const { host, domain } = content;\n  if (!url || !url.startsWith('/')) {\n    return url;\n  }\n\n  return tagName === 'img' ? `${host}${url.substring(1)}` : `${domain}${url.substring(1)}`;\n}",
            "score": -0.9534883720930233
        },
        "tools/actions/convert/src/modules/utils/rewrite-urls.js::rewriteUrls": {
            "changes_after_merge": 1,
            "file_path": "tools/actions/convert/src/modules/utils/rewrite-urls.js",
            "merged_function": "async function rewriteUrls({content}) {\n  const { hast } = content;\n\n  const els = {\n    img: 'src',\n    a: 'href'\n  };\n\n  visit(hast, (node) => {\n    if (node.type !== 'element') {\n      return CONTINUE;\n    }\n    const attr = els[node.tagName];\n    if (attr) {\n      node.properties[attr] = rewriteUrl(content, node.properties[attr], node.tagName);\n    }\n    return CONTINUE;\n  });\n}",
            "score": -0.9534883720930233
        },
        "tools/actions/convert/src/utils.js::appendDotHtml": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/utils.js",
            "merged_function": "function appendDotHtml({ converterCfg }) {\n  let { origin, liveUrls = [] } = converterCfg || {};\n  if (!Array.isArray(liveUrls)) liveUrls = [liveUrls];\n  if (!liveUrls.length) liveUrls.push(origin);\n  origin = new URL(origin);\n  liveUrls = liveUrls.filter((url) => !!url).map((url) => new URL(url));\n\n  return (tree) => {\n    visit(tree, ['link'], (node) => {\n      const { url: urlStr } = node;\n      if (urlStr) {\n        if (urlStr.startsWith('#')) return;\n\n        const url = urlStr.startsWith('/') ? new URL(urlStr, origin) : new URL(urlStr);\n        if (url.pathname.indexOf('.') > 0 || url.pathname.endsWith('/')) return;\n\n        if (url.hostname === origin.hostname\n          || liveUrls.some((liveUrl) => url.hostname === liveUrl.hostname)) {\n          node.url = `${urlStr}.html`;\n          // replace also the text content if it equals the urlStr\n          const textNode = node.children[0];\n          if (textNode && textNode.type === 'text' && textNode.value === urlStr) {\n            textNode.value = node.url;\n          }\n        }\n      }\n    });\n  };\n}",
            "score": -1.0
        },
        "tools/actions/convert/src/utils.js::createPipeline": {
            "changes_after_merge": 0,
            "file_path": "tools/actions/convert/src/utils.js",
            "merged_function": "function createPipeline() {\n  return pipeline()\n    .use(transformMdast, { transformers: [...DEFAULT_TRANSFORMERS, appendDotHtml] });\n}",
            "score": -1.0
        },
        "tools/actions/convert/test/converter.test.js::test": {
            "changes_after_merge": 4,
            "file_path": "tools/actions/convert/test/converter.test.js",
            "merged_function": "async function test(spec, scope) {\n  const html = await readFile(resolve(__testdir, 'fixtures', `${spec}.html`), 'utf-8');\n  scope\n    .get(`/${spec}.html`)\n    .reply(200, html);\n  const expected = await readFile(resolve(__testdir, 'fixtures', `${spec}-semantic.html`), 'utf-8');\n  const actual = await render(`/${spec}.html`, {}, {\n    env: {\n      publicURL: 'https://stage.lifesciences.danaher.com/',\n      aemURL: 'http://www.example.com',\n    },\n  });\n  assert.strictEqual(actual.html.trim(), expected.trim());\n}",
            "score": -0.813953488372093
        },
        "tools/importer/import.js::addArticleMeta": {
            "changes_after_merge": 7,
            "file_path": "tools/importer/import.js",
            "merged_function": "addArticleMeta = (document, meta) => {\n  const articleinfo = document.querySelector('div.articleinfo');\n  if (articleinfo) {\n    const articleinfoEL = articleinfo.querySelector('articleinfo');\n    if (articleinfoEL) {\n      meta.authorName = articleinfoEL.getAttribute('articlename');\n      meta.blogTitle = articleinfoEL.getAttribute('title');\n      meta.publishDate = articleinfoEL.getAttribute('postdate');\n      meta.readingTime = articleinfoEL.getAttribute('time');\n    }\n  }\n}",
            "score": -0.6744186046511628
        },
        "tools/importer/import.js::addFeatureImageDetail": {
            "changes_after_merge": 4,
            "file_path": "tools/importer/import.js",
            "merged_function": "addFeatureImageDetail = (parent, child, document) => {\n  if (child?.getAttribute('title')) {\n    const title = document.createElement('h2');\n    title.textContent = child.getAttribute('title');\n    parent.append(title);\n  }\n\n  if (child?.getAttribute('description')) {\n    const p = document.createElement('p');\n    p.innerHTML = child.getAttribute('description');\n    parent.append(p);\n  }\n\n  const image = child?.getAttribute('img') ? document.createElement('img') : null;\n  if (image) {\n    image.src = child?.getAttribute('img');\n    image.alt = child?.getAttribute('imgalt') ? child?.getAttribute('imgalt') : '';\n    parent.append(image);\n  }\n\n  if (child?.getAttribute('btnhref')) {\n    const anc = document.createElement('a');\n    anc.href = child?.getAttribute('btnhref');\n    anc.textContent = child?.getAttribute('btntext');\n    parent.append(anc);\n  }\n}",
            "score": -0.813953488372093
        },
        "tools/importer/import.js::block": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "block = () => {\n    const list = document.createElement('ul');\n    items.forEach((item) => {\n      const li = document.createElement('li');\n      li.append(item[0]);\n      li.append(item[1]);\n      list.append(li);\n    });\n    return list;\n  }",
            "score": -1.0
        },
        "tools/importer/import.js::cleanUpHTML": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "cleanUpHTML = (html) => {\n  // clean up unwanted tags\n  html.querySelectorAll('h2 > b, h3 > b, h4 > b').forEach((boldHeading) => {\n    boldHeading.parentElement.innerHTML = boldHeading.innerHTML;\n  });\n\n  html.querySelectorAll('a > b').forEach((boldLink) => {\n    const anchor = boldLink.parentElement;\n    anchor.insertBefore(boldLink.firstChild, boldLink);\n  });\n\n  // clean up all empty elements\n  const elements = html.getElementsByTagName('*');\n  for (let i = elements.length - 1; i >= 0; i -= 1) {\n    const element = elements[i];\n    if (!element.textContent.trim() && !element.hasChildNodes()) {\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  // combine multiple <ul> tags into one\n  html.querySelectorAll('ul + ul, ol + ol').forEach((list) => {\n    const prevUl = list.previousElementSibling;\n    prevUl.append(...list.childNodes);\n    list.remove();\n  });\n\n  return html;\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createAccordion": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/import.js",
            "merged_function": "createAccordion = (main, document) => {\n  const accordion = main.querySelector('accordion');\n  if (accordion) {\n    const accordionHeader = document.createElement('div');\n    accordionHeader.textContent = accordion.getAttribute('accordionheader');\n    // eslint-disable-next-line no-undef\n    const accordionLists = JSON.parse(decodeHtmlEntities(accordion.getAttribute('accordionlist')));\n    const definitionlists = accordionLists.map((list) => {\n      const anchor = document.createElement('a');\n      anchor.textContent = list.title;\n      anchor.setAttribute('title', list.description);\n      return [anchor];\n    });\n    const cells = [\n      ['Accordion'],\n      ...definitionlists,\n      [accordionHeader],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    main.append(block);\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/import.js::createArticleSummary": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createArticleSummary = (main, document) => {\n  const sidebar = main.querySelectorAll('div.bg-danaherlightblue-50');\n  const articles = [];\n  if (sidebar.length > 2) {\n    const popularArticles = sidebar[0].querySelectorAll('div.article-summary');\n    getArticles(popularArticles, null, document);\n    const recentArticles = sidebar[1].querySelectorAll('div.article-summary');\n    getArticles(recentArticles, articles, document);\n    const cells = [\n      ['Recent Article'],\n      [articles],\n    ];\n    if (articles.length > 0) {\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      sidebar[1].after(block, '', document.createElement('hr'));\n    }\n  }\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createBanner": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createBanner = (main, document) => {\n  const banner = main.querySelector('banner');\n  if (banner) {\n    const title = banner.getAttribute('title');\n    const description = banner.getAttribute('desc');\n    const div = document.createElement('div');\n    const h1 = document.createElement('h1');\n    h1.textContent = title;\n    if (h1) {\n      div.append(h1);\n    }\n    const p = document.createElement('p');\n    p.textContent = description;\n    if (p) {\n      div.append(p);\n    }\n    const cells = [\n      ['Banner'],\n      [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    banner.append(block);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createBlogDetail": {
            "changes_after_merge": 17,
            "file_path": "tools/importer/import.js",
            "merged_function": "createBlogDetail = (main, document) => {\n  createBlogHeader(main, document);\n  createImage(main, document);\n  createFeatureImage(main, document);\n  createPopularArticle(main, document);\n}",
            "score": -0.2093023255813954
        },
        "tools/importer/import.js::createBlogHeader": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/import.js",
            "merged_function": "createBlogHeader = (main, document) => {\n  const headings = main.querySelectorAll('div.heading');\n  [...headings].forEach((heading) => {\n    const headingEL = heading?.querySelector('heading');\n\n    const headEl = document.createElement('h1');\n    headEl.textContent = headingEL?.getAttribute('heading');\n    if (headEl.innerHTML) {\n      heading.append(headEl);\n    }\n\n    const p = document.createElement('p');\n    p.innerHTML = headingEL?.getAttribute('subheadingtext');\n    if (p.innerHTML) {\n      heading.append(p);\n    }\n  });\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/import.js::createBrandNavigation": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createBrandNavigation = (brandNavigationEl, document, main) => {\n  // eslint-disable-next-line no-undef\n  const brands = JSON.parse(decodeHtmlEntities(brandNavigationEl.getAttribute('brands')));\n  const items = [];\n  brands.forEach((brand) => {\n    const a = document.createElement('a');\n    a.setAttribute('href', brand.brandlink);\n    a.textContent = brand.brandimagealt;\n    const img = document.createElement('img');\n    img.setAttribute('src', brand.brandimage);\n    img.setAttribute('alt', brand.brandimagealt);\n    items.push([img, a]);\n  });\n  const block = () => {\n    const list = document.createElement('ul');\n    items.forEach((item) => {\n      const li = document.createElement('li');\n      li.append(item[0]);\n      li.append(item[1]);\n      list.append(li);\n    });\n    return list;\n  };\n  main.append(block());\n  main.append(document.createElement('hr'));\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createBreadcrumb": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/import.js",
            "merged_function": "createBreadcrumb = (main, document) => {\n  const breadcrumb = main.querySelector('div.breadcrumb');\n  if (breadcrumb) {\n    const breadcrumbEl = breadcrumb.querySelector('breadcrumb');\n    if (breadcrumbEl) {\n      const cells = [];\n      // eslint-disable-next-line no-undef\n      const list = JSON.parse(decodeHtmlEntities(breadcrumbEl.getAttribute('breadcrumbdetailslist')));\n      cells.push(['Breadcrumb']);\n      const ul = document.createElement('ul');\n      list.forEach((item) => {\n        const li = document.createElement('li');\n        const anc = document.createElement('a');\n        anc.href = item.url;\n        anc.textContent = item.title;\n        li.append(anc);\n        ul.append(li);\n      });\n      cells.push([ul]);\n      if (cells.length > 0) {\n        const block = WebImporter.DOMUtils.createTable(cells, document);\n        main.append(block);\n      }\n    }\n  }\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/import.js::createCTA": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createCTA = (main, document) => {\n  const ctaSection = main.querySelector('CTAsection');\n  if (ctaSection) {\n    const title = ctaSection.getAttribute('title');\n    const btnText1 = ctaSection.getAttribute('btntext1');\n    const rfqBtn1 = ctaSection.getAttribute('rfqbtn1');\n    const div = document.createElement('div');\n    const h2 = document.createElement('h2');\n    h2.textContent = title;\n    if (h2) {\n      div.append(h2);\n    }\n    const btn = document.createElement('button');\n    btn.textContent = btnText1;\n    if (rfqBtn1 && btn.textContent) {\n      div.append(btn);\n    }\n    const cells = [\n      ['CTASection'],\n      [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    ctaSection.append(block);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createCTASection": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createCTASection = (main, document) => {\n  const ctaSection = main.querySelector('CTAsection');\n  if (ctaSection) {\n    const title = ctaSection.getAttribute('title');\n    const btnText1 = ctaSection.getAttribute('btntext1');\n    const rfqBtn1 = ctaSection.getAttribute('rfqbtn1');\n    const div = document.createElement('div');\n    const h2 = document.createElement('h2');\n    h2.textContent = title;\n    if (h2) {\n      div.append(h2);\n    }\n    const btn = document.createElement('button');\n    btn.textContent = btnText1;\n    if (rfqBtn1 && btn.textContent) {\n      div.append(btn);\n    }\n    const cells = [\n      ['CTASection'],\n      [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    ctaSection.append(block);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createCardList": {
            "changes_after_merge": 6,
            "file_path": "tools/importer/import.js",
            "merged_function": "createCardList = (main, document) => {\n  const url = document.querySelector('[property=\"og:url\"]')?.content;\n  if (url && (url.includes('blog.html') || url.includes('news.html'))) {\n    const block = [['Card List']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    main.append(table);\n  }\n  if (url && url.includes('library.html')) {\n    main.innerHTML = '';\n    const block = [['Card List (library)']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    main.append(table);\n  }\n}",
            "score": -0.7209302325581395
        },
        "tools/importer/import.js::createCards": {
            "changes_after_merge": 16,
            "file_path": "tools/importer/import.js",
            "merged_function": "createCards = (main, document) => {\n\n  const cards = [];\n  const articleList = document.querySelectorAll('div.grid [columns=\"3\"] > template');\n  articleList.forEach(item => {\n    const h2 = item.content.querySelector('h2');\n    const articleCard = item.content.querySelector('articlecard');\n    if (articleCard) {\n      const cardImg = articleCard.getAttribute('cardimg');\n      const cardTitle = articleCard.getAttribute('cardtitle');\n      const cardDescription = articleCard.getAttribute('carddescription');\n      const cardHref = articleCard.getAttribute('cardhref');\n      const cardLinkText = articleCard.getAttribute('linktext');\n\n      const img = document.createElement('img');\n      img.setAttribute('src', cardImg);\n      const div = document.createElement('div');\n      div.append(h2);\n      const h3 = document.createElement('h3');\n      h3.textContent = cardTitle;\n      div.append(h3);\n      const p = document.createElement('p');\n      p.textContent = cardDescription;\n      const a = document.createElement('a');\n      a.setAttribute('href', cardHref);\n      a.textContent = cardLinkText;\n      p.append(a);\n      div.append(p);\n      cards.push([img, div]);\n    }\n  });\n\n  const cells = [\n    ['Cards'],\n    ...cards\n  ];\n\n  const block = WebImporter.DOMUtils.createTable(cells, document);\n  main.append(block);\n}",
            "score": -0.2558139534883721
        },
        "tools/importer/import.js::createEventCards": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createEventCards = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach((fl) => {\n    const cards = [];\n    fl.querySelectorAll('grid > template').forEach((tmp) => {\n      const eventCard = tmp.content.querySelector('eventcard');\n      if (eventCard) {\n        const fromTime = eventCard.getAttribute('fromtime');\n        const toTime = eventCard.getAttribute('totime');\n        const eventType = eventCard.getAttribute('eventtype');\n        const eventLocation = eventCard.getAttribute('location');\n        const eventDescription = eventCard.getAttribute('description');\n        const linkUrl = eventCard.getAttribute('linkurl');\n        const linkText = eventCard.getAttribute('linktext');\n        const eventDateDiv = document.createElement('div');\n        const fd = new Date(fromTime);\n        const fdate = fd.toLocaleString([], { hour: '2-digit', minute: '2-digit' });\n        const frdate = fd.toLocaleString([], { day: 'numeric' });\n        const frmonth = fd.toLocaleString([], { month: 'short' });\n        eventDateDiv.append(`${frdate} ${frmonth.toUpperCase()}`);\n        const td = new Date(toTime);\n        const tdate = td.toLocaleString([], { hour: '2-digit', minute: '2-digit' });\n        const todate = td.toLocaleString([], { day: 'numeric' });\n        const tomonth = td.toLocaleString([], { month: 'short' });\n        eventDateDiv.append(` - ${todate} ${tomonth.toUpperCase()}`);\n        const typeSpan = document.createElement('p');\n        typeSpan.textContent = eventType;\n        eventDateDiv.append(typeSpan);\n        const descP = document.createElement('p');\n        descP.textContent = eventDescription;\n        eventDateDiv.append(descP);\n        const ul = document.createElement('ul');\n        const li1 = document.createElement('li');\n        li1.textContent = `:clock: ${fdate.toUpperCase()} - ${tdate.toUpperCase()}`;\n        const li2 = document.createElement('li');\n        li2.textContent = `:location: ${eventLocation}`;\n        ul.appendChild(li1); ul.appendChild(li2);\n        eventDateDiv.append(ul);\n        const a = document.createElement('a');\n        a.setAttribute('href', linkUrl);\n        a.textContent = linkText;\n        eventDateDiv.append(a);\n\n        cards.push([eventDateDiv]);\n      }\n    });\n    const cells = [['Cards (eventcard)'], ...cards];\n    if (cards.length > 0) {\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      fl.append(block);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createFeatureImage": {
            "changes_after_merge": 19,
            "file_path": "tools/importer/import.js",
            "merged_function": "createFeatureImage = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach(fl => {\n  fl.querySelectorAll('grid[columns=\"2\"]').forEach((item) => {\n    const columns = [];\n    const templates = item.querySelectorAll('template');\n    if (templates.length > 2) {\n      const featureImage = templates[0].content.querySelector('div.featureimage');\n      const imageText = templates[1].content.querySelector('imagetext');\n      if (featureImage) {\n        columns.push(featureImage);\n      }\n      if (imageText) {\n        const img = document.createElement('img');\n        img.setAttribute('src', imageText.getAttribute('image'));\n        columns.push(img);\n      }\n      const cells = [\n        ['Columns'],\n        [...columns]\n      ];\n    \n      if(columns.length > 0) {\n        fl.before(document.createElement('hr'));\n        const block = WebImporter.DOMUtils.createTable(cells, document);\n        fl.append(block);\n      }}\n    });\n  });\n}",
            "score": -0.11627906976744184
        },
        "tools/importer/import.js::createFooter": {
            "changes_after_merge": 5,
            "file_path": "tools/importer/import.js",
            "merged_function": "createFooter = (main, document) => {\n  const footer = main.querySelector('footer');\n  if (footer) {\n    const xf = footer.closest('div.experiencefragment');\n    if (!xf) {\n      footer.querySelectorAll('div > div > div').forEach(item => {\n        main.prepand\n        main.append(item);\n      });\n    }\n  }\n}",
            "score": -0.7674418604651163
        },
        "tools/importer/import.js::createFullLayoutSection": {
            "changes_after_merge": 8,
            "file_path": "tools/importer/import.js",
            "merged_function": "createFullLayoutSection = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach(e => {\n    const div = e.querySelector('div');\n    const style = div.getAttribute('class');\n    const cells = [['Section Metadata'], ['style', style]];\n    const table = WebImporter.DOMUtils.createTable(cells, document);\n    e.after(table);\n    table.after(document.createElement('hr'));\n  });\n}",
            "score": -0.627906976744186
        },
        "tools/importer/import.js::createHeader": {
            "changes_after_merge": 5,
            "file_path": "tools/importer/import.js",
            "merged_function": "createHeader = async (main, document) => {\n  const danaherHeaderEl = main.querySelector('danaher-header');\n  if (danaherHeaderEl) {\n    const templates = Array.from(danaherHeaderEl.getElementsByTagName('template'));\n    // eslint-disable-next-line no-restricted-syntax\n    for await (const t of templates) {\n      const brandNavigationEl = t.content.querySelector('brand-navigation');\n      if (brandNavigationEl) {\n        createBrandNavigation(brandNavigationEl, document, main);\n      }\n\n      const navBarEl = t.content.querySelector('navbar');\n      if (navBarEl) {\n        createNavBar(navBarEl, main, document);\n      }\n\n      const megaMenuHoverEl = t.content.querySelector('megamenuhover');\n      if (megaMenuHoverEl) {\n        await createMegaMenu(megaMenuHoverEl, main, document);\n      }\n    }\n  }\n}",
            "score": -0.7674418604651163
        },
        "tools/importer/import.js::createHero": {
            "changes_after_merge": 5,
            "file_path": "tools/importer/import.js",
            "merged_function": "createHero = (main, document) => {\n  const heroVideo = document.querySelector('herovideoplayer');\n  if (heroVideo) {\n    const title = heroVideo.getAttribute('title'); \n    const description = heroVideo.getAttribute('description');\n    const percentage = heroVideo.getAttribute('percentage');\n    const ctaText = heroVideo.getAttribute('btntext');\n    const videoid = heroVideo.getAttribute('videoid');\n    const imgSrc = 'https://danaherls.scene7.com/is/image/danaher/hero-image?$danaher-transparent$';\n    const imgAlt = heroVideo.getAttribute('imagealt');\n    \n    \n    const img = document.createElement('img');\n    img.setAttribute('src', imgSrc);\n    img.setAttribute('alt', imgAlt);\n  \n    const div = document.createElement('div');\n    const h2 = document.createElement('h2');\n    h2.textContent = title;\n    div.append(h2);\n    const p = document.createElement('p');\n    p.textContent = description;\n    const strong = document.createElement('strong');\n    strong.textContent = percentage;\n    p.append(strong);\n    const videoElemHTML = `<a href=\"https://player.vimeo.com/video/${videoid}?loop=1&app_id=122963\">https://player.vimeo.com/video/${videoid}?loop=1&app_id=122963${ctaText}</a>`\n    strong.insertAdjacentHTML('afterend', videoElemHTML);\n    div.append(p);\n  \n    const cells = [\n      ['Hero'],\n      [img, div],\n    ];\n  \n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    main.append(block);\n  }\n}",
            "score": -0.7674418604651163
        },
        "tools/importer/import.js::createImage": {
            "changes_after_merge": 6,
            "file_path": "tools/importer/import.js",
            "merged_function": "createImage = (main, document) => {\n  const imagetext = main.querySelectorAll('div.imagetext');\n  [...imagetext].forEach((imgText) => {\n    const imagetextEL = imgText?.querySelector('imagetext');\n\n    const image = document.createElement('img');\n    image.src = imagetextEL?.getAttribute('image');\n    imgText.after(image);\n  });\n}",
            "score": -0.7209302325581395
        },
        "tools/importer/import.js::createLogoCloud": {
            "changes_after_merge": 10,
            "file_path": "tools/importer/import.js",
            "merged_function": "createLogoCloud = (main, document) => {\n  const logoCloud = document.querySelector('logo-cloud');\n  if (logoCloud) {\n    const div = document.createElement('div');\n    const template = logoCloud.querySelector('template');\n    div.append(template.content.querySelector('h2'));\n    template.content.querySelectorAll('p').forEach(item => div.append(item));\n  \n    const imgLogos = [];\n    const logos = JSON.parse(decodeHtmlEntities(logoCloud.getAttribute('logos')));\n    logos.forEach(logo => {\n      const a = document.createElement('a');\n      a.setAttribute('href', logo.imageLink);\n      const img = document.createElement('img');\n      a.append(img);\n      img.setAttribute('src', logo.image);\n      img.setAttribute('alt', logo.imageAlt);\n      imgLogos.push(a);\n    });\n    \n    const cells = [\n      ['Logo Clouds'],\n      [div, imgLogos]\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    main.append(block);\n  }\n}",
            "score": -0.5348837209302326
        },
        "tools/importer/import.js::createMegaMenu": {
            "changes_after_merge": 7,
            "file_path": "tools/importer/import.js",
            "merged_function": "createMegaMenu = async (megaMenuHoverEl, main, document) => {\n  // eslint-disable-next-line no-undef\n  const skipItems = JSON.parse(decodeHtmlEntities(megaMenuHoverEl.getAttribute('menuheadervalues')));\n  const response = await fetch('https://lifesciences.danaher.com/content/dam/danaher/system/navigation/megamenu_items_us.json');\n  const data = await response.json();\n  if (data.length > 0) {\n    const list = document.createElement('ul');\n    const homeItem = document.createElement('li');\n    const homeAnc = document.createElement('a');\n    homeAnc.setAttribute('href', 'https://lifesciences.danaher.com/');\n    homeAnc.append('Life Sciences :home-icon:');\n    homeItem.append(homeAnc);\n    list.append(homeItem);\n    data.sort((a, b) => a.displayOrder - b.displayOrder).forEach((i) => {\n      if (skipItems.length > 0 && skipItems.includes(i.name)) {\n        return;\n      }\n      const listItem = document.createElement('li');\n      if (i.href) {\n        const anc = document.createElement('a');\n        anc.setAttribute('href', i.href);\n        anc.append(i.name);\n        listItem.append(anc);\n      } else {\n        listItem.append(i.name);\n      }\n      if (i.items.length > 0) {\n        const subList = document.createElement('ul');\n        i.items.forEach((j) => {\n          const subListItem = document.createElement('li');\n          const anc = document.createElement('a');\n          anc.setAttribute('href', j.href);\n          anc.append(j.name);\n          subListItem.append(anc);\n          subList.append(subListItem);\n        });\n        listItem.append(subList);\n      }\n      list.append(listItem);\n    });\n    main.append(list);\n    main.append(document.createElement('hr'));\n  }\n}",
            "score": -0.6744186046511628
        },
        "tools/importer/import.js::createMenuRecursive": {
            "changes_after_merge": 12,
            "file_path": "tools/importer/import.js",
            "merged_function": "createMenuRecursive = (main, document, menuData, skipItems, parentTitle, parentLink) => {\n  const menuEl = document.createElement('div');\n  const listTitle = document.createElement('p');\n  if (parentLink) {\n    const anc = document.createElement('a');\n    anc.setAttribute('href', parentLink);\n    anc.append(parentTitle);\n    listTitle.append(anc);\n  } else {\n    listTitle.append(parentTitle);\n  }\n  menuEl.append(listTitle);\n  const listEl = document.createElement('ul');\n  menuData.forEach((menuItem) => {\n    if (skipItems.includes(menuItem.name)) {\n      return;\n    }\n    let menuItemTitle = menuItem.name || menuItem.text;\n    const menuItemId = `${parentTitle}:${menuItemTitle}`;\n    const listItem = document.createElement('li');\n    if (menuItem.links?.length > 0) {\n      menuItem.items = menuItem.links;\n    }\n    if (menuItem.items?.length > 0) {\n      createMenuRecursive(main, document, menuItem.items, skipItems, menuItemId, menuItem.href);\n      menuItemTitle = `${menuItemTitle} :arrow-right:`;\n    }\n    if (menuItem.href) {\n      const anc = document.createElement('a');\n      anc.setAttribute('href', menuItem.href);\n      anc.append(menuItemTitle);\n      listItem.append(anc);\n    } else {\n      listItem.append(menuItemTitle);\n    }\n    listEl.append(listItem);\n  });\n  menuEl.append(listEl);\n  main.append(menuEl);\n  main.append(document.createElement('hr'));\n}",
            "score": -0.4418604651162791
        },
        "tools/importer/import.js::createMetadata": {
            "changes_after_merge": 23,
            "file_path": "tools/importer/import.js",
            "merged_function": "createMetadata = (main, document) => {\n  const meta = {};\n\n  const title = document.querySelector('title');\n  if (title) {\n    meta.Title = title.textContent.replace(/[\\n\\t]/gm, '');\n  }\n\n  const desc = document.querySelector('[property=\"og:description\"]');\n  if (desc) {\n    meta.Description = desc.content;\n  }\n\n  const img = document.querySelector('[property=\"og:image\"]');\n  if (img && img.content) {\n    const el = document.createElement('img');\n    el.src = img.content;\n    meta.Image = el;\n  }\n\n  const block = WebImporter.Blocks.getMetadataBlock(document, meta);\n  main.append(block);\n\n  return meta;\n}",
            "score": 0.06976744186046502
        },
        "tools/importer/import.js::createNavBar": {
            "changes_after_merge": 6,
            "file_path": "tools/importer/import.js",
            "merged_function": "createNavBar = (navBarEl, main, document) => {\n  const logoTemplateEl = navBarEl.querySelector('template[\\\\#logo]');\n  if (logoTemplateEl) {\n    const logo = logoTemplateEl.content.querySelector('logo');\n    if (logo) {\n      const imgSrc = '/content/dam/danaher/brand-logos/svg/1-color/danaher-1c.svg';\n      const imgAlt = 'Danaher';\n      const link = '/';\n      const img = document.createElement('img');\n      img.setAttribute('src', imgSrc);\n      img.setAttribute('alt', imgAlt);\n      const anc = document.createElement('a');\n      anc.setAttribute('href', link);\n      anc.append(imgAlt);\n      main.append(img);\n      main.append(anc);\n    }\n  }\n  const linkTemplateEl = navBarEl.querySelector('template[\\\\#links]');\n  if (linkTemplateEl) {\n    const headerLinksEl = linkTemplateEl.content.querySelector('header-links');\n    if (headerLinksEl) {\n      // eslint-disable-next-line no-undef\n      const headerLinks = JSON.parse(decodeHtmlEntities(headerLinksEl.getAttribute('headerlinks')));\n      const list = document.createElement('ul');\n      headerLinks.forEach((i) => {\n        const item = document.createElement('li');\n        const anc = document.createElement('a');\n        anc.setAttribute('href', i.linkUrl);\n        anc.append(`:${i.linkIcon.replace(/[A-Z]/g, (match, offset) => (offset > 0 ? '-' : '') + match.toLowerCase())}: ${i.linkName}`);\n        item.append(anc);\n        list.append(item);\n      });\n      main.append(list);\n    }\n  }\n\n  main.append(document.createElement('hr'));\n}",
            "score": -0.7209302325581395
        },
        "tools/importer/import.js::createPDFEmbed": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/import.js",
            "merged_function": "createPDFEmbed = (main, document) => {\n  const pdfViewer = main.querySelectorAll('div.pdfviewer');\n  pdfViewer.forEach((pdf) => {\n    render.pdfembed(pdf, document);\n  });\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/import.js::createPopularArticle": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/import.js",
            "merged_function": "createPopularArticle = (main, document) => {\n  const articleSummary = main.querySelectorAll('div.article-summary');\n  [...articleSummary].forEach((article) => {\n    const articleEL = article?.querySelector('article-summary');\n    const anc = document.createElement('a');\n    anc.href = articleEL?.getAttribute('readlinkurl');\n    anc.textContent = articleEL?.getAttribute('description');\n    article.append(anc);\n  });\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/import.js::createProductPage": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/import.js",
            "merged_function": "createProductPage = (main, document) => {\n  const product = main.querySelector('product-page');\n  if (product) {\n    const btnText = product.getAttribute('rfqbuttontext');\n    const productCells = [\n      ['Product Details'],\n      [btnText],\n    ];\n\n    if (btnText) {\n      const block = WebImporter.DOMUtils.createTable(productCells, document);\n      product.append(block, document.createElement('hr'));\n    }\n\n    const tabs = JSON.parse(product.getAttribute('producttabs'));\n    tabs.forEach((tab) => {\n      const sectionCells = [['Section Metadata'], ['icon', tab.icon], ['tabId', tab.tabId], ['tabName', tab.tabName]];\n      const attributeCells = [];\n      const template = product.querySelector(`template[v-slot:${tab.tabId}]`);\n\n      if (tab.tabId === 'specification') {\n        const attributes = JSON.parse(product.getAttribute('attributes'));\n        attributes.forEach((attribute) => {\n          attributeCells.push(['product-attribute-table']);\n          attributeCells.push([attribute.attributeLabel, attribute.attribute]);\n        });\n        const attributeTable = WebImporter.DOMUtils.createTable(attributeCells, document);\n        main.append(attributeTable);\n      }\n\n      if (template.content.childNodes.length > 1) {\n        const elementsArray = Array.from(template.content.childNodes);\n        elementsArray.forEach((element) => {\n          if (element.outerHTML) {\n            main.append(render[element.className](element, document));\n          }\n        });\n      }\n\n      const sectionTable = WebImporter.DOMUtils.createTable(sectionCells, document);\n      main.append(sectionTable, document.createElement('hr'));\n    });\n  }\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/import.js::createSidebarArticle": {
            "changes_after_merge": 8,
            "file_path": "tools/importer/import.js",
            "merged_function": "createSidebarArticle = (main, document) => {\n  const sidebar = main.querySelectorAll('div.bg-danaherlightblue-50');\n  const popular = [];\n  const recent = [];\n  if (sidebar.length === 2) {\n    const popularArticles = sidebar[0].querySelectorAll('div.article-summary');\n    getArticles(popularArticles, popular, document);\n    const articleCells = [\n      ['Related Articles (popular)'],\n      [popular],\n    ];\n    if (popular.length > 0) {\n      const block = WebImporter.DOMUtils.createTable(articleCells, document);\n      sidebar[0].after(block, '', document.createElement('hr'));\n    }\n    const recentArticles = sidebar[1].querySelectorAll('div.article-summary');\n    getArticles(recentArticles, recent, document);\n    const cells = [\n      ['Related Articles (recent)'],\n      [recent],\n    ];\n    if (recent.length > 0) {\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      sidebar[1].after(block, '', document.createElement('hr'));\n    }\n  }\n}",
            "score": -0.627906976744186
        },
        "tools/importer/import.js::createStickyFooter": {
            "changes_after_merge": 6,
            "file_path": "tools/importer/import.js",
            "merged_function": "createStickyFooter = (main, document) => {\n  const stickyFooter = main.querySelector('sticky-footer');\n  if (stickyFooter) {\n    const div = document.createElement('div');\n    // eslint-disable-next-line no-undef\n    const stickyFooterList = JSON.parse(decodeHtmlEntities(stickyFooter.getAttribute('stickyfooterslist')));\n    const stickyTopList = stickyFooter.getAttribute('top-text');\n    div.textContent = stickyTopList;\n    const anchors = stickyFooterList.map((list) => {\n      const anchor = document.createElement('a');\n      anchor.textContent = list.linkName;\n      anchor.setAttribute('href', list.linkUrl);\n      return [anchor];\n    });\n    const cells = [\n      ['Sticky Footer'],\n      ...anchors,\n      [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    stickyFooter.after(block, document.createElement('hr'));\n  }\n}",
            "score": -0.7209302325581395
        },
        "tools/importer/import.js::createTestimonial": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createTestimonial = (main, document) => {\n  const testimonials = main.querySelectorAll('div.testimonial');\n  [...testimonials].forEach((testimonial) => {\n    render.testimonial(testimonial, document);\n  });\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createTwoColumn": {
            "changes_after_merge": 16,
            "file_path": "tools/importer/import.js",
            "merged_function": "createTwoColumn = (main, document) => {\n  main.querySelectorAll('grid[columns=\"2\"]').forEach((item) => {\n    const columns = [];\n    const templates = item.querySelectorAll('template');\n    if (templates.length > 2) {\n      const featureImage = templates[0].content.querySelector('div.featureimage');\n      const imageText = templates[1].content.querySelector('imagetext');\n\n      if (featureImage?.firstElementChild?.localName === 'feature-image') {\n        addFeatureImageDetail(featureImage, featureImage.firstElementChild, document);\n        WebImporter.DOMUtils.remove(featureImage, ['feature-image']);\n      }\n\n      if (featureImage) {\n        columns.push(featureImage);\n      }\n      if (imageText) {\n        const img = document.createElement('img');\n        img.setAttribute('src', imageText.getAttribute('image'));\n        columns.push(img);\n      }\n      const cells = [\n        ['Columns'],\n        [...columns],\n      ];\n\n      if (columns.length > 0) {\n        const block = WebImporter.DOMUtils.createTable(cells, document);\n        item.append(block);\n      }\n    }\n  });\n}",
            "score": -0.2558139534883721
        },
        "tools/importer/import.js::createVideoEmbed": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createVideoEmbed = (main, document) => {\n  const videos = main.querySelectorAll('div.video');\n  videos.forEach((video) => {\n    render.videoembed(video, document);\n  });\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createWeSee": {
            "changes_after_merge": 5,
            "file_path": "tools/importer/import.js",
            "merged_function": "createWeSee = (main, document) => {\n  const weSee = main.querySelector('wesee');\n  if (weSee) {\n    weSee.after(WebImporter.DOMUtils.createTable([['We See']], document));\n  }\n}",
            "score": -0.7674418604651163
        },
        "tools/importer/import.js::decodeHTML": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/import.js",
            "merged_function": "decodeHTML = (encodedString) => encodedString.replace(/&([^;]+);/g, (match, entity) => {\n  const code = {\n    lt: '<',\n    '#x3C': '<',\n  };\n  return code[entity] || match;\n})",
            "score": -0.9534883720930233
        },
        "tools/importer/import.js::getArticles": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "getArticles = (articles, articleArray, document) => {\n  [...articles].forEach((article) => {\n    const articleEL = article?.querySelector('article-summary');\n    const anc = document.createElement('a');\n    anc.href = articleEL?.getAttribute('readlinkurl');\n    anc.textContent = articleEL?.getAttribute('description');\n    article.append(anc);\n    if (articleArray) {\n      articleArray.push(article);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/accordion.js::createAccordion": {
            "changes_after_merge": 9,
            "file_path": "tools/importer/transformers/accordion.js",
            "merged_function": "createAccordion = (main, document) => {\n  const accordion = main.querySelector('accordion');\n  const cells = [['Accordion']];\n  if (accordion) {\n    const accordionHeader = document.createElement('div');\n    accordionHeader.textContent = accordion.getAttribute('accordionheader');\n    // eslint-disable-next-line no-undef\n    const accordionLists = JSON.parse(decodeHtmlEntities(accordion.getAttribute('accordionlist')));\n    const definitionlists = accordionLists.map((list) => {\n      const pEl = document.createElement('p');\n      pEl.innerHTML = list.description;\n      const divEl = document.createElement('div');\n      divEl.innerHTML = list.title;\n      divEl.append(pEl);\n      return [divEl];\n    });\n    if (accordionHeader.textContent) cells.push([accordionHeader]);\n    cells.push(...definitionlists);\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    main.append(block);\n  }\n}",
            "score": -0.5813953488372092
        },
        "tools/importer/transformers/banner.js::createBanner": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/banner.js",
            "merged_function": "createBanner = (main, document) => {\n  const banner = main.querySelector('banner');\n  if (banner) {\n    const title = banner.getAttribute('title');\n    const description = banner.getAttribute('desc');\n    const div = document.createElement('div');\n    const h1 = document.createElement('h1');\n    h1.textContent = title;\n    if (h1) {\n      div.append(h1);\n    }\n    const p = document.createElement('p');\n    p.textContent = description;\n    if (p) {\n      div.append(p);\n    }\n    const cells = [\n      ['Banner'],\n      [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    banner.append(block);\n  }\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/bannerAEM.js::createBannerAEM": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/bannerAEM.js",
            "merged_function": "createBannerAEM = (main, document) => {\n  const banner = main.querySelector('div.banner');\n  if (banner) {\n    const title = banner.querySelector('h1')?.textContent;\n    const description = banner.querySelector('h2')?.textContent;\n    const div = document.createElement('div');\n    const h1 = document.createElement('h1');\n    h1.textContent = title;\n    if (h1) {\n      div.append(h1);\n    }\n    const p = document.createElement('p');\n    p.textContent = description;\n    if (p) {\n      div.append(p);\n    }\n    const cells = [\n      ['Banner'],\n      [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    banner.innerHTML = '';\n    banner.append(block);\n  }\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/breadcrumb.js::createBreadcrumb": {
            "changes_after_merge": 5,
            "file_path": "tools/importer/transformers/breadcrumb.js",
            "merged_function": "createBreadcrumb = (main, document) => {\n  const breadcrumb = main.querySelector('div.breadcrumb');\n  if (breadcrumb) {\n    const breadcrumbEl = breadcrumb.querySelector('breadcrumb');\n    if (breadcrumbEl) {\n      const cells = [];\n      // eslint-disable-next-line no-undef\n      const list = JSON.parse(decodeHtmlEntities(breadcrumbEl.getAttribute('breadcrumbdetailslist')));\n      cells.push(['Breadcrumb']);\n      const ul = document.createElement('ul');\n      list.forEach((item) => {\n        if (!item.url?.includes('/content/experience-fragments')) {\n          const li = document.createElement('li');\n          const anc = document.createElement('a');\n          anc.href = item.url;\n          anc.textContent = item.title;\n          li.append(anc);\n          ul.append(li);\n        }\n      });\n      cells.push([ul]);\n      if (cells.length > 0 && ul.firstElementChild) {\n        const block = WebImporter.DOMUtils.createTable(cells, document);\n        const firstChild = main.firstElementChild?.firstChild;\n        main.firstElementChild.insertBefore(block, firstChild);\n      }\n    }\n  }\n}",
            "score": -0.7674418604651163
        },
        "tools/importer/transformers/callToAction.js::c2a": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/callToAction.js",
            "merged_function": "c2a = (cta, document) => {\n  const ctaSection = cta.querySelector('CTAsection');\n  if (ctaSection) {\n    const title = ctaSection.getAttribute('title');\n    const div = document.createElement('div');\n    const h2 = document.createElement('h2');\n    h2.textContent = title;\n    if (h2) {\n      div.append(h2);\n    }\n\n    const btnText1 = ctaSection.getAttribute('btntext1');\n    const rfqBtn1 = ctaSection.getAttribute('rfqbtn1');\n    const btnhref1 = ctaSection.getAttribute('btnhref1');\n    if (btnText1) {\n      const p1 = document.createElement('p');\n      const a1 = document.createElement('a');\n      a1.setAttribute('href', rfqBtn1 ? '#request-quote' : btnhref1);\n      a1.textContent = btnText1;\n      p1.append(a1);\n      div.append(p1);\n    }\n\n    const btnText2 = ctaSection.getAttribute('btntext2');\n    const rfqBtn2 = ctaSection.getAttribute('rfqbtn2');\n    const btnhref2 = ctaSection.getAttribute('btnhref2');\n    if (btnText2) {\n      const p2 = document.createElement('p');\n      const a2 = document.createElement('a');\n      a2.setAttribute('href', rfqBtn2 ? '#request-quote' : btnhref2);\n      a2.textContent = btnText2;\n      p2.append(a2);\n      div.append(p2);\n    }\n    const cells = [\n      ['call-to-action'], [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    if (ctaSection.closest('div.bg-danaherlightblue-50')) ctaSection.append(document.createElement('hr'));\n    cta.append(block);\n  }\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/callToAction.js::createCTA": {
            "changes_after_merge": 10,
            "file_path": "tools/importer/transformers/callToAction.js",
            "merged_function": "createCTA = (main, document) => {\n  const ctaSection = main.querySelector('CTAsection');\n  if (ctaSection) {\n    const title = ctaSection.getAttribute('title');\n    const btnText1 = ctaSection.getAttribute('btntext1');\n    const rfqBtn1 = ctaSection.getAttribute('rfqbtn1');\n    const div = document.createElement('div');\n    const h2 = document.createElement('h2');\n    h2.textContent = title;\n    if (h2) {\n      div.append(h2);\n    }\n    const btn = document.createElement('button');\n    btn.textContent = btnText1;\n    if (rfqBtn1 && btn.textContent) {\n      div.append(btn);\n    }\n    const cells = [\n      ['CTASection'],\n      [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    ctaSection.append(block);\n  }\n}",
            "score": -0.5348837209302326
        },
        "tools/importer/transformers/cardList.js::createCardList": {
            "changes_after_merge": 4,
            "file_path": "tools/importer/transformers/cardList.js",
            "merged_function": "createCardList = (main, document) => {\n  const url = document.querySelector('[property=\"og:url\"]')?.content;\n  if (url) {\n    let blockName;\n    if (url.endsWith('/blog.html')) blockName = 'Card List (blog)';\n    else if (url.endsWith('/news.html')) blockName = 'Card List (news)';\n    else if (url.endsWith('/library.html')) blockName = 'Card List (library)';\n\n    if (blockName) {\n      const block = [[blockName], ['']];\n      const table = WebImporter.DOMUtils.createTable(block, document);\n      main.append(table);\n    }\n  }\n}",
            "score": -0.813953488372093
        },
        "tools/importer/transformers/cards.js::card": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/cards.js",
            "merged_function": "card = (tmp, cards, document) => {\n  const h2 = tmp.content.querySelector('h2');\n  const articleCard = tmp.content.querySelector('articlecard');\n  if (articleCard) {\n    const cardImg = articleCard.getAttribute('cardimg');\n    const altText = articleCard.getAttribute('imagealttext');\n    const cardTitle = articleCard.getAttribute('cardtitle');\n    const cardDescription = articleCard.getAttribute('carddescription');\n    const cardHref = articleCard.getAttribute('cardhref');\n    const cardLinkText = articleCard.getAttribute('linktext');\n\n    const leftDiv = document.createElement('div');\n    if (h2) {\n      leftDiv.append(h2);\n    }\n    const img = document.createElement('img');\n    img.setAttribute('src', cardImg);\n    if (altText) {\n      img.setAttribute('alt', altText);\n    } else {\n      img.setAttribute('alt', 'Danaher Corporation');\n    }\n    leftDiv.append(img);\n    const rightDiv = document.createElement('div');\n    const h3 = document.createElement('h3');\n    h3.textContent = cardTitle;\n    rightDiv.append(h3);\n    const p = document.createElement('p');\n    p.textContent = cardDescription;\n    const a = document.createElement('a');\n    a.setAttribute('href', cardHref);\n    a.textContent = cardLinkText;\n    p.append(a);\n    rightDiv.append(p);\n    cards.push([leftDiv, rightDiv]);\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/cards.js::createCards": {
            "changes_after_merge": 6,
            "file_path": "tools/importer/transformers/cards.js",
            "merged_function": "createCards = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach((fl) => {\n    const cards = [];\n    fl.querySelectorAll('grid[columns=\"3\"] > template').forEach((tmp) => {\n      const h2 = tmp.content.querySelector('h2');\n      const articleCard = tmp.content.querySelector('articlecard');\n      if (articleCard) {\n        const cardImg = articleCard.getAttribute('cardimg');\n        const altText = articleCard.getAttribute('imagealttext');\n        const cardTitle = articleCard.getAttribute('cardtitle');\n        const cardDescription = articleCard.getAttribute('carddescription');\n        const cardHref = articleCard.getAttribute('cardhref');\n        const cardLinkText = articleCard.getAttribute('linktext');\n\n        const leftDiv = document.createElement('div');\n        if (h2) {\n          leftDiv.append(h2);\n        }\n        const img = document.createElement('img');\n        img.setAttribute('src', cardImg);\n        if (altText) {\n          img.setAttribute('alt', altText);\n        } else {\n          img.setAttribute('alt', 'Danaher Corporation');\n        }\n        leftDiv.append(img);\n        const rightDiv = document.createElement('div');\n        const h3 = document.createElement('h3');\n        h3.textContent = cardTitle;\n        rightDiv.append(h3);\n        const p = document.createElement('p');\n        p.textContent = cardDescription;\n        const a = document.createElement('a');\n        a.setAttribute('href', cardHref);\n        a.textContent = cardLinkText;\n        p.append(a);\n        rightDiv.append(p);\n        cards.push([leftDiv, rightDiv]);\n      }\n    });\n    const cells = [\n      ['Cards (articlecard)'],\n      ...cards,\n    ];\n\n    if (cards.length > 0) {\n      fl.before(document.createElement('hr'));\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      fl.append(block);\n    }\n  });\n}",
            "score": -0.7209302325581395
        },
        "tools/importer/transformers/carousel.js::createCarousel": {
            "changes_after_merge": 7,
            "file_path": "tools/importer/transformers/carousel.js",
            "merged_function": "createCarousel = (main, document) => {\n  const carousel = main.querySelector('home-carousel');\n  if (carousel) {\n    const cells = [];\n    const carousels = [];\n    // eslint-disable-next-line no-undef\n    const carouselLists = JSON.parse(decodeHtmlEntities(carousel.getAttribute('slidedata')));\n    cells.push(['carousel']);\n    [...carouselLists].forEach((list) => {\n      const rightDiv = document.createElement('div');\n      const title = document.createElement('p');\n      title.innerHTML = list.title;\n      if (list.title) rightDiv.append(title);\n      const description = document.createElement('p');\n      description.innerHTML = list.description;\n      if (list.description) rightDiv.append(description);\n      const btnText1 = list.btntitle1;\n      const btnhref1 = list.btn1path;\n      const rfqBtn1 = list.buttonRFQOne;\n      if (btnText1) {\n        const p1 = document.createElement('p');\n        const a1 = document.createElement('a');\n        a1.setAttribute('href', rfqBtn1 ? '#request-quote' : btnhref1);\n        a1.textContent = btnText1;\n        p1.append(a1);\n        rightDiv.append(p1);\n      }\n      const btnText2 = list.btntitle2;\n      const btnhref2 = list.btn2path;\n      const rfqBtn2 = list.buttonRFQTwo;\n      if (btnText2) {\n        const p2 = document.createElement('p');\n        const a2 = document.createElement('a');\n        a2.setAttribute('href', rfqBtn2 ? '#request-quote' : btnhref2);\n        a2.textContent = btnText2;\n        p2.append(a2);\n        rightDiv.append(p2);\n      }\n\n      const leftDiv = document.createElement('div');\n      const img = document.createElement('img');\n      const altText = list.imgalt;\n      img.setAttribute('src', list.image);\n      if (altText) {\n        img.setAttribute('alt', altText);\n      } else {\n        img.setAttribute('alt', 'Danaher Corporation');\n      }\n      leftDiv.append(img);\n\n      carousels.push(leftDiv, rightDiv);\n    });\n    cells.push(carousels);\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    carousel.append(block);\n  }\n}",
            "score": -0.6744186046511628
        },
        "tools/importer/transformers/carousel.js::getCarousel": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/carousel.js",
            "merged_function": "getCarousel = (carousel, cells, document) => {\n  // eslint-disable-next-line no-undef\n  const carouselLists = JSON.parse(decodeHtmlEntities(carousel.getAttribute('slidedata')));\n  cells.push(['carousel']);\n  const slides = carouselLists.map((slide) => {\n    const rightDiv = document.createElement('div');\n    const brandDiv = document.createElement('div');\n    brandDiv.textContent = slide.brandText;\n    if (slide.brandText) rightDiv.append(brandDiv);\n    const title = document.createElement('h2');\n    title.innerHTML = slide.title;\n    if (slide.title) rightDiv.append(title);\n    const description = document.createElement('p');\n    description.innerHTML = slide.description;\n    if (slide.description) rightDiv.append(description);\n    const btnText1 = slide.btntitle1;\n    const btnhref1 = slide.btn1path;\n    const rfqBtn1 = slide.buttonRFQOne;\n    if (btnText1) {\n      const p1 = document.createElement('p');\n      const a1 = document.createElement('a');\n      a1.setAttribute('href', rfqBtn1 ? '#request-quote' : btnhref1);\n      a1.textContent = btnText1;\n      p1.append(a1);\n      rightDiv.append(p1);\n    }\n    const btnText2 = slide.btntitle2;\n    const btnhref2 = slide.btn2path;\n    const rfqBtn2 = slide.buttonRFQTwo;\n    if (btnText2) {\n      const p2 = document.createElement('p');\n      const a2 = document.createElement('a');\n      a2.setAttribute('href', rfqBtn2 ? '#request-quote' : btnhref2);\n      a2.textContent = btnText2;\n      p2.append(a2);\n      rightDiv.append(p2);\n    }\n\n    const leftDiv = document.createElement('div');\n    const img = document.createElement('img');\n    const altText = slide.imgalt;\n    img.setAttribute('src', slide.image);\n    if (altText) {\n      img.setAttribute('alt', altText);\n    } else {\n      img.setAttribute('alt', 'Danaher Corporation');\n    }\n    leftDiv.append(img);\n    return [rightDiv, leftDiv];\n  });\n  cells.push(...slides);\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/columns.js::createAllColumns": {
            "changes_after_merge": 18,
            "file_path": "tools/importer/transformers/columns.js",
            "merged_function": "createAllColumns = (allColumns, document, noOfColumn) => {\n  allColumns.forEach((item) => {\n    const columns = [];\n    const cells = [];\n    if (item?.getAttribute('itemscenter')) {\n      if (noOfColumn === 3) cells.push([['Columns (itemscenter, cols-3)']]);\n      else cells.push([['Columns (itemscenter)']]);\n    } else if (noOfColumn === 3) cells.push([['Columns (cols-3)']]);\n    else cells.push([['Columns']]);\n\n    const templates = item.querySelectorAll('template');\n    [...templates].forEach((template) => {\n      if (template.content.children.length > 0) {\n        const row = [];\n        [...template.content.children].forEach((element) => {\n          if (element.className === 'featureimage') {\n            const featureImages = template.content.querySelectorAll('div.featureimage');\n            featureImages.forEach((featureImage) => {\n              if (featureImage?.firstElementChild?.localName === 'feature-image') {\n                featureimage(featureImage, document);\n                WebImporter.DOMUtils.remove(featureImage, ['feature-image']);\n              }\n\n              if (featureImage) {\n                row.push(featureImage);\n              }\n            });\n          } else if (element.className === 'imagetext') {\n            const imageText = template.content.querySelector('imagetext');\n\n            if (imageText) {\n              const img = document.createElement('img');\n              img.setAttribute('src', imageText.getAttribute('image'));\n              row.push(img);\n            }\n          } else if (element.className === 'heading-aem') {\n            const heading = template.content.querySelector('div.heading-aem');\n            if (heading) {\n              if (heading.nextElementSibling && [...heading.nextElementSibling.classList].includes('featureimage')) {\n                const text = document.createElement('strong');\n                text.textContent = heading.firstElementChild.textContent;\n                row.push(text);\n              } else row.push(heading.firstElementChild);\n            }\n          } else if (element.className === 'heading') {\n            const heading = template.content.querySelector('div.heading');\n            if (heading) {\n              const headingEL = heading?.querySelector('heading');\n              if (heading.nextElementSibling && [...heading.nextElementSibling.classList].includes('featureimage')) {\n                const text = document.createElement('strong');\n                text.textContent = headingEL?.getAttribute('heading');\n                row.push(text);\n              } else {\n                const hTag = headingEL?.getAttribute('headingtag') ? headingEL?.getAttribute('headingtag') : 'h2';\n                const headEl = document.createElement(hTag);\n                headEl.textContent = headingEL?.getAttribute('heading');\n                row.push(headEl);\n              }\n            }\n          } else if (element.className === 'script') {\n            const featureImage = template.content.querySelector('div.featureimage');\n\n            if (featureImage) {\n              row.push(featureImage);\n            }\n          }\n        });\n        columns.push(row);\n      }\n    });\n    cells.push([...columns]);\n\n    if (columns.flat(1).length > 0) {\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      item.append(block);\n    }\n  });\n}",
            "score": -0.16279069767441856
        },
        "tools/importer/transformers/columns.js::createColumn": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/columns.js",
            "merged_function": "createColumn = (main, document) => {\n  const twoColumn = main.querySelectorAll('grid[columns=\"2\"]');\n  const threerColumn = main.querySelectorAll('grid[columns=\"3\"]');\n  if (twoColumn) createAllColumns(twoColumn, document);\n  if (threerColumn) createAllColumns(threerColumn, document, 3);\n}",
            "score": -1.0
        },
        "tools/importer/transformers/columns.js::updateBlockName": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/columns.js",
            "merged_function": "updateBlockName = (blockName, option) => {\n  const match = blockName.match(/Columns\\s*\\(\\s*([^)]*)\\s*\\)/);\n  let bName;\n  if (match) {\n    const contentInsideParentheses = match[1];\n    const updatedString = `Columns (${contentInsideParentheses}, ${option})`;\n    bName = updatedString;\n  } else {\n    const updatedString = `Columns (${option})`;\n    bName = updatedString;\n  }\n  return bName;\n}",
            "score": -1.0
        },
        "tools/importer/transformers/containerTakeaway.js::createTakeaway": {
            "changes_after_merge": 4,
            "file_path": "tools/importer/transformers/containerTakeaway.js",
            "merged_function": "createTakeaway = (main, document) => {\n  const takeaway = main.querySelector('div.container-takeaway');\n  const fulllayout = takeaway?.querySelector('fulllayout');\n  const div = fulllayout?.querySelector('div');\n  const featureImg = div?.querySelector('div.featureimage');\n  if (takeaway) {\n    takeaway.innerHTML = '';\n    const cells = [['Section Metadata'], ['style', 'product-topic-takeaway']];\n    const table = WebImporter.DOMUtils.createTable(cells, document);\n    takeaway.append(document.createElement('hr'), featureimage(featureImg, document), table, document.createElement('hr'));\n  }\n}",
            "score": -0.813953488372093
        },
        "tools/importer/transformers/coveoCategory.js::coveoCategory": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/coveoCategory.js",
            "merged_function": "coveoCategory = (main, document) => {\n  const category = main.querySelector('div.coveocategory');\n  if (category) {\n    const block = [['Category Family'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    category.append(table, document.createElement('hr'));\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/eventCards.js::createEventCards": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/eventCards.js",
            "merged_function": "createEventCards = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach((fl) => {\n    const cards = [];\n    fl.querySelectorAll('grid > template').forEach((tmp) => {\n      const eventCard = tmp.content.querySelector('eventcard');\n      if (eventCard) {\n        const fromTime = eventCard.getAttribute('fromtime');\n        const toTime = eventCard.getAttribute('totime');\n        const eventType = eventCard.getAttribute('eventtype');\n        const eventLocation = eventCard.getAttribute('location');\n        const eventDescription = eventCard.getAttribute('description');\n        const linkUrl = eventCard.getAttribute('linkurl');\n        const linkText = eventCard.getAttribute('linktext');\n        const eventDateDiv = document.createElement('div');\n        const fd = new Date(fromTime);\n        const fdate = fd.toLocaleString([], { hour: '2-digit', minute: '2-digit' });\n        const frdate = fd.toLocaleString([], { day: 'numeric' });\n        const frmonth = fd.toLocaleString([], { month: 'short' });\n        eventDateDiv.append(`${frdate} ${frmonth.toUpperCase()}`);\n        const td = new Date(toTime);\n        const tdate = td.toLocaleString([], { hour: '2-digit', minute: '2-digit' });\n        const todate = td.toLocaleString([], { day: 'numeric' });\n        const tomonth = td.toLocaleString([], { month: 'short' });\n        eventDateDiv.append(` - ${todate} ${tomonth.toUpperCase()}`);\n        const typeSpan = document.createElement('p');\n        typeSpan.textContent = eventType;\n        eventDateDiv.append(typeSpan);\n        const descP = document.createElement('p');\n        descP.textContent = eventDescription;\n        eventDateDiv.append(descP);\n        const ul = document.createElement('ul');\n        const li1 = document.createElement('li');\n        li1.textContent = `:clock: ${fdate.toUpperCase()} - ${tdate.toUpperCase()}`;\n        const li2 = document.createElement('li');\n        li2.textContent = `:location: ${eventLocation}`;\n        ul.appendChild(li1); ul.appendChild(li2);\n        eventDateDiv.append(ul);\n        const a = document.createElement('a');\n        a.setAttribute('href', linkUrl);\n        a.textContent = linkText;\n        eventDateDiv.append(a);\n\n        cards.push([eventDateDiv]);\n      }\n    });\n    const cells = [['Cards (eventcard)'], ...cards];\n    if (cards.length > 0) {\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      fl.append(block);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/featureImage.js::createFeatureImage": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/featureImage.js",
            "merged_function": "createFeatureImage = (main, document) => {\n  const featureImage = main.querySelectorAll('div.featureimage');\n  [...featureImage].forEach((featureImg) => {\n    featureimage(featureImg, document);\n  });\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/footer.js::createFooter": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/footer.js",
            "merged_function": "createFooter = (main, document) => {\n  main.querySelectorAll('footer > div > div > div').forEach((e) => {\n    const cookiesLink = e.querySelector('.ot-sdk-show-settings');\n    if (cookiesLink) {\n      cookiesLink.setAttribute('href', '#manage-cookies');\n    }\n    main.append(e);\n    main.append(document.createElement('hr'));\n  });\n  const copyright = main.querySelector('footer > div > div:last-child');\n  if (copyright) {\n    main.append(copyright);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/fullLayoutSection.js::createFullLayoutSection": {
            "changes_after_merge": 9,
            "file_path": "tools/importer/transformers/fullLayoutSection.js",
            "merged_function": "createFullLayoutSection = (main, document) => {\n  main.querySelectorAll('fulllayout').forEach((e, i, arr) => {\n    const div = e.querySelector('div');\n    const style = div.getAttribute('class');\n    if (style) {\n      const cells = [['Section Metadata'], ['style', style]];\n      const table = WebImporter.DOMUtils.createTable(cells, document);\n      e.after(table);\n      if (i < arr.length - 1) {\n        table.after(document.createElement('hr'));\n      }\n    }\n  });\n}",
            "score": -0.5813953488372092
        },
        "tools/importer/transformers/header.js::block": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/header.js",
            "merged_function": "block = () => {\n    const list = document.createElement('ul');\n    items.forEach((item) => {\n      const li = document.createElement('li');\n      li.append(item[0]);\n      li.append(item[1]);\n      list.append(li);\n    });\n    return list;\n  }",
            "score": -1.0
        },
        "tools/importer/transformers/header.js::createBrandNavigation": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/header.js",
            "merged_function": "createBrandNavigation = (brandNavigationEl, document, main) => {\n  // eslint-disable-next-line no-undef\n  const brands = JSON.parse(decodeHtmlEntities(brandNavigationEl.getAttribute('brands')));\n  const items = [];\n  brands.forEach((brand) => {\n    const a = document.createElement('a');\n    a.setAttribute('href', brand.brandlink);\n    a.textContent = brand.brandimagealt;\n    const img = document.createElement('img');\n    img.setAttribute('src', brand.brandimage);\n    img.setAttribute('alt', brand.brandimagealt);\n    items.push([img, a]);\n  });\n  const block = () => {\n    const list = document.createElement('ul');\n    items.forEach((item) => {\n      const li = document.createElement('li');\n      li.append(item[0]);\n      li.append(item[1]);\n      list.append(li);\n    });\n    return list;\n  };\n  main.append(block());\n  main.append(document.createElement('hr'));\n}",
            "score": -1.0
        },
        "tools/importer/transformers/header.js::createMegaMenu": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/header.js",
            "merged_function": "createMegaMenu = async (megaMenuHoverEl, main, document, publicURL) => {\n  // eslint-disable-next-line no-undef\n  const skipItems = JSON.parse(decodeHtmlEntities(megaMenuHoverEl.getAttribute('menuheadervalues')));\n  const response = await fetch(`${publicURL}content/dam/danaher/system/navigation/megamenu_items_us.json`);\n  const data = await response.json();\n  if (data.length > 0) {\n    createMenuRecursive(main, document, data.sort((a, b) => a.displayOrder - b.displayOrder), skipItems, 'Menu', null, 1);\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/header.js::createMenuRecursive": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/header.js",
            "merged_function": "createMenuRecursive = (main, document, menuData, skipItems, parentTitle, parentLink, level) => {\n  const menuEl = document.createElement('div');\n  const listTitle = document.createElement('p');\n  if (parentLink) {\n    const anc = document.createElement('a');\n    anc.setAttribute('href', parentLink);\n    anc.append(parentTitle);\n    listTitle.append(anc);\n  } else {\n    listTitle.append(parentTitle);\n  }\n  menuEl.append(listTitle);\n  const listEl = document.createElement('ul');\n  menuData.forEach((menuItem) => {\n    if (skipItems.includes(menuItem.name)) {\n      return;\n    }\n    let menuItemTitle = menuItem.name || menuItem.text;\n    const menuItemId = `${parentTitle}|${menuItemTitle}`;\n    const listItem = document.createElement('li');\n    if (menuItem.links?.length > 0) {\n      menuItem.items = menuItem.links;\n    }\n    if (menuItem.items?.length > 0) {\n      // eslint-disable-next-line max-len\n      createMenuRecursive(main, document, menuItem.items, skipItems, menuItemId, menuItem.href, level + 1);\n      menuItemTitle = `${menuItemTitle} :arrow-right:`;\n    }\n    if (menuItem.href) {\n      const anc = document.createElement('a');\n      anc.setAttribute('href', menuItem.href);\n      anc.append(menuItemTitle);\n      listItem.append(anc);\n    } else {\n      listItem.append(menuItemTitle);\n    }\n    listEl.append(listItem);\n  });\n  menuEl.append(listEl);\n  main.append(menuEl);\n  // if (level > 1) {\n  main.append(document.createElement('hr'));\n  // }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/header.js::createNavBar": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/header.js",
            "merged_function": "createNavBar = async (navBarEl, main, document, publicURL) => {\n  const logoTemplateEl = navBarEl.querySelector('template[\\\\#logo]');\n  if (logoTemplateEl) {\n    const logo = logoTemplateEl.content.querySelector('logo');\n    if (logo) {\n      const imgSrc = '/content/dam/danaher/brand-logos/danaher/Logo.svg';\n      const imgAlt = 'Danaher';\n      const link = '/';\n      const img = document.createElement('img');\n      img.setAttribute('src', imgSrc);\n      img.setAttribute('alt', imgAlt);\n      const anc = document.createElement('a');\n      anc.setAttribute('href', link);\n      anc.append(imgAlt);\n      main.append(img);\n      main.append(anc);\n    }\n  }\n  const linkTemplateEl = navBarEl.querySelector('template[\\\\#links]');\n  if (linkTemplateEl) {\n    const headerLinksEl = linkTemplateEl.content.querySelector('header-links');\n    if (headerLinksEl) {\n      // eslint-disable-next-line no-undef\n      const headerLinks = JSON.parse(decodeHtmlEntities(headerLinksEl.getAttribute('headerlinks')));\n      const list = document.createElement('ul');\n      headerLinks.forEach((i) => {\n        const item = document.createElement('li');\n        const anc = document.createElement('a');\n        anc.setAttribute('href', i.linkUrl);\n        anc.append(`:${i.linkIcon.replace(/[A-Z]/g, (match, offset) => (offset > 0 ? '-' : '') + match.toLowerCase())}: ${i.linkName}`);\n        item.append(anc);\n        list.append(item);\n      });\n      main.append(list);\n    }\n  }\n  main.append(document.createElement('hr'));\n  const menuTemplateEl = navBarEl.querySelector('template[\\\\#megamenu]');\n  if (menuTemplateEl) {\n    const megaMenuHoverEl = menuTemplateEl.content.querySelector('megamenuhover');\n    if (megaMenuHoverEl) {\n      await createMegaMenu(megaMenuHoverEl, main, document, publicURL);\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/header.js::header": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/header.js",
            "merged_function": "header = async (main, document, params) => {\n  const danaherHeaderEl = main.querySelector('danaher-header');\n  if (danaherHeaderEl) {\n    const templates = Array.from(danaherHeaderEl.getElementsByTagName('template'));\n    // eslint-disable-next-line no-restricted-syntax\n    for await (const t of templates) {\n      const brandNavigationEl = t.content.querySelector('brand-navigation');\n      if (brandNavigationEl) {\n        createBrandNavigation(brandNavigationEl, document, main);\n      }\n\n      const navBarEl = t.content.querySelector('navbar');\n      if (navBarEl) {\n        await createNavBar(navBarEl, main, document, params.publicURL);\n      }\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/heading.js::createBlogHeader": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/heading.js",
            "merged_function": "createBlogHeader = (main, document) => {\n  const headings = main.querySelectorAll('div.heading');\n  [...headings].forEach((heading) => {\n    const headingEL = heading?.querySelector('heading');\n    const hTag = headingEL?.getAttribute('headingtag') ? headingEL?.getAttribute('headingtag') : 'h1';\n    const headEl = document.createElement(hTag);\n    headEl.textContent = headingEL?.getAttribute('heading');\n    if (headEl.innerHTML) {\n      heading.append(headEl);\n    }\n\n    const p = document.createElement('p');\n    p.innerHTML = headingEL?.getAttribute('subheadingtext');\n    if (p.innerHTML) {\n      heading.append(p);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/heroVideo.js::createHero": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/heroVideo.js",
            "merged_function": "createHero = (main, document) => {\n  const heroVideo = main.querySelector('herovideoplayer');\n  if (heroVideo) {\n    const title = heroVideo.getAttribute('title');\n    const description = heroVideo.getAttribute('description');\n    const percentage = heroVideo.getAttribute('percentage');\n    const ctaText = heroVideo.getAttribute('btntext');\n    const videoid = heroVideo.getAttribute('videoid');\n    const imgSrc = 'https://danaherls.scene7.com/is/image/danaher/hero-image?$danaher-transparent$';\n    const imgAlt = heroVideo.getAttribute('imagealt');\n\n    const img = document.createElement('img');\n    img.setAttribute('src', imgSrc);\n    img.setAttribute('alt', imgAlt);\n\n    const div = document.createElement('div');\n    const h2 = document.createElement('h2');\n    h2.textContent = title;\n    div.append(h2);\n    const p1 = document.createElement('p');\n    p1.textContent = description;\n    div.append(p1);\n    const p2 = document.createElement('p');\n    const strong = document.createElement('strong');\n    strong.textContent = percentage;\n    p2.append(strong);\n    div.append(p2);\n    const p3 = document.createElement('p');\n    const videoElemHTML = `<a href=\"https://player.vimeo.com/video/${videoid}?loop=1&app_id=122963\">${ctaText}</a>`;\n    p3.innerHTML = videoElemHTML;\n    div.append(p3);\n\n    const cells = [\n      ['Hero'],\n      [img, div],\n    ];\n\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    heroVideo.append(block);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/image.js::createImage": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/image.js",
            "merged_function": "createImage = (main, document) => {\n  const imageText = main.querySelectorAll('div.imagetext');\n  [...imageText].forEach((imgText) => {\n    imagetext(imgText, document);\n  });\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/libraryHub.js::libraryHub": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/libraryHub.js",
            "merged_function": "libraryHub = (main, document) => {\n  const url = document.querySelector('[property=\"og:url\"]')?.content;\n  if (url?.endsWith('/library.html')) {\n    main.querySelectorAll('div.container-sidebar').forEach((div) => div.remove());\n    main\n      .querySelectorAll('div.aem-Grid.aem-Grid--12.aem-Grid--default--12 h2')\n      .forEach((h2) => h2.closest('div').remove());\n\n    const block = [['Card List (library)'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    main.append(table);\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/logoCloud.js::createLogoCloud": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/logoCloud.js",
            "merged_function": "createLogoCloud = (main, document) => {\n  const logoCloud = main.querySelector('logo-cloud');\n  if (logoCloud) {\n    const div = document.createElement('div');\n    const template = logoCloud.querySelector('template');\n    div.append(template.content.querySelector('h2'));\n    template.content.querySelectorAll('p').forEach((item) => div.append(item));\n    div.append(template.content.querySelector('a'));\n\n    const items = [];\n    // eslint-disable-next-line no-undef\n    const logos = JSON.parse(decodeHtmlEntities(logoCloud.getAttribute('logos')));\n    logos.forEach((logo) => {\n      const a = document.createElement('a');\n      a.setAttribute('href', logo.imageLink);\n      a.textContent = logo.imageAlt;\n      const img = document.createElement('img');\n      img.setAttribute('src', logo.image);\n      img.setAttribute('alt', logo.imageAlt);\n      items.push([img, a]);\n    });\n\n    const cells = [\n      ['Logo Clouds'],\n      [div],\n      ...items,\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    const sectionCells = [['Section Metadata'], ['style', 'bg-gray-200']];\n    const table = WebImporter.DOMUtils.createTable(sectionCells, document);\n    logoCloud.after(block, table, document.createElement('hr'));\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/metadata.js::addArticleMeta": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/metadata.js",
            "merged_function": "addArticleMeta = (document, meta) => {\n  const articleinfo = document.querySelector('div.articleinfo');\n  if (articleinfo) {\n    const articleinfoEL = articleinfo.querySelector('articleinfo');\n    if (articleinfoEL) {\n      if (articleinfoEL.hasAttribute('articlename')) meta.authorName = articleinfoEL.getAttribute('articlename');\n      if (articleinfoEL.hasAttribute('title')) meta.authorTitle = articleinfoEL.getAttribute('title');\n      if (articleinfoEL.hasAttribute('postdate')) meta.publishDate = new Date(Date.parse(`${articleinfoEL.getAttribute('postdate')} UTC`)).toUTCString();\n      if (articleinfoEL.hasAttribute('articleimage')) {\n        const img = document.createElement('img');\n        img.src = articleinfoEL.getAttribute('articleimage');\n        meta.authorImage = img;\n      }\n      if (articleinfoEL.hasAttribute('opco')) meta.brand = articleinfoEL.getAttribute('opco');\n      meta.readingTime = parseInt(articleinfoEL.getAttribute('time'), 10);\n    }\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/metadata.js::addCategoryMeta": {
            "changes_after_merge": 8,
            "file_path": "tools/importer/transformers/metadata.js",
            "merged_function": "addCategoryMeta = (url, meta) => {\n  // detect category pages based on url and set category and maybe parent category\n  if (url.pathname.match(/^\\/content\\/danaher\\/ls\\/us\\/en\\/products\\/(?!family\\/|sku\\/)/)) {\n    const category = url.pathname.replace(/^\\/content\\/danaher\\/ls\\/us\\/en\\/products\\//, '').replace(/\\.html$/, '').replace(/\\/topics/, '').split('/');\n    if (url.pathname.indexOf('/topics') > -1) {\n      category.pop();\n    }\n    meta.Category = category.pop();\n    if (category.length) meta.ParentCategory = category.pop();\n  }\n}",
            "score": -0.627906976744186
        },
        "tools/importer/transformers/metadata.js::addDataLayerMeta": {
            "changes_after_merge": 4,
            "file_path": "tools/importer/transformers/metadata.js",
            "merged_function": "addDataLayerMeta = (document, html, meta) => {\n  const divEl = document.createElement('div');\n  divEl.innerHTML = html;\n  const scriptElements = Array.from(divEl.querySelectorAll('script'));\n  const filteredScripts = scriptElements.filter(script => {\n    return script.textContent.startsWith('\\n    dataLayer = ');\n  });\n  const dataLayerJson = JSON.parse(filteredScripts[0].textContent.replaceAll('\\n', '').replace('dataLayer', '').replace('=', '').replace(';', '').replaceAll('\\'', '\"'));\n\n  if(dataLayerJson){\n    meta.creationDate = new Date(Date.parse(`${dataLayerJson[1].page.creationDate} UTC`)).toUTCString();\n    meta.updateDate = new Date(Date.parse(`${dataLayerJson[1].page.updateDate} UTC`)).toUTCString();\n  }\n}",
            "score": -0.813953488372093
        },
        "tools/importer/transformers/metadata.js::addSKUMeta": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/metadata.js",
            "merged_function": "addSKUMeta = (url, meta) => {\n  // detect family|sku|budle pages based on url and set sku metadata\n  if (url.pathname.match(/\\/content\\/danaher\\/ls\\/us\\/en\\/products\\/(family\\/|sku\\/|bundle\\/)/)) {\n    const sku = url.pathname.replace(/^\\/content\\/danaher\\/ls\\/us\\/en\\/products\\//, '').replace(/\\.html$/, '').split('/');\n    meta.sku = sku.pop();\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/metadata.js::createMetadata": {
            "changes_after_merge": 20,
            "file_path": "tools/importer/transformers/metadata.js",
            "merged_function": "createMetadata = (main, document) => {\n  const meta = {};\n\n  const title = document.querySelector('title');\n  if (title) {\n    meta.Title = title.textContent.replace(/[\\n\\t]/gm, '');\n  }\n\n  const canonical = document.querySelector('[rel=\"canonical\"]');\n  if (canonical) {\n    meta.canonical = canonical.href.replace('/content/danaher/ls/', 'https://lifesciences.danaher.com/');\n  }\n\n  const keywords = document.querySelector('[name=\"keywords\"]');\n  if (keywords) {\n    meta.keywords = keywords.content;\n  }\n\n  const desc = document.querySelector('[property=\"og:description\"]');\n  if (desc) {\n    meta.Description = desc.content;\n  }\n\n  const img = document.querySelector('[property=\"og:image\"]');\n  if (img && img.content) {\n    const el = document.createElement('img');\n    const url = new URL(img.content);\n    el.src = url.pathname;\n    meta.Image = el;\n  }\n\n  if (meta.Title && (meta.Title === 'Footer' || meta.Title === 'Header')) {\n    meta.Robots = 'noindex, nofollow';\n    delete meta.Title;\n  }\n\n  addArticleMeta(document, meta);\n  const block = WebImporter.Blocks.getMetadataBlock(document, meta);\n  main.append(block);\n\n  return meta;\n}",
            "score": -0.06976744186046513
        },
        "tools/importer/transformers/miniTeaser.js::createMiniTeaser": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/transformers/miniTeaser.js",
            "merged_function": "createMiniTeaser = (main, document) => {\n  const websiteLinks = main.querySelector('div#mini-teaser');\n  if (websiteLinks) {\n    const xf = websiteLinks.closest('div.experiencefragment');\n    const cards = [];\n    teaser(xf, cards, document);\n    const cells = [['Mini Teasers'],\n      ...cards,\n    ];\n    if (cells.length > 0) {\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      xf.append(block);\n    }\n  }\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/transformers/miniTeaser.js::teaser": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/miniTeaser.js",
            "merged_function": "teaser = (xf, cards, document) => {\n  xf.querySelectorAll('grid[columns=\"3\"] > template').forEach((tmp) => {\n    const articleCard = tmp.content.querySelector('articlecard');\n    if (articleCard) {\n      const cardImg = articleCard.getAttribute('cardimg');\n      const altText = articleCard.getAttribute('imagealttext') ? articleCard.getAttribute('imagealttext') : 'Danaher Corporation';\n      const cardTitle = articleCard.getAttribute('cardtitle');\n      const cardHref = articleCard.getAttribute('cardhref');\n      const cardLinkText = articleCard.getAttribute('linktext');\n\n      const leftDiv = document.createElement('div');\n      const img = document.createElement('img');\n      img.setAttribute('src', cardImg);\n      img.setAttribute('alt', altText);\n      leftDiv.append(img);\n\n      const rightDiv = document.createElement('div');\n      const h3 = document.createElement('h3');\n      h3.textContent = cardTitle;\n      rightDiv.append(h3);\n      const a = document.createElement('a');\n      a.setAttribute('href', cardHref);\n      a.textContent = cardLinkText;\n      rightDiv.append(a);\n      cards.push([leftDiv, rightDiv]);\n    }\n    const featureimage = tmp.content.querySelector('feature-image');\n    if (featureimage) {\n      const cardImg = featureimage.getAttribute('img');\n      const cardImgAlt = featureimage?.getAttribute('imgalt') ? featureimage?.getAttribute('imgalt') : 'Danaher Corporation';\n      const cardTitle = featureimage.getAttribute('title');\n      const btnRfq = featureimage.getAttribute('btnrfq');\n      const btnHref = featureimage.getAttribute('btnhref');\n      const cardLinkText = featureimage.getAttribute('btntext');\n\n      const leftDiv = document.createElement('div');\n      const img = document.createElement('img');\n      img.setAttribute('src', cardImg);\n      img.setAttribute('alt', cardImgAlt);\n      leftDiv.append(img);\n\n      const rightDiv = document.createElement('div');\n      const h3 = document.createElement('h3');\n      h3.textContent = cardTitle;\n      rightDiv.append(h3);\n      const a = document.createElement('a');\n      if (btnRfq) a.setAttribute('href', '#RequestAQuote');\n      else a.setAttribute('href', btnHref);\n      a.textContent = cardLinkText;\n      rightDiv.append(a);\n      cards.push([leftDiv, rightDiv]);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/opcoHomeArticlesList.js::createOpcoHomeArticlesList": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/opcoHomeArticlesList.js",
            "merged_function": "createOpcoHomeArticlesList = (main, document) => {\n  const placeholder = main.querySelector('div#articles-opco-home');\n  if (placeholder) {\n    const blockName = 'Articles list';\n    const block = [[blockName], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    placeholder.innerHTML = '';\n    placeholder.append(table);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/pdfEmbed.js::createPDFEmbed": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/pdfEmbed.js",
            "merged_function": "createPDFEmbed = (main, document) => {\n  const pdfViewer = main.querySelectorAll('div.pdfviewer');\n  pdfViewer.forEach((pdf) => {\n    pdfembed(pdf, document);\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/postProcessSVGIcons.js::postProcessSVGIcons": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/postProcessSVGIcons.js",
            "merged_function": "postProcessSVGIcons = (main) => {\n  main.querySelectorAll('img').forEach((img) => {\n    const imgSrc = img.getAttribute('src');\n    if (imgSrc.includes('/content/dam/danaher/system/icons/') && imgSrc.includes('.svg')) {\n      const svgFileName = imgSrc.split('/').pop().split('.')[0].replace(' ', '_');\n      img.outerHTML = `:dam-${svgFileName}:`;\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/product.js::createProductPage": {
            "changes_after_merge": 9,
            "file_path": "tools/importer/transformers/product.js",
            "merged_function": "createProductPage = (main, document) => {\n  const product = main.querySelector('product-page');\n  if (product) {\n    const btnText = product.getAttribute('rfqbuttontext');\n    const productCells = [\n      ['Product Details'],\n      [btnText],\n    ];\n\n    if (btnText) {\n      const block = WebImporter.DOMUtils.createTable(productCells, document);\n      product.append(block, document.createElement('hr'));\n    }\n\n    const tabs = JSON.parse(product.getAttribute('producttabs'));\n    tabs.forEach((tab, i, arr) => {\n      const sectionCells = [['Section Metadata'], ['icon', tab.icon], ['tabId', tab.tabId], ['tabName', tab.tabName]];\n      const attributeCells = [];\n      const template = product.querySelector(`template[v-slot:${tab.tabId}]`);\n\n      if (tab.tabId === 'specification') {\n        const attributes = JSON.parse(product.getAttribute('attributes'));\n        attributeCells.push(['product-attribute-table']);\n        attributes.forEach((attribute) => {\n          attributeCells.push([attribute.attributeLabel, attribute.attribute]);\n        });\n        const attributeTable = WebImporter.DOMUtils.createTable(attributeCells, document);\n        main.append(attributeTable);\n      }\n\n      if (template.content.childNodes.length > 1) {\n        const elementsArray = Array.from(template.content.childNodes);\n        elementsArray.forEach((element) => {\n          if (element.outerHTML) {\n            switch (element.className) {\n              case 'imagetext':\n                main.append(imagetext(element, document));\n                break;\n              case 'text':\n                main.append(appendText(element));\n                break;\n              case 'product-citations':\n                main.append(productcitations(element));\n                break;\n              default:\n                main.append(featureimage(element, document));\n            }\n          }\n        });\n      }\n\n      const sectionTable = WebImporter.DOMUtils.createTable(sectionCells, document);\n      main.append(sectionTable);\n      if (i < arr.length - 1) {\n        main.append(document.createElement('hr'));\n      }\n    });\n  }\n}",
            "score": -0.5813953488372092
        },
        "tools/importer/transformers/product.js::render": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/product.js",
            "merged_function": "render = (main, element, document) => {\n  switch (element.className) {\n    case 'imagetext':\n      main.append(imageText(element, document));\n      break;\n    case 'heading': {\n      getHeading(element, document);\n      main.append(element);\n      break;\n    }\n    case 'text':\n      main.append(appendText(element));\n      break;\n    case 'product-citations':\n      main.append(productcitations(element));\n      break;\n    default: {\n      featureImage(element, document);\n      main.append(element);\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/productCategory.js::productCategory": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/productCategory.js",
            "merged_function": "productCategory = (main, document) => {\n  const category = main.querySelector('category-info');\n  if (category) {\n    const h3El = document.createElement('h3');\n    h3El.textContent = 'Categories';\n    category.append(h3El);\n    const block = [['Product Category'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    category.append(table, document.createElement('hr'));\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/productCategoryInfo.js::productCategoryInfo": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/productCategoryInfo.js",
            "merged_function": "productCategoryInfo = (main, document) => {\n  const categoryInfo = main.querySelector('category-info');\n  if (categoryInfo) {\n    const h3El = document.createElement('h3');\n    h3El.textContent = 'Categories';\n    categoryInfo.append(h3El);\n    const block = [['Product Category Info'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    categoryInfo.append(table, document.createElement('hr'));\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/productCategoryList.js::createProductCategoryList": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/productCategoryList.js",
            "merged_function": "createProductCategoryList = (main, document) => {\n  const placeholder = main.querySelector('div#product-category-list');\n  if (placeholder) {\n    const block = [['Product category list'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    placeholder.innerHTML = '';\n    placeholder.append(table);\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/productMenu.js::createProductMenu": {
            "changes_after_merge": 4,
            "file_path": "tools/importer/transformers/productMenu.js",
            "merged_function": "createProductMenu = () => {\n  // const productMenu = main.querySelector('div.product-menu');\n\n}",
            "score": -0.813953488372093
        },
        "tools/importer/transformers/relatedArticles.js::createProductCategoryList": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/relatedArticles.js",
            "merged_function": "createProductCategoryList = (main, document) => {\n  const placeholder = main.querySelector('div#related-articles');\n  if (placeholder) {\n    const block = [['Related Articles'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    placeholder.innerHTML = '';\n    placeholder.append(table);\n  }\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/sideBarArticles.js::createSidebarArticle": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/sideBarArticles.js",
            "merged_function": "createSidebarArticle = (main, document) => {\n  const sidebar = main.querySelector('div#recent-articles')?.parentNode;\n  if (sidebar) {\n    sidebar.innerHTML = '';\n    const block = [['recent-articles'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    sidebar.append(document.createElement('hr'));\n    sidebar.append(table);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/sideNav.js::sideNav": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/sideNav.js",
            "merged_function": "sideNav = (main, document) => {\n  const sideNavEl = main.querySelector('#side-nav');\n  if (sideNavEl) {\n    let blockName = 'Side Nav';\n    const sideNavContent = sideNavEl?.textContent?.trim();\n    if (sideNavContent && sideNavContent.length < 65) {\n      blockName += ` (${sideNavEl.textContent})`;\n    }\n    const block = [[blockName], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    sideNavEl.replaceWith(table);\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/socialFeeds.js::createProductCategoryList": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/socialFeeds.js",
            "merged_function": "createProductCategoryList = (main, document) => {\n  const placeholder = main.querySelector('div#social-feeds');\n  if (placeholder) {\n    const block = [['Social Feeds'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    placeholder.innerHTML = '';\n    placeholder.append(table);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/stickyFooter.js::createStickyFooter": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/stickyFooter.js",
            "merged_function": "createStickyFooter = (main, document) => {\n  const stickyFooter = main.querySelector('sticky-footer');\n  if (stickyFooter) {\n    const div = document.createElement('div');\n    // eslint-disable-next-line no-undef\n    const stickyFooterList = JSON.parse(decodeHtmlEntities(stickyFooter.getAttribute('stickyfooterslist')));\n    const stickyTopList = stickyFooter.getAttribute('top-text');\n    div.textContent = stickyTopList;\n    const anchors = stickyFooterList.map((list) => {\n      const anchor = document.createElement('a');\n      anchor.textContent = list.linkName;\n      anchor.setAttribute('href', list.linkUrl);\n      return [anchor];\n    });\n    const cells = [\n      ['Sticky Footer'],\n      ...anchors,\n      [div],\n    ];\n    const block = WebImporter.DOMUtils.createTable(cells, document);\n    main.append(block);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/table.js::createTable": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/table.js",
            "merged_function": "createTable = (main, document) => {\n  main.querySelectorAll('table').forEach((table) => {\n    mapTable(table, document);\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/takeaway.js::createTakeaway": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/takeaway.js",
            "merged_function": "createTakeaway = (main, document) => {\n  main.querySelectorAll('div.container-takeaway').forEach((takeaway) => {\n    const block = [['Takeway']];\n    const fullLayout = takeaway?.querySelector('fulllayout');\n    const featureImgs = fullLayout?.querySelectorAll('div.featureimage');\n    if (featureImgs) {\n      featureImgs.forEach((featureImg) => {\n        block.push([featureimage(featureImg, document)]);\n      });\n    } else {\n      block.push([fullLayout.innerHTML]);\n    }\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    fullLayout.replaceWith(table);\n  });\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/testmonial.js::createTestimonial": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/testmonial.js",
            "merged_function": "createTestimonial = (main, document) => {\n  const testimonials = main.querySelectorAll('div.testimonial');\n  [...testimonials].forEach((testimonialEl) => {\n    testimonial(testimonialEl, document);\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/topicList.js::topicList": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/topicList.js",
            "merged_function": "topicList = (main, document) => {\n  const topicListEl = main.querySelector('#topic-list');\n  if (topicListEl) {\n    const block = [['Topic List'], ['']];\n    const table = WebImporter.DOMUtils.createTable(block, document);\n    topicListEl.replaceWith(table);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/twoColumns.js::createAllColumns": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/twoColumns.js",
            "merged_function": "createAllColumns = (allColumns, document) => {\n  allColumns.forEach((item) => {\n    const columns = [];\n    const cells = [];\n    if (item?.getAttribute('itemscenter')) cells.push([['Columns (itemscenter)']]);\n    else cells.push([['Columns']]);\n\n    const templates = item.querySelectorAll('template');\n    [...templates].forEach((template) => {\n      if (template.content.children.length > 0) {\n        const row = [];\n        [...template.content.children].forEach((element) => {\n          if (element.className === 'featureimage') {\n            const featureImages = template.content.querySelectorAll('div.featureimage');\n            featureImages.forEach((featureImage) => {\n              if (featureImage?.firstElementChild?.localName === 'feature-image') {\n                featureimage(featureImage, document);\n                WebImporter.DOMUtils.remove(featureImage, ['feature-image']);\n              }\n\n              if (featureImage) {\n                row.push(featureImage);\n              }\n            });\n          } else if (element.className === 'imagetext') {\n            const imageText = template.content.querySelector('imagetext');\n\n            if (imageText) {\n              const img = document.createElement('img');\n              img.setAttribute('src', imageText.getAttribute('image'));\n              row.push(img);\n            }\n          } else if (element.className === 'heading-aem') {\n            const heading = template.content.querySelector('div.heading-aem');\n            if (heading) {\n              if (heading.nextElementSibling && [...heading.nextElementSibling.classList].includes('featureimage')) {\n                const text = document.createElement('strong');\n                text.textContent = heading.firstElementChild.textContent;\n                row.push(text);\n              } else row.push(heading.firstElementChild);\n            }\n          } else if (element.className === 'heading') {\n            const heading = template.content.querySelector('div.heading');\n            if (heading) {\n              const headingEL = heading?.querySelector('heading');\n              if (heading.nextElementSibling && [...heading.nextElementSibling.classList].includes('featureimage')) {\n                const text = document.createElement('strong');\n                text.textContent = headingEL?.getAttribute('heading');\n                row.push(text);\n              } else {\n                const hTag = headingEL?.getAttribute('headingtag') ? headingEL?.getAttribute('headingtag') : 'h2';\n                const headEl = document.createElement(hTag);\n                headEl.textContent = headingEL?.getAttribute('heading');\n                row.push(headEl);\n              }\n            }\n          } else if (element.className === 'script') {\n            const featureImage = template.content.querySelector('div.featureimage');\n\n            if (featureImage) {\n              row.push(featureImage);\n            }\n          }\n        });\n        columns.push(row);\n      }\n    });\n    cells.push([...columns]);\n\n    if (columns.flat(1).length > 0) {\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      item.append(block);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/twoColumns.js::createColumn": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/twoColumns.js",
            "merged_function": "createColumn = (main, document) => {\n  const twoColumn = main.querySelectorAll('grid[columns=\"2\"]');\n  const threerColumn = main.querySelectorAll('grid[columns=\"3\"]');\n  if (twoColumn) createAllColumns(twoColumn, document);\n  if (threerColumn) createAllColumns(threerColumn, document);\n}",
            "score": -1.0
        },
        "tools/importer/transformers/twoColumns.js::createTwoColumn": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/transformers/twoColumns.js",
            "merged_function": "createTwoColumn = (main, document) => {\n  main.querySelectorAll('grid[columns=\"2\"]').forEach((item) => {\n    const columns = [];\n    const templates = item.querySelectorAll('template');\n    [...templates].forEach((template) => {\n      if (template.content.firstElementChild) {\n        if (template.content.firstElementChild.className === 'featureimage') {\n          const featureImage = template.content.querySelector('div.featureimage');\n          if (featureImage?.firstElementChild?.localName === 'feature-image') {\n            featureimage(featureImage, document);\n            WebImporter.DOMUtils.remove(featureImage, ['feature-image']);\n          }\n\n          if (featureImage) {\n            columns.push(featureImage);\n          }\n        } else if (template.content.firstElementChild.className === 'imagetext') {\n          const imageText = template.content.querySelector('imagetext');\n\n          if (imageText) {\n            const img = document.createElement('img');\n            img.setAttribute('src', imageText.getAttribute('image'));\n            columns.push(img);\n          }\n        } else if (template.content.firstElementChild.className === 'script') {\n          const featureImage = template.content.querySelector('div.featureimage');\n\n          if (featureImage) {\n            columns.push(featureImage);\n          }\n        }\n      }\n    });\n    const cells = [\n      ['Columns'],\n      [...columns],\n    ];\n\n    if (columns.length > 0) {\n      const block = WebImporter.DOMUtils.createTable(cells, document);\n      item.append(block);\n    }\n  });\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/transformers/util.js::appendText": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "appendText = (text) => {\n  text.append(text?.firstElementChild?.firstElementChild);\n  return text;\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/util.js::cleanUpHTML": {
            "changes_after_merge": 9,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "cleanUpHTML = (html) => {\n  // clean up unwanted tags\n  html.querySelectorAll('h2 > b, h3 > b, h4 > b').forEach((boldHeading) => {\n    boldHeading.parentElement.innerHTML = boldHeading.innerHTML;\n  });\n\n  html.querySelectorAll('a > b').forEach((boldLink) => {\n    const anchor = boldLink.parentElement;\n    anchor.insertBefore(boldLink.firstChild, boldLink);\n  });\n\n  // clean up all empty elements\n  const elements = html.getElementsByTagName('*');\n  for (let i = elements.length - 1; i >= 0; i -= 1) {\n    const element = elements[i];\n    if (!element.textContent.trim() && !element.hasChildNodes()) {\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  // combine multiple <ul> tags into one\n  html.querySelectorAll('ul + ul, ol + ol').forEach((list) => {\n    const prevUl = list.previousElementSibling;\n    prevUl.append(...list.childNodes);\n    list.remove();\n  });\n\n  return html;\n}",
            "score": -0.5813953488372092
        },
        "tools/importer/transformers/util.js::decodeHTML": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "decodeHTML = (encodedString) => encodedString.replaceAll('&#x3C;', '<')\n  .replaceAll('&lt;', '<')\n  .replaceAll('<u>', '')\n  .replaceAll('</u>', '')\n  .replaceAll('&nbsp;', '')",
            "score": -0.9069767441860466
        },
        "tools/importer/transformers/util.js::featureImage": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "featureImage = (featureImg, document) => {\n  const featureImageEL = featureImg?.querySelector('feature-image');\n  if (featureImageEL?.getAttribute('title')) {\n    const headingTag = featureImageEL?.getAttribute('titleheading');\n    const title = headingTag ? document.createElement(headingTag) : document.createElement('h2');\n    title.textContent = featureImageEL.getAttribute('title');\n    featureImg.append(title);\n  }\n\n  if (featureImageEL?.getAttribute('description')) {\n    let p = document.createElement('p');\n    p.innerHTML = decodeHTML(featureImageEL.getAttribute('description'));\n    p = cleanUpHTML(p);\n    p.querySelectorAll('table').forEach((table) => {\n      mapTable(table, document);\n    });\n    featureImg.append(p);\n  }\n\n  const image = featureImageEL?.getAttribute('img') ? document.createElement('img') : null;\n  if (image) {\n    image.src = featureImageEL?.getAttribute('img');\n    image.alt = featureImageEL?.getAttribute('imgalt') ? featureImageEL?.getAttribute('imgalt') : 'Danaher Corporation';\n    featureImg.append(image);\n  }\n\n  if (featureImageEL?.getAttribute('btnhref')) {\n    const anc = document.createElement('a');\n    anc.href = featureImageEL?.getAttribute('btnhref');\n    if (featureImageEL?.getAttribute('asLink')) anc.title = 'link';\n    anc.textContent = featureImageEL?.getAttribute('btntext');\n    featureImg.append(anc);\n  }\n  if (featureImageEL) featureImageEL.remove();\n  return featureImg;\n}",
            "score": -1.0
        },
        "tools/importer/transformers/util.js::featureimage": {
            "changes_after_merge": 6,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "featureimage = (featureImg, document) => {\n  const featureImageEL = featureImg?.querySelector('feature-image');\n  if (featureImageEL?.getAttribute('title')) {\n    const title = document.createElement('h2');\n    title.textContent = featureImageEL.getAttribute('title');\n    featureImg.append(title);\n  }\n\n  if (featureImageEL?.getAttribute('description')) {\n    let p = document.createElement('p');\n    p.innerHTML = decodeHTML(featureImageEL.getAttribute('description'));\n    p = cleanUpHTML(p);\n    if (p.firstElementChild.tagName === 'TABLE') {\n      const thead = p.firstElementChild.createTHead();\n      const row = thead.insertRow(0);\n      const th = document.createElement('th');\n      th.setAttribute('colspan', '3');\n      th.textContent = 'Table';\n      row.appendChild(th);\n    }\n    featureImg.append(p);\n  }\n\n  const image = featureImageEL?.getAttribute('img') ? document.createElement('img') : null;\n  if (image) {\n    image.src = featureImageEL?.getAttribute('img');\n    image.alt = featureImageEL?.getAttribute('imgalt') ? featureImageEL?.getAttribute('imgalt') : '';\n    featureImg.append(image);\n  }\n\n  if (featureImageEL?.getAttribute('btnhref')) {\n    const anc = document.createElement('a');\n    anc.href = featureImageEL?.getAttribute('btnhref');\n    anc.textContent = featureImageEL?.getAttribute('btntext');\n    featureImg.append(anc);\n  }\n  return featureImg;\n}",
            "score": -0.7209302325581395
        },
        "tools/importer/transformers/util.js::getAEMHeading": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "getAEMHeading = (aemHeading, document) => {\n  if (aemHeading.nextElementSibling && [...aemHeading.nextElementSibling.classList].includes('featureimage')) {\n    const text = document.createElement('strong');\n    text.textContent = aemHeading.firstElementChild.textContent;\n    aemHeading.innerHTML = '';\n    aemHeading.append(text);\n  } else {\n    aemHeading.append(aemHeading.firstElementChild);\n  }\n  return aemHeading;\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/transformers/util.js::getFutureSectionCard": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "getFutureSectionCard = (featureSectionCardDiv, document) => {\n  const featureSectionCardEL = featureSectionCardDiv?.querySelector('featuresection-card');\n  const title = featureSectionCardEL?.getAttribute('title');\n  const description = featureSectionCardEL?.getAttribute('description');\n  const image = featureSectionCardEL?.getAttribute('card-image');\n  const titleDivEl = document.createElement('div');\n  titleDivEl.textContent = title;\n  featureSectionCardDiv.append(titleDivEl);\n  const pEl = document.createElement('p');\n  pEl.textContent = description;\n  featureSectionCardDiv.append(pEl);\n  const imgEl = document.createElement('img');\n  imgEl.src = image;\n  featureSectionCardDiv.append(imgEl);\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/util.js::getHeading": {
            "changes_after_merge": 3,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "getHeading = (heading, document) => {\n  const headingEL = heading?.querySelector('heading');\n  if (headingEL) {\n    if (heading.nextElementSibling && [...heading.nextElementSibling.classList].includes('featureimage')) {\n      const text = document.createElement('strong');\n      text.textContent = headingEL?.getAttribute('heading');\n      headingEL.append(text);\n    } else {\n      const hTag = headingEL?.getAttribute('headingtag') ? headingEL?.getAttribute('headingtag') : 'h2';\n      const headEl = document.createElement(hTag);\n      headEl.textContent = headingEL?.getAttribute('heading');\n      headingEL.append(headEl);\n    }\n  }\n  return headingEL;\n}",
            "score": -0.8604651162790697
        },
        "tools/importer/transformers/util.js::imageText": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "imageText = (imgText, document) => {\n  const imagetextEL = imgText?.querySelector('imagetext') ? imgText?.querySelector('imagetext') : imgText;\n  const image = document.createElement('img');\n  image.src = imagetextEL?.getAttribute('image');\n  image.alt = imagetextEL?.getAttribute('imageAlt') ? imagetextEL?.getAttribute('imageAlt') : 'Danaher Corporation';\n  imgText.append(image);\n  return imgText;\n}",
            "score": -1.0
        },
        "tools/importer/transformers/util.js::imagetext": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "imagetext = (imgText, document) => {\n  const imagetextEL = imgText?.querySelector('imagetext');\n  const image = document.createElement('img');\n  image.src = imagetextEL?.getAttribute('image');\n  image.alt = imagetextEL?.getAttribute('imageAlt');\n  imgText.append(image);\n  return imgText;\n}",
            "score": -1.0
        },
        "tools/importer/transformers/util.js::mapTable": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "mapTable = (table, document) => {\n  let tHead = table.querySelector('thead');\n  if (!tHead) {\n    tHead = table.createTHead();\n  }\n  if (tHead) {\n    const row = tHead.insertRow(0);\n    const th = document.createElement('th');\n    th.textContent = 'Table';\n    row.appendChild(th);\n  }\n}",
            "score": -1.0
        },
        "tools/importer/transformers/util.js::pdfembed": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "pdfembed = (embedEl, document) => {\n  const pdfEl = embedEl?.querySelector('div.cmp-pdfviewer');\n  const data = JSON.parse(decodeURIComponent(pdfEl.getAttribute('data-cmp-viewer-config-json')));\n  const blockOptions = [];\n  if (data.embedMode) blockOptions.push(data.embedMode);\n  if (data.showFullScreen) blockOptions.push('showFullScreen');\n  if (data.showDownloadPDF) blockOptions.push('showDownload');\n  if (data.showPrintPDF) blockOptions.push('showPrint');\n  const anc = document.createElement('a');\n  anc.href = pdfEl.getAttribute('data-cmp-document-path');\n  anc.textContent = 'PDF Viewer';\n  const block = [[`embed (${blockOptions.join(',')})`], [anc]];\n  const table = WebImporter.DOMUtils.createTable(block, document);\n  embedEl.append(table);\n}",
            "score": -1.0
        },
        "tools/importer/transformers/util.js::productcitations": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "productcitations = (citations) => {\n  citations.innerHTML = citations.outerHTML;\n  return citations;\n}",
            "score": -1.0
        },
        "tools/importer/transformers/util.js::testimonial": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "testimonial = (testimonialElement, document) => {\n  const testimonialEl = testimonialElement?.querySelector('testimonial');\n  const block = [['Testimonial'], []];\n  const image = testimonialEl?.getAttribute('imagepath');\n  if (image) {\n    const img = document.createElement('img');\n    img.src = image;\n    block[1].push(img);\n  }\n  block[1].push(testimonialEl?.getAttribute('testimonial'));\n  if (testimonialEl?.hasAttribute('customername') && testimonialEl?.getAttribute('customername').trim() !== '') {\n    block[1].push(testimonialEl.getAttribute('customername').trim());\n  }\n  if (testimonialEl?.hasAttribute('company') && testimonialEl?.getAttribute('company').trim() !== '') {\n    block[1].push(testimonialEl.getAttribute('company').trim());\n  }\n\n  const table = WebImporter.DOMUtils.createTable(block, document);\n  testimonialEl.replaceWith(table);\n}",
            "score": -1.0
        },
        "tools/importer/transformers/util.js::videoembed": {
            "changes_after_merge": 5,
            "file_path": "tools/importer/transformers/util.js",
            "merged_function": "videoembed = (embedEl, document) => {\n  const videoEl = embedEl?.querySelector('iframe');\n  const anc = document.createElement('a');\n  anc.href = videoEl.getAttribute('src');\n  anc.textContent = 'Video Player';\n  embedEl.replaceWith(anc);\n}",
            "score": -0.7674418604651163
        },
        "tools/importer/transformers/videoEmbed.js::createVideoEmbed": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/transformers/videoEmbed.js",
            "merged_function": "createVideoEmbed = (main, document) => {\n  const videos = main.querySelectorAll('div.video');\n  videos.forEach((video) => {\n    videoembed(video, document);\n  });\n}",
            "score": -1.0
        },
        "tools/importer/transformers/weSee.js::createWeSee": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/transformers/weSee.js",
            "merged_function": "createWeSee = (main, document) => {\n  const weSee = main.querySelector('wesee');\n  if (weSee) {\n    const anc = document.createElement('a');\n    anc.setAttribute('href', 'https://main--danaher-ls-aem--hlxsites.hlx.page/fragments/wesee.html');\n    anc.textContent = 'WeSee';\n    weSee.after(WebImporter.DOMUtils.createTable([['We See'], [anc]], document), document.createElement('hr'));\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/transformers/workflowContainer.js::createWorkflowContainerSection": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/transformers/workflowContainer.js",
            "merged_function": "createWorkflowContainerSection = (main, document) => {\n  main.querySelectorAll('div.container-workflow').forEach((e, i, arr) => {\n    const heading = e.querySelector('div > h2, div > h3');\n    const strongEl = document.createElement('strong');\n    if (heading) {\n      strongEl.textContent = heading.textContent;\n      heading.textContent = '';\n      heading.append(strongEl);\n    }\n    if (i === arr.length - 1) {\n      const cells = [['Section Metadata'], ['style', 'container-two-col']];\n      const table = WebImporter.DOMUtils.createTable(cells, document);\n      e.append(table, document.createElement('hr'));\n    }\n  });\n}",
            "score": -0.9069767441860466
        }
    },
    "mammotome": {
        "blocks/cards/cards.js::decorate": {
            "changes_after_merge": 9,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function decorate(block) {\n  /* change to ul, li */\n  const ul = document.createElement('ul');\n  [...block.children].forEach((row) => {\n    const li = document.createElement('li');\n    li.innerHTML = row.innerHTML;\n    [...li.children].forEach((div) => {\n      if (div.children.length === 1 && div.querySelector('picture')) div.className = 'cards-card-image';\n      else div.className = 'cards-card-body';\n    });\n    ul.append(li);\n  });\n  ul\n    .querySelectorAll('img')\n    .forEach((img) => {\n      img\n        .closest('picture')\n        .replaceWith(\n          createOptimizedPicture(\n            img.src,\n            img.alt,\n            false,\n            null,\n            null,\n            [{ width: '600' }],\n          ),\n        );\n    });\n  block.textContent = '';\n  block.append(ul);\n}",
            "score": -0.5813953488372092
        },
        "blocks/cards/cards.js::isValidUrl": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "isValidUrl = (urlString) => {\n  try {\n    return new URL(urlString);\n  } catch (e) {\n    return false;\n  }\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::processDiv": {
            "changes_after_merge": 3,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "processDiv = (div) => {\n      const { children } = div;\n      const picture = div.querySelector('picture');\n\n      if (children.length === 1 && picture) {\n        div.className = 'cards-card-image';\n      } else {\n        div.className = children.length ? 'cards-card-body' : 'cards-card-body empty';\n        const action = div.querySelector('p > a');\n\n        if (action) {\n          const actionBlock = action.parentElement;\n          actionBlock.className = isValidUrl(action.text) ? 'callout hidden' : 'callout';\n          div.classList.toggle('callout-hidden', actionBlock.classList.contains('hidden'));\n\n          actionBlock.innerHTML = action.innerHTML;\n\n          cardLink = document.createElement('a');\n          cardLink.href = action.href;\n          cardLink.innerHTML = row.innerHTML;\n        }\n      }\n    }",
            "score": -0.8604651162790697
        },
        "blocks/cards/cards.js::processImg": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "processImg = (img) => {\n    const picture = img.closest('picture');\n    picture.replaceWith(createOptimizedPicture(img.src, img.alt, false, null, null, [{ width: '600' }]));\n  }",
            "score": -1.0
        },
        "blocks/cards/cards.js::processRow": {
            "changes_after_merge": 3,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "processRow = (row) => {\n    const li = document.createElement('li');\n    let cardLink;\n\n    const processDiv = (div) => {\n      const { children } = div;\n      const picture = div.querySelector('picture');\n\n      if (children.length === 1 && picture) {\n        div.className = 'cards-card-image';\n      } else {\n        div.className = children.length ? 'cards-card-body' : 'cards-card-body empty';\n        const action = div.querySelector('p > a');\n\n        if (action) {\n          const actionBlock = action.parentElement;\n          actionBlock.className = isValidUrl(action.text) ? 'callout hidden' : 'callout';\n          div.classList.toggle('callout-hidden', actionBlock.classList.contains('hidden'));\n\n          actionBlock.innerHTML = action.innerHTML;\n\n          cardLink = document.createElement('a');\n          cardLink.href = action.href;\n          cardLink.innerHTML = row.innerHTML;\n        }\n      }\n    };\n\n    [...row.children].forEach(processDiv);\n\n    if (cardLink) {\n      li.appendChild(cardLink);\n    } else {\n      li.innerHTML = row.innerHTML;\n    }\n    return li;\n  }",
            "score": -0.8604651162790697
        },
        "blocks/carousel/carousel.js::activateBullet": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "activateBullet = (bulletId) => {\n  const btnNav = document.querySelector('.bottom-nav');\n  [...btnNav.children].forEach((el) => {\n    if (el.id === bulletId) {\n      el.classList.replace('inactive', 'active');\n    } else {\n      el.classList.replace('active', 'inactive');\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::activateSlide": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "activateSlide = (targetPicture) => {\n  const slider = document.querySelector('.slider');\n  [...slider.children].forEach((el) => {\n    if (el.id === targetPicture) {\n      el.classList.replace('hide', 'show');\n    } else {\n      el.classList.replace('show', 'hide');\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::arrowNavOnClickEvents": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "arrowNavOnClickEvents = () => {\n  const arrowNav = document.querySelector('.arrow-nav');\n  [...arrowNav.children].forEach((el) => {\n    el.addEventListener('click', arrowNavigation);\n  });\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::arrowNavigation": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "arrowNavigation = (event) => {\n  const navButton = event.currentTarget.id;\n  if (navButton === 'slider-arrow-left') {\n    incrementActiveSlide(-1);\n  } else if (navButton === 'slider-arrow-right') {\n    incrementActiveSlide(1);\n  }\n  activateSlide(`slider-slide-${activeSlide}`);\n  activateBullet(`slider-slide-${activeSlide}`);\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::bottomNavOnClickEvents": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "bottomNavOnClickEvents = () => {\n  const btnNav = document.querySelector('.bottom-nav');\n  [...btnNav.children].forEach((el) => {\n    el.addEventListener('click', bottomNavigation);\n  });\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::bottomNavigation": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "bottomNavigation = (event) => {\n  const target = event.target.id;\n  activateSlide(target);\n  activateBullet(target);\n  incrementActiveSlide();\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::createArrowNav": {
            "changes_after_merge": 3,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "createArrowNav = () => {\n  const arrowNavContainer = document.createElement('div');\n  arrowNavContainer.classList.add('arrow-nav');\n\n  const arrowLeft = document.createElement('a');\n  arrowLeft.setAttribute('id', 'slider-arrow-left');\n  arrowLeft.setAttribute('href', '#');\n  arrowLeft.innerHTML = HTML_ARROW_LEFT;\n  arrowNavContainer.appendChild(arrowLeft);\n\n  const arrowRight = document.createElement('a');\n  arrowRight.setAttribute('id', 'slider-arrow-right');\n  arrowRight.setAttribute('href', '#');\n  arrowRight.innerHTML = HTML_ARROW_RIGHT;\n  arrowNavContainer.appendChild(arrowRight);\n  return arrowNavContainer;\n}",
            "score": -0.8604651162790697
        },
        "blocks/carousel/carousel.js::createBottomNav": {
            "changes_after_merge": 3,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "createBottomNav = (slides) => {\n  const bottomNavContainer = document.createElement('div');\n  bottomNavContainer.classList.add('bottom-nav');\n\n  let j = 1;\n  slides.forEach((el) => {\n    const bottomNavEl = document.createElement('a');\n    bottomNavEl.setAttribute('id', el);\n    bottomNavEl.setAttribute('href', '#');\n    bottomNavEl.classList.add('bullet');\n    bottomNavEl.classList.add(j === 1 ? 'active' : 'inactive');\n    bottomNavContainer.appendChild(bottomNavEl);\n    j += 1;\n  });\n  return bottomNavContainer;\n}",
            "score": -0.8604651162790697
        },
        "blocks/carousel/carousel.js::createPictures": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "createPictures = (sliderWrapper) => {\n  const pictures = sliderWrapper.getElementsByTagName('picture');\n  const slider = document.createElement('div');\n  slider.classList.add('slider');\n  [...pictures].forEach((el) => {\n    slider.appendChild(el);\n  });\n  sliderWrapper.innerHTML = '';\n  sliderWrapper.appendChild(slider);\n  return slider;\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::createSliderWrapper": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "createSliderWrapper = (block) => {\n  const sliderWrapper = block.firstElementChild.lastElementChild;\n  sliderWrapper.classList.add('slider-wrapper');\n  return sliderWrapper;\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function decorate(block) {\n  optimizeThumbnails(block);\n\n  const sliderWrapper = createSliderWrapper(block);\n  const slider = createPictures(sliderWrapper);\n  const slides = setPictureIds(slider);\n  slideCount = slides.length;\n\n  const arrowNav = createArrowNav();\n  slider.appendChild(arrowNav);\n\n  const bottomNavContainer = createBottomNav(slides);\n  sliderWrapper.appendChild(bottomNavContainer);\n\n  initSlider();\n}",
            "score": -0.8604651162790697
        },
        "blocks/carousel/carousel.js::incrementActiveSlide": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "incrementActiveSlide = (direction = 1) => {\n  if (direction > 0) {\n    activeSlide = (activeSlide + 1) <= slideCount ? activeSlide + 1 : 1;\n  } else {\n    activeSlide = (activeSlide - 1) > 0 ? activeSlide - 1 : slideCount;\n  }\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::initSlider": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "initSlider = () => {\n  const sliderWrapper = document.querySelector('.slider-wrapper');\n  sliderWrapper.addEventListener('mouseover', stopSlideShow);\n  sliderWrapper.addEventListener('mouseleave', startSlideShow);\n  window.addEventListener('load', startSlideShow);\n  bottomNavOnClickEvents();\n  arrowNavOnClickEvents();\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::optimizeThumbnails": {
            "changes_after_merge": 2,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "optimizeThumbnails = (picture) => {\n  picture\n    .querySelectorAll('img')\n    .forEach((img) => {\n      img\n        .closest('picture')\n        .replaceWith(\n          createOptimizedPicture(\n            img.src,\n            img.alt,\n            false,\n            null,\n            null,\n            [{ width: '768' }],\n          ),\n        );\n    });\n}",
            "score": -0.9069767441860466
        },
        "blocks/carousel/carousel.js::setPictureIds": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "setPictureIds = (slider) => {\n  let i = 1;\n  const slides = [];\n  [...slider.children].forEach((el) => {\n    el.setAttribute('id', `slider-slide-${i}`);\n    el.classList.add(i === 1 ? 'show' : 'hide');\n    slides.push(`slider-slide-${i}`);\n    i += 1;\n  });\n  return slides;\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::startSlideShow": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "startSlideShow = () => {\n  if (!slideShow) {\n    slideShow = window.setInterval(toNextSlide, 5000);\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::stopSlideShow": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "stopSlideShow = () => {\n  slideShow = window.clearInterval(slideShow);\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::toNextSlide": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "toNextSlide = () => {\n  incrementActiveSlide(1);\n  activateSlide(`slider-slide-${activeSlide}`);\n  activateBullet(`slider-slide-${activeSlide}`);\n}",
            "score": -0.9534883720930233
        },
        "blocks/columns/columns.js::decorate": {
            "changes_after_merge": 8,
            "file_path": "blocks/columns/columns.js",
            "merged_function": "function decorate(block) {\n  const cols = [...block.firstElementChild.children];\n  block.classList.add(`columns-${cols.length}-cols`);\n\n  // setup image columns\n  [...block.children].forEach((row) => {\n    [...row.children].forEach((col, index) => {\n      const pic = col.querySelector('picture');\n      const text = col.querySelector('p');\n\n      if (pic && !text) {\n        const oddeven = (index % 2 === 0) ? 'even' : 'odd';\n        const picWrapper = pic.closest('div');\n        picWrapper.classList.add('columns-img-wrapper');\n        picWrapper.classList.add(`columns-img-wrapper-${oddeven}`);\n        const picDecoration = document.createElement('div');\n        picDecoration.classList.add('columns-img-decoration');\n        const picImg = document.createElement('div');\n        picImg.classList.add('columns-img');\n        picImg.appendChild(pic);\n        picDecoration.appendChild(picImg);\n        picWrapper.appendChild(picDecoration);\n        if (picWrapper && picWrapper.children.length === 1) {\n          // picture is only content in column\n          picWrapper.classList.add('columns-img-col');\n        }\n      }\n      if (text && !pic) {\n        const textWrapper = text.closest('div');\n        textWrapper.classList.add('columns-txt-wrapper');\n      }\n    });\n  });\n}",
            "score": -0.627906976744186
        },
        "blocks/footer/footer.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function decorate(block) {\n  const footerPath = getMetadata('footer') || '/footer';\n\n  const resp = await fetch(`${footerPath}.plain.html`, window.location.pathname.endsWith('/footer') ? { cache: 'reload' } : {});\n\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // decorate footer DOM\n    const footer = document.createElement('div');\n    footer.innerHTML = html;\n\n    await decorateIcons(footer);\n    block.append(footer);\n  }\n}",
            "score": -0.8604651162790697
        },
        "blocks/form/form.js::constructPayload": {
            "changes_after_merge": 7,
            "file_path": "blocks/form/form.js",
            "merged_function": "function constructPayload(form) {\n  const payload = {};\n  [...form.elements].forEach((fe) => {\n    if (fe.type === 'checkbox') {\n      if (fe.checked) payload[fe.id] = fe.value;\n    } else if (fe.id) {\n      payload[fe.id] = fe.value;\n    }\n  });\n  return payload;\n}",
            "score": -0.6744186046511628
        },
        "blocks/form/form.js::createButton": {
            "changes_after_merge": 1,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createButton(fd) {\n  const wrapper = createFieldWrapper(fd);\n  const button = document.createElement('button');\n  button.textContent = fd.Label;\n  button.type = fd.Type;\n  button.classList.add('button');\n  button.dataset.redirect = fd.Extra || '';\n  button.id = fd.Id;\n  button.name = fd.Name;\n  wrapper.replaceChildren(button);\n  return wrapper;\n}",
            "score": -0.9534883720930233
        },
        "blocks/form/form.js::createFieldSet": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createFieldSet(fd) {\n  const wrapper = createFieldWrapper(fd, 'fieldset');\n  wrapper.name = fd.Name;\n  wrapper.replaceChildren(createLegend(fd));\n  return wrapper;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::createFieldWrapper": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createFieldWrapper(fd, tagName = 'div') {\n  const fieldWrapper = document.createElement(tagName);\n  const nameStyle = fd.Name ? ` form-${fd.Name}` : '';\n  const fieldId = `form-${fd.Type}-wrapper${nameStyle}`;\n  fieldWrapper.className = fieldId;\n  fieldWrapper.dataset.fieldset = fd.Fieldset ? fd.Fieldset : '';\n  fieldWrapper.classList.add('field-wrapper');\n  fieldWrapper.append(createLabel(fd));\n  return fieldWrapper;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::createForm": {
            "changes_after_merge": 6,
            "file_path": "blocks/form/form.js",
            "merged_function": "async function createForm(formURL) {\n  const { pathname } = new URL(formURL);\n  const data = await fetchForm(pathname);\n  const form = document.createElement('form');\n  data.forEach((fd) => {\n    const el = renderField(fd);\n    const input = el.querySelector('input,textarea,select');\n    if (fd.Mandatory && fd.Mandatory.toLowerCase() === 'true') {\n      input.setAttribute('required', 'required');\n    }\n    if (input) {\n      input.id = fd.Id;\n      input.name = fd.Name;\n      input.value = fd.Value;\n      if (fd.Description) {\n        input.setAttribute('aria-describedby', `${fd.Id}-description`);\n      }\n    }\n    form.append(el);\n  });\n  groupFieldsByFieldSet(form);\n  // eslint-disable-next-line prefer-destructuring\n  form.dataset.action = pathname.split('.json')[0];\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n    e.submitter.setAttribute('disabled', '');\n    handleSubmit(form, e.submitter.dataset?.redirect);\n  });\n  return form;\n}",
            "score": -0.7209302325581395
        },
        "blocks/form/form.js::createHelpText": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createHelpText(fd) {\n  const div = document.createElement('div');\n  div.className = 'field-description';\n  div.setAttribute('aria-live', 'polite');\n  div.innerText = fd.Description;\n  div.id = `${fd.Id}-description`;\n  return div;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::createHidden": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createHidden(fd) {\n  const input = document.createElement('input');\n  input.type = 'hidden';\n  input.id = fd.Id;\n  input.name = fd.Name;\n  input.value = fd.Value;\n  return input;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::createInput": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createInput(fd) {\n  const input = document.createElement('input');\n  input.type = fd.Type;\n  setPlaceholder(input, fd);\n  setNumberConstraints(input, fd);\n  return input;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::createLabel": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createLabel(fd, tagName = 'label') {\n  const label = document.createElement(tagName);\n  label.setAttribute('for', fd.Id);\n  label.className = 'field-label';\n  label.textContent = fd.Label || '';\n  if (fd.Tooltip) {\n    label.title = fd.Tooltip;\n  }\n  return label;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::createLegend": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createLegend(fd) {\n  return createLabel(fd, 'legend');\n}",
            "score": -1.0
        },
        "blocks/form/form.js::createPlainText": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createPlainText(fd) {\n  const paragraph = document.createElement('p');\n  const nameStyle = fd.Name ? `form-${fd.Name}` : '';\n  paragraph.className = nameStyle;\n  paragraph.dataset.fieldset = fd.Fieldset ? fd.Fieldset : '';\n  paragraph.textContent = fd.Label;\n  return paragraph;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::createRadio": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function createRadio(fd) {\n  const wrapper = createFieldWrapper(fd);\n  wrapper.insertAdjacentElement('afterbegin', createInput(fd));\n  return wrapper;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::decorate": {
            "changes_after_merge": 7,
            "file_path": "blocks/form/form.js",
            "merged_function": "async function decorate(block) {\n  const formLink = block.querySelector('a[href$=\".json\"]');\n  if (formLink) {\n    const form = await createForm(formLink.href);\n    formLink.replaceWith(form);\n  }\n}",
            "score": -0.6744186046511628
        },
        "blocks/form/form.js::fetchData": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "async function fetchData(url) {\n  const resp = await fetch(url);\n  const json = await resp.json();\n  return json.data.map((fd) => ({\n    ...fd,\n    Id: fd.Id || getId(fd.Name),\n    Value: fd.Value || '',\n  }));\n}",
            "score": -1.0
        },
        "blocks/form/form.js::fetchForm": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "async function fetchForm(pathname) {\n  // get the main form\n  const jsonData = await fetchData(pathname);\n  return jsonData;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::groupFieldsByFieldSet": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function groupFieldsByFieldSet(form) {\n  const fieldsets = form.querySelectorAll('fieldset');\n  fieldsets?.forEach((fieldset) => {\n    const fields = form.querySelectorAll(`[data-fieldset=\"${fieldset.name}\"`);\n    fields?.forEach((field) => {\n      fieldset.append(field);\n    });\n  });\n}",
            "score": -1.0
        },
        "blocks/form/form.js::handleSubmit": {
            "changes_after_merge": 3,
            "file_path": "blocks/form/form.js",
            "merged_function": "async function handleSubmit(form, redirectTo) {\n  if (form.getAttribute('data-submitting') !== 'true') {\n    form.setAttribute('data-submitting', 'true');\n    await submitForm(form);\n    window.location.href = redirectTo || 'thankyou';\n  }\n}",
            "score": -0.8604651162790697
        },
        "blocks/form/form.js::renderField": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function renderField(fd) {\n  const renderer = fieldRenderers[fd.Type];\n  let field;\n  if (typeof renderer === 'function') {\n    field = renderer(fd);\n  } else {\n    field = createFieldWrapper(fd);\n    field.append(createInput(fd));\n  }\n  if (fd.Description) {\n    field.append(createHelpText(fd));\n  }\n  return field;\n}",
            "score": -1.0
        },
        "blocks/form/form.js::setNumberConstraints": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function setNumberConstraints(element, fd) {\n  if (fd.Max) {\n    element.max = fd.Max;\n  }\n  if (fd.Min) {\n    element.min = fd.Min;\n  }\n  if (fd.Step) {\n    element.step = fd.Step || 1;\n  }\n}",
            "score": -1.0
        },
        "blocks/form/form.js::setPlaceholder": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "function setPlaceholder(element, fd) {\n  if (fd.Placeholder) {\n    element.setAttribute('placeholder', fd.Placeholder);\n  }\n}",
            "score": -1.0
        },
        "blocks/form/form.js::submitForm": {
            "changes_after_merge": 5,
            "file_path": "blocks/form/form.js",
            "merged_function": "async function submitForm(form) {\n  const payload = constructPayload(form);\n  const resp = await fetch(form.dataset.action, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ data: payload }),\n  });\n  await resp.text();\n  sampleRUM('form:submit');\n  return payload;\n}",
            "score": -0.7674418604651163
        },
        "blocks/form/form.js::withFieldWrapper": {
            "changes_after_merge": 0,
            "file_path": "blocks/form/form.js",
            "merged_function": "withFieldWrapper = (element) => (fd) => {\n  const wrapper = createFieldWrapper(fd);\n  wrapper.append(element(fd));\n  return wrapper;\n}",
            "score": -1.0
        },
        "blocks/header/header.js::addNavigationLogoForScrollingPage": {
            "changes_after_merge": 4,
            "file_path": "blocks/header/header.js",
            "merged_function": "function addNavigationLogoForScrollingPage(nav) {\n  const homePageLink = nav.querySelector('.nav-brand > p > a');\n  const scrollingLogo = document.createElement('img');\n  scrollingLogo.setAttribute('src', '/icons/logo-round.webp');\n  scrollingLogo.setAttribute('class', 'scrolling-logo');\n  scrollingLogo.setAttribute('height', '40px');\n  scrollingLogo.setAttribute('width', '40px');\n  scrollingLogo.classList.add('logo-hidden');\n\n  const defaultLogo = homePageLink.firstChild;\n\n  homePageLink.append(scrollingLogo);\n\n  window.addEventListener('scroll', () => {\n    const scrollPosition = window.scrollY;\n    if (scrollPosition > 40) {\n      nav.classList.add('narrow');\n      defaultLogo.classList.add('logo-hidden');\n      scrollingLogo.classList.remove('logo-hidden');\n    } else {\n      nav.classList.remove('narrow');\n      defaultLogo.classList.remove('logo-hidden');\n      scrollingLogo.classList.add('logo-hidden');\n    }\n  });\n}",
            "score": -0.813953488372093
        },
        "blocks/header/header.js::closeOnEscape": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function closeOnEscape(e) {\n  if (e.code === 'Escape') {\n    const nav = document.getElementById('nav');\n    const navSections = nav.querySelector('.nav-sections');\n    const navSectionExpanded = navSections.querySelector('[aria-expanded=\"true\"]');\n    if (navSectionExpanded && isDesktop.matches) {\n      // eslint-disable-next-line no-use-before-define\n      toggleAllNavSections(navSections);\n      navSectionExpanded.focus();\n    } else if (!isDesktop.matches) {\n      // eslint-disable-next-line no-use-before-define\n      toggleMenu(nav, navSections);\n      nav.querySelector('button').focus();\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::createMobileMenuControlsBlock": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/header.js",
            "merged_function": "function createMobileMenuControlsBlock() {\n  const mobileMenuControls = document.createElement('li');\n  mobileMenuControls.classList.add('mobile-menu-controls');\n\n  const backButton = document.createElement('div');\n  backButton.classList.add('mobile-menu-back');\n\n  backButton.addEventListener('click', () => {\n    backButton.closest('[aria-expanded]').setAttribute('aria-expanded', 'false');\n  });\n\n  mobileMenuControls.append(backButton);\n\n  return mobileMenuControls;\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/header.js::createOverflowDropdown": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/header.js",
            "merged_function": "function createOverflowDropdown(navSections) {\n  const overflowDropdown = document.createElement('li');\n  overflowDropdown.classList.add('nav-button', 'nav-overflow');\n  const overflowButton = document.createElement('a');\n  overflowButton.innerHTML = '...';\n  overflowDropdown.append(overflowButton);\n\n  const overflowDropdownList = document.createElement('ul');\n  overflowDropdownList.classList.add('nav-overflow-list');\n\n  overflowDropdown.append(overflowDropdownList);\n\n  const sections = Array.from(navSections.querySelectorAll(':scope > ul > li'));\n  // add last three items to dropdown\n  const overflowSections = sections.slice(sections.length - 3);\n  overflowSections.forEach((section) => {\n    overflowDropdownList.append(section.cloneNode(true));\n  });\n  return overflowDropdown;\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/header.js::decorate": {
            "changes_after_merge": 39,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function decorate(block) {\n  // fetch nav content\n  const navPath = getMetadata('nav') || '/nav';\n  const resp = await fetch(`${navPath}.plain.html`);\n\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // decorate nav DOM\n    const nav = document.createElement('nav');\n    nav.id = 'nav';\n    nav.innerHTML = html;\n\n    const classes = ['brand', 'sections', 'tools'];\n    classes.forEach((c, i) => {\n      const section = nav.children[i];\n      if (section) section.classList.add(`nav-${c}`);\n    });\n\n    const navSections = nav.querySelector('.nav-sections');\n    if (navSections) {\n      navSections.querySelectorAll(':scope > ul > li').forEach((navSection) => {\n        if (navSection.querySelector('ul')) navSection.classList.add('nav-drop');\n        navSection.addEventListener('click', () => {\n          if (isDesktop.matches) {\n            const expanded = navSection.getAttribute('aria-expanded') === 'true';\n            toggleAllNavSections(navSections);\n            navSection.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n          }\n        });\n      });\n    }\n\n    // hamburger for mobile\n    const hamburger = document.createElement('div');\n    hamburger.classList.add('nav-hamburger');\n    hamburger.innerHTML = `<button type=\"button\" aria-controls=\"nav\" aria-label=\"Open navigation\">\n        <span class=\"nav-hamburger-icon\"></span>\n      </button>`;\n    hamburger.addEventListener('click', () => toggleMenu(nav, navSections));\n    nav.prepend(hamburger);\n    nav.setAttribute('aria-expanded', 'false');\n    // prevent mobile nav behavior on window resize\n    toggleMenu(nav, navSections, isDesktop.matches);\n    isDesktop.addEventListener('change', () => toggleMenu(nav, navSections, isDesktop.matches));\n\n    decorateIcons(nav);\n    const navWrapper = document.createElement('div');\n    navWrapper.className = 'nav-wrapper';\n    navWrapper.append(nav);\n    block.append(navWrapper);\n  }\n}",
            "score": 0.8139534883720929
        },
        "blocks/header/header.js::decorateSearch": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/header.js",
            "merged_function": "function decorateSearch(block) {\n  const searchSection = block.querySelector('div.nav-tools > p > a > .icon-search');\n\n  if (!searchSection) return;\n\n  const aside = document.createElement('aside');\n  aside.classList.add('nav-search-aside');\n\n  const input = document.createElement('input');\n  input.classList.add('nav-search-input');\n  input.type = 'search';\n  input.placeholder = 'What are you looking for?';\n  input.value = new URL(window.location).searchParams.get('ee_search_query');\n  input.aside = aside;\n  input.active = input.value;\n  input.addEventListener('input', searchInput);\n\n  const searchElement = document.createElement('div');\n  searchElement.classList.add('nav-search');\n  searchSection.input = input;\n  searchSection.searchElement = searchElement;\n\n  searchSection.parentElement.parentElement\n    .replaceChild(searchElement, searchSection.parentElement);\n\n  searchElement.appendChild(searchSection);\n\n  searchSection.addEventListener('click', searchClick);\n\n  searchSection.addEventListener('disable', searchDisable);\n\n  if (input.active) {\n    searchElement.prepend(input);\n    searchElement.append(aside);\n    input.dispatchEvent(new Event('input', { bubbles: true }));\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/header.js::fetchSearchData": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function fetchSearchData() {\n  if (!window.searchData) {\n    const resp = await fetch(`/${window.location.pathname.split('/')[1]}/query-index.json`);\n    if (resp.ok) {\n      const json = await resp.json();\n      if (json.data) {\n        window.searchData = json;\n      } else {\n        throw new Error('Fetching search data returned unknown format');\n      }\n    } else {\n      throw new Error(`Fetching search data failed with: ${resp.status}`);\n    }\n  }\n  return window.searchData;\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/header.js::focusNavSection": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function focusNavSection() {\n  document.activeElement.addEventListener('keydown', openOnKeydown);\n}",
            "score": -1.0
        },
        "blocks/header/header.js::openOnKeydown": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function openOnKeydown(e) {\n  const focused = document.activeElement;\n  const isNavDrop = focused.className === 'nav-drop';\n  if (isNavDrop && (e.code === 'Enter' || e.code === 'Space')) {\n    const dropExpanded = focused.getAttribute('aria-expanded') === 'true';\n    // eslint-disable-next-line no-use-before-define\n    toggleAllNavSections(focused.closest('.nav-sections'));\n    focused.setAttribute('aria-expanded', dropExpanded ? 'false' : 'true');\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::search": {
            "changes_after_merge": 5,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function search(value) {\n  const searchData = await fetchSearchData();\n  const hits = searchData.data\n    .filter((e) => `${e.title} ${e.description}`.toLowerCase().includes(value.toLowerCase()));\n  return hits;\n}",
            "score": -0.7674418604651163
        },
        "blocks/header/header.js::searchClick": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header.js",
            "merged_function": "function searchClick(event) {\n  const { input, searchElement } = event.currentTarget;\n  if (!input.active) {\n    searchElement.prepend(input);\n    searchElement.append(input.aside);\n    input.active = true;\n    input.focus();\n  } else {\n    input.active = false;\n    input.value = '';\n    input.dispatchEvent(new Event('input', { bubbles: true }));\n    searchElement.removeChild(input);\n    searchElement.removeChild(input.aside);\n  }\n  event.preventDefault();\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/header.js::searchDisable": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function searchDisable(event) {\n  if (event.currentTarget.input.active) {\n    event.currentTarget.dispatchEvent(new Event('click', { bubbles: false }));\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::searchInput": {
            "changes_after_merge": 4,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function searchInput(event) {\n  const { value, aside } = event.target;\n\n  aside.innerHTML = '';\n\n  const url = new URL(window.location);\n  if (value.length >= 3) {\n    url.searchParams.set('ee_search_query', value);\n  } else {\n    url.searchParams.delete('ee_search_query');\n  }\n\n  if (value.length >= 3) {\n    const title = document.createElement('h1');\n    title.classList.add('nav-search-result-title');\n    title.textContent = `Search Results for: ${value}`;\n    aside.append(title);\n    aside.insertAdjacentHTML('beforeend', '<div class=\"nav-search-result-title-divider\"><span class=\"nav-search-result-title-divider-separator\"/></div>');\n\n    try {\n      const hits = await search(value);\n      if (hits.length > 0) {\n        hits.forEach((hit) => {\n          const wrapper = document.createElement('div');\n          wrapper.classList.add('nav-search-wrapper');\n          const searchTitle = document.createElement('h3');\n          searchTitle.classList.add('nav-search-title');\n          const searchLink = document.createElement('a');\n          searchLink.href = hit.path;\n          searchLink.textContent = hit.title;\n          const searchDescription = document.createElement('div');\n          searchDescription.classList.add('nav-search-description');\n          searchDescription.textContent = hit.description;\n          searchTitle.appendChild(searchLink);\n          wrapper.appendChild(searchTitle);\n          wrapper.appendChild(searchDescription);\n          aside.appendChild(wrapper);\n        });\n      } else {\n        aside.insertAdjacentHTML('beforeend', '<h3 class=\"nav-search-title\">No Result</h3>');\n      }\n    } catch (error) {\n      aside.insertAdjacentHTML('beforeend', '<h3 class=\"nav-search-title\">Search could not be completed at this time - please try again later.</h3>');\n    }\n    aside.insertAdjacentHTML('beforeend', '<div class=\"nav-search-result-title-divider\"><span class=\"nav-search-result-title-divider-separator\"/></div>');\n  }\n  // eslint-disable-next-line no-restricted-globals\n  history.replaceState(null, '', url);\n}",
            "score": -0.813953488372093
        },
        "blocks/header/header.js::toggleAllNavSections": {
            "changes_after_merge": 8,
            "file_path": "blocks/header/header.js",
            "merged_function": "function toggleAllNavSections(sections, expanded = false) {\n  sections.querySelectorAll('.nav-sections > ul > li').forEach((section) => {\n    section.setAttribute('aria-expanded', expanded);\n  });\n}",
            "score": -0.627906976744186
        },
        "blocks/header/header.js::toggleMenu": {
            "changes_after_merge": 13,
            "file_path": "blocks/header/header.js",
            "merged_function": "function toggleMenu(nav, navSections, forceExpanded = null) {\n  const expanded = forceExpanded !== null ? !forceExpanded : nav.getAttribute('aria-expanded') === 'true';\n  const button = nav.querySelector('.nav-hamburger button');\n  document.body.style.overflowY = (expanded || isDesktop.matches) ? '' : 'hidden';\n  nav.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n  toggleAllNavSections(navSections, expanded || isDesktop.matches ? 'false' : 'true');\n  button.setAttribute('aria-label', expanded ? 'Open navigation' : 'Close navigation');\n  // enable nav dropdown keyboard accessibility\n  const navDrops = navSections.querySelectorAll('.nav-drop');\n  if (isDesktop.matches) {\n    navDrops.forEach((drop) => {\n      if (!drop.hasAttribute('tabindex')) {\n        drop.setAttribute('role', 'button');\n        drop.setAttribute('tabindex', 0);\n        drop.addEventListener('focus', focusNavSection);\n      }\n    });\n  } else {\n    navDrops.forEach((drop) => {\n      drop.removeAttribute('role');\n      drop.removeAttribute('tabindex');\n      drop.removeEventListener('focus', focusNavSection);\n    });\n  }\n  // enable menu collapse on escape keypress\n  if (!expanded || isDesktop.matches) {\n    // collapse menu on escape press\n    window.addEventListener('keydown', closeOnEscape);\n  } else {\n    window.removeEventListener('keydown', closeOnEscape);\n  }\n}",
            "score": -0.39534883720930236
        },
        "blocks/ifus/ifus.js::createOptions": {
            "changes_after_merge": 0,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "createOptions = (items, selector, text, attributes) => {\n    createDomStructure(\n      items.map((item) => ({ type: 'option', textContent: text?.(item) || item, attributes: attributes?.(item) })),\n      selector,\n    );\n    selector.disabled = false;\n  }",
            "score": -1.0
        },
        "blocks/ifus/ifus.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "async function decorate(block) {\n  createDomStructure([\n    {\n      type: 'div',\n      classes: ['ifu-result', 'no-result'],\n      children: [{ type: 'h4', textContent: await translate('ifuSearchTitle', 'Search results') }],\n    },\n    {\n      type: 'div',\n      classes: ['ifu'],\n      children: await Promise.all([['eIFU', 'eIFU'], ['product', 'Product Code']].map(async (entry) => (\n        {\n          type: 'div',\n          classes: ['ifu-selection'],\n          children: [\n            {\n              type: 'h5',\n              classes: ['ifu-title'],\n              textContent: await translate(`ifuSearchBy${entry[0]}`, `Search by ${entry[1]}`),\n            },\n            {\n              type: 'select',\n              attributes: { id: `${entry[0]}-code`, name: `Select ${entry[1]}`, disabled: true },\n              children: [\n                {\n                  type: 'option',\n                  attributes: { hidden: true, disabled: true, selected: true },\n                  textContent: await translate(`ifuSelect${entry[0]}`, `Select ${entry[1]}`),\n                },\n              ],\n            },\n            {\n              type: 'select',\n              attributes: { id: `${entry[0]}-country`, name: 'Select Country', disabled: true },\n              children: [\n                {\n                  type: 'option',\n                  attributes: { hidden: true, disabled: true, selected: true },\n                  textContent: await translate('ifuSelectCountry', 'Select Country'),\n                },\n              ],\n            },\n            {\n              type: 'button',\n              attributes: { id: `${entry[0]}-code-search`, disabled: true },\n              textContent: await translate('ifuSearch', 'Search'),\n            },\n          ],\n        }))),\n    },\n  ], block);\n\n  populate(block);\n}",
            "score": -0.9069767441860466
        },
        "blocks/ifus/ifus.js::getAssetbyIFUandCountry": {
            "changes_after_merge": 1,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "getAssetbyIFUandCountry = (id, country) => json.eIFU.data.filter(\n    (asset) => asset.eIFU === id && asset.Country === country,\n  )",
            "score": -0.9534883720930233
        },
        "blocks/ifus/ifus.js::getAssetsByProductCodeandCountry": {
            "changes_after_merge": 1,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "getAssetsByProductCodeandCountry = (id, country) => json.eIFU.data\n    .filter((entry) => entry.ProductRef.split('|').includes(id) && entry.Country === country)",
            "score": -0.9534883720930233
        },
        "blocks/ifus/ifus.js::getIFUIDs": {
            "changes_after_merge": 0,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "getIFUIDs = () => json.eIFU.data.map((value) => value.eIFU).filter(unique).sort()",
            "score": -1.0
        },
        "blocks/ifus/ifus.js::getProductCodeIDs": {
            "changes_after_merge": 1,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "getProductCodeIDs = () => json.eIFU.data.flatMap((value) => value.ProductRef.split('|')).filter(unique).sort()",
            "score": -0.9534883720930233
        },
        "blocks/ifus/ifus.js::getProductCodesByIFU": {
            "changes_after_merge": 1,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "getProductCodesByIFU = (id) => json.eIFU.data\n    .filter((match) => match.eIFU === id)\n    .flatMap((match) => match.ProductRef.split('|'))\n    .filter(unique)\n    .sort()\n    .join(', ')",
            "score": -0.9534883720930233
        },
        "blocks/ifus/ifus.js::getProductCodesByProductCode": {
            "changes_after_merge": 1,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "getProductCodesByProductCode = (id) => json.eIFU.data\n    .filter((match) => match.ProductRef.split('|').includes(id))\n    .flatMap((match) => match.ProductRef.split('|'))\n    .filter(unique)\n    .sort()\n    .join(', ')",
            "score": -0.9534883720930233
        },
        "blocks/ifus/ifus.js::getSelectors": {
            "changes_after_merge": 0,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "getSelectors = (prefix, ids, assets, productCodes) => ({\n    code: block.querySelector(`#${prefix}-code`),\n    country: block.querySelector(`#${prefix}-country`),\n    search: block.querySelector(`#${prefix}-code-search`),\n    result: block.querySelector('.ifu-result'),\n    ids,\n    countries: () => json.Countries.data,\n    assets,\n    productCodes,\n  })",
            "score": -1.0
        },
        "blocks/ifus/ifus.js::handleSearch": {
            "changes_after_merge": 4,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "async function handleSearch(selectors, allSelectors) {\n  const { result, code, country } = selectors;\n\n  result.innerHTML = '';\n  createDomStructure([{\n    type: 'h4',\n    textContent: await translate('ifuSearchTitle', 'Search results'),\n  }], result);\n\n  allSelectors.filter((entry) => entry !== selectors)\n    .flatMap((entry) => [entry.code, entry.country])\n    .forEach((value) => { value.options[0].selected = true; });\n\n  result.classList.remove('no-result');\n\n  const assets = code.value && country.value\n    ? selectors.assets(code.value, country.value) : [];\n\n  if (assets.length === 0) {\n    createDomStructure([{\n      type: 'div',\n      children: [{ type: 'strong', textContent: await translate('ifuSearchNoResult', 'No result') }],\n    }], result);\n    return;\n  }\n\n  const assetMap = new Map();\n  assets.forEach((asset) => {\n    if (assetMap.has(asset.Title)) {\n      const links = assetMap.get(asset.Title);\n      links.push(asset.URL);\n    } else {\n      assetMap.set(asset.Title, [asset.URL]);\n    }\n  });\n\n  await Promise.all(Array.from(assetMap).map(async ([key, value]) => {\n    createDomStructure([\n      {\n        type: 'div',\n        children: [\n          { type: 'h5', textContent: key },\n          {\n            type: 'div',\n            children: [\n              {\n                type: 'div',\n                children: [\n                  {\n                    type: 'div',\n                    textContent: selectors.productCodes(code.value),\n                    children: [{\n                      type: 'h6',\n                      position: 'prepend',\n                      textContent: await translate('ifuSearchProductCodes', 'Product Code(s)'),\n                    }],\n                  },\n                ],\n              },\n              {\n                type: 'div',\n                textContent: country.value,\n                children: [{\n                  type: 'h6',\n                  position: 'prepend',\n                  textContent: await translate('ifuSearchCountrySelected', 'Country Selected'),\n                }],\n              },\n              {\n                type: 'div',\n                children: value.map(\n                  (link) => ({\n                    type: 'a',\n                    attributes: { href: link, target: 'blank' },\n                    children: [{ type: 'button', textContent: link.substring(link.lastIndexOf('/') + 1) }],\n                  }),\n                ),\n              },\n            ],\n          },\n        ],\n      },\n    ], result);\n  }));\n}",
            "score": -0.813953488372093
        },
        "blocks/ifus/ifus.js::populate": {
            "changes_after_merge": 1,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "async function populate(block) {\n  const json = await getProductDB();\n\n  const getSelectors = (prefix, ids, assets, productCodes) => ({\n    code: block.querySelector(`#${prefix}-code`),\n    country: block.querySelector(`#${prefix}-country`),\n    search: block.querySelector(`#${prefix}-code-search`),\n    result: block.querySelector('.ifu-result'),\n    ids,\n    countries: () => json.Countries.data,\n    assets,\n    productCodes,\n  });\n\n  const unique = (value, index, array) => array.indexOf(value) === index;\n\n  const getIFUIDs = () => json.eIFU.data.map((value) => value.eIFU).filter(unique).sort();\n\n  const getProductCodeIDs = () => json.eIFU.data.flatMap((value) => value.ProductRef.split('|')).filter(unique).sort();\n\n  const getProductCodesByIFU = (id) => json.eIFU.data\n    .filter((match) => match.eIFU === id)\n    .flatMap((match) => match.ProductRef.split('|'))\n    .filter(unique)\n    .sort()\n    .join(', ');\n\n  const getProductCodesByProductCode = (id) => json.eIFU.data\n    .filter((match) => match.ProductRef.split('|').includes(id))\n    .flatMap((match) => match.ProductRef.split('|'))\n    .filter(unique)\n    .sort()\n    .join(', ');\n\n  const getAssetbyIFUandCountry = (id, country) => json.eIFU.data.filter(\n    (asset) => asset.eIFU === id && asset.Country === country,\n  );\n\n  const getAssetsByProductCodeandCountry = (id, country) => json.eIFU.data\n    .filter((entry) => entry.ProductRef.split('|').includes(id) && entry.Country === country);\n\n  const selectors = [\n    getSelectors(\n      'eIFU',\n      getIFUIDs,\n      getAssetbyIFUandCountry,\n      getProductCodesByIFU,\n    ),\n    getSelectors(\n      'product',\n      getProductCodeIDs,\n      getAssetsByProductCodeandCountry,\n      getProductCodesByProductCode,\n    ),\n  ];\n\n  selectors.forEach((selector) => populateSearch(selector, selectors));\n}",
            "score": -0.9534883720930233
        },
        "blocks/ifus/ifus.js::populateSearch": {
            "changes_after_merge": 0,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "function populateSearch(selectors, allSelectors) {\n  const createOptions = (items, selector, text, attributes) => {\n    createDomStructure(\n      items.map((item) => ({ type: 'option', textContent: text?.(item) || item, attributes: attributes?.(item) })),\n      selector,\n    );\n    selector.disabled = false;\n  };\n\n  createOptions(selectors.ids(), selectors.code);\n\n  createOptions(\n    selectors.countries(),\n    selectors.country,\n    (country) => country['Country Name'],\n    (country) => ({ value: country.ISO_3166_1_alpha_2_code }),\n  );\n\n  selectors.search.disabled = false;\n  selectors.search.addEventListener('click', async () => handleSearch(selectors, allSelectors));\n}",
            "score": -1.0
        },
        "blocks/ifus/ifus.js::unique": {
            "changes_after_merge": 0,
            "file_path": "blocks/ifus/ifus.js",
            "merged_function": "unique = (value, index, array) => array.indexOf(value) === index",
            "score": -1.0
        },
        "blocks/pdf-viewer/pdf-viewer.js::addEventListeners": {
            "changes_after_merge": 0,
            "file_path": "blocks/pdf-viewer/pdf-viewer.js",
            "merged_function": "addEventListeners = (config) => {\n  document.addEventListener(\n    ADOBE_DC_VIEW_SDK_READY_EVENT,\n    createAdobeDCViewSDKReadyHandler(config),\n  );\n  document.addEventListener(\n    FRANKLIN_DELAYED_COMPLETED_EVENT,\n    loadAdobeDCViewSDK,\n  );\n}",
            "score": -1.0
        },
        "blocks/pdf-viewer/pdf-viewer.js::createAdobeDCViewSDKReadyHandler": {
            "changes_after_merge": 0,
            "file_path": "blocks/pdf-viewer/pdf-viewer.js",
            "merged_function": "createAdobeDCViewSDKReadyHandler = (config) => async (event) => {\n  const apiKey = await getApiKey();\n  if (apiKey === null) {\n    // eslint-disable-next-line no-console\n    console.warn('no PDF viewer API key provided');\n  }\n\n  // eslint-disable-next-line no-undef\n  const adobeDCView = new AdobeDC.View({\n    clientId: apiKey,\n    divId: config.divId,\n  });\n  adobeDCView.previewFile(\n    config.viewer.preview,\n    config.viewer.options,\n  );\n}",
            "score": -1.0
        },
        "blocks/pdf-viewer/pdf-viewer.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/pdf-viewer/pdf-viewer.js",
            "merged_function": "async function decorate(block) {\n  const pdfSource = block.querySelector('a');\n\n  if (!pdfSource) {\n    return;\n  }\n\n  await embedPDF(block, pdfSource.href);\n}",
            "score": -1.0
        },
        "blocks/pdf-viewer/pdf-viewer.js::embedPDF": {
            "changes_after_merge": 1,
            "file_path": "blocks/pdf-viewer/pdf-viewer.js",
            "merged_function": "embedPDF = async (block, href) => {\n  if (!href) {\n    return;\n  }\n  const divId = `pdf-viewer-${Math.random()\n    .toString(36)\n    .slice(2)}`;\n  const fileName = href.slice(href.lastIndexOf('/') + 1);\n\n  const config = {\n    apiKey: null,\n    divId,\n    viewer: {\n      // https://developer.adobe.com/document-services/docs/overview/pdf-embed-api/howtos/\n      preview: {\n        content: { location: { url: href } },\n        metaData: {\n          fileName,\n          hasReadOnlyAccess: true,\n        },\n      },\n      // https://developer.adobe.com/document-services/docs/overview/pdf-embed-api/howtos_ui/\n      options: {\n        defaultViewMode: 'FIT_WIDTH',\n        embedMode: 'FULL_WINDOW',\n        showAnnotationTools: false,\n        showBookmarks: true,\n        showDownloadPDF: true,\n        showFullScreen: true,\n        showPrintPDF: true,\n        showThumbnails: true,\n        showZoomControl: true,\n      },\n    },\n  };\n\n  setupDOM(block, divId);\n  addEventListeners(config);\n}",
            "score": -0.9534883720930233
        },
        "blocks/pdf-viewer/pdf-viewer.js::getApiKey": {
            "changes_after_merge": 0,
            "file_path": "blocks/pdf-viewer/pdf-viewer.js",
            "merged_function": "getApiKey = async () => {\n  const { host } = window.location;\n\n  if (host.startsWith('localhost')) {\n    return getConfigValue('pdfApiKeyLocalhost');\n  }\n\n  if (host.endsWith('.page')) {\n    return getConfigValue('pdfApiKeyPage');\n  }\n\n  if (host.endsWith('.live')) {\n    return getConfigValue('pdfApiKeyLive;');\n  }\n\n  if (host.endsWith('mammotome.com')) {\n    return getConfigValue('pdfApiKeyProduction');\n  }\n\n  return undefined;\n}",
            "score": -1.0
        },
        "blocks/pdf-viewer/pdf-viewer.js::loadAdobeDCViewSDK": {
            "changes_after_merge": 0,
            "file_path": "blocks/pdf-viewer/pdf-viewer.js",
            "merged_function": "loadAdobeDCViewSDK = async () => {\n  if (!sdkLoaded) {\n    loadScript(ADOBE_DC_VIEW_SDK_SRC, onEmbedPDFScriptLoaded);\n  }\n}",
            "score": -1.0
        },
        "blocks/pdf-viewer/pdf-viewer.js::onEmbedPDFScriptLoaded": {
            "changes_after_merge": 0,
            "file_path": "blocks/pdf-viewer/pdf-viewer.js",
            "merged_function": "onEmbedPDFScriptLoaded = () => {\n  sdkLoaded = true;\n}",
            "score": -1.0
        },
        "blocks/pdf-viewer/pdf-viewer.js::setupDOM": {
            "changes_after_merge": 0,
            "file_path": "blocks/pdf-viewer/pdf-viewer.js",
            "merged_function": "setupDOM = (block, divId) => {\n  const div = document.createElement('div');\n  div.setAttribute('class', 'pdf-embed');\n  div.setAttribute('style', 'width: 100%; height: 800px;');\n  div.setAttribute('id', divId);\n\n  block.appendChild(div);\n}",
            "score": -1.0
        },
        "blocks/prev-next/prev-next.js::buildNavButtons": {
            "changes_after_merge": 0,
            "file_path": "blocks/prev-next/prev-next.js",
            "merged_function": "buildNavButtons = async (key, defaultText) => {\n    const newDiv = document.createElement('div');\n    newDiv.classList.add('prev-next-button');\n    newDiv.innerText = await translate(key, defaultText);\n    return newDiv;\n  }",
            "score": -1.0
        },
        "blocks/prev-next/prev-next.js::createArrow": {
            "changes_after_merge": 0,
            "file_path": "blocks/prev-next/prev-next.js",
            "merged_function": "createArrow = (direction) => {\n    const arrow = document.createElement('div');\n    arrow.classList.add(`${direction}-arrow`);\n    arrow.innerHTML = direction === 'left' ? HTML_ARROW_PREV : HTML_ARROW_NEXT;\n    return arrow;\n  }",
            "score": -1.0
        },
        "blocks/prev-next/prev-next.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/prev-next/prev-next.js",
            "merged_function": "async function decorate(block) {\n  const moveHeaderLinkDiv = (el) => {\n    const text = el.innerText;\n    const newDiv = document.createElement('div');\n    newDiv.classList.add('prev-next-header-link');\n    newDiv.innerText = text;\n    el.innerText = '';\n    el.insertAdjacentElement('afterbegin', newDiv);\n  };\n\n  const buildNavButtons = async (key, defaultText) => {\n    const newDiv = document.createElement('div');\n    newDiv.classList.add('prev-next-button');\n    newDiv.innerText = await translate(key, defaultText);\n    return newDiv;\n  };\n\n  const createArrow = (direction) => {\n    const arrow = document.createElement('div');\n    arrow.classList.add(`${direction}-arrow`);\n    arrow.innerHTML = direction === 'left' ? HTML_ARROW_PREV : HTML_ARROW_NEXT;\n    return arrow;\n  };\n\n  if (!block) return;\n\n  const prevNextContainer = block.firstElementChild;\n  const verticalSeparator = document.createElement('div');\n  verticalSeparator.classList.add('vertical-line');\n  prevNextContainer.firstElementChild.insertAdjacentElement('afterend', verticalSeparator);\n\n  const prevBox = prevNextContainer.firstElementChild.querySelector('a');\n  const nextBox = prevNextContainer.lastElementChild.querySelector('a');\n\n  if (prevBox) {\n    moveHeaderLinkDiv(prevBox);\n    prevBox.insertAdjacentElement('afterbegin', await buildNavButtons('navPreviousText', 'Previous'));\n    prevBox.insertAdjacentElement('afterbegin', createArrow('left'));\n  }\n\n  if (nextBox) {\n    moveHeaderLinkDiv(nextBox);\n    nextBox.insertAdjacentElement('afterbegin', await buildNavButtons('navNextText', 'Next'));\n    nextBox.insertAdjacentElement('afterbegin', createArrow('right'));\n  }\n\n  // Add Bottom Spacer\n  const spacer = document.createElement('div');\n  spacer.classList.add('bottom-spacer');\n  block.appendChild(spacer);\n}",
            "score": -0.9534883720930233
        },
        "blocks/prev-next/prev-next.js::moveHeaderLinkDiv": {
            "changes_after_merge": 0,
            "file_path": "blocks/prev-next/prev-next.js",
            "merged_function": "moveHeaderLinkDiv = (el) => {\n    const text = el.innerText;\n    const newDiv = document.createElement('div');\n    newDiv.classList.add('prev-next-header-link');\n    newDiv.innerText = text;\n    el.innerText = '';\n    el.insertAdjacentElement('afterbegin', newDiv);\n  }",
            "score": -1.0
        },
        "blocks/product-list/product-list.js::decorate": {
            "changes_after_merge": 4,
            "file_path": "blocks/product-list/product-list.js",
            "merged_function": "async function decorate(block) {\n  const json = await getProductDB();\n  const { language } = getInfo();\n  const products = getProducts(json, language);\n\n  createDomStructure([\n    {\n      type: 'div',\n      classes: ['product-list'],\n      children: products.map(decorateProduct),\n    }], block);\n}",
            "score": -0.813953488372093
        },
        "blocks/product-list/product-list.js::decorateProduct": {
            "changes_after_merge": 4,
            "file_path": "blocks/product-list/product-list.js",
            "merged_function": "function decorateProduct(product) {\n  const children = [\n    { type: 'h3', textContent: product.Name },\n  ];\n\n  if (product.Image) {\n    children.unshift({\n      type: 'div',\n      classes: ['container'],\n      children: [{ type: 'img', attributes: { src: product.Image } }],\n    });\n  }\n\n  return {\n    type: 'a',\n    classes: ['product'],\n    attributes: { href: `product-support/${product.ProductCodes.split('|')[0]}` },\n    children,\n  };\n}",
            "score": -0.813953488372093
        },
        "blocks/product-list/product-list.js::getInfo": {
            "changes_after_merge": 1,
            "file_path": "blocks/product-list/product-list.js",
            "merged_function": "function getInfo() {\n  const url = new URL(window.location);\n  return { language: url.pathname.substring(1, url.pathname.indexOf('/', 1)) };\n}",
            "score": -0.9534883720930233
        },
        "blocks/product-list/product-list.js::getProducts": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-list/product-list.js",
            "merged_function": "function getProducts(json, language) {\n  const languageUpper = language.toUpperCase();\n  return json.Product.data\n    .filter((entry) => entry.Languages.split('|')\n      .map((lang) => lang.toUpperCase())\n      .includes(languageUpper))\n    .map((product) => {\n      const translation = json.ProductTranslation.data\n        .find((entry) => entry.ProductRef === product.ProductCodes\n          && entry.Language === language);\n      product.Name = translation?.Name || product.Name;\n      product.Image = translation?.Image || product.Image;\n      return product;\n    });\n}",
            "score": -1.0
        },
        "blocks/product-reference/product-reference.js::createButtons": {
            "changes_after_merge": 4,
            "file_path": "blocks/product-reference/product-reference.js",
            "merged_function": "async function createButtons(productCode) {\n  return [\n    [\n      await translate('productReferenceInformationURL', '../contact/'),\n      ['primary'],\n      await translate('productReferenceInformation', 'Request Information'),\n    ],\n    [\n      await translate('productReferenceSupportURL', '../product-support'),\n      ['secondary'],\n      await translate('productReferenceSupport', 'Product Support'),\n    ],\n    [\n      `${await translate('productReferenceSupportURL', '../product-support')}/${productCode}`,\n      ['secondary'],\n      await translate('productReferenceDocuments', 'Product Documents'),\n    ],\n  ].map(([href, className, textContent]) => ({ href, className, textContent }));\n}",
            "score": -0.813953488372093
        },
        "blocks/product-reference/product-reference.js::decorate": {
            "changes_after_merge": 6,
            "file_path": "blocks/product-reference/product-reference.js",
            "merged_function": "async function decorate(block) {\n  const productCode = block.querySelector('div > div')?.textContent?.trim();\n\n  block.innerHTML = '';\n\n  if (!productCode) {\n    return;\n  }\n\n  const { language } = getInfo();\n  const json = await getProductDB();\n  const product = getProduct(json, productCode, language);\n\n  if (!product) {\n    return;\n  }\n\n  const buttons = await createButtons(product.ProductCodes.split('|')[0]);\n\n  const imgStructure = [\n    {\n      type: 'img',\n      attributes: { src: product.Image },\n    },\n  ];\n\n  const buttonStructure = buttons.map(({ href, className, textContent }) => ({\n    type: 'a',\n    attributes: { href },\n    children: [{ type: 'button', classes: [className], textContent }],\n  }));\n\n  createDomStructure([\n    {\n      type: 'div',\n      children: [\n        imgStructure,\n        buttonStructure,\n      ].map((children) => (\n        {\n          type: 'div',\n          classes: ['product-ref-container'],\n          children: [\n            {\n              type: 'div',\n              children,\n            },\n          ],\n        })),\n    },\n  ], block);\n}",
            "score": -0.7209302325581395
        },
        "blocks/product-reference/product-reference.js::getInfo": {
            "changes_after_merge": 1,
            "file_path": "blocks/product-reference/product-reference.js",
            "merged_function": "function getInfo() {\n  const url = new URL(window.location);\n  return { language: url.pathname.substring(1, url.pathname.indexOf('/', 1)) };\n}",
            "score": -0.9534883720930233
        },
        "blocks/product-reference/product-reference.js::getProduct": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-reference/product-reference.js",
            "merged_function": "function getProduct(json, productCode, language) {\n  const product = json.Product.data\n    .find((entry) => entry.ProductCodes.split('|').includes(productCode)\n      && entry.Languages.split('|').map((lang) => lang.toUpperCase()).includes(language.toUpperCase()));\n\n  if (product) {\n    const translation = json.ProductTranslation.data\n      .find((entry) => entry.ProductRef === product.ProductCodes && entry.Language === language);\n\n    product.Name = translation?.Name || product.Name;\n    product.Image = translation?.Image || product.Image;\n  }\n\n  return product;\n}",
            "score": -1.0
        },
        "blocks/product-support/product-support.js::decorate": {
            "changes_after_merge": 10,
            "file_path": "blocks/product-support/product-support.js",
            "merged_function": "async function decorate(block) {\n  const json = await getProductDB();\n\n  const { productCode, productSupport, language } = getInfo();\n\n  const product = getProduct(json, productCode, language);\n\n  if (!product) {\n    window.location.replace(productSupport);\n    return;\n  }\n\n  const [heading, allDocuments, empty] = await Promise.all([\n    translate('productSupportHeading', 'Product and Technical documents'),\n    translate('productSupportAllDocuments', 'All Product Documents'),\n    translate('productSupportNoResult', 'No data was found'),\n  ]);\n\n  createDomStructure([{ type: 'h1', textContent: product.Name }], block);\n  if (product.Image) {\n    createDomStructure([{ type: 'div', classes: ['container'], children: [{ type: 'img', attributes: { src: product.Image } }] }], block);\n  }\n  createDomStructure([\n    {\n      type: 'div',\n      children: [\n        {\n          type: 'h2',\n          textContent: heading,\n        },\n        {\n          type: 'div',\n          children: [\n            {\n              type: 'select',\n              children: [\n                {\n                  type: 'option',\n                  textContent: allDocuments,\n                },\n                ...getTypes(json, product, language)\n                  .map((type) => (\n                    {\n                      type: 'option',\n                      textContent: type,\n                    }\n                  )),\n              ],\n            },\n          ],\n        },\n        {\n          type: 'div',\n          classes: ['link-container'],\n        },\n      ],\n    },\n  ], block);\n\n  const select = block.querySelector('select');\n  const container = block.querySelector('.link-container');\n\n  const handler = () => {\n    container.innerHTML = '';\n    const assets = getAssets(json, product, language, select.value, allDocuments);\n\n    if (assets.length > 0) {\n      createDomStructure(assets.map((asset) => (\n        {\n          type: 'div',\n          classes: ['link'],\n          children: [\n            {\n              type: 'a',\n              attributes: { href: asset.URL, target: 'blank' },\n              textContent: asset.Name,\n            },\n          ],\n        }\n      )), container);\n    } else {\n      createDomStructure([{\n        type: 'div',\n        textContent: empty,\n      }], container);\n    }\n  };\n\n  handler();\n  select.addEventListener('change', handler);\n}",
            "score": -0.5348837209302326
        },
        "blocks/product-support/product-support.js::getAssets": {
            "changes_after_merge": 1,
            "file_path": "blocks/product-support/product-support.js",
            "merged_function": "function getAssets(json, product, language, type, allType) {\n  const languageUpper = language.toUpperCase();\n\n  return json.ProductAsset.data.filter(\n    (asset) => asset.ProductRef === product.ProductCodes\n      && asset.Languages.split('|').map((lang) => lang.toUpperCase()).includes(languageUpper)\n      && (type === allType || asset.Type === type),\n  );\n}",
            "score": -0.9534883720930233
        },
        "blocks/product-support/product-support.js::getInfo": {
            "changes_after_merge": 2,
            "file_path": "blocks/product-support/product-support.js",
            "merged_function": "function getInfo() {\n  const url = new URL(window.location);\n  const idx = url.pathname.indexOf('/product-support/');\n  if (idx > 0) {\n    const slug = url.pathname.substring(url.pathname.indexOf('/product-support/') + '/product-support/'.length);\n    if (slug) {\n      return {\n        productCode: slug,\n        productSupport: url.pathname.substring(0, url.pathname.indexOf(`${slug}`)),\n        language: url.pathname.substring(1, url.pathname.indexOf('/', 1)),\n      };\n    }\n  }\n  return { productSupport: url.pathname.substring(0, url.pathname.length - 1) };\n}",
            "score": -0.9069767441860466
        },
        "blocks/product-support/product-support.js::getProduct": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-support/product-support.js",
            "merged_function": "function getProduct(json, productCode, language) {\n  const product = json.Product.data\n    .find((entry) => entry.ProductCodes.split('|').includes(productCode)\n      && entry.Languages.split('|').map((lang) => lang.toUpperCase()).includes(language.toUpperCase()));\n\n  if (product) {\n    const translation = json.ProductTranslation.data\n      .find((entry) => entry.ProductRef === product.ProductCodes && entry.Language === language);\n\n    product.Name = translation?.Name || product.Name;\n    product.Image = translation?.Image || product.Image;\n  }\n\n  return product;\n}",
            "score": -1.0
        },
        "blocks/product-support/product-support.js::getTypes": {
            "changes_after_merge": 2,
            "file_path": "blocks/product-support/product-support.js",
            "merged_function": "function getTypes(json, product, language) {\n  const languageUpper = language.toUpperCase();\n\n  return Array.from(\n    new Set(\n      json.ProductAsset.data.filter(\n        (asset) => asset.ProductRef === product.ProductCodes\n          && asset.Languages.split('|').map((lang) => lang.toUpperCase()).includes(languageUpper),\n      ).map((asset) => asset.Type),\n    ),\n  );\n}",
            "score": -0.9069767441860466
        },
        "blocks/product-support/product-support.js::handler": {
            "changes_after_merge": 5,
            "file_path": "blocks/product-support/product-support.js",
            "merged_function": "handler = () => {\n    container.innerHTML = '';\n    const assets = getAssets(json, product, language, select.value, allDocuments);\n\n    if (assets.length > 0) {\n      createDomStructure(assets.map((asset) => (\n        {\n          type: 'div',\n          classes: ['link'],\n          children: [\n            {\n              type: 'a',\n              attributes: { href: asset.URL, target: 'blank' },\n              textContent: asset.Name,\n            },\n          ],\n        }\n      )), container);\n    } else {\n      createDomStructure([{\n        type: 'div',\n        textContent: empty,\n      }], container);\n    }\n  }",
            "score": -0.7674418604651163
        },
        "blocks/tab-navigation/tab-navigation.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/tab-navigation/tab-navigation.js",
            "merged_function": "function decorate(block) {\n  const links = block.querySelectorAll('a');\n  if (!links.length) return;\n  const actualPage = getMetadata('og:url').split('/').slice(-1)[0].toLowerCase();\n  links.forEach((a) => {\n    const href = a.getAttribute('href').toLowerCase();\n    if (href.includes(actualPage)) {\n      a.classList.add('active');\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/video/video.js::addClickHandler": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "addClickHandler = (video, videoPath) => {\n  video.addEventListener('click', () => loadVideo(video, videoPath), { passive: true });\n}",
            "score": -1.0
        },
        "blocks/video/video.js::addPlayButton": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "addPlayButton = (video) => {\n  const playButton = document.createElement('span');\n  playButton.classList.add(CSS_CLASS_NAME_ICON_PLAY_VIDEO);\n  playButton.innerHTML = HTML_PLAY_ICON;\n\n  const thumbnailElement = video.querySelector(':scope > div:last-child');\n  thumbnailElement.appendChild(playButton);\n}",
            "score": -1.0
        },
        "blocks/video/video.js::createRemoveVideoHandler": {
            "changes_after_merge": 1,
            "file_path": "blocks/video/video.js",
            "merged_function": "createRemoveVideoHandler = (video, overlays, videoIframe) => () => {\n  overlays.overlay.removeEventListener('click', removeVideo);\n  overlays.toolbarClose.removeEventListener('click', removeVideo);\n  window.removeEventListener('keydown', escHandler);\n\n  video.parentElement.parentElement.removeChild(overlays.overlay);\n  video.parentElement.parentElement.removeChild(overlays.toolbar);\n  video.removeChild(videoIframe);\n}",
            "score": -0.9534883720930233
        },
        "blocks/video/video.js::createVideoOverlays": {
            "changes_after_merge": 1,
            "file_path": "blocks/video/video.js",
            "merged_function": "createVideoOverlays = (video) => {\n  const overlay = document.createElement('div');\n  overlay.classList.add('asset-viewer-overlay');\n  video.parentElement.parentElement.appendChild(overlay);\n\n  const toolbar = document.createElement('div');\n  toolbar.classList.add('asset-viewer-toolbar');\n\n  const toolbarClose = document.createElement('div');\n  toolbarClose.classList.add('asset-viewer-close');\n  toolbar.appendChild(toolbarClose);\n  video.parentElement.parentElement.appendChild(toolbar);\n\n  return {\n    overlay,\n    toolbar,\n    toolbarClose,\n  };\n}",
            "score": -0.9534883720930233
        },
        "blocks/video/video.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "async function decorate(block) {\n  const videos = block.querySelectorAll(':scope > div');\n  const promises = [];\n\n  videos.forEach((video) => {\n    promises.push(decorateVideo(video));\n  });\n\n  await Promise.all(promises);\n}",
            "score": -1.0
        },
        "blocks/video/video.js::decorateVideo": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "decorateVideo = async (video) => {\n  const videoPath = getVideoPathFromVideo(video);\n  if (!videoPath) {\n    return;\n  }\n\n  addPlayButton(video);\n  addClickHandler(video, videoPath);\n  optimizeThumbnails(video);\n  await decorateIcons(video);\n}",
            "score": -1.0
        },
        "blocks/video/video.js::ensurePlayerCSSLoaded": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "ensurePlayerCSSLoaded = () => {\n  if (!playerCssLoaded) {\n    loadCSS(`${window.hlx.codeBasePath}/blocks/video/asset-viewer/asset-viewer.css`, onPlayerCssLoaded);\n  }\n}",
            "score": -1.0
        },
        "blocks/video/video.js::getVideoPathFromVideo": {
            "changes_after_merge": 1,
            "file_path": "blocks/video/video.js",
            "merged_function": "getVideoPathFromVideo = (video) => {\n  const videoURLElement = video.querySelector(':scope > div:nth-child(2) a');\n  if (!videoURLElement) {\n    return '';\n  }\n\n  const videoURLString = videoURLElement.href;\n  if (!videoURLString) {\n    return '';\n  }\n\n  const watchMode = '/watch?v=';\n  const watchIndex = videoURLString.indexOf(watchMode);\n\n  if (watchIndex > 0) {\n    return `/${videoURLString.substring(watchIndex + watchMode.length)}`;\n  }\n\n  return new URL(videoURLString).pathname;\n}",
            "score": -0.9534883720930233
        },
        "blocks/video/video.js::loadVideo": {
            "changes_after_merge": 1,
            "file_path": "blocks/video/video.js",
            "merged_function": "loadVideo = (video, videoPath) => {\n  ensurePlayerCSSLoaded();\n\n  const overlays = createVideoOverlays(video);\n\n  const videoIframe = document.createElement('iframe');\n  videoIframe.classList.add('video-player-iframe');\n  videoIframe.setAttribute('allowfullscreen', '');\n  videoIframe.src = `https://www.youtube.com/embed${videoPath}`;\n\n  video.appendChild(videoIframe);\n\n  registerEventListeners(video, overlays, videoIframe);\n}",
            "score": -0.9534883720930233
        },
        "blocks/video/video.js::onPlayerCssLoaded": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "onPlayerCssLoaded = () => {\n  playerCssLoaded = true;\n}",
            "score": -1.0
        },
        "blocks/video/video.js::optimizeThumbnails": {
            "changes_after_merge": 1,
            "file_path": "blocks/video/video.js",
            "merged_function": "optimizeThumbnails = (video) => {\n  video\n    .querySelectorAll('img')\n    .forEach((img) => {\n      img\n        .closest('picture')\n        .replaceWith(\n          createOptimizedPicture(\n            img.src,\n            img.alt,\n            false,\n            null,\n            null,\n            [{ width: '768' }],\n          ),\n        );\n    });\n}",
            "score": -0.9534883720930233
        },
        "blocks/video/video.js::registerEventListeners": {
            "changes_after_merge": 1,
            "file_path": "blocks/video/video.js",
            "merged_function": "registerEventListeners = (video, overlays, videoIframe) => {\n  removeVideo = createRemoveVideoHandler(video, overlays, videoIframe);\n  escHandler = (event) => {\n    if (event.key === 'Escape' || event.key === 'Esc') {\n      removeVideo();\n    }\n  };\n\n  overlays.overlay.addEventListener('click', removeVideo);\n  overlays.toolbarClose.addEventListener('click', removeVideo);\n  window.addEventListener('keydown', escHandler);\n}",
            "score": -0.9534883720930233
        },
        "plugins/rum-conversion/src/index.js::findConversionValue": {
            "changes_after_merge": 0,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "function findConversionValue(parent, fieldName) {\n  // Try to find the element by Id or Name\n  const valueElement = document.getElementById(fieldName) || parent.querySelector(`[name='${fieldName}']`);\n  if (valueElement) {\n    return valueElement.value;\n  }\n  // Find the element by the inner text of the label\n  return Array.from(parent.getElementsByTagName('label'))\n    .filter((l) => l.innerText.trim().toLowerCase() === fieldName.toLowerCase())\n    .map((label) => document.getElementById(label.htmlFor))\n    .filter((field) => !!field)\n    .map((field) => field.value)\n    .pop();\n}",
            "score": -1.0
        },
        "plugins/rum-conversion/src/index.js::getLinkLabel": {
            "changes_after_merge": 1,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "function getLinkLabel(element) {\n  return element.title ? this.toClassName(element.title) : this.toClassName(element.textContent);\n}",
            "score": -0.9534883720930233
        },
        "plugins/rum-conversion/src/index.js::initConversionTracking": {
            "changes_after_merge": 1,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "async function initConversionTracking(parent = document, defaultFormConversionName = '') {\n  const conversionElements = {\n    form: () => {\n      // Track all forms\n      parent.querySelectorAll('form').forEach((element) => {\n        const section = element.closest('div.section');\n        if (section.dataset.conversionValueField) {\n          const cvField = section.dataset.conversionValueField.trim();\n          // this will track the value of the element with the id specified in\n          // the \"Conversion Element\" field.\n          // ideally, this should not be an ID, but the case-insensitive name label of the element.\n          sampleRUM.convert(undefined, (cvParent) => findConversionValue(cvParent, cvField), element, ['submit']);\n        }\n        let formConversionName = section.dataset.conversionName || this.getMetadata('conversion-name');\n        if (!formConversionName) {\n          // if no conversion name is defined in the metadata,\n          // use the conversion name passed as parameter or the form or id\n          formConversionName = defaultFormConversionName\n            ? this.toClassName(defaultFormConversionName) : element.id;\n        }\n        sampleRUM.convert(formConversionName, undefined, element, ['submit']);\n      });\n    },\n    link: () => {\n      // track all links\n      Array.from(parent.querySelectorAll('a[href]'))\n        .map((element) => ({\n          element,\n          cevent: this.getMetadata(`conversion-name--${getLinkLabel.call(this, element)}-`) || this.getMetadata('conversion-name') || getLinkLabel.call(this, element),\n        }))\n        .forEach(({ element, cevent }) => {\n          sampleRUM.convert(cevent, undefined, element, ['click']);\n        });\n    },\n    'labeled-link': () => {\n      // track only the links configured in the metadata\n      const linkLabels = this.getMetadata('conversion-link-labels') || '';\n      const trackedLabels = linkLabels.split(',')\n        .map((p) => p.trim())\n        .map(this.toClassName);\n\n      Array.from(parent.querySelectorAll('a[href]'))\n        .filter((element) => trackedLabels.includes(getLinkLabel.call(this, element)))\n        .map((element) => ({\n          element,\n          cevent: this.getMetadata(`conversion-name--${getLinkLabel.call(this, element)}-`) || this.getMetadata('conversion-name') || getLinkLabel.call(this, element),\n        }))\n        .forEach(({ element, cevent }) => {\n          sampleRUM.convert(cevent, undefined, element, ['click']);\n        });\n    },\n  };\n\n  const declaredConversionElements = this.getMetadata('conversion-element') ? this.getMetadata('conversion-element').split(',').map((ce) => this.toClassName(ce.trim())) : [];\n\n  Object.keys(conversionElements)\n    .filter((ce) => declaredConversionElements.includes(ce))\n    .forEach((cefn) => conversionElements[cefn]());\n}",
            "score": -0.9534883720930233
        },
        "plugins/rum-conversion/src/index.js::registerConversionListener": {
            "changes_after_merge": 1,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "function registerConversionListener(elements) {\n    // if elements is an array or nodelist, register a conversion event for each element\n    if (Array.isArray(elements) || elements instanceof NodeList) {\n      elements.forEach((e) => registerConversionListener(e, listenTo, cevent, cvalueThunk));\n    } else {\n      listenTo.forEach((eventName) => element.addEventListener(\n        eventName,\n        (e) => trackConversion(e.target),\n      ));\n    }\n  }",
            "score": -0.9534883720930233
        },
        "plugins/rum-conversion/src/index.js::trackConversion": {
            "changes_after_merge": 1,
            "file_path": "plugins/rum-conversion/src/index.js",
            "merged_function": "async function trackConversion(celement) {\n    const MAX_SESSION_LENGTH = 1000 * 60 * 60 * 24 * 30; // 30 days\n    try {\n      // get all stored experiments from local storage (unified-decisioning-experiments)\n      const experiments = JSON.parse(localStorage.getItem('unified-decisioning-experiments'));\n      if (experiments) {\n        Object.entries(experiments)\n          .map(([experiment, { treatment, date }]) => ({ experiment, treatment, date }))\n          .filter(({ date }) => Date.now() - new Date(date) < MAX_SESSION_LENGTH)\n          .forEach(({ experiment, treatment }) => {\n            // send conversion event for each experiment that has been seen by this visitor\n            sampleRUM('variant', { source: experiment, target: treatment });\n          });\n      }\n      // send conversion event\n      const cvalue = typeof cvalueThunk === 'function' ? await cvalueThunk(element) : cvalueThunk;\n\n      const data = { source: cevent, target: cvalue, element: celement };\n      sampleRUM('convert', data);\n      // Following if statement must be removed once always mechanism is present in the boilerplate\n      if (sampleRUM.always && sampleRUM.always.convert) {\n        sampleRUM.always.convert(data);\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log('error reading experiments', e);\n    }\n  }",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::OptanonWrapper": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function OptanonWrapper() { }",
            "score": -1.0
        },
        "scripts/delayed.js::getCookieConsentID": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function getCookieConsentID(hostname) {\n  if (hostname === undefined) {\n    return undefined;\n  }\n  // The domains we want to use the id for - otherwise, we will append '-test'\n  const domains = [].concat(await getPlaceholderOrDefault('otDomain', '.mammotome.com'));\n  // The cookie ID\n  let csID = await getPlaceholderOrDefault('otID', '65cf64d7-d2d8-4632-92ad-35ad2676f463');\n  if (!domains.some((domain) => hostname.endsWith(domain))) {\n    // The OneTrust documentation specifies to suffix the ID with -test when running in\n    // a dev or stage testing domain\n    // https://about.gitlab.com/handbook/marketing/digital-experience/onetrust-cookie-consent/\n    csID += '-test';\n  }\n  return csID;\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::loadCookieConsent": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function loadCookieConsent(doc, hostname) {\n  const csID = await getCookieConsentID(hostname);\n\n  const cookieScript = doc.createElement('script');\n  cookieScript.setAttribute('src', 'https://cdn.cookielaw.org/scripttemplates/otSDKStub.js');\n  cookieScript.setAttribute('data-document-language', 'true');\n  cookieScript.setAttribute('type', 'text/javascript');\n  cookieScript.setAttribute('charset', 'UTF-8');\n  cookieScript.setAttribute('data-domain-script', csID);\n  doc.head.appendChild(cookieScript);\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::getConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "async function getConfig(experiment, instantExperiment = null, config = DEFAULT_OPTIONS) {\n  const usp = new URLSearchParams(window.location.search);\n  const [forcedExperiment, forcedVariant] = usp.has(config.queryParameter) ? usp.get(config.queryParameter).split('/') : [];\n\n  const experimentConfig = instantExperiment\n    ? await getConfigForInstantExperiment(experiment, instantExperiment)\n    : await getConfigForFullExperiment(experiment, config);\n  // eslint-disable-next-line no-console\n  console.debug(experimentConfig);\n  if (!experimentConfig || (toCamelCase(experimentConfig.status) !== 'active' && !forcedExperiment)) {\n    return null;\n  }\n\n  experimentConfig.run = !!forcedExperiment\n    || await isValidAudience(config.audiences, experimentConfig.audiences);\n  window.hlx = window.hlx || {};\n  window.hlx.experiment = experimentConfig;\n  // eslint-disable-next-line no-console\n  console.debug('run', experimentConfig.run, experimentConfig.audiences);\n  if (!experimentConfig.run) {\n    return null;\n  }\n\n  if (forcedVariant && experimentConfig.variantNames.includes(forcedVariant)) {\n    experimentConfig.selectedVariant = forcedVariant;\n  } else {\n    // eslint-disable-next-line import/extensions\n    const { ued } = await import('./ued.js');\n    const decision = ued.evaluateDecisionPolicy(getDecisionPolicy(experimentConfig), {});\n    experimentConfig.selectedVariant = decision.items[0].id;\n  }\n  return experimentConfig;\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::getConfigForFullExperiment": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "async function getConfigForFullExperiment(experimentId, cfg) {\n  const path = `${cfg.root}/${experimentId}/${cfg.configFile}`;\n  try {\n    const resp = await fetch(path);\n    if (!resp.ok) {\n      // eslint-disable-next-line no-console\n      console.log('error loading experiment config:', resp);\n      return null;\n    }\n    const json = await resp.json();\n    const config = cfg.parser\n      ? cfg.parser(json)\n      : parseExperimentConfig(json);\n    if (!config) {\n      return null;\n    }\n    config.id = experimentId;\n    config.manifest = path;\n    config.basePath = `${cfg.root}/${experimentId}`;\n    return config;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(`error loading experiment manifest: ${path}`, e);\n  }\n  return null;\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::getConfigForInstantExperiment": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "function getConfigForInstantExperiment(experimentId, instantExperiment) {\n  const config = {\n    label: `Instant Experiment: ${experimentId}`,\n    audiences: {},\n    status: 'Active',\n    id: experimentId,\n    variants: {},\n    variantNames: [],\n  };\n\n  const pages = instantExperiment.split(',').map((p) => new URL(p.trim()).pathname);\n  const evenSplit = 1 / (pages.length + 1);\n\n  config.variantNames.push('control');\n  config.variants.control = {\n    percentageSplit: '',\n    pages: [window.location.pathname],\n    blocks: [],\n    label: 'Control',\n  };\n\n  pages.forEach((page, i) => {\n    const vname = `challenger-${i + 1}`;\n    config.variantNames.push(vname);\n    config.variants[vname] = {\n      percentageSplit: `${evenSplit.toFixed(2)}`,\n      pages: [page],\n      blocks: [],\n      label: `Challenger ${i + 1}`,\n    };\n  });\n\n  return (config);\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::getDecisionPolicy": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "function getDecisionPolicy(config) {\n  const decisionPolicy = {\n    id: 'content-experimentation-policy',\n    rootDecisionNodeId: 'n1',\n    decisionNodes: [{\n      id: 'n1',\n      type: 'EXPERIMENTATION',\n      experiment: {\n        id: config.id,\n        identityNamespace: 'ECID',\n        randomizationUnit: 'DEVICE',\n        treatments: Object.entries(config.variants).map(([key, props]) => ({\n          id: key,\n          allocationPercentage: props.percentageSplit\n            ? parseFloat(props.percentageSplit) * 100\n            : 100 - Object.values(config.variants).reduce((result, variant) => {\n              // eslint-disable-next-line no-param-reassign\n              result -= parseFloat(variant.percentageSplit || 0) * 100;\n              return result;\n            }, 100),\n        })),\n      },\n    }],\n  };\n  return decisionPolicy;\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::getExperimentName": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "function getExperimentName(tagName) {\n  if (navigator.userAgent.match(/bot|crawl|spider/i)) {\n    return null;\n  }\n\n  return toClassName(getMetadata(tagName)) || null;\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::isValidAudience": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "async function isValidAudience(audiences, selected) {\n  const results = await Promise.all(Object.entries(selected).map(([key, value]) => {\n    if (audiences[key] && typeof audiences[key] === 'function') {\n      return audiences[key](value);\n    }\n    if (audiences[key] && audiences[key][value] && typeof audiences[key][value] === 'function') {\n      return audiences[key][value]();\n    }\n    return true;\n  }));\n  return results.every((res) => res);\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::isValidConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "function isValidConfig(config) {\n  if (!config.variantNames\n    || !config.variantNames.length\n    || !config.variants\n    || !Object.values(config.variants).length\n    || !Object.values(config.variants).every((v) => (\n      typeof v === 'object'\n      && !!v.blocks\n      && !!v.pages\n      && (v.percentageSplit === '' || !!v.percentageSplit)\n    ))) {\n    // eslint-disable-next-line no-console\n    console.warn('Invalid experiment config. Please review your sheet and parser.');\n    return false;\n  }\n  return true;\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::parseExperimentConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "function parseExperimentConfig(json) {\n  const config = {\n    audiences: {},\n  };\n  try {\n    json.settings.data.forEach((line) => {\n      let key = toCamelCase(line.Name);\n      if (key.startsWith('audience')) {\n        key = toCamelCase(key.substring(8));\n        config.audiences[key] = toCamelCase(line.Value);\n        return;\n      }\n      if (key === 'experimentName') {\n        key = 'label';\n      }\n      config[key] = line.Value;\n    });\n    const variants = {};\n    let variantNames = Object.keys(json.experiences.data[0]);\n    variantNames.shift();\n    variantNames = variantNames.map((vn) => toCamelCase(vn));\n    variantNames.forEach((variantName) => {\n      variants[variantName] = {};\n    });\n    let lastKey = 'default';\n    json.experiences.data.forEach((line) => {\n      let key = toCamelCase(line.Name);\n      if (!key) key = lastKey;\n      lastKey = key;\n      const vns = Object.keys(line);\n      vns.shift();\n      vns.forEach((vn) => {\n        const camelVN = toCamelCase(vn);\n        if (key === 'pages' || key === 'blocks') {\n          variants[camelVN][key] = variants[camelVN][key] || [];\n          if (key === 'pages') variants[camelVN][key].push(new URL(line[vn]).pathname);\n          else variants[camelVN][key].push(line[vn]);\n        } else {\n          variants[camelVN][key] = line[vn];\n        }\n      });\n    });\n    config.variants = variants;\n    config.variantNames = variantNames;\n    return config;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('error parsing experiment config:', e, json);\n  }\n  return null;\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::patchBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "function patchBlockConfig(config) {\n  const { experiment } = window.hlx;\n\n  // No experiment is running\n  if (!experiment || !experiment.run) {\n    return config;\n  }\n\n  // The current experiment does not modify the block\n  if (experiment.selectedVariant === experiment.variantNames[0]\n    || !experiment.blocks || !experiment.blocks.includes(config.blockName)) {\n    return config;\n  }\n\n  // The current experiment does not modify the block code\n  const variant = experiment.variants[experiment.selectedVariant];\n  if (!variant.blocks.length) {\n    return config;\n  }\n\n  let index = experiment.variants[experiment.variantNames[0]].blocks.indexOf('');\n  if (index < 0) {\n    index = experiment.variants[experiment.variantNames[0]].blocks.indexOf(config.blockName);\n  }\n  if (index < 0) {\n    index = experiment.variants[experiment.variantNames[0]].blocks.indexOf(`/blocks/${config.blockName}`);\n  }\n  if (index < 0) {\n    return config;\n  }\n\n  let origin = '';\n  let path;\n  if (/^https?:\\/\\//.test(variant.blocks[index])) {\n    const url = new URL(variant.blocks[index]);\n    // Experimenting from a different branch\n    if (url.origin !== window.location.origin) {\n      origin = url.origin;\n    }\n    // Experimenting from a block path\n    if (url.pathname !== '/') {\n      path = url.pathname;\n    } else {\n      path = `/blocks/${config.blockName}`;\n    }\n  } else { // Experimenting from a different branch on the same branch\n    path = variant.blocks[index];\n  }\n  if (!origin && !path) {\n    return config;\n  }\n\n  const { codeBasePath } = window.hlx;\n  return {\n    ...config,\n    cssPath: `${origin}${codeBasePath}${path}/${config.blockName}.css`,\n    jsPath: `${origin}${codeBasePath}${path}/${config.blockName}.js`,\n  };\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::replaceInner": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "async function replaceInner(path, element) {\n  const plainPath = `${path}.plain.html`;\n  try {\n    const resp = await fetch(plainPath);\n    if (!resp.ok) {\n      // eslint-disable-next-line no-console\n      console.log('error loading experiment content:', resp);\n      return false;\n    }\n    const html = await resp.text();\n    // eslint-disable-next-line no-param-reassign\n    element.innerHTML = html;\n    return true;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(`error loading experiment content: ${plainPath}`, e);\n  }\n  return false;\n}",
            "score": -1.0
        },
        "scripts/experimentation/index.js::runExperiment": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/index.js",
            "merged_function": "async function runExperiment(experiment, instantExperiment, customOptions) {\n  const options = {\n    ...DEFAULT_OPTIONS,\n    ...customOptions,\n  };\n  const experimentConfig = await getConfig(experiment, instantExperiment, options);\n  if (!experimentConfig || !isValidConfig(experimentConfig)) {\n    return false;\n  }\n  // eslint-disable-next-line no-console\n  console.debug(`running experiment (${window.hlx.experiment.id}) -> ${window.hlx.experiment.selectedVariant}`);\n\n  if (experimentConfig.selectedVariant === experimentConfig.variantNames[0]) {\n    return false;\n  }\n\n  const { pages } = experimentConfig.variants[experimentConfig.selectedVariant];\n  if (!pages.length) {\n    return false;\n  }\n\n  const currentPath = window.location.pathname;\n  const control = experimentConfig.variants[experimentConfig.variantNames[0]];\n  const index = control.pages.indexOf(currentPath);\n  if (index < 0 || pages[index] === currentPath) {\n    return false;\n  }\n\n  // Fullpage content experiment\n  document.body.classList.add(`experiment-${experimentConfig.id}`);\n  const result = await replaceInner(pages[0], document.querySelector('main'));\n  if (!result) {\n    // eslint-disable-next-line no-console\n    console.debug(`failed to serve variant ${window.hlx.experiment.selectedVariant}. Falling back to ${experimentConfig.variantNames[0]}.`);\n  }\n  document.body.classList.add(`variant-${result ? experimentConfig.selectedVariant : experimentConfig.variantNames[0]}`);\n  sampleRUM('experiment', {\n    source: experimentConfig.id,\n    target: result ? experimentConfig.selectedVariant : experimentConfig.variantNames[0],\n  });\n  return result;\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::assignTreatment": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function assignTreatment(allocationPercentages, treatments) {\n  var random = Math.random() * 100;\n  var i = treatments.length;\n  while (random > 0 && i > 0) {\n      i -= 1;\n      random -= +allocationPercentages[i];\n  }\n  return treatments[i];\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::assignTreatmentByDevice": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function assignTreatmentByDevice(experimentId, allocationPercentages, treatments) {\n  var cachedTreatmentId = getLastExperimentTreatment(experimentId);\n  var treatmentIdResponse;\n  if (!cachedTreatmentId) {\n      var assignedTreatmentId = assignTreatment(allocationPercentages, treatments);\n      setLastExperimentTreatment(experimentId, assignedTreatmentId);\n      treatmentIdResponse = assignedTreatmentId;\n  }\n  else {\n      treatmentIdResponse = cachedTreatmentId;\n  }\n  return {\n      treatmentId: treatmentIdResponse\n  };\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::assignTreatmentByVisitor": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function assignTreatmentByVisitor(experimentid, identityId, allocationPercentages, treatments) {\n  var saltedId = experimentid + '.' + identityId;\n  var bucketId = getBucket(saltedId);\n  var treatmentId = pickWithWeightsBucket(allocationPercentages, treatments, bucketId);\n  return {\n      treatmentId: treatmentId,\n      bucketId: bucketId\n  };\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::evaluateDecisionPolicy": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function evaluateDecisionPolicy(decisionPolicy, context) {\n  var decisionNodesMap = {};\n  decisionPolicy.decisionNodes.forEach(function (item) {\n      decisionNodesMap[item['id']] = item;\n  });\n  var items = traverseDecisionTree(decisionNodesMap, context, decisionPolicy.rootDecisionNodeId);\n  return {\n      items: items\n  };\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::evaluateExperiment": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function evaluateExperiment(context, experiment) {\n  var experimentId = experiment.id, identityNamespace = experiment.identityNamespace, _a = experiment.randomizationUnit, randomizationUnit = _a === void 0 ? RandomizationUnit.VISITOR : _a;\n  var identityMap = context.identityMap;\n  var treatments = experiment.treatments.map(function (item) { return item.id; });\n  var allocationPercentages = experiment.treatments.map(function (item) { return item.allocationPercentage; });\n  var treatmentAssignment = null;\n  switch (randomizationUnit) {\n      case RandomizationUnit.VISITOR: {\n          var identityId = identityMap[identityNamespace][0].id;\n          treatmentAssignment = assignTreatmentByVisitor(experimentId, identityId, allocationPercentages, treatments);\n          break;\n      }\n      case RandomizationUnit.DEVICE: {\n          treatmentAssignment = assignTreatmentByDevice(experimentId, allocationPercentages, treatments);\n          break;\n      }\n      default:\n          throw new Error(\"Unknow randomization unit\");\n  }\n  var evaluationResponse = {\n      experimentId: experimentId,\n      hashedBucket: treatmentAssignment.bucketId,\n      treatment: {\n          id: treatmentAssignment.treatmentId\n      }\n  };\n  return evaluationResponse;\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::getBucket": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function getBucket(saltedId) {\n  var hash = murmurhash3_32_gc(saltedId, 0);\n  var hashFixedBucket = Math.abs(hash) % TOTAL_BUCKETS;\n  var bucket = hashFixedBucket / TOTAL_BUCKETS;\n  return bucket;\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::getLastExperimentTreatment": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function getLastExperimentTreatment(experimentId) {\n  var experimentsStr = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (experimentsStr) {\n      var experiments = JSON.parse(experimentsStr);\n      if (experiments[experimentId]) {\n          return experiments[experimentId].treatment;\n      }\n  }\n  return null;\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::murmurhash3_32_gc": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function murmurhash3_32_gc(key, seed) {\n  var remainder = key.length & 3;\n  var bytes = key.length - remainder;\n  var c1 = 0xcc9e2d51;\n  var c2 = 0x1b873593;\n  var h1 = seed;\n  var k1;\n  var h1b;\n  var i = 0;\n  while (i < bytes) {\n      k1 =\n          ((key.charCodeAt(i) & 0xff)) |\n              ((key.charCodeAt(++i) & 0xff) << 8) |\n              ((key.charCodeAt(++i) & 0xff) << 16) |\n              ((key.charCodeAt(++i) & 0xff) << 24);\n      ++i;\n      k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n      h1 ^= k1;\n      h1 = (h1 << 13) | (h1 >>> 19);\n      h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n      h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n  }\n  k1 = 0;\n  switch (remainder) {\n      case 3: k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n      case 2: k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n      case 1:\n          k1 ^= (key.charCodeAt(i) & 0xff);\n          k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n          k1 = (k1 << 15) | (k1 >>> 17);\n          k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n          h1 ^= k1;\n  }\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n  h1 ^= h1 >>> 13;\n  h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n  h1 ^= h1 >>> 16;\n  return h1 >>> 0;\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::pickWithWeightsBucket": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function pickWithWeightsBucket(allocationPercentages, treatments, bucket) {\n  var sum = allocationPercentages.reduce(function (partialSum, a) { return partialSum + a; }, 0);\n  var partialSum = 0.0;\n  for (var i = 0; i < treatments.length; i++) {\n      partialSum += Number(allocationPercentages[i].toFixed(2)) / sum;\n      if (bucket > partialSum) {\n          continue;\n      }\n      return treatments[i];\n  }\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::setLastExperimentTreatment": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function setLastExperimentTreatment(experimentId, treatment) {\n  var experimentsStr = localStorage.getItem(LOCAL_STORAGE_KEY);\n  var experiments = experimentsStr ? JSON.parse(experimentsStr) : {};\n  var now = new Date();\n  var expKeys = Object.keys(experiments);\n  expKeys.forEach(function (key) {\n      var date = new Date(experiments[key].date);\n      if ((now.getTime() - date.getTime()) > (1000 * 86400 * 30)) {\n          delete experiments[key];\n      }\n  });\n  var date = now.toISOString().split('T')[0];\n  experiments[experimentId] = { treatment: treatment, date: date };\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(experiments));\n}",
            "score": -1.0
        },
        "scripts/experimentation/ued.js::traverseDecisionTree": {
            "changes_after_merge": 0,
            "file_path": "scripts/experimentation/ued.js",
            "merged_function": "function traverseDecisionTree(decisionNodesMap, context, currentNodeId) {\n  var _a = decisionNodesMap[currentNodeId], experiment = _a.experiment, type = _a.type;\n  if (type === 'EXPERIMENTATION') {\n      var treatment = evaluateExperiment(context, experiment).treatment;\n      return [treatment];\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::addClassAndContainer": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "addClassAndContainer = (el, className, containerClass) => {\n          a.className = className;\n          el.classList.add(containerClass);\n        }",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::addClasses": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::buildBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function buildBlock(blockName, content) {\n  const blockEl = document.createElement('div');\n  blockEl.classList.add(blockName);\n\n  if (content === null) {\n    return blockEl;\n  }\n\n  const table = Array.isArray(content) ? content : [[content]];\n\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::createDomStructure": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function createDomStructure(structure, parentElement = document.body) {\n  structure.forEach((element) => {\n    const domElement = document.createElement(element.type);\n    if (element.attributes) {\n      Object.keys(element.attributes).forEach((attr) => {\n        domElement.setAttribute(attr, element.attributes[attr]);\n      });\n    }\n\n    if (element.textContent) {\n      domElement.textContent = element.textContent;\n    }\n\n    if (element.children) {\n      createDomStructure(element.children, domElement);\n    }\n\n    if (element.classes) {\n      element.classes.forEach((c) => domElement.classList.add(c));\n    }\n\n    if (element.position === 'prepend') {\n      parentElement.prepend(domElement);\n    } else {\n      parentElement.appendChild(domElement);\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::createMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function createMetadata(name, value) {\n  const meta = document.createElement('meta');\n  meta.setAttribute('name', name);\n  meta.setAttribute('content', value);\n\n  document.head.append(meta);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::createOptimizedPicture": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 400px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::decorateBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.dataset.blockName = shortBlockName;\n    block.dataset.blockStatus = 'initialized';\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateButtons": {
            "changes_after_merge": 17,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          a.className = 'button primary'; // default\n          up.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}",
            "score": -0.2093023255813954
        },
        "scripts/lib-franklin.js::decorateIcons": {
            "changes_after_merge": 2,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function decorateIcons(element) {\n  // Prepare the inline sprite\n  let svgSprite = document.getElementById('franklin-svg-sprite');\n  if (!svgSprite) {\n    const div = document.createElement('div');\n    div.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"franklin-svg-sprite\" style=\"display: none\"></svg>';\n    svgSprite = div.firstElementChild;\n    document.body.append(div.firstElementChild);\n  }\n\n  // Download all new icons\n  const icons = [...element.querySelectorAll('span.icon')];\n  await Promise.all(icons.map(async (span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    if (!ICONS_CACHE[iconName]) {\n      ICONS_CACHE[iconName] = true;\n      try {\n        const response = await fetch(`${window.hlx.codeBasePath}/icons/${iconName}.svg`);\n        if (!response.ok) {\n          ICONS_CACHE[iconName] = false;\n          return;\n        }\n        // Styled icons don't play nice with the sprite approach because of shadow dom isolation\n        const svg = await response.text();\n        if (svg.match(/(<style | class=)/)) {\n          ICONS_CACHE[iconName] = { styled: true, html: svg };\n        } else {\n          ICONS_CACHE[iconName] = {\n            html: svg\n              .replace('<svg', `<symbol id=\"icons-sprite-${iconName}\"`)\n              .replace(/ width=\".*?\"/, '')\n              .replace(/ height=\".*?\"/, '')\n              .replace('</svg>', '</symbol>'),\n          };\n        }\n      } catch (error) {\n        ICONS_CACHE[iconName] = false;\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    }\n  }));\n\n  const symbols = Object.values(ICONS_CACHE).filter((v) => !v.styled).map((v) => v.html).join('\\n');\n  svgSprite.innerHTML += symbols;\n\n  icons.forEach((span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).split('-')[1];\n    const parent = span.firstElementChild?.tagName === 'A' ? span.firstElementChild : span;\n    // Styled icons need to be inlined as-is, while unstyled ones can leverage the sprite\n    if (ICONS_CACHE[iconName] && ICONS_CACHE[iconName].styled) {\n      parent.innerHTML = ICONS_CACHE[iconName].html;\n    } else {\n      parent.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\"><use href=\"#icons-sprite-${iconName}\"/></svg>`;\n    }\n  });\n}",
            "score": -0.9069767441860466
        },
        "scripts/lib-franklin.js::decorateSections": {
            "changes_after_merge": 7,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}",
            "score": -0.6744186046511628
        },
        "scripts/lib-franklin.js::decorateTemplateAndTheme": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateTemplateAndTheme() {\n  const addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::defer": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  }",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::fetchPlaceholders": {
            "changes_after_merge": 2,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      try {\n        fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n          .then((resp) => resp.json())\n          .then((json) => {\n            const placeholders = {};\n            json.data.forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n            window.placeholders[prefix] = placeholders;\n            resolve();\n          });\n      } catch (error) {\n        // error loading placeholders\n        window.placeholders[prefix] = {};\n        reject();\n      }\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return window.placeholders[prefix];\n}",
            "score": -0.9069767441860466
        },
        "scripts/lib-franklin.js::getConfigValue": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function getConfigValue(key, defaultValue) {\n  try {\n    return await getPlaceHolder('config', key);\n  } catch (error) {\n    return defaultValue;\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getPlaceHolder": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function getPlaceHolder(root, key) {\n  const placeholders = await fetchPlaceholders();\n  if (placeholders[root] && placeholders[root][key]) {\n    return placeholders[root][key];\n  }\n  throw new Error('undefined');\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getPlaceholderOrDefault": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function getPlaceholderOrDefault(key, defaultText) {\n  try {\n    const placeholders = await fetchPlaceholders(`/${window.location.pathname.split('/')[1]}`);\n    if (placeholders[key]) {\n      return placeholders[key];\n    }\n  } catch (error) { /* empty */ }\n  return defaultText;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getPreferredLanguage": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getPreferredLanguage() {\n  return navigator.languages.find(\n    (l) => SUPPORTED_LANGUAGES.includes(l),\n  ) || DEFAULT_LANGUAGE;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getProductDB": {
            "changes_after_merge": 4,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function getProductDB() {\n  const resp = await fetch('/products.json?limit=10000');\n  if (!resp.ok) {\n    throw new Error(`${resp.status}: ${resp.statusText}`);\n  }\n  return resp.json();\n}",
            "score": -0.813953488372093
        },
        "scripts/lib-franklin.js::hashCode": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0)",
            "score": -1.0
        },
        "scripts/lib-franklin.js::init": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function init() {\n  document.body.style.display = 'none';\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::isClosest": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "isClosest = (el) => a.closest(el)",
            "score": -1.0
        },
        "scripts/lib-franklin.js::isSingleChild": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "isSingleChild = (el, tagName) => el.childNodes.length === 1 && el.tagName === tagName",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadBlock": {
            "changes_after_merge": 3,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlock(block) {\n  const status = block.dataset.blockStatus;\n  if (status !== 'loading' && status !== 'loaded') {\n    block.dataset.blockStatus = 'loading';\n    const { blockName } = block.dataset;\n    try {\n      const cssLoaded = new Promise((resolve) => {\n        loadCSS(`${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`, resolve);\n      });\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(`../blocks/${blockName}/${blockName}.js`);\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.dataset.blockStatus = 'loaded';\n  }\n}",
            "score": -0.8604651162790697
        },
        "scripts/lib-franklin.js::loadBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadCSS": {
            "changes_after_merge": 3,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadCSS(href, callback) {\n  if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n    const link = document.createElement('link');\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('href', href);\n    if (typeof callback === 'function') {\n      link.onload = (e) => callback(e.type);\n      link.onerror = (e) => callback(e.type);\n    }\n    document.head.appendChild(link);\n  } else if (typeof callback === 'function') {\n    callback('noop');\n  }\n}",
            "score": -0.8604651162790697
        },
        "scripts/lib-franklin.js::loadFooter": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', null);\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadHeadResource": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "loadHeadResource = (href, type, callback) => {\n  if (!document.querySelector(`head > ${type.tagName}[${type.sourceAttribute}=\"${href}\"]`)) {\n    const element = document.createElement(type.tagName);\n    element.setAttribute(type.sourceAttribute, href);\n    type.attributes.forEach((attribute) => {\n      element.setAttribute(attribute[0], attribute[1]);\n    });\n\n    if (typeof callback === 'function') {\n      element.onload = (e) => callback(e.type);\n      element.onerror = (e) => callback(e.type);\n    }\n    document.head.appendChild(element);\n  } else if (typeof callback === 'function') {\n    callback('noop');\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadHeader": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadHeader(header) {\n  const headerBlock = buildBlock('header', null);\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadScript(href, callback) {\n  loadHeadResource(href, HEAD_RESOURCE_TYPES.SCRIPT, callback);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::normalizeHeadings": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::readBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope > div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::sampleRUM": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      // eslint-disable-next-line object-curly-newline\n      window.hlx.rum = { weight, id, random, isSelected, sampleRUM };\n    }\n    const { weight, id } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.location.href, generation: window.hlx.RUM_GENERATION, checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n  } catch (error) {\n    // something went wrong\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::sendPing": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.location.href, generation: window.hlx.RUM_GENERATION, checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      }",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::setLanguage": {
            "changes_after_merge": 5,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function setLanguage() {\n  const preferredLanguage = getPreferredLanguage();\n  const preferredLanguagePath = `/${preferredLanguage}/`;\n\n  if (window.location.pathname === '/' && window.location.origin.match(/\\.hlx\\.(page|live)$/)) {\n    window.location.replace(preferredLanguagePath);\n  }\n\n  const [, lang] = window.location.pathname.split('/');\n  document.documentElement.lang = lang;\n\n  const navMeta = document.createElement('meta');\n  navMeta.setAttribute('name', 'nav');\n  navMeta.setAttribute('content', `${preferredLanguagePath}nav`);\n\n  const footerMeta = document.createElement('meta');\n  footerMeta.setAttribute('name', 'footer');\n  footerMeta.setAttribute('content', `${preferredLanguagePath}footer`);\n\n  document.head.append(navMeta);\n  document.head.append(footerMeta);\n}",
            "score": -0.7674418604651163
        },
        "scripts/lib-franklin.js::setup": {
            "changes_after_merge": 2,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}",
            "score": -0.9069767441860466
        },
        "scripts/lib-franklin.js::toCamelCase": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::toClassName": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-').replace(/-+/g, '-').replace(/^-|-$/g, '')\n    : '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::translate": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function translate(key, defaultText) {\n  const i18n = `i18n-${window.location.pathname.split('/')[1]}`;\n  const i18nDefault = 'i18n-en';\n  try {\n    return await getPlaceHolder(i18n, key, defaultText);\n  } catch (error) { /* empty */ }\n  if (i18n !== i18nDefault) {\n    try {\n      return await getPlaceHolder(i18nDefault, key);\n    } catch (error) { /* empty */ }\n  }\n  return defaultText;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::updateSectionsStatus": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.dataset.sectionStatus;\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.dataset.sectionStatus = 'loading';\n        break;\n      } else {\n        section.dataset.sectionStatus = 'loaded';\n        section.style.display = null;\n      }\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::waitForLCP": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.dataset.blockName));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.body.style.display = null;\n  const lcpCandidate = document.querySelector('main img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-history-section.js::decorateHistorySection": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-history-section.js",
            "merged_function": "async function decorateHistorySection(main) {\n  try {\n    const section = main.querySelector('.section.our-history');\n    const parent = section.querySelector('.default-content-wrapper');\n    const firstH3 = parent.querySelector('h3');\n\n    // wrap all H3 and p in a timeline element\n    const timelineBlock = buildBlock('timeline', null);\n    parent.insertBefore(timelineBlock, firstH3);\n    timelineBlock.append(firstH3, ...getNextSiblings(firstH3));\n\n    // create small \"year blocks\" for every year\n    const yearBlocks = [];\n    [...timelineBlock.children].forEach((el) => {\n      if (el.tagName === 'H3') {\n        const yearBlock = buildBlock('year', null);\n        yearBlocks.push([yearBlock, [el, ...getNextSiblings(el, 'H3')]]);\n      }\n    });\n\n    yearBlocks.forEach((block) => {\n      const [yearBlock, descriptionBlockChildren] = block;\n      timelineBlock.append(yearBlock);\n\n      // create small \"description block\" for every year\n      const descriptionBlock = buildBlock('description', null);\n      yearBlock.append(descriptionBlock);\n      descriptionBlock.append(...descriptionBlockChildren);\n\n      // append calendar icon (as sprite)\n      const icon = document.createElement('span');\n      icon.classList.add('icon', 'icon-calendar');\n      yearBlock.append(icon);\n    });\n\n    await decorateIcons(section);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Decorating History page failed', error);\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-history-section.js::getNextSiblings": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-history-section.js",
            "merged_function": "function* getNextSiblings(element, selector) {\n  let nextElement = element.nextElementSibling;\n  while (nextElement) {\n    if (selector && nextElement.matches(selector)) {\n      return;\n    }\n    yield nextElement;\n    nextElement = nextElement.nextElementSibling;\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-history-section.js::observeHistorySection": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-history-section.js",
            "merged_function": "async function observeHistorySection(main) {\n  try {\n    const section = main.querySelector('.section.our-history');\n    const highlightWhenInViewport = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // leave this here for debugging: console.log(entry.target.querySelector('h3').innerText);\n        const { isIntersecting } = entry;\n        if (isIntersecting) {\n          entry.target.classList.add('highlight');\n        } else if (entry.boundingClientRect.top > 0) {\n          entry.target.classList.remove('highlight');\n        }\n      });\n    }, {\n      rootMargin: '50px',\n      threshold: 1,\n    });\n\n    const yearBlocks = section.querySelectorAll('.timeline .year');\n    yearBlocks.forEach((el) => highlightWhenInViewport.observe(el));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Observer of History page failed', error);\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::addFavIcon": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function addFavIcon(href) {\n  const link = document.createElement('link');\n  link.rel = 'icon';\n  link.type = 'image/svg+xml';\n  link.href = href;\n  const existingLink = document.querySelector('head link[rel=\"icon\"]');\n  if (existingLink) {\n    existingLink.parentElement.replaceChild(link, existingLink);\n  } else {\n    document.getElementsByTagName('head')[0].appendChild(link);\n  }\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::appendArcAndBuildBlock": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function appendArcAndBuildBlock(section, elems) {\n    if (button) {\n      elems.push(button);\n    }\n\n    const arc = document.createElement('div');\n    arc.classList.add('hero-arc');\n    arc.innerHTML = ARC_BOTTOM_SVG;\n\n    elems.push(arc);\n\n    section.append(buildBlock('hero', { elems }));\n    if (metaData) {\n      section.append(metaData);\n    }\n    main.prepend(section);\n  }",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::buildAutoBlocks": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildAutoBlocks(main) {\n  try {\n    buildHeroBlock(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::buildHeroBlock": {
            "changes_after_merge": 19,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildHeroBlock(main) {\n  const h1 = main.querySelector('h1');\n  const picture = main.querySelector('picture');\n  // eslint-disable-next-line no-bitwise\n  if (h1 && picture && (h1.compareDocumentPosition(picture) & Node.DOCUMENT_POSITION_PRECEDING)) {\n    const section = document.createElement('div');\n    section.append(buildBlock('hero', { elems: [picture, h1] }));\n    main.prepend(section);\n  }\n}",
            "score": -0.11627906976744184
        },
        "scripts/scripts.js::decorateMain": {
            "changes_after_merge": 8,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  await decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n}",
            "score": -0.627906976744186
        },
        "scripts/scripts.js::decorateStyledSections": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateStyledSections(main) {\n  Array.from(main.querySelectorAll('.section[data-background-image]'))\n    .forEach((section) => {\n      const bgImage = section.dataset.backgroundImage;\n      if (bgImage) {\n        section.style.backgroundImage = `url(${bgImage})`;\n        section.style.backgroundSize = 'cover';\n      }\n    });\n\n  Array.from(main.querySelectorAll('.section.arc-bottom, .section.arc-top'))\n    .forEach((section) => {\n      const arc = document.createElement('div');\n      arc.classList.add('arc');\n      if (section.classList.contains('arc-bottom')) {\n        arc.innerHTML = ARC_BOTTOM_SVG;\n        section.append(arc);\n      } else if (section.classList.contains('arc-top')) {\n        arc.innerHTML = ARC_TOP_SVG;\n        section.prepend(arc);\n      }\n    });\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::loadDelayed": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::loadEager": {
            "changes_after_merge": 10,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadEager(doc) {\n  setLanguage();\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    await decorateMain(main);\n    await waitForLCP(LCP_BLOCKS);\n  }\n}",
            "score": -0.5348837209302326
        },
        "scripts/scripts.js::loadLazy": {
            "changes_after_merge": 30,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadBlocks(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  await loadHeader(doc.querySelector('header'));\n  await loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`, null);\n  addFavIcon(`${window.hlx.codeBasePath}/styles/favicon.svg`);\n  sampleRUM('lazy');\n  sampleRUM.observe(main.querySelectorAll('div[data-block-name]'));\n  sampleRUM.observe(main.querySelectorAll('picture > img'));\n}",
            "score": 0.39534883720930236
        },
        "scripts/scripts.js::loadPage": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::setHeroType": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "setHeroType = (heroType) => {\n    const heroBlock = main.querySelector('.hero');\n    heroBlock.classList.add(`hero-${heroType}`);\n  }",
            "score": -1.0
        },
        "scripts/third-party.js::integrateMartech": {
            "changes_after_merge": 0,
            "file_path": "scripts/third-party.js",
            "merged_function": "function integrateMartech(parent, id) {\n  // Google Tag Manager\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.src = `https://www.googletagmanager.com/gtm.js?id=${id}`;\n  script.async = true;\n  parent.appendChild(script);\n}",
            "score": -1.0
        },
        "test/blocks/footer/footer.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/footer/footer.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/header/header.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/header/header.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "tools/preview/experimentation.js::capitalize": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/experimentation.js",
            "merged_function": "function capitalize(str) {\n  return str.replace(/\\w+/g, (word) => word.charAt(0).toUpperCase() + word.substring(1));\n}",
            "score": -1.0
        },
        "tools/preview/experimentation.js::createVariant": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/experimentation.js",
            "merged_function": "function createVariant(experiment, variantName, config) {\n  const selectedVariant = config?.selectedVariant || config?.variantNames[0];\n  const variant = config.variants[variantName];\n  const split = +variant.percentageSplit\n    || 1 - config.variantNames.reduce((c, vn) => c + +config.variants[vn].percentageSplit, 0);\n  const percentage = percentformat.format(split);\n\n  const experimentURL = new URL(window.location.href);\n  // this will retain other query params such as ?rum=on\n  experimentURL.searchParams.set('experiment', `${experiment}/${variantName}`);\n\n  return {\n    label: `<code>${variantName}</code>`,\n    description: `\n      <p>${variant.label}</p>\n      <p class=\"percentage\">(${percentage} split)</p>\n      <p class=\"performance\"></p>`,\n    actions: [{ label: 'Simulate', href: experimentURL.href }],\n    isSelected: selectedVariant === variantName,\n  };\n}",
            "score": -1.0
        },
        "tools/preview/experimentation.js::decorateExperimentPill": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/experimentation.js",
            "merged_function": "async function decorateExperimentPill(overlay) {\n  const config = window?.hlx?.experiment;\n  const experiment = toClassName(getMetadata('experiment'));\n  // eslint-disable-next-line no-console\n  console.log('preview experiment', experiment);\n  if (!experiment || !config) {\n    return;\n  }\n\n  const audiences = Object.entries(config.audiences).map(([key, value]) => `${capitalize(key)}: ${capitalize(value)}`).join(', ');\n  const pill = createPopupButton(\n    `Experiment: ${config.id}`,\n    {\n      label: config.label,\n      description: `\n        <div class=\"hlx-details\">\n          ${config.status}${audiences.length ? `, ${audiences}` : ''}${config.variants[config.variantNames[0]].blocks.length ? ', Blocks: ' : ''}${config.variants[config.variantNames[0]].blocks.join(',')}\n        </div>\n        <div class=\"hlx-info\">How is it going?</div>`,\n      actions: config.manifest ? [{ label: 'Manifest', href: config.manifest }] : [],\n    },\n    config.variantNames.map((vname) => createVariant(experiment, vname, config)),\n  );\n  pill.classList.add(`is-${toClassName(config.status)}`);\n  overlay.append(pill);\n\n  const performanceMetrics = await fetchRumData(experiment);\n  if (performanceMetrics === null) {\n    return;\n  }\n  populatePerformanceMetrics(pill, config, performanceMetrics);\n}",
            "score": -1.0
        },
        "tools/preview/experimentation.js::decorateExperimentationOverlay": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/experimentation.js",
            "merged_function": "async function decorateExperimentationOverlay() {\n  try {\n    const overlay = getOverlay();\n    await decorateExperimentPill(overlay);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}",
            "score": -1.0
        },
        "tools/preview/experimentation.js::fetchRumData": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/experimentation.js",
            "merged_function": "async function fetchRumData(experiment) {\n  // the query is a bit slow, so I'm only fetching the results when the popup is opened\n  const resultsURL = new URL('https://helix-pages.anywhere.run/helix-services/run-query@v2/rum-experiments');\n  resultsURL.searchParams.set('experiment', experiment);\n  if (window.hlx.sidekickConfig && window.hlx.sidekickConfig.host) {\n    // restrict results to the production host, this also reduces query cost\n    resultsURL.searchParams.set('domain', window.hlx.sidekickConfig.host);\n  }\n\n  const response = await fetch(resultsURL.href);\n  if (!response.ok) {\n    return null;\n  }\n\n  const { results } = await response.json();\n  if (!results.length) {\n    return null;\n  }\n\n  const numberify = (obj) => Object.entries(obj).reduce((o, [k, v]) => {\n    o[k] = Number.parseFloat(v);\n    o[k] = Number.isNaN(o[k]) ? v : o[k];\n    return o;\n  }, {});\n\n  const variantsAsNums = results.map(numberify);\n  const totals = Object.entries(\n    variantsAsNums.reduce((o, v) => {\n      Object.entries(v).forEach(([k, val]) => {\n        if (typeof val === 'number' && Number.isInteger(val) && k.startsWith('variant_')) {\n          o[k] = (o[k] || 0) + val;\n        } else if (typeof val === 'number' && Number.isInteger(val) && k.startsWith('control_')) {\n          o[k] = val;\n        }\n      });\n      return o;\n    }, {}),\n  ).reduce((o, [k, v]) => {\n    o[k] = v;\n    const vkey = k.replace(/^(variant|control)_/, 'variant_');\n    const ckey = k.replace(/^(variant|control)_/, 'control_');\n    const tkey = k.replace(/^(variant|control)_/, 'total_');\n    if (o[ckey] && o[vkey]) {\n      o[tkey] = o[ckey] + o[vkey];\n    }\n    return o;\n  }, {});\n  const richVariants = variantsAsNums\n    .map((v) => ({\n      ...v,\n      allocation_rate: v.variant_experimentations / totals.total_experimentations,\n    }))\n    .reduce((o, v) => {\n      const variantName = v.variant;\n      o[variantName] = v;\n      return o;\n    }, {\n      control: {\n        variant: 'control',\n        ...Object.entries(variantsAsNums[0]).reduce((k, v) => {\n          const [key, val] = v;\n          if (key.startsWith('control_')) {\n            k[key.replace(/^control_/, 'variant_')] = val;\n          }\n          return k;\n        }, {}),\n      },\n    });\n  const winner = variantsAsNums.reduce((w, v) => {\n    if (v.variant_conversion_rate > w.conversion_rate && v.p_value < 0.05) {\n      w.conversion_rate = v.variant_conversion_rate;\n      w.p_value = v.p_value;\n      w.variant = v.variant;\n    }\n    return w;\n  }, { variant: 'control', p_value: 1, conversion_rate: 0 });\n\n  return {\n    richVariants,\n    totals,\n    variantsAsNums,\n    winner,\n  };\n}",
            "score": -1.0
        },
        "tools/preview/experimentation.js::numberify": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/experimentation.js",
            "merged_function": "numberify = (obj) => Object.entries(obj).reduce((o, [k, v]) => {\n    o[k] = Number.parseFloat(v);\n    o[k] = Number.isNaN(o[k]) ? v : o[k];\n    return o;\n  }, {})",
            "score": -1.0
        },
        "tools/preview/experimentation.js::populatePerformanceMetrics": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/experimentation.js",
            "merged_function": "function populatePerformanceMetrics(div, config, {\n  richVariants, totals, variantsAsNums, winner,\n}) {\n  // add summary\n  const summary = div.querySelector('.hlx-info');\n  summary.innerHTML = `Showing results for ${bigcountformat.format(totals.total_experimentations)} visits and ${bigcountformat.format(totals.total_conversions)} conversions: `;\n  if (totals.total_conversion_events < 500 && winner.p_value > 0.05) {\n    summary.innerHTML += ` not yet enough data to determine a winner. Keep going until you get ${bigcountformat.format((500 * totals.total_experimentations) / totals.total_conversion_events)} visits.`;\n  } else if (winner.p_value > 0.05) {\n    summary.innerHTML += ' no significant difference between variants. In doubt, stick with <code>control</code>.';\n  } else if (winner.variant === 'control') {\n    summary.innerHTML += ' Stick with <code>control</code>. No variant is better than the control.';\n  } else {\n    summary.innerHTML += ` <code>${winner.variant}</code> is the winner.`;\n  }\n\n  // add traffic allocation to control and each variant\n  config.variantNames.forEach((variantName, index) => {\n    const variantDiv = document.querySelectorAll('.hlx-popup-item')[index];\n    const percentage = variantDiv.querySelector('.percentage');\n    percentage.innerHTML = `\n      <span title=\"${countformat.format(richVariants[variantName].variant_conversion_events)} real events\">${bigcountformat.format(richVariants[variantName].variant_conversions)} clicks</span> /\n      <span title=\"${countformat.format(richVariants[variantName].variant_experimentation_events)} real events\">${bigcountformat.format(richVariants[variantName].variant_experimentations)} visits</span>\n      <span>(${percentformat.format(richVariants[variantName].variant_experimentations / totals.total_experimentations)} split)</span>\n    `;\n  });\n\n  // add click rate and significance to each variant\n  variantsAsNums.forEach((result) => {\n    const variant = document.querySelectorAll('.hlx-popup-item')[config.variantNames.indexOf(result.variant)];\n    if (variant) {\n      const performance = variant.querySelector('.performance');\n      performance.innerHTML = `\n        <span>click rate: ${percentformat.format(result.variant_conversion_rate)}</span>\n        <span>vs. ${percentformat.format(result.control_conversion_rate)}</span>\n        <span title=\"p value: ${result.p_value}\" class=\"significance ${significanceformat.format(result.p_value).replace(/ /, '-')}\">${significanceformat.format(result.p_value)}</span>\n      `;\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/preview/preview.js::createButton": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/preview.js",
            "merged_function": "function createButton(label) {\n  const button = document.createElement('button');\n  button.className = 'hlx-badge';\n  const text = document.createElement('span');\n  text.innerHTML = label;\n  button.append(text);\n  return button;\n}",
            "score": -1.0
        },
        "tools/preview/preview.js::createPopupButton": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/preview.js",
            "merged_function": "function createPopupButton(label, header, items) {\n  const button = createButton(label);\n  const popup = createPopupDialog(header, items);\n  button.innerHTML += '<span class=\"hlx-open\"></span>';\n  button.append(popup);\n  button.addEventListener('click', () => {\n    popup.classList.toggle('hlx-hidden');\n  });\n  return button;\n}",
            "score": -1.0
        },
        "tools/preview/preview.js::createPopupDialog": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/preview.js",
            "merged_function": "function createPopupDialog(header, items = []) {\n  const actions = typeof header === 'object'\n    ? header.actions.map((action) => `<div class=\"hlx-button\"><a href=\"${action.href}\">${action.label}</a></div>`)\n    : [];\n  const popup = document.createElement('div');\n  popup.className = 'hlx-popup hlx-hidden';\n  popup.innerHTML = `\n    <div class=\"hlx-popup-header\">\n      <h5 class=\"hlx-popup-header-label\">${typeof header === 'object' ? header.label : header}</h5>\n      ${header.description ? `<div class=\"hlx-popup-header-description\">${header.description}</div>` : ''}\n      ${actions.length ? `<div class=\"hlx-popup-header-actions\">${actions}</div>` : ''}\n    </div>\n    <div class=\"hlx-popup-items\"></div>`;\n  const list = popup.querySelector('.hlx-popup-items');\n  items.forEach((item) => {\n    list.append(createPopupItem(item));\n  });\n  return popup;\n}",
            "score": -1.0
        },
        "tools/preview/preview.js::createPopupItem": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/preview.js",
            "merged_function": "function createPopupItem(item) {\n  const actions = typeof item === 'object'\n    ? item.actions.map((action) => `<div class=\"hlx-button\"><a href=\"${action.href}\">${action.label}</a></div>`)\n    : [];\n  const div = document.createElement('div');\n  div.className = `hlx-popup-item${item.isSelected ? ' is-selected' : ''}`;\n  div.innerHTML = `\n    <h5 class=\"hlx-popup-item-label\">${typeof item === 'object' ? item.label : item}</h5>\n    ${item.description ? `<div class=\"hlx-popup-item-description\">${item.description}</div>` : ''}\n    ${actions.length ? `<div class=\"hlx-popup-item-actions\">${actions}</div>` : ''}`;\n  return div;\n}",
            "score": -1.0
        },
        "tools/preview/preview.js::createPreviewOverlay": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/preview.js",
            "merged_function": "function createPreviewOverlay(cls) {\n  const overlay = document.createElement('div');\n  overlay.className = cls;\n  return overlay;\n}",
            "score": -1.0
        },
        "tools/preview/preview.js::createToggleButton": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/preview.js",
            "merged_function": "function createToggleButton(label) {\n  const button = document.createElement('div');\n  button.className = 'hlx-badge';\n  button.role = 'button';\n  button.setAttribute('aria-pressed', false);\n  button.setAttribute('tabindex', 0);\n  const text = document.createElement('span');\n  text.innerHTML = label;\n  button.append(text);\n  button.addEventListener('click', () => {\n    button.setAttribute('aria-pressed', button.getAttribute('aria-pressed') === 'false');\n  });\n  return button;\n}",
            "score": -1.0
        },
        "tools/preview/preview.js::decoratePreviewOverlay": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/preview.js",
            "merged_function": "function decoratePreviewOverlay() {\n  loadCSS(`${window.hlx.codeBasePath}/tools/preview/preview.css`);\n\n  getOverlay();\n}",
            "score": -1.0
        },
        "tools/preview/preview.js::getOverlay": {
            "changes_after_merge": 0,
            "file_path": "tools/preview/preview.js",
            "merged_function": "function getOverlay() {\n  let overlay = document.querySelector('.hlx-preview-overlay');\n  if (!overlay) {\n    overlay = createPreviewOverlay('hlx-preview-overlay');\n    document.body.append(overlay);\n  }\n  return overlay;\n}",
            "score": -1.0
        }
    },
    "moleculardevices": {
        "blocks/accordion/accordion.js::applyColumnLayout": {
            "changes_after_merge": 0,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function applyColumnLayout(contentNodes) {\n  let applyLayout = false;\n  contentNodes.forEach((elem) => {\n    if (applyLayout) return;\n    if (elem.querySelector('picture')) {\n      applyLayout = true;\n    }\n  });\n  return applyLayout;\n}",
            "score": -1.0
        },
        "blocks/accordion/accordion.js::buildNav": {
            "changes_after_merge": 0,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function buildNav(block) {\n  const ul = document.createElement('ul');\n  const titles = block.querySelectorAll('div:not(:first-child) > div:first-child');\n\n  [...titles].forEach((title, i) => {\n    const li = document.createElement('li');\n    const a = document.createElement('a');\n    a.textContent = title.textContent;\n    a.setAttribute('aria-label', title.textContent);\n    a.addEventListener('click', (e) => {\n      toggleNav(block, e.target, i);\n    });\n    li.appendChild(a);\n    ul.appendChild(li);\n  });\n\n  ul.querySelector('li').classList.add(classActive);\n  return (ul);\n}",
            "score": -1.0
        },
        "blocks/accordion/accordion.js::decorate": {
            "changes_after_merge": 5,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function decorate(block) {\n  const ul = buildNav(block);\n  ul.classList.add('nav-tabs');\n\n  const tabList = block.querySelector('div');\n  tabList.classList.add('accordion-tab-list');\n  tabList.querySelector('div').appendChild(ul);\n\n  const tabMainContent = document.createElement('div');\n  tabMainContent.classList.add('accordion-tab-main-content');\n\n  [...block.children].forEach((row, i) => {\n    // first row is for navigation, start from second row\n    if (i) {\n      const tabPane = document.createElement('div');\n      tabPane.classList.add('accordion-tab-pane');\n\n      const picture = row.querySelector('picture');\n      tabPane.appendChild(picture);\n\n      row.classList.add('accordion-tab-pane-inside');\n      tabPane.appendChild(row);\n\n      const div = row.querySelector('div');\n      const button = document.createElement('button');\n      button.classList.add('accordion-tab-btn');\n      button.innerHTML = `<i class='fa ${iconPlus}'></i>${div.textContent}`;\n      button.addEventListener('click', (e) => {\n        toggleNav(block, e.target, i - 1);\n      });\n      div.remove();\n      row.prepend(button);\n\n      row.querySelector('div').classList.add('accordion-tab-content');\n      tabMainContent.appendChild(tabPane);\n    }\n  });\n\n  // set first tab active\n  const firstTabPane = tabMainContent.querySelector('.accordion-tab-pane');\n  firstTabPane.classList.add(classActive);\n  const firstI = firstTabPane.querySelector('i');\n  firstI.classList.remove(iconPlus);\n  firstI.classList.add(iconMinus);\n\n  block.appendChild(tabMainContent);\n}",
            "score": -0.7674418604651163
        },
        "blocks/accordion/accordion.js::getEmptyHeight": {
            "changes_after_merge": 0,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function getEmptyHeight(tabPane) {\n  const tabPaneInside = tabPane.querySelector('.accordion-tab-pane-inside');\n  const tabPaneInsideCS = window.getComputedStyle(tabPaneInside);\n  const tabBtn = tabPane.querySelector('.accordion-tab-btn');\n  const emptyHeight = (parseInt(tabPaneInsideCS.paddingTop, 10) * 2) + tabBtn.offsetHeight;\n  return emptyHeight;\n}",
            "score": -1.0
        },
        "blocks/accordion/accordion.js::isFaq": {
            "changes_after_merge": 0,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function isFaq(block) {\n  return block.classList.contains('faq');\n}",
            "score": -1.0
        },
        "blocks/accordion/accordion.js::renderColumnLayout": {
            "changes_after_merge": 1,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function renderColumnLayout(row) {\n  const picture = row[0];\n  const text = row[1];\n  const link = row[2];\n  if (link) link.querySelector('a').append(span({ class: 'icon icon-fa-arrow-circle-right' }));\n\n  const leftCol = div({ class: 'accordion-content-col-left' }, picture);\n  const rightCol = div({ class: 'accordion-content-col-right' }, text, link);\n  const rowContent = div({ class: 'accordion-content-row' }, leftCol, rightCol);\n  return rowContent;\n}",
            "score": -0.9534883720930233
        },
        "blocks/accordion/accordion.js::renderContent": {
            "changes_after_merge": 4,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "async function renderContent(container, content) {\n  // prepare content\n  const rows = [];\n  content.forEach((elem) => {\n    if (elem.querySelector('picture')) {\n      rows.push([]);\n    }\n    if (rows.length - 1 < 0) rows.push([]);\n    rows[rows.length - 1].push(elem);\n  });\n\n  // render content\n  const contentDiv = div({ class: 'accordion-content' });\n  rows.forEach((row) => {\n    const hasColumnLayout = applyColumnLayout(row);\n    if (hasColumnLayout) {\n      const rowContent = renderColumnLayout(row);\n      contentDiv.appendChild(rowContent);\n    } else {\n      row.forEach((elem) => {\n        contentDiv.append(elem);\n      });\n    }\n  });\n  container.append(contentDiv);\n}",
            "score": -0.813953488372093
        },
        "blocks/accordion/accordion.js::setHeights": {
            "changes_after_merge": 0,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function setHeights(block) {\n  const tabPanes = block.querySelectorAll('.accordion-tab-pane');\n  [...tabPanes].forEach((tabPane) => {\n    if (window.matchMedia(verticalMediaQuery).matches) {\n      const emptyHeight = getEmptyHeight(tabPane);\n      if (tabPane.classList.contains('active')) {\n        const height = `${(tabPane.querySelector('.accordion-tab-content').offsetHeight + emptyHeight)}px`;\n        tabPane.style.height = height;\n      } else {\n        tabPane.style.height = `${emptyHeight}px`;\n      }\n    } else {\n      tabPane.style.removeProperty('height');\n    }\n  });\n}",
            "score": -1.0
        },
        "blocks/accordion/accordion.js::toggleItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function toggleItem(item, on) {\n  if (item) {\n    const icon = item.querySelector('i');\n    if (on) {\n      item.classList.add(classActive);\n      if (icon) icon.classList.replace(iconPlus, iconMinus);\n    } else {\n      item.classList.remove(classActive);\n      if (icon) icon.classList.replace(iconMinus, iconPlus);\n    }\n  }\n  setHeights(item.closest('.accordion.block'));\n}",
            "score": -1.0
        },
        "blocks/accordion/accordion.js::toggleNav": {
            "changes_after_merge": 0,
            "file_path": "blocks/accordion/accordion.js",
            "merged_function": "function toggleNav(block, target, i) {\n  if (!(target.closest('.accordion-tab-list') && target.closest('.active'))) {\n    const actives = block.querySelectorAll(`.${classActive}`);\n    if (actives.length) {\n      [...actives].forEach((active) => {\n        const newActive = active.parentElement.children[i];\n        toggleItem(active, false);\n        if (active !== newActive) {\n          toggleItem(newActive, true);\n        }\n      });\n    } else {\n      toggleItem(target.closest('.accordion-tab-pane'), true);\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/additional-resources/additional-resources.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/additional-resources/additional-resources.js",
            "merged_function": "async function decorate(block) {\n  const fragmentPaths = [...block.querySelectorAll('a')].map((a) => a.href);\n  block.innerHTML = '';\n\n  if (fragmentPaths.length === 0) {\n    return '';\n  }\n\n  const fragments = await Promise.all(\n    fragmentPaths.map(async (path) => {\n      const fragmentHtml = await fetchFragment(path);\n      if (fragmentHtml) {\n        const fragmentElement = div();\n        fragmentElement.innerHTML = fragmentHtml;\n        const img = fragmentElement.querySelector('picture');\n        const imgAnchor = img.nextElementSibling;\n        if (imgAnchor) {\n          imgAnchor.innerHTML = '';\n          imgAnchor.appendChild(img);\n        }\n        return { html: fragmentElement };\n      }\n      return null;\n    }),\n  );\n\n  const apps = div({ class: 'additional-resources-container' });\n\n  fragments.forEach((fragment) => {\n    renderFragment(fragment.html, apps, 'additional-resource');\n  });\n\n  block.append(apps);\n\n  return block;\n}",
            "score": -1.0
        },
        "blocks/additional-resources/additional-resources.js::renderFragment": {
            "changes_after_merge": 0,
            "file_path": "blocks/additional-resources/additional-resources.js",
            "merged_function": "async function renderFragment(fragment, block, className) {\n  fragment.classList.add(className);\n  const actionLink = fragment.querySelector('div > p:last-child:last-of-type a:only-child');\n  if (actionLink) {\n    actionLink.classList.add('button', 'primary');\n  }\n  block.append(fragment);\n}",
            "score": -1.0
        },
        "blocks/applications-carousel/applications-carousel.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/applications-carousel/applications-carousel.js",
            "merged_function": "async function decorate(block) {\n  const fragmentPaths = [...block.querySelectorAll('a')].map((elem) => elem.getAttribute('href'));\n  const fragments = await Promise.all(fragmentPaths.map(async (path) => {\n    const fragmentHtml = await fetchFragment(path);\n    if (fragmentHtml) {\n      const fragmentElement = document.createElement('div');\n      fragmentElement.innerHTML = fragmentHtml;\n      const h3Block = fragmentElement.querySelector('h3');\n      const pictureBlock = fragmentElement.querySelector('picture');\n      const description = getDescription(fragmentElement);\n      return {\n        id: h3Block.id, title: h3Block.textContent, pictureBlock, description,\n      };\n    }\n    return null;\n  }));\n  const sortedFragments = fragments.filter((item) => !!item).sort((x, y) => {\n    if (x.title < y.title) {\n      return -1;\n    }\n    if (x.title > y.title) {\n      return 1;\n    }\n    return 0;\n  });\n\n  await createCarousel(\n    block,\n    sortedFragments,\n    {\n      navButtons: true,\n      dotButtons: false,\n      infiniteScroll: true,\n      autoScroll: false,\n      visibleItems: [\n        {\n          items: 1,\n          condition: () => window.screen.width < 768,\n        },\n        {\n          items: 2,\n          condition: () => window.screen.width < 1200,\n        }, {\n          items: 3,\n        },\n      ],\n      renderItem,\n    },\n  );\n}",
            "score": -0.8604651162790697
        },
        "blocks/applications-carousel/applications-carousel.js::getDescription": {
            "changes_after_merge": 0,
            "file_path": "blocks/applications-carousel/applications-carousel.js",
            "merged_function": "function getDescription(element) {\n  const pElements = element.querySelectorAll('div p');\n  let firstPWithText = '';\n  for (let index = 0; index < pElements.length; index += 1) {\n    const textContent = pElements[index].textContent.trim();\n    if (textContent !== '') {\n      firstPWithText = textContent;\n      break;\n    }\n  }\n  return firstPWithText;\n}",
            "score": -1.0
        },
        "blocks/applications-carousel/applications-carousel.js::onReadMoreClick": {
            "changes_after_merge": 1,
            "file_path": "blocks/applications-carousel/applications-carousel.js",
            "merged_function": "function onReadMoreClick(e) {\n  e.preventDefault();\n  const appsLink = document.querySelector('.page-tabs li > a[href=\"#applications\"]');\n  appsLink.click();\n  window.scroll(0, 0);\n}",
            "score": -0.9534883720930233
        },
        "blocks/applications-carousel/applications-carousel.js::renderItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/applications-carousel/applications-carousel.js",
            "merged_function": "function renderItem(item) {\n  const buttonText = 'Read More';\n\n  return (\n    div({ class: 'app-carousel-item' },\n      div({ class: 'app-carousel-thumb' }, item.pictureBlock),\n      div({ class: 'app-carousel-details' },\n        h3(item.title),\n        p({ class: 'app-description' }, summariseDescription(item.description, 100)),\n      ),\n      div({ class: 'app-carousel-actions' },\n        p({ class: 'button-container' },\n          a({\n            href: '#applications',\n            'aria-label': buttonText,\n            onclick: onReadMoreClick,\n            target: '_blank',\n            rel: 'noopener noreferrer',\n          },\n          buttonText,\n          i({ class: 'fa fa-chevron-circle-right', 'aria-hidden': true }),\n          ),\n        ),\n      ),\n    )\n  );\n}",
            "score": -1.0
        },
        "blocks/blog-filter/blog-filter.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/blog-filter/blog-filter.js",
            "merged_function": "function decorate(block) {\n  block.prepend(\n    div({ class: 'active-filter' },\n      button({ class: 'show-hide-filters', onclick: () => { showHideAllFilters(block); } },\n        span({ class: 'filter-title' }),\n        span({ class: 'icon icon-chevron-right-outline' }),\n      ),\n    ),\n  );\n  decorateIcons(block);\n\n  // on mobile we always start with the list of filters hidden\n  block.querySelector('ul').classList.add('hide');\n\n  const filters = [...block.querySelectorAll('a')];\n  filters.forEach((link) => {\n    link.addEventListener('click', (e) => {\n      filters.forEach((r) => r.classList.remove('active'));\n      e.currentTarget.classList.add('active');\n    });\n  });\n\n  if (block.closest('main').querySelector('.blog-list')) {\n    // we are on the page where cards are displayed and filtering is enabled by hash\n    window.addEventListener('hashchange', () => { filterChangedViaHash(block, filters); });\n    // set initial active filter\n    setActiveFilter(block);\n  } else {\n    // we are on different page\n    const currentPageLink = block.querySelector(`a[href=\"${window.location.pathname}\"`);\n    if (currentPageLink) {\n      currentPageLink.classList.add('active');\n      block.querySelector('.active-filter .filter-title').innerText = currentPageLink.innerText;\n    }\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/blog-filter/blog-filter.js::filterChangedViaHash": {
            "changes_after_merge": 0,
            "file_path": "blocks/blog-filter/blog-filter.js",
            "merged_function": "function filterChangedViaHash(block, filters) {\n  filters.forEach((r) => r.classList.remove('active'));\n  setActiveFilter(block);\n}",
            "score": -1.0
        },
        "blocks/blog-filter/blog-filter.js::scrollBlockIntoView": {
            "changes_after_merge": 0,
            "file_path": "blocks/blog-filter/blog-filter.js",
            "merged_function": "function scrollBlockIntoView(block) {\n  const section = block.closest('.section');\n\n  const observer = new MutationObserver((mutationList) => {\n    mutationList.forEach((mutation) => {\n      if (mutation.type === 'attributes'\n        && mutation.attributeName === 'data-section-status'\n        && section.attributes.getNamedItem('data-section-status').value === 'loaded') {\n        observer.disconnect();\n        setTimeout(() => {\n          window.scrollTo({\n            top: block.querySelector('a.active').getBoundingClientRect().top - 70,\n            left: 0,\n            behavior: 'smooth',\n          });\n        },\n        1000,\n        );\n      }\n    });\n  });\n\n  observer.observe(section, { attributes: true });\n}",
            "score": -1.0
        },
        "blocks/blog-filter/blog-filter.js::setActiveFilter": {
            "changes_after_merge": 0,
            "file_path": "blocks/blog-filter/blog-filter.js",
            "merged_function": "function setActiveFilter(block) {\n  let activeHash = window.location.hash;\n  activeHash = activeHash ? activeHash.substring(1) : viewAllCategory;\n  const filterLink = block.querySelector(`a[href*=\"#${activeHash}\"`);\n  if (!filterLink) {\n    const viewAllLink = block.querySelector(`a[href*=\"#${viewAllCategory}\"`);\n    viewAllLink.classList.add('active');\n    block.querySelector('.active-filter .filter-title').innerText = viewAllLink.innerText;\n  } else {\n    block.querySelector('.active-filter .filter-title').innerText = filterLink.innerText;\n    filterLink.classList.add('active');\n  }\n}",
            "score": -1.0
        },
        "blocks/blog-filter/blog-filter.js::showHideAllFilters": {
            "changes_after_merge": 0,
            "file_path": "blocks/blog-filter/blog-filter.js",
            "merged_function": "function showHideAllFilters(block) {\n  block.querySelector('ul').classList.toggle('hide');\n}",
            "score": -1.0
        },
        "blocks/blog-list/blog-list.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/blog-list/blog-list.js",
            "merged_function": "async function decorate(block) {\n  const blogs = await ffetch('/query-index.json')\n    .sheet('blog')\n    .all();\n\n  BLOGS.set(viewAllCategory, []);\n  blogs.forEach((item) => {\n    const itemCategory = item.path.split('/')[2];\n    if (!itemCategory || itemCategory === 'blog') return;\n\n    if (!BLOGS.has(itemCategory)) {\n      BLOGS.set(itemCategory, []);\n    }\n\n    const renderedItem = renderBlogCard(item);\n\n    BLOGS.get(itemCategory).push(renderedItem);\n    BLOGS.get(viewAllCategory).push(renderedItem);\n  });\n\n  const carousel = await createCarousel(\n    block,\n    BLOGS.get(getCurrentCategory()),\n    {\n      infiniteScroll: true,\n      navButtons: false,\n      dotButtons: false,\n      autoScroll: false,\n      defaultStyling: false,\n      renderItem: (item) => item,\n    },\n  );\n\n  window.addEventListener('hashchange', () => { filterChanged(carousel); });\n  window.matchMedia('only screen and (max-width: 767px)').onchange = (e) => {\n    if (e.matches) {\n      carousel.setInitialScrollingPosition();\n    }\n  };\n}",
            "score": -0.9069767441860466
        },
        "blocks/blog-list/blog-list.js::filterChanged": {
            "changes_after_merge": 0,
            "file_path": "blocks/blog-list/blog-list.js",
            "merged_function": "function filterChanged(carousel) {\n  carousel.data = BLOGS.get(getCurrentCategory());\n  carousel.render();\n}",
            "score": -1.0
        },
        "blocks/blog-list/blog-list.js::getCurrentCategory": {
            "changes_after_merge": 0,
            "file_path": "blocks/blog-list/blog-list.js",
            "merged_function": "function getCurrentCategory() {\n  const activeHash = window.location.hash;\n  const currentFilter = activeHash ? activeHash.substring(1).toLowerCase() : viewAllCategory;\n  return BLOGS.has(currentFilter) ? currentFilter : viewAllCategory;\n}",
            "score": -1.0
        },
        "blocks/blog-teaser/blog-teaser.js::decorate": {
            "changes_after_merge": 7,
            "file_path": "blocks/blog-teaser/blog-teaser.js",
            "merged_function": "async function decorate(block) {\n  const blogPostLinks = [...block.querySelectorAll('a')];\n\n  const blogPosts = {};\n  await Promise.all(blogPostLinks.map(async (blogPostLink) => {\n    const fragmentHtml = await fetchFragment(blogPostLink.href, false);\n    if (fragmentHtml) {\n      const fragmentElement = div();\n      fragmentElement.innerHTML = fragmentHtml;\n      const header = fragmentElement.querySelector('h1').textContent;\n      const thumbnail = fragmentElement.querySelector('meta[name=\"thumbnail\"]')\n        .getAttribute('content');\n      const description = fragmentElement.querySelector('meta[name=\"description\"]')\n        .getAttribute('content');\n      const c2aButtonText = fragmentElement.querySelector('meta[name=\"card-c2a\"]')\n        .getAttribute('content');\n      const publicationDate = fragmentElement.querySelector('meta[name=\"publication-date\"]')\n        .getAttribute('content');\n      const author = fragmentElement.querySelector('meta[name=\"author\"]')\n        .getAttribute('content');\n\n      blogPosts[blogPostLink.href] = {\n        path: blogPostLink.href,\n        header,\n        thumbnail,\n        description,\n        c2aButtonText,\n        publicationDate,\n        author,\n      };\n    }\n  }));\n\n  blogPostLinks.forEach((blogPostLink) => {\n    blogPostLink.parentElement.parentElement.replaceWith(\n      renderBlockTeaser(blogPosts[blogPostLink.href]),\n    );\n  });\n}",
            "score": -0.6744186046511628
        },
        "blocks/blog-teaser/blog-teaser.js::renderBlockTeaser": {
            "changes_after_merge": 3,
            "file_path": "blocks/blog-teaser/blog-teaser.js",
            "merged_function": "function renderBlockTeaser(blogData) {\n  return (\n    div({ class: 'blog-teaser-item' },\n      div({ class: 'blog-teaser-thumb' },\n        a({ href: blogData.path },\n          createOptimizedPicture(blogData.thumbnail, blogData.header),\n        ),\n      ),\n      div({ class: 'blog-teaser-caption' },\n        h3(blogData.header),\n        div({ class: 'metadata' },\n          div(\n            i({ class: 'fa fa-calendar' }),\n            span({ class: 'blog-publish-date' },\n              formatDate(blogData.publicationDate, { month: 'long' }),\n            ),\n          ),\n          div(\n            i({ class: 'fa fa-user' }),\n            span({ class: 'blog-author' }, blogData.author),\n          ),\n        ),\n        p(blogData.description),\n        p({ class: 'button-container' },\n          a({\n            href: blogData.path,\n            'aria-label': blogData.c2aButtonText,\n            class: 'button primary',\n          },\n          blogData.c2aButtonText,\n          ),\n        ),\n      ),\n    )\n  );\n}",
            "score": -0.8604651162790697
        },
        "blocks/breadcrumbs/breadcrumbs-create.js::createBreadcrumbListItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/breadcrumbs/breadcrumbs-create.js",
            "merged_function": "function createBreadcrumbListItem(crumb) {\n  const li = document.createElement('li');\n  if (crumb.url_path) {\n    const a = document.createElement('a');\n    a.textContent = crumb.name;\n    a.href = crumb.url_path;\n    li.appendChild(a);\n  } else {\n    li.textContent = crumb.name;\n  }\n  return li;\n}",
            "score": -1.0
        },
        "blocks/breadcrumbs/breadcrumbs-create.js::createBreadcrumbs": {
            "changes_after_merge": 21,
            "file_path": "blocks/breadcrumbs/breadcrumbs-create.js",
            "merged_function": "async function createBreadcrumbs(container) {\n  const currentPath = window.location.pathname;\n  const pageIndex = await ffetch('/query-index.json').all();\n\n  const urlForIndex = (index) => prependSlash(currentPath.split('/').slice(1, index + 2).join('/'));\n  const breadcrumbs = [\n    {\n      name: 'Home',\n      url_path: '/',\n    },\n    ...currentPath.split('/').slice(1, -1).map((part, index) => ({\n      name: pageIndex.find((page) => page.path === urlForIndex(index))?.title ?? part,\n      url_path: urlForIndex(index),\n    })),\n    { name: document.title },\n  ];\n\n  const ol = document.createElement('ol');\n  breadcrumbs.forEach((crumb) => {\n    ol.appendChild(createBreadcrumbListItem(crumb));\n  });\n  container.appendChild(ol);\n}",
            "score": -0.023255813953488413
        },
        "blocks/breadcrumbs/breadcrumbs-create.js::getCustomUrl": {
            "changes_after_merge": 2,
            "file_path": "blocks/breadcrumbs/breadcrumbs-create.js",
            "merged_function": "function getCustomUrl(part) {\n  const customUrls = [\n    ['app-note', 'https://www.moleculardevices.com/search-results#t=All&sort=relevancy&f:@md_contenttype=%5BApplication%20Note%5D'],\n    ['ebook', 'https://www.moleculardevices.com/search-results#t=All&sort=relevancy&f:@md_contenttype=%5BeBook%5D'],\n  ];\n  const y = customUrls.findIndex((row) => row.includes(part));\n  if (customUrls[y]) return customUrls[y][1];\n  return null;\n}",
            "score": -0.9069767441860466
        },
        "blocks/breadcrumbs/breadcrumbs-create.js::getName": {
            "changes_after_merge": 2,
            "file_path": "blocks/breadcrumbs/breadcrumbs-create.js",
            "merged_function": "function getName(pageIndex, path, current) {\n  const pg = pageIndex.find((page) => page.path === path);\n  let name;\n  if (pg && pg.h1 && pg.h1 !== '0') {\n    name = pg.h1;\n  } else if (pg && pg.title && pg.title !== '0') {\n    name = pg.title;\n  } else if (current) {\n    name = document.title;\n  } else {\n    name = path.split('/').at(-1);\n  }\n  return name;\n}",
            "score": -0.9069767441860466
        },
        "blocks/breadcrumbs/breadcrumbs-create.js::prependSlash": {
            "changes_after_merge": 0,
            "file_path": "blocks/breadcrumbs/breadcrumbs-create.js",
            "merged_function": "function prependSlash(path) {\n  return path.startsWith('/') ? path : `/${path}`;\n}",
            "score": -1.0
        },
        "blocks/breadcrumbs/breadcrumbs-create.js::skipParts": {
            "changes_after_merge": 2,
            "file_path": "blocks/breadcrumbs/breadcrumbs-create.js",
            "merged_function": "function skipParts(pathSplit) {\n  const partsToSkip = ['en', 'assets', 'br', 'img'];\n  return pathSplit.filter((item) => !partsToSkip.includes(item));\n}",
            "score": -0.9069767441860466
        },
        "blocks/breadcrumbs/breadcrumbs-create.js::urlForIndex": {
            "changes_after_merge": 2,
            "file_path": "blocks/breadcrumbs/breadcrumbs-create.js",
            "merged_function": "urlForIndex = (index) => prependSlash(currentPath.split('/').slice(1, index + 2).join('/'))",
            "score": -0.9069767441860466
        },
        "blocks/breadcrumbs/breadcrumbs.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/breadcrumbs/breadcrumbs.js",
            "merged_function": "async function decorate(block) {\n  await createBreadcrumbs(block);\n}",
            "score": -0.8604651162790697
        },
        "blocks/card-list-filter/card-list-filter.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list-filter/card-list-filter.js",
            "merged_function": "function decorate(block) {\n  block.prepend(\n    div({ class: 'active-filter' },\n      button({ class: 'show-hide-filters', onclick: () => { showHideAllFilters(block); } },\n        span({ class: 'filter-title' }),\n        span({ class: 'icon icon-chevron-right-outline' }),\n      ),\n    ),\n  );\n  decorateIcons(block);\n\n  // on mobile we always start with the list of filters hidden\n  block.querySelector('ul').classList.add('hide');\n\n  const filters = [...block.querySelectorAll('a')];\n  filters.forEach((link) => {\n    link.addEventListener('click', (e) => {\n      filters.forEach((r) => r.classList.remove('active'));\n      e.currentTarget.classList.add('active');\n    });\n  });\n\n  if (block.closest('main').querySelector('.card-list')) {\n    // we are on the page where cards are displayed and filtering is enabled by hash\n    window.addEventListener('hashchange', () => { filterChangedViaHash(block, filters); });\n    // set initial active filter\n    setActiveFilter(block);\n\n    if (window.location.hash && window.matchMedia('only screen and (min-width: 767px)').matches) {\n      scrollBlockIntoView(block);\n    }\n  } else {\n    // we are on different page\n    const currentPageLink = block.querySelector(`a[href=\"${window.location.pathname}\"`);\n    if (currentPageLink) {\n      currentPageLink.classList.add('active');\n      block.querySelector('.active-filter .filter-title').innerText = currentPageLink.innerText;\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/card-list-filter/card-list-filter.js::filterChangedViaHash": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list-filter/card-list-filter.js",
            "merged_function": "function filterChangedViaHash(block, filters) {\n  filters.forEach((r) => r.classList.remove('active'));\n  setActiveFilter(block);\n}",
            "score": -1.0
        },
        "blocks/card-list-filter/card-list-filter.js::scrollBlockIntoView": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list-filter/card-list-filter.js",
            "merged_function": "function scrollBlockIntoView(block) {\n  const section = block.closest('.section');\n\n  const observer = new MutationObserver((mutationList) => {\n    mutationList.forEach((mutation) => {\n      if (mutation.type === 'attributes'\n        && mutation.attributeName === 'data-section-status'\n        && section.attributes.getNamedItem('data-section-status').value === 'loaded') {\n        observer.disconnect();\n        setTimeout(() => {\n          window.scrollTo({\n            top: block.querySelector('a.active').getBoundingClientRect().top - 70,\n            left: 0,\n            behavior: 'smooth',\n          });\n        },\n        1000,\n        );\n      }\n    });\n  });\n\n  observer.observe(section, { attributes: true });\n}",
            "score": -1.0
        },
        "blocks/card-list-filter/card-list-filter.js::setActiveFilter": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list-filter/card-list-filter.js",
            "merged_function": "function setActiveFilter(block) {\n  let activeHash = window.location.hash;\n  activeHash = activeHash ? activeHash.substring(1) : viewAllCategory;\n  const filterLink = block.querySelector(`a[href*=\"#${activeHash}\"`);\n  if (!filterLink) {\n    const viewAllLink = block.querySelector(`a[href*=\"#${viewAllCategory}\"`);\n    viewAllLink.classList.add('active');\n    block.querySelector('.active-filter .filter-title').innerText = viewAllLink.innerText;\n  } else {\n    block.querySelector('.active-filter .filter-title').innerText = filterLink.innerText;\n    filterLink.classList.add('active');\n  }\n}",
            "score": -1.0
        },
        "blocks/card-list-filter/card-list-filter.js::showHideAllFilters": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list-filter/card-list-filter.js",
            "merged_function": "function showHideAllFilters(block) {\n  block.querySelector('ul').classList.toggle('hide');\n}",
            "score": -1.0
        },
        "blocks/card-list/card-list.js::compareByDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "function compareByDate(item1, item2) {\n  const date1 = item1.date && item1.date !== '0'\n    ? item1.date\n    : item1.lastModified;\n\n  const date2 = item2.date && item2.date !== '0'\n    ? item2.date\n    : item2.lastModified;\n\n  return (+date1) - (+date2);\n}",
            "score": -1.0
        },
        "blocks/card-list/card-list.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/card-list/card-list.js",
            "merged_function": "async function decorate(block) {\n  block.parentElement.classList.add(block.classList[1]);\n\n  const cardList = new FilterableCardList(\n    block,\n    VARIANTS[block.classList[1].toUpperCase()],\n  );\n  await cardList.render();\n}",
            "score": -1.0
        },
        "blocks/card/card.js::createCard": {
            "changes_after_merge": 3,
            "file_path": "blocks/card/card.js",
            "merged_function": "async function createCard(config) {\n  const card = new Card(config);\n  await card.loadCSSFiles();\n  return card;\n}",
            "score": -0.8604651162790697
        },
        "blocks/card/card.js::handleCompareProducts": {
            "changes_after_merge": 0,
            "file_path": "blocks/card/card.js",
            "merged_function": "async function handleCompareProducts(e) {\n  const { target } = e;\n  const clickedItemTitle = getTitleFromNode(target);\n  const selectedItemTitles = getSelectedItems();\n\n  // get or create compare banner\n  const compareBannerInterface = await createCompareBannerInterface({\n    currentCompareItemsCount: selectedItemTitles.length,\n  });\n\n  compareBannerInterface.getOrRenderBanner();\n\n  if (selectedItemTitles.includes(clickedItemTitle)) {\n    const deleteIndex = selectedItemTitles.indexOf(clickedItemTitle);\n    if (deleteIndex !== -1) {\n      selectedItemTitles.splice(deleteIndex, 1);\n    }\n  } else if (selectedItemTitles.length >= MAX_COMPARE_ITEMS) {\n    alert(`You can only select up to ${MAX_COMPARE_ITEMS} products.`);\n    return;\n  } else {\n    selectedItemTitles.push(clickedItemTitle);\n  }\n\n  updateCompareButtons(selectedItemTitles);\n  compareBannerInterface.refreshBanner();\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::decorate": {
            "changes_after_merge": 12,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function decorate(block) {\n  /* change to ul, li */\n  const ul = document.createElement('ul');\n  [...block.children].forEach((row) => {\n    const li = document.createElement('li');\n    li.innerHTML = row.innerHTML;\n    [...li.children].forEach((div) => {\n      if (div.children.length === 1 && div.querySelector('picture')) div.className = 'cards-card-image';\n      else div.className = 'cards-card-body';\n    });\n    ul.append(li);\n  });\n  ul.querySelectorAll('img').forEach((img) => img.closest('picture').replaceWith(createOptimizedPicture(img.src, img.alt, false, [{ width: '750' }])));\n  block.textContent = '';\n  block.append(ul);\n\n  /* ================ Leadership Block ================ */\n\n  const leaderCardItems = document.querySelectorAll('.leaders ul li');\n  const modal = new LeadershipModal(leaderCardItems);\n  modal.init();\n  LeadershipModal.imgHeightWidth();\n  window.addEventListener('resize', LeadershipModal.imgHeightWidth);\n\n  /* ================ Leadership Block ================ */\n}",
            "score": -0.4418604651162791
        },
        "blocks/carousel/carousel.js::addSwipeCapability": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function addSwipeCapability(block, intervalId) {\n  let touchstartX = 0;\n  let touchendX = 0;\n\n  block.addEventListener('touchstart', (e) => {\n    touchstartX = e.changedTouches[0].screenX;\n  }, { passive: true });\n\n  block.addEventListener('touchend', (e) => {\n    touchendX = e.changedTouches[0].screenX;\n    if (Math.abs(touchendX - touchstartX) < 10) {\n      return;\n    }\n\n    if (touchendX < touchstartX) {\n      clearInterval(intervalId);\n      nextItem(block);\n    }\n    if (touchendX > touchstartX) {\n      clearInterval(intervalId);\n      prevItem(block);\n    }\n  }, { passive: true });\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::createCarousel": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function createCarousel(block) {\n  block.parentElement.classList.add(...[...block.classList].filter((item, idx) => idx !== 0));\n  block.parentElement.classList.add('carousel-wrapper');\n  block.classList.add('carousel');\n  // create autoscrolling animation\n  const intervalId = setInterval(nextItem, AUTOSCROLL_INTERVAL, block);\n\n  // create dot buttons and add carousel classes\n  const buttons = document.createElement('div');\n  buttons.className = 'carousel-dot-buttons';\n  [...block.children].forEach((item, i) => {\n    item.className = 'carousel-item';\n\n    // create the carousel content\n    const columnContainer = document.createElement('div');\n    columnContainer.classList.add('carousel-item-columns-container');\n\n    const columns = [document.createElement('div'), document.createElement('div')];\n\n    const itemChildren = [...item.children];\n    itemChildren.forEach((itemChild, idx) => {\n      if (itemChild.querySelector('img')) {\n        itemChild.classList.add('carousel-item-image');\n      } else {\n        itemChild.classList.add('carousel-item-text');\n      }\n      columns[idx].appendChild(itemChild);\n    });\n\n    columns.forEach((column) => {\n      column.classList.add('carousel-item-column');\n      columnContainer.appendChild(column);\n    });\n    item.appendChild(columnContainer);\n\n    // ensure that links inside the carousel are correctly marked as buttons\n    // first link -> primary button\n    // all the other links -> secondary buttons\n    item.querySelectorAll('.button-container a').forEach((button, j) => {\n      button.classList.add('button');\n      if (j === 0) {\n        button.classList.add('primary');\n      } else {\n        button.classList.add('secondary');\n      }\n    });\n\n    const button = document.createElement('button');\n    button.ariaLabel = `Scroll to item ${i + 1}`;\n    button.classList.add('carousel-dot-button');\n    if (i === 0) {\n      item.classList.add('selected');\n      button.classList.add('selected');\n    }\n\n    button.addEventListener('click', () => {\n      clearInterval(intervalId);\n      block.scrollTo({\n        top: 0,\n        left: item.offsetLeft - item.parentNode.offsetLeft,\n        behavior: 'smooth',\n      });\n      [...buttons.children].forEach((r) => r.classList.remove('selected'));\n      button.classList.add('selected');\n    });\n\n    buttons.append(button);\n  });\n  block.parentElement.append(buttons);\n\n  createNavButtons(block, intervalId);\n  createClones(block);\n  addSwipeCapability(block, intervalId);\n  setInitialScrollingPosition(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::createClone": {
            "changes_after_merge": 1,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function createClone(item) {\n  const clone = item.cloneNode(true);\n  clone.classList.add('clone');\n  clone.classList.remove('selected');\n\n  return clone;\n}",
            "score": -0.9534883720930233
        },
        "blocks/carousel/carousel.js::createClones": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function createClones(block) {\n  if (block.children.length < 2) return;\n\n  const initialChildren = [...block.children];\n\n  block.lastChild.after(createClone(initialChildren[0]));\n  block.lastChild.after(createClone(initialChildren[1]));\n\n  block.firstChild.before(createClone(initialChildren[initialChildren.length - 1]));\n  block.firstChild.before(createClone(initialChildren[initialChildren.length - 2]));\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::createNavButtonIcon": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function createNavButtonIcon(button, direction) {\n  const icon = document.createElement('span');\n  icon.classList.add('icon');\n  icon.classList.add(`icon-chevron-${direction}`);\n  button.appendChild(icon);\n  decorateIcons(button);\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::createNavButtons": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function createNavButtons(block, intervalId) {\n  const buttonLeft = document.createElement('button');\n  buttonLeft.classList.add('carousel-nav-left');\n  buttonLeft.ariaLabel = 'Scroll to previous item';\n  createNavButtonIcon(buttonLeft, 'left');\n  buttonLeft.addEventListener('click', () => {\n    clearInterval(intervalId);\n    prevItem(block);\n  });\n\n  const buttonRight = document.createElement('button');\n  buttonRight.classList.add('carousel-nav-right');\n  buttonRight.ariaLabel = 'Scroll to next item';\n  createNavButtonIcon(buttonRight, 'right');\n  buttonRight.addEventListener('click', () => {\n    clearInterval(intervalId);\n    nextItem(block);\n  });\n\n  [buttonLeft, buttonRight].forEach((navButton) => {\n    navButton.classList.add('carousel-nav-button');\n    block.parentElement.append(navButton);\n  });\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function decorate(block) {\n  // create autoscrolling animation\n  const intervalId = setInterval(nextItem, AUTOSCROLL_INTERVAL, block);\n\n  // create dot buttons and add carousel classes\n  const buttons = document.createElement('div');\n  buttons.className = 'carousel-dot-buttons';\n  [...block.children].forEach((item, i) => {\n    item.className = 'carousel-item';\n\n    // create the carousel content\n    const columnContainer = document.createElement('div');\n    columnContainer.classList.add('carousel-item-columns-container');\n\n    const columns = [document.createElement('div'), document.createElement('div')];\n\n    const itemChildren = [...item.children];\n    const classes = ['image', 'text'];\n    classes.forEach((e, j) => {\n      itemChildren[j].classList.add(`carousel-item-${e}`);\n      item.removeChild(itemChildren[j]);\n      columns[j].appendChild(itemChildren[j]);\n    });\n\n    columns.forEach((column) => {\n      column.classList.add('carousel-item-column');\n      columnContainer.appendChild(column);\n    });\n    item.appendChild(columnContainer);\n\n    // ensure that links inside the carousel are correctly marked as buttons\n    // first link -> primary button\n    // all the other links -> secondary buttons\n    item.querySelectorAll('.button-container a').forEach((button, j) => {\n      button.classList.add('button');\n      if (j === 0) {\n        button.classList.add('primary');\n      } else {\n        button.classList.add('secondary');\n      }\n    });\n\n    const button = document.createElement('button');\n    button.ariaLabel = `Scroll to item ${i + 1}`;\n    button.classList.add('carousel-dot-button');\n    if (i === 0) {\n      item.classList.add('selected');\n      button.classList.add('selected');\n    }\n\n    button.addEventListener('click', () => {\n      clearInterval(intervalId);\n      block.scrollTo({\n        top: 0,\n        left: item.offsetLeft - item.parentNode.offsetLeft,\n        behavior: 'smooth',\n      });\n      [...buttons.children].forEach((r) => r.classList.remove('selected'));\n      button.classList.add('selected');\n    });\n\n    buttons.append(button);\n  });\n  block.parentElement.append(buttons);\n\n  createNavButtons(block, intervalId);\n  createClones(block);\n  addSwipeCapability(block, intervalId);\n  setInitialScrollingPosition(block);\n}",
            "score": -0.8604651162790697
        },
        "blocks/carousel/carousel.js::nextItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function nextItem(block) {\n  const dotButtons = block.parentNode.querySelectorAll('.carousel-dot-button');\n  const items = block.querySelectorAll('.carousel-item:not(.clone)');\n  const selectedItem = block.querySelector('.carousel-item.selected');\n\n  const index = [...items].indexOf(selectedItem);\n  const newIndex = (index + 1) % items.length;\n  const newSelectedItem = items[newIndex];\n\n  if (newIndex === 0) {\n    // create the ilusion of infinite scrolling\n    newSelectedItem.parentNode.scrollTo({\n      top: 0,\n      left: (\n        newSelectedItem.previousElementSibling.offsetLeft - newSelectedItem.parentNode.offsetLeft\n      ),\n    });\n  }\n\n  newSelectedItem.parentNode.scrollTo({\n    top: 0,\n    left: newSelectedItem.offsetLeft - newSelectedItem.parentNode.offsetLeft,\n    behavior: 'smooth',\n  });\n\n  items.forEach((item) => item.classList.remove('selected'));\n  dotButtons.forEach((item) => item.classList.remove('selected'));\n  newSelectedItem.classList.add('selected');\n  dotButtons[newIndex].classList.add('selected');\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::prevItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function prevItem(block) {\n  const dotButtons = block.parentNode.querySelectorAll('.carousel-dot-button');\n  const items = block.querySelectorAll('.carousel-item:not(.clone)');\n  const selectedItem = block.querySelector('.carousel-item.selected');\n\n  const index = [...items].indexOf(selectedItem);\n  const newIndex = index - 1 < 0 ? items.length - 1 : index - 1;\n  const newSelectedItem = items[newIndex];\n\n  if (newIndex === items.length - 1) {\n    // create the ilusion of infinite scrolling\n    newSelectedItem.parentNode.scrollTo({\n      top: 0,\n      left: (\n        newSelectedItem.nextElementSibling.offsetLeft - newSelectedItem.parentNode.offsetLeft\n      ),\n    });\n  }\n\n  newSelectedItem.parentNode.scrollTo({\n    top: 0,\n    left: newSelectedItem.offsetLeft - newSelectedItem.parentNode.offsetLeft,\n    behavior: 'smooth',\n  });\n\n  items.forEach((item) => item.classList.remove('selected'));\n  dotButtons.forEach((item) => item.classList.remove('selected'));\n  newSelectedItem.classList.add('selected');\n  dotButtons[newIndex].classList.add('selected');\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::renderCardItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function renderCardItem(item) {\n  item.classList.add('card');\n  item\n    .querySelectorAll('.button-container a')\n    .forEach((a) => a.append(span({ class: 'icon icon-chevron-right-outline', 'aria-hidden': true })));\n  decorateIcons(item);\n  return item;\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::scrollToSelectedItem": {
            "changes_after_merge": 2,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "scrollToSelectedItem = () => {\n    const item = block.querySelector('.carousel-item.selected');\n    item.parentNode.scrollTo({\n      top: 0,\n      left: item.offsetLeft - item.parentNode.offsetLeft,\n    });\n  }",
            "score": -0.9069767441860466
        },
        "blocks/carousel/carousel.js::setInitialScrollingPosition": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function setInitialScrollingPosition(block) {\n  const scrollToSelectedItem = () => {\n    const item = block.querySelector('.carousel-item.selected');\n    item.parentNode.scrollTo({\n      top: 0,\n      left: item.offsetLeft - item.parentNode.offsetLeft,\n    });\n  };\n\n  const section = block.closest('.section');\n\n  const observer = new MutationObserver((mutationList) => {\n    mutationList.forEach((mutation) => {\n      if (mutation.type === 'attributes'\n        && mutation.attributeName === 'data-section-status'\n        && section.attributes.getNamedItem('data-section-status').value === 'loaded') {\n        scrollToSelectedItem();\n        observer.disconnect();\n      }\n    });\n  });\n\n  observer.observe(section, { attributes: true });\n\n  // just in case the mutation observer didn't work\n  setTimeout(scrollToSelectedItem, 700);\n\n  // ensure that we disconnect the observer\n  // if the animation has kicked in, we for sure no longer need it\n  setTimeout(() => { observer.disconnect(); }, AUTOSCROLL_INTERVAL);\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::summariseDescription": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function summariseDescription(description, charCount) {\n  let result = description;\n  if (result.length > charCount) {\n    result = result.substring(0, charCount);\n    const lastSpaceIndex = result.lastIndexOf(' ');\n    if (lastSpaceIndex !== -1) {\n      result = result.substring(0, lastSpaceIndex);\n    }\n  }\n  return `${result}\u2026`;\n}",
            "score": -1.0
        },
        "blocks/ceros/ceros.js::closeCerosModal": {
            "changes_after_merge": 0,
            "file_path": "blocks/ceros/ceros.js",
            "merged_function": "function closeCerosModal(block) {\n  block.querySelector('.ceros-modal').classList.remove('open');\n}",
            "score": -1.0
        },
        "blocks/ceros/ceros.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/ceros/ceros.js",
            "merged_function": "function decorate(block) {\n  const cerosUrl = block.querySelector('a');\n  if (!cerosUrl) return; // no ceros link provided\n\n  const cerosPoster = block.querySelector('picture') ? block.querySelector('picture') : '';\n\n  const cerosTitle = block.querySelector('p:last-of-type');\n  block.innerHTML = '';\n\n  cerosPoster\n    && cerosTitle\n    && !cerosTitle.classList.contains('picture')\n    && !cerosTitle.querySelector('a')\n    && block.parentElement.appendChild(cerosTitle);\n\n  let buttonClasses = 'primary open';\n  if (cerosPoster) {\n    buttonClasses += ' ceros-poster-overlay';\n  }\n\n  block.append(\n    cerosPoster,\n    button({ class: buttonClasses, onclick: () => openCerosModal(block, cerosUrl) },\n      !cerosPoster ? cerosUrl.textContent : 'Click to View Demo',\n    ),\n    div({ class: 'ceros-modal', onclick: () => closeCerosModal(block) },\n      div({ class: 'ceros-modal-content' },\n        button({ class: 'close', 'aria-label': 'Close', onclick: () => closeCerosModal(block) },\n          span({ class: 'icon icon-close-circle-outline' }),\n        ),\n      ),\n    ),\n  );\n\n  decorateIcons(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/ceros/ceros.js::openCerosModal": {
            "changes_after_merge": 0,
            "file_path": "blocks/ceros/ceros.js",
            "merged_function": "function openCerosModal(block, cerosUrl) {\n  const cerosModal = block.querySelector('.ceros-modal');\n  const cerosModalContent = cerosModal.children[0];\n  if (!cerosModalContent.querySelector('iframe')) {\n    cerosModalContent.appendChild(\n      document.createRange().createContextualFragment(embedCerosFrame(cerosUrl)),\n    );\n  }\n\n  cerosModal.classList.add('open');\n}",
            "score": -1.0
        },
        "blocks/citation-list/citation-list-carousel.js::addCarouselForMobile": {
            "changes_after_merge": 0,
            "file_path": "blocks/citation-list/citation-list-carousel.js",
            "merged_function": "function addCarouselForMobile(carousel) {\n  const cards = carousel.querySelectorAll('.flex-item');\n  addMobileCarousel(carousel, cards);\n}",
            "score": -1.0
        },
        "blocks/citation-list/citation-list-carousel.js::addMobileCarousel": {
            "changes_after_merge": 0,
            "file_path": "blocks/citation-list/citation-list-carousel.js",
            "merged_function": "function addMobileCarousel(carousel, cards) {\n  carousel.addEventListener('touchstart', (e) => {\n    handleTouchStart(e);\n  });\n  carousel.addEventListener('touchend', (e) => {\n    handleTouchEnd(e, carousel, cards);\n  });\n  carousel.addEventListener('touchmove', (e) => {\n    handleTouchMove(e, carousel, cards);\n  });\n}",
            "score": -1.0
        },
        "blocks/citation-list/citation-list-carousel.js::handleSwipe": {
            "changes_after_merge": 0,
            "file_path": "blocks/citation-list/citation-list-carousel.js",
            "merged_function": "function handleSwipe(carousel, cards) {\n  const cardWidth = cards[0].offsetWidth;\n  const threshold = 50; // Change this value to adjust the sensitivity of the swipe\n  if (touchStartX - touchEndX > threshold) {\n    slide(1, carousel, cards, cardWidth);\n  } else if (touchEndX - touchStartX > threshold) {\n    slide(-1, carousel, cards, cardWidth);\n  } else {\n    carousel.style.transform = `translateX(-${currentSlide * cardWidth}px)`;\n  }\n}",
            "score": -1.0
        },
        "blocks/citation-list/citation-list-carousel.js::handleTouchEnd": {
            "changes_after_merge": 0,
            "file_path": "blocks/citation-list/citation-list-carousel.js",
            "merged_function": "function handleTouchEnd(e, carousel, cards) {\n  isMoving = false;\n  handleSwipe(carousel, cards);\n}",
            "score": -1.0
        },
        "blocks/citation-list/citation-list-carousel.js::handleTouchMove": {
            "changes_after_merge": 0,
            "file_path": "blocks/citation-list/citation-list-carousel.js",
            "merged_function": "function handleTouchMove(e, carousel, cards) {\n  if (!isMoving) return;\n  touchEndX = e.touches[0].clientX;\n  const sensitivityMultiplier = 10; // Adjust this value to increase or decrease sensitivity\n  const diffX = (touchStartX - touchEndX) * sensitivityMultiplier;\n  const cardWidth = cards[0].offsetWidth;\n  carousel.style.transform = `translateX(${-currentSlide * cardWidth - diffX}px)`;\n}",
            "score": -1.0
        },
        "blocks/citation-list/citation-list-carousel.js::handleTouchStart": {
            "changes_after_merge": 0,
            "file_path": "blocks/citation-list/citation-list-carousel.js",
            "merged_function": "function handleTouchStart(e) {\n  e.preventDefault();\n  touchStartX = e.touches[0].clientX;\n  isMoving = true;\n}",
            "score": -1.0
        },
        "blocks/citation-list/citation-list-carousel.js::slide": {
            "changes_after_merge": 0,
            "file_path": "blocks/citation-list/citation-list-carousel.js",
            "merged_function": "function slide(direction, carousel, cards, cardWidth) {\n  currentSlide += direction;\n\n  const numOfOriginalCards = cards.length - 1;\n  if (currentSlide < 0) {\n    currentSlide = numOfOriginalCards;\n    carousel.style.transform = `translateX(-${currentSlide * cardWidth}px)`;\n  } else if (currentSlide > numOfOriginalCards) {\n    currentSlide = 0;\n    carousel.style.transform = `translateX(-${currentSlide * cardWidth}px)`;\n  } else {\n    carousel.style.transform = `translateX(-${currentSlide * cardWidth}px)`;\n  }\n}",
            "score": -1.0
        },
        "blocks/citation-list/citation-list.js::buildTopicCard": {
            "changes_after_merge": 2,
            "file_path": "blocks/citation-list/citation-list.js",
            "merged_function": "function buildTopicCard(topic) {\n  const cardDataCount = `${topic.count}+`;\n\n  const card = div(\n    { class: 'card' },\n    div(\n      { class: 'card-title' },\n      topic.title,\n    ),\n    div(\n      { class: 'card-body' },\n      div(\n        { class: 'card-data' },\n        img({ src: '/images/citation.png' }),\n        h2({ class: 'card-data-count' }, cardDataCount),\n        h3({ class: 'card-data-label' }, 'Citations'),\n      ),\n      p(\n        { class: 'card-citations-link' },\n        a(\n          { href: topic.path },\n          'View Citation',\n          i({ class: 'fa fa-arrow-circle-o-right' }),\n        ),\n      ),\n    ),\n  );\n\n  return card;\n}",
            "score": -0.9069767441860466
        },
        "blocks/citation-list/citation-list.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/citation-list/citation-list.js",
            "merged_function": "async function decorate(block) {\n  const topicItems = await ffetch('/resources/citations/query-index.json')\n    .all();\n\n  const topicsListContainer = div({ class: 'topics-list-container' });\n\n  topicItems.forEach((topic) => {\n    const card = buildTopicCard(topic);\n\n    const flexItem = div({ class: 'flex-item' });\n    flexItem.append(card);\n\n    topicsListContainer.append(flexItem);\n  });\n\n  // Add carousel functionality for mobile devices\n  addCarouselForMobile(topicsListContainer);\n\n  block.append(topicsListContainer);\n\n  return block;\n}",
            "score": -0.8604651162790697
        },
        "blocks/citations/citations.js::buildCitation": {
            "changes_after_merge": 5,
            "file_path": "blocks/citations/citations.js",
            "merged_function": "function buildCitation(fragment) {\n  const {\n    dateBlock,\n    publicationNameBlock,\n    titleBlock,\n    descriptionBlock,\n    contributorsBlock,\n    gotToBlock,\n  } = fragment;\n\n  // create short description which limits the description to 50 words\n  let shortDescriptionBlock = null;\n  if (descriptionBlock) {\n    const shortDescription = descriptionBlock.innerText.split(' ').slice(0, 50).join(' ');\n    shortDescriptionBlock = document.createElement('p');\n    // append ... to the end of the short description\n    shortDescriptionBlock.innerText = `${shortDescription}...`;\n  }\n\n  const viewMoreBlock = div({ class: 'view-change view-more' });\n  viewMoreBlock.innerHTML = `\n    View more <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\n  `;\n\n  const viewLessBlock = div({ class: 'view-change view-less' });\n  viewLessBlock.innerHTML = `\n    View less <i class=\"fa fa-angle-up\" aria-hidden=\"true\"></i>\n  `;\n\n  const citation = div(\n    { class: 'citation' },\n    div(\n      { class: 'citation-icon' },\n      img({ src: '/images/citation.png' }),\n    ),\n    div(\n      { class: 'citation-info' },\n      div(\n        { class: 'citation-header' },\n        dateBlock,\n        publicationNameBlock,\n        titleBlock,\n      ),\n      div(\n        { class: 'citation-short-description' },\n        shortDescriptionBlock,\n        viewMoreBlock,\n      ),\n      div(\n        { class: 'citation-long-description' },\n        descriptionBlock,\n        contributorsBlock,\n        gotToBlock,\n        viewLessBlock,\n      ),\n    ),\n  );\n\n  const links = citation.querySelectorAll('a');\n  links.forEach((link) => {\n    link.innerHTML += ' <i class=\"fa fa-external-link\" aria-hidden=\"true\"></i>';\n  });\n\n  return citation;\n}",
            "score": -0.7674418604651163
        },
        "blocks/citations/citations.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/citations/citations.js",
            "merged_function": "async function decorate(block) {\n  const fragmentPaths = [...block.querySelectorAll('a')].map((a) => a.href);\n  block.innerHTML = '';\n  if (fragmentPaths.length === 0) {\n    return '';\n  }\n\n  const fragments = await parseCitationFragments(fragmentPaths);\n\n  fragmentPaths.forEach((path) => {\n    const fragment = fragments[path];\n    if (fragment) {\n      block.append(buildCitation(fragment));\n    }\n  });\n\n  // add listener for when the user clicks on view more\n  block.querySelectorAll('.view-more').forEach((viewMoreBlock) => {\n    viewMoreBlock.addEventListener('click', () => {\n      const citation = viewMoreBlock.closest('.citation');\n      viewLongDescription(citation);\n    });\n  });\n\n  // add listener for when the user clicks on view less\n  block.querySelectorAll('.view-less').forEach((viewLessBlock) => {\n    viewLessBlock.addEventListener('click', () => {\n      const citation = viewLessBlock.closest('.citation');\n      viewShortDescription(citation);\n    });\n  });\n\n  return block;\n}",
            "score": -0.9534883720930233
        },
        "blocks/citations/citations.js::parseCitationFragments": {
            "changes_after_merge": 0,
            "file_path": "blocks/citations/citations.js",
            "merged_function": "async function parseCitationFragments(fragmentPaths) {\n  const fragments = {};\n  await Promise.all(fragmentPaths.map(async (path) => {\n    const fragmentHtml = await fetchFragment(path);\n    if (fragmentHtml) {\n      const fragmentElement = document.createElement('div');\n      fragmentElement.innerHTML = fragmentHtml;\n\n      const titleBlock = fragmentElement.querySelector('h2');\n      // remove the 'Citations : ' prefix from the title\n      if (titleBlock) {\n        const link = titleBlock.querySelector('a');\n        link.innerText = link.innerText.replace('Citations : ', '');\n      }\n\n      const pTags = fragmentElement.querySelectorAll('p');\n      const dateBlock = pTags[0];\n      const publicationNameBlock = pTags[1];\n      const descriptionBlock = pTags[2];\n      const contributorsBlock = pTags[3];\n      const gotToBlock = pTags[4];\n\n      fragments[path] = {\n        dateBlock,\n        publicationNameBlock,\n        titleBlock,\n        descriptionBlock,\n        contributorsBlock,\n        gotToBlock,\n      };\n    }\n  }));\n\n  return fragments;\n}",
            "score": -1.0
        },
        "blocks/citations/citations.js::viewLongDescription": {
            "changes_after_merge": 0,
            "file_path": "blocks/citations/citations.js",
            "merged_function": "function viewLongDescription(citation) {\n  const shortDescriptionBlock = citation.querySelector('.citation-short-description');\n  const longDescriptionBlock = citation.querySelector('.citation-long-description');\n  shortDescriptionBlock.style.display = 'none';\n  longDescriptionBlock.classList.add('show');\n}",
            "score": -1.0
        },
        "blocks/citations/citations.js::viewShortDescription": {
            "changes_after_merge": 0,
            "file_path": "blocks/citations/citations.js",
            "merged_function": "function viewShortDescription(citation) {\n  const shortDescriptionBlock = citation.querySelector('.citation-short-description');\n  const longDescriptionBlock = citation.querySelector('.citation-long-description');\n  longDescriptionBlock.classList.remove('show');\n  shortDescriptionBlock.style.display = 'block';\n}",
            "score": -1.0
        },
        "blocks/columns/columns.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/columns/columns.js",
            "merged_function": "function decorate(block) {\n  const cols = [...block.firstElementChild.children];\n  block.classList.add(`columns-${cols.length}-cols`);\n\n  const element = block.querySelector(':scope > div');\n  if (element.querySelector(':scope > div:first-child picture') !== null) {\n    element.classList.add('image-left');\n  }\n\n  if (element.querySelector(':scope > div:last-child picture') !== null) {\n    element.classList.add('image-right');\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/columns/columns.js::decorateEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/columns/columns.js",
            "merged_function": "function decorateEmbed(elems) {\n  elems.forEach((elem) => {\n    const embedHTML = embedCerosFrame(elem);\n    const parentEl = elem.parentElement;\n    parentEl.classList.add('embed', 'embed-ceros');\n    parentEl.innerHTML = embedHTML;\n    elem.remove();\n  });\n}",
            "score": -1.0
        },
        "blocks/coveo-search/coveo-search.js::coveoSearchInitiation": {
            "changes_after_merge": 0,
            "file_path": "blocks/coveo-search/coveo-search.js",
            "merged_function": "async function coveoSearchInitiation(organizationID, accessToken) {\n  const pCookie = (!getUserProfile()) ? 'Logged-in' : 'public';\n  /* global Coveo */\n  Coveo.SearchEndpoint.configureCloudV2Endpoint(organizationID, accessToken);\n  Coveo.init(document.getElementById('search'), {\n    ExcerptConditionalRendering: {\n      values: ['public'],\n      compareValue: pCookie,\n    },\n  });\n}",
            "score": -1.0
        },
        "blocks/coveo-search/coveo-search.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/coveo-search/coveo-search.js",
            "merged_function": "async function decorate(block) {\n  const backgroundImage = block.querySelector('picture');\n  block.children[0].innerHTML = searchFormHeader();\n  block.children[0].querySelector('.cover-banner-wrapper').prepend(backgroundImage);\n  const cRange = document.createRange();\n  /* eslint-disable no-new */\n  new Promise(() => {\n    block.children[0].children[0].appendChild(cRange.createContextualFragment(searchMainSection()));\n    loadCSS('https://static.cloud.coveo.com/searchui/v2.10104/css/CoveoFullSearch.min.css');\n  });\n  loadScript('https://static.cloud.coveo.com/searchui/v2.10104/js/CoveoJsSearch.Lazy.min.js', null, null, true);\n  loadScript('https://static.cloud.coveo.com/searchui/v2.10104/js/templates/templates.js', null, null, true);\n  setTimeout(getCoveoToken, 1000);\n}",
            "score": -1.0
        },
        "blocks/coveo-search/coveo-search.js::getCategoriesBasedOnProfile": {
            "changes_after_merge": 0,
            "file_path": "blocks/coveo-search/coveo-search.js",
            "merged_function": "function getCategoriesBasedOnProfile(userProfile) {\n  const CUSTOMER_ACCESS_LEVEL_CATEGORY = '\"Customer\"';\n  const DISTRIBUTOR_ACCESS_LEVEL_CATEGORY = '\"Distributor\"';\n  const SYSTEM_INTEGRATOR_ACCESS_LEVEL_CATEGORY = '\"System_Integrator\"';\n  const MOLDEV_SALES_ACCESS_LEVEL_CATEGORY = '\"MolDev Empl - Sales\"';\n  const MOLDEV_TECH_ACCESS_LEVEL_CATEGORY = '\"MolDev Empl - Tech\"';\n  let categoryAccessLevel;\n\n  switch (userProfile) {\n    case 'ADMIN':\n      categoryAccessLevel = '';\n      break;\n    case 'DISTRIBUTOR':\n      categoryAccessLevel = `${CUSTOMER_ACCESS_LEVEL_CATEGORY},${DISTRIBUTOR_ACCESS_LEVEL_CATEGORY}`;\n      break;\n    case 'INTEGRATOR':\n      categoryAccessLevel = `${CUSTOMER_ACCESS_LEVEL_CATEGORY},${SYSTEM_INTEGRATOR_ACCESS_LEVEL_CATEGORY}`;\n      break;\n    case 'SALES':\n      categoryAccessLevel = `${CUSTOMER_ACCESS_LEVEL_CATEGORY},${DISTRIBUTOR_ACCESS_LEVEL_CATEGORY},${SYSTEM_INTEGRATOR_ACCESS_LEVEL_CATEGORY},${MOLDEV_SALES_ACCESS_LEVEL_CATEGORY}`;\n      break;\n    case 'TECH':\n      categoryAccessLevel = `${CUSTOMER_ACCESS_LEVEL_CATEGORY},${DISTRIBUTOR_ACCESS_LEVEL_CATEGORY},${SYSTEM_INTEGRATOR_ACCESS_LEVEL_CATEGORY},${MOLDEV_SALES_ACCESS_LEVEL_CATEGORY},${MOLDEV_TECH_ACCESS_LEVEL_CATEGORY}`;\n      break;\n\n    default:\n      categoryAccessLevel = CUSTOMER_ACCESS_LEVEL_CATEGORY;\n  }\n  return categoryAccessLevel;\n}",
            "score": -1.0
        },
        "blocks/coveo-search/coveo-search.js::getCoveoToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/coveo-search/coveo-search.js",
            "merged_function": "async function getCoveoToken() {\n  const myHeaders = new Headers();\n  myHeaders.append('accept', 'application/json');\n  myHeaders.append('Authorization', `Bearer ${coveoToken}`);\n  myHeaders.append('Content-Type', 'application/json');\n\n  const raw = JSON.stringify({\n    userIds: [\n      {\n        name: coveoAdminId,\n        provider: 'Email Security Provider',\n      },\n    ],\n    filter: getFilter(),\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow',\n  };\n\n  await fetch(\n    `https://platform.cloud.coveo.com/rest/search/v2/token?organizationId=${organizationId}`,\n    requestOptions,\n  )\n    .then((response) => response.text())\n    .then((responseData) => {\n      coveoSearchInitiation(organizationId, JSON.parse(responseData).token);\n    });\n}",
            "score": -1.0
        },
        "blocks/coveo-search/coveo-search.js::getFilter": {
            "changes_after_merge": 0,
            "file_path": "blocks/coveo-search/coveo-search.js",
            "merged_function": "function getFilter() {\n  const userProfile = getUserProfile();\n  const accessLevel = getCategoriesBasedOnProfile(userProfile);\n\n  let filter;\n\n  if (userProfile === 'ADMIN') {\n    filter = '';\n  } else {\n    filter = `NOT @sfkbid OR (  @sfdatacategoryaccess_level == (${accessLevel})  OR @sfisvisibleinpkb=true  )`;\n  }\n  return filter;\n}",
            "score": -1.0
        },
        "blocks/coveo-search/coveo-search.js::getUserProfile": {
            "changes_after_merge": 0,
            "file_path": "blocks/coveo-search/coveo-search.js",
            "merged_function": "function getUserProfile() {\n  return (getCookie('STYXKEY_PortalUserRole')) ? getCookie('STYXKEY_PortalUserRole') : '';\n}",
            "score": -1.0
        },
        "blocks/coveo-search/coveo-search.js::searchFormHeader": {
            "changes_after_merge": 0,
            "file_path": "blocks/coveo-search/coveo-search.js",
            "merged_function": "function searchFormHeader() {\n  return `\n          <div id=\"search\" class=\"CoveoSearchInterface mdcoveo\" data-enable-history=\"true\" data-excerpt-length=\"350\">\n            <div class=\"CoveoFolding\"></div>\n            <div class=\"CoveoAnalytics\"></div>\n            <div class=\"section cover-banner-wrapper\">\n              <div class=\"cover-banner\">\n                <div class=\"cover-banner-content\">\n                  <h1>Welcome to Resource Hub</h1>\n                  <h3>HOW CAN WE HELP YOU TODAY?</h3>\n                </div>\n                <div class=\"not-fixed-search\">\n                  <div class=\"coveo-search-section\">\n                    <div class=\"CoveoSearchbox coveo-search-box\" data-enable-omnibox=\"true\" data-enable-search-as-you-type=\"true\" data-number-of-suggestions=\"5\" data-partial-match-keywords=\"\" data-enable-partial-match=\"true\" data-inline=\"true\" data-placeholder=\"\" data-enable-query-suggest-addon=\"true\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        `;\n}",
            "score": -1.0
        },
        "blocks/coveo-search/coveo-search.js::searchMainSection": {
            "changes_after_merge": 5,
            "file_path": "blocks/coveo-search/coveo-search.js",
            "merged_function": "function searchMainSection() {\n  return `\n            <div class=\"section coveo-tab-section-wrapper\">\n              <div class=\"coveo-tab-section\">\n                <a class=\"CoveoTab coveo-tab\" data-id=\"All\" data-caption=\"All Content\" data-expression=\"@source==&quot;Molecular Devices Website&quot; OR @source==&quot;Molecular Devices Support Portal&quot;\"></a>\n                <div class=\"CoveoTab coveo-tab\" data-id=\"Resources\" data-caption=\"Resources\" data-expression=\"@source==&quot;Molecular Devices Website&quot; AND @md_pagetype==Resource AND NOT @md_contenttype==CoA AND NOT @md_contenttype==SDS AND NOT @md_contenttype==SDS\">\n                </div>\n                <div class=\"CoveoTab coveo-tab\" data-id=\"Videos\" data-caption=\"Videos\" data-expression=\"@source==&quot;Molecular Devices Website&quot; AND @md_contenttype==&quot;Videos &amp; Webinars&quot;\">\n                </div>\n                <div class=\"CoveoTab coveo-tab\" data-id=\"KBArticles\" data-caption=\"Knowledge Base\" data-expression=\"@source==&quot;Molecular Devices Support Portal&quot;\"></div>\n                <div class=\"CoveoTab coveo-tab\" data-id=\"CoA\" data-caption=\"CoA\" data-expression=\"@source==&quot;Molecular Devices Website&quot; AND @md_contenttype==CoA\"></div>\n                <div class=\"CoveoTab coveo-tab\" data-id=\"SDS\" data-caption=\"SDS\" data-expression=\"@source==&quot;Molecular Devices Website&quot; AND @md_contenttype==SDS\"></div>\n              </div>\n            </div>\n            <div class=\"section coveo-main-section-wrapper\">\n              <div class=\"coveo-main-section\">\n                <p class='coveoMainTitle coveo-main-title'></p>\n                <div class=\"coveo-facet-column\">\n                  <div class=\"CoveoDynamicFacet\" data-enable-scroll-to-top=\"false\" data-title=\"Country\" data-field=\"@md_country\" data-tab=\"SDS\" data-id=\"Country\" data-number-of-values=\"\" data-enable-facet-search=\"false\"></div>\n                  <div class=\"CoveoDynamicHierarchicalFacet\" data-enable-facet-search=\"false\" data-delimiting-character=\"|\" data-title=\"Products\" data-field=\"@mdproductsdatacategory\" data-tab=\"Products, All, Resources, KBArticles, Videos\" data-number-of-values=\"8\" data-enable-collapse=\"true\" data-enable-scroll-to-top=\"false\" data-filter-facet-count=\"false\"></div>\n                  <div class=\"CoveoDynamicFacet\" data-enable-scroll-to-top=\"false\" data-title=\"Languages\" data-field=\"@md_lang\" data-tab=\"SDS\" data-number-of-values=\"\" data-depends-on=\"Country\"></div>\n                  <div class=\"CoveoDynamicFacet\" data-enable-scroll-to-top=\"false\" data-title=\"Type\" data-field=\"@objecttype\" data-tab=\"Resources\"></div>\n                  <div class=\"CoveoDynamicFacet\" data-enable-scroll-to-top=\"false\" data-title=\"Content Type\" data-enable-facet-search=\"false\" data-field=\"@md_contenttype\" data-number-of-values=\"8\" data-tab=\"Resources, All\"></div>\n                  <div class=\"CoveoDynamicFacet\" data-enable-scroll-to-top=\"false\" data-enable-facet-search=\"false\" data-title=\"Article Type\" data-field=\"@mdarticletypedatacategory\" data-number-of-values=\"8\" data-tab=\"All, SalesforceArticle\"></div>\n                  <div class=\"CoveoDynamicFacet\" data-enable-scroll-to-top=\"false\" data-title=\"Content Type 2\" data-field=\"@pagetype\" data-tab=\"Resources\"></div>\n                </div>\n                <div class=\"coveo-results-column\">\n                  <div class=\"CoveoShareQuery\"></div>\n                  <div class=\"CoveoPreferencesPanel\">\n                    <div class=\"CoveoResultsPreferences\"></div>\n                    <div class=\"CoveoResultsFiltersPreferences\"></div>\n                  </div>\n                  <div class=\"CoveoTriggers\"></div>\n                  <div class=\"CoveoBreadcrumb\"></div>\n                  <div class=\"CoveoDidYouMean\"></div>\n                  <div class=\"coveo-results-header\">\n                    <div class=\"coveo-summary-section\">\n                      <span class=\"CoveoQuerySummary\">\n                        <div class=\"coveo-show-if-no-results\"></div>\n                      </span>\n                      <span class=\"CoveoQueryDuration\"></span>\n                    </div>\n                    <div class=\"coveo-result-layout-section\">\n                      <span class=\"CoveoResultLayout\"></span>\n                    </div>\n                    <div class=\"coveo-sort-section\">\n                      <span class=\"CoveoSort coveo-sort\" data-sort-criteria=\"relevancy\" data-caption=\"Relevance\"></span>\n                      <span class=\"CoveoSort coveo-sort\" data-sort-criteria=\"date descending,date ascending\" data-caption=\"Date\"></span>\n                    </div>\n                  </div>\n                  <div class=\"CoveoHiddenQuery\"></div>\n                  <div class=\"CoveoErrorReport\" data-pop-up=\"false\"></div>\n                  <div class=\"CoveoResultList coveo-result-list\" data-layout=\"list\" data-wait-animation=\"fade\" data-auto-select-fields-to-include=\"false\">\n                    <script id=\"SalesforceKnowledgeArticle\" class=\"result-template\" type=\"text/html\" data-field-sfknowledgearticleid=\"\">\n                          <div class=\"coveo-result-frame\">\n                            <div class=\"coveo-result-cell\">\n                              <span class=\"CoveoIcon\" data-small=\"true\"></span>\n                            </div>\n                            <div class=\"coveo-result-cell\">\n                              <div class=\"coveo-result-row\">\n                                <div class=\"coveo-result-cell\">\n                                  <a class=\"CoveoResultLink coveo-result-link\"  data-href-template=\"https://support.moleculardevices.com/s/article/\" target=\"_blank\"> </a>\n                                </div>\n                                <div class=\"coveo-result-cell\">\n                                  <div class=\"coveo-result-row\">\n                                    <span class=\"CoveoFieldValue\" data-field=\"@sflastmodifieddate\" data-helper=\"date\"></span>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"CoveoConditionalRendering\" id=\"ExcerptConditionalRendering\">\n                          <div class=\"coveo-result-row\">\n                          <div class=\"coveo-result-cell\">\n                          <span class=\"CoveoFieldValue\" data-helper=\"shorten\" data-helper-options-length=\"200\" data-field=\"@sfquestion__c\" data-html-value=\"true\"></span>\n                          <span class=\"CoveoExcerpt coveo-excerpt\"></span>\n                          </div>\n                          </div>\n                          </div>\n                              <div class=\"coveo-result-row\">\n                                <div class=\"coveo-result-cell\">\n                                  <span class=\"CoveoFieldValue\" data-field=\"@sfownername\" data-text-caption=\"Owner\"></span>\n                                  <span class=\"CoveoFieldValue\" data-field=\"@sfarticletype\" data-text-caption=\"Type\"></span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          </div>\n                      </script>\n                    <script id=\"Default\" class=\"result-template\" type=\"text/html\" data-layout=\"list\">\n                          <div class=\"coveo-result-frame\">\n                            <div class=\"coveo-result-cell\" >\n                              <span class=\"CoveoIcon\" data-small=\"true\" data-with-label=\"false\" data-field=\"@md_img\" data-condition-field-not-md_img=\"\"></span>\n                              <table class=\"CoveoFieldTable\" data-expanded-title=\"Type\"></table>\n                              <span class=\"CoveoFieldValue product_img product-img\" data-field=\"@md_img\" data-helper=\"image\" data-html-value=\"true\"></span>\n                            </div>\n                            <div class=\"coveo-result-cell\">\n                              <div class=\"coveo-result-row\">\n                                <div class=\"coveo-result-cell\" role=\"heading\" aria-level=\"2\">\n                                  <a class=\"CoveoResultLink coveo-result-link\" target=\"_blank\"><span class=\"CoveoFieldValue\" data-field=\"@md_title\"> <span class=\"CoveoFieldValue\" data-field=\"@title\" data-condition-field-not-md_title=\"\"></span></span></a>\n                                </div>\n                                <div class=\"coveo-result-cell\">\n                                  <div class=\"coveo-result-row\">\n                                    <span class=\"CoveoFieldValue\" data-field=\"@date\" data-helper=\"date\"></span>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"coveo-result-row\">\n                                <div class=\"coveo-result-cell\">\n                                  <span class=\"CoveoExcerpt coveo-excerpt\"></span>\n                                </div>\n                              </div>\n                              <div class=\"coveo-result-row\">\n                                <div class=\"coveo-result-cell\">\n                                  <span class=\"CoveoFieldValue\" data-field=\"@md_rfq\" data-html-value=\"true\" data-helper=\"anchor\" data-text-caption=\"\" data-helper-options-text=\"Request Quote\"></span>\n                                </div>\n                              </div>\n                              <div class=\"coveo-result-row\">\n                              </div>\n                              <div class=\"coveo-result-row\">\n                                <div class=\"coveo-result-cell\">\n                                  <div class=\"CoveoMissingTerms\"></div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      </script>\n                  </div>\n                  <div class=\"CoveoPager\"></div>\n                  <div class=\"CoveoResultsPerPage\"></div>\n                </div>\n              </div>\n            </div>\n  `;\n}",
            "score": -0.7674418604651163
        },
        "blocks/customer-story/customer-story.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/customer-story/customer-story.js",
            "merged_function": "async function decorate(block) {\n  addLinkIcon(block.querySelector('.customer-story p a'));\n  return block;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::decorate": {
            "changes_after_merge": 7,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function decorate(block) {\n  const link = block.querySelector('a').href;\n  block.textContent = '';\n\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      loadEmbed(block, link);\n    }\n  });\n  observer.observe(block);\n}",
            "score": -0.6744186046511628
        },
        "blocks/embed/embed.js::decorateCeros": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function decorateCeros(block) {\n  block.classList.forEach((cls) => {\n    if (cls.indexOf('padding-top') > -1) {\n      const paddiingValue = cls.split('-')[2];\n      block.children[0].children[0].style.paddingTop = `${paddiingValue}%`;\n    }\n  });\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::decorateFlippingBook": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function decorateFlippingBook(block, url) {\n  if (!block.classList.contains('desktop-modal') || window.innerWidth < 430) {\n    return;\n  }\n\n  const divContent = `<div>\n<span class=\"close-button\"></span>\n<iframe\n    allowfullscreen\n    src=\"${url.href}\"\n    scrolling=\"no\"\n    loading=\"lazy\"\n    title=\"Content from ${url.hostname}\"\n></iframe></div>`;\n  const modalDiv = div({\n    class: 'flippingbook-modal-overlay',\n    'aria-hidden': true,\n  });\n  modalDiv.innerHTML = divContent;\n  document.body.append(modalDiv);\n\n  modalDiv.querySelector('.close-button').addEventListener('click', (e) => {\n    e.preventDefault();\n    modalDiv.setAttribute('aria-hidden', true);\n  });\n\n  block.querySelector('.flippingbook-mobile')\n    .addEventListener('click', (e) => {\n      e.preventDefault();\n      modalDiv.removeAttribute('aria-hidden');\n    });\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::decorateHubspot": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function decorateHubspot(block) {\n  const iframeID = block.querySelector('#iframeContent');\n  if (iframeID) {\n    iframeID.addEventListener('load', () => {\n      /* global iFrameResize */\n      /* eslint no-undef: \"error\" */\n      iFrameResize({ log: false }, iframeID);\n    });\n  }\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::embedAdobeIndesign": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function embedAdobeIndesign(url) {\n  return `<div class=\"adobe-indesign\" style=\"left: 0; height: 566px; width: 100%; max-width: 800px; position: relative;\">\n      <iframe src=\"${url.href}\" style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" allowfullscreen\n        scrolling=\"no\" title=\"Content from ${url.hostname}\" loading=\"lazy\">\n      </iframe>\n    </div>`;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::embedCerosFrame": {
            "changes_after_merge": 1,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function embedCerosFrame(url) {\n  const embedHTML = `\n  <div style=\"left: 0; width: 100%; position: relative; padding-top:57%;\">\n  <iframe\n      allowfullscreen\n      src=\"${url.href}\"\n      style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" allowfullscreen=\"\"\n      frameborder=\"0\"\n      class=\"ceros-experience\"\n      scrolling=\"no\"\n      loading=\"lazy\"\n      title=\"Content from ${url.hostname}\"\n  ></iframe>\n  </div>\n  `;\n  loadScript('https://view.ceros.com/scroll-proxy.min.js');\n  return embedHTML;\n}",
            "score": -0.9534883720930233
        },
        "blocks/embed/embed.js::embedFacebookFeed": {
            "changes_after_merge": 2,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "embedFacebookFeed = (url) => {\n  const embedHTML = `\n  <div id=\"fb-root\"></div>\n  <div class=\"fb-page\" data-href=\"${url}\" data-tabs=\"timeline\" data-width=\"385\" data-height=\"600\" data-small-header=\"false\" data-adapt-container-width=\"true\" data-hide-cover=\"false\" data-show-facepile=\"true\">\n    <blockquote cite=\"${url}\" class=\"fb-xfbml-parse-ignore\"><a href=\"${url}\">Molecular Devices LLC</a></blockquote>\n  </div>\n  `;\n  loadScript('https://connect.facebook.net/hi_IN/sdk.js#xfbml=1&version=v17.0', null, null, true);\n\n  return embedHTML;\n}",
            "score": -0.9069767441860466
        },
        "blocks/embed/embed.js::embedFlippingBook": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function embedFlippingBook(url) {\n  return `\n<div class=\"flippingbook-mobile\">\n    <a href=\"${url.href}\" title=\"View Publication\" target=\"_blank\">\n        <img src=\"https://online.flippingbook.com/Thumbnail.aspx?url=${encodeURIComponent(url.href)}&size=400\" alt=\"Flippingbook thumbnail\" >\n        <img src=\"/icons/flippingbook.svg\" class=\"book-icon\" >\n    </a>\n</div>\n<div class=\"flippingbook-desktop\">\n  <iframe\n      allowfullscreen\n      src=\"${url.href}\"\n      scrolling=\"no\"\n      loading=\"lazy\"\n      title=\"Content from ${url.hostname}\"\n  ></iframe>\n</div>\n  `;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::embedHubspot": {
            "changes_after_merge": 3,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "embedHubspot = (url) => {\n  const embedHTML = `<div style=\"left: 0; width: 100%; height: 166px; position: relative;\">\n        <iframe src=\"${url.href}\" \n        style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" \n        frameborder=\"0\" loading=\"lazy\"></iframe>\n      </div>`;\n  return embedHTML;\n}",
            "score": -0.8604651162790697
        },
        "blocks/embed/embed.js::embedSoundcloud": {
            "changes_after_merge": 1,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "embedSoundcloud = (url) => {\n  const embedHTML = `<div style=\"left: 0; width: 100%; height: 166px; position: relative;\">\n        <iframe src=\"${url.href}\" \n        style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" \n        frameborder=\"0\" loading=\"lazy\"></iframe>\n      </div>`;\n  return embedHTML;\n}",
            "score": -0.9534883720930233
        },
        "blocks/embed/embed.js::embedTwitterFeed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "embedTwitterFeed = (url) => {\n  const embedHTML = `\n    <a\n      class=\"twitter-timeline\"\n      data-chrome=\"nofooter noborders\"\n      data-tweet-limit=\"3\"\n      href=\"${url}\">\n    </a>\n  `;\n  loadScript('https://platform.twitter.com/widgets.js', null, null, true);\n\n  return embedHTML;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::getDefaultEmbed": {
            "changes_after_merge": 1,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "getDefaultEmbed = (url) => {\n  const embedHTML = `<div style=\"left: 0; width: 100%; height: 0; position: relative; padding-bottom: 56.25%;\">\n      <iframe src=\"${url.href}\" style=\"border: 0; top: 0; left: 0; width: 100%; height: 100%; position: absolute;\" allowfullscreen=\"\"\n        scrolling=\"no\" allow=\"encrypted-media\" title=\"Content from ${url.hostname}\" loading=\"lazy\">\n      </iframe>\n    </div>`;\n\n  return embedHTML;\n}",
            "score": -0.9534883720930233
        },
        "blocks/embed/embed.js::loadEmbed": {
            "changes_after_merge": 11,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "loadEmbed = (block, link, autoplay) => {\n  if (block.classList.contains('embed-is-loaded')) {\n    return;\n  }\n\n  const EMBEDS_CONFIG = [\n    {\n      match: ['soundcloud'],\n      embed: embedSoundcloud,\n    },\n  ];\n\n  const config = EMBEDS_CONFIG.find((e) => e.match.some((match) => link.includes(match)));\n  const url = new URL(link);\n  if (config) {\n    block.innerHTML = config.embed(url, autoplay);\n    block.classList = `block embed embed-${config.match[0]}`;\n  } else {\n    block.innerHTML = getDefaultEmbed(url);\n    block.classList = 'block embed';\n  }\n  block.classList.add('embed-is-loaded');\n}",
            "score": -0.4883720930232558
        },
        "blocks/event-summary/event-summary.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/event-summary/event-summary.js",
            "merged_function": "async function decorate(block) {\n  let startDate = getMetadata('event-start');\n  if (startDate) {\n    startDate = formatDate(startDate);\n    // eslint-disable-next-line prefer-destructuring\n    startDate = startDate.split(',')[0];\n  }\n  let endDate = getMetadata('event-end');\n  if (endDate) { endDate = formatDate(endDate); }\n  const title = getMetadata('og:title');\n  const type = getMetadata('event-type');\n  const region = getMetadata('event-region');\n  const address = getMetadata('event-address');\n\n  block.append(p({ class: 'event-date' }, `${startDate} - ${endDate}`));\n  block.append(h3({ class: 'event-subtitle' }, title));\n  block.append(\n    div({ class: 'event-keywords' },\n      ul({ class: 'keyword-list' },\n        li({ class: 'item type' }, type),\n        li({ class: 'item region' }, region),\n        li({ class: 'item address' }, address),\n      ),\n    ),\n  );\n}",
            "score": -0.9534883720930233
        },
        "blocks/events/events.js::createFilters": {
            "changes_after_merge": 4,
            "file_path": "blocks/events/events.js",
            "merged_function": "function createFilters(options, createDropdown) {\n  return [\n    createDropdown(\n      Array.from(new Set(options.data.map((n) => n.eventType))).filter((val) => val !== '0'),\n      options.activeFilters.eventType,\n      'event-type',\n      'Select Event Type',\n    ),\n    createDropdown(\n      Array.from(new Set(options.data.map((n) => n.eventRegion))).filter((val) => val !== '0'),\n      options.activeFilters.eventRegion,\n      'event-region',\n      'Select Region',\n    ),\n  ];\n}",
            "score": -0.813953488372093
        },
        "blocks/events/events.js::createOverview": {
            "changes_after_merge": 1,
            "file_path": "blocks/events/events.js",
            "merged_function": "async function createOverview(\n  block,\n  options,\n) {\n  block.innerHTML = '';\n  options.data.forEach(\n    (entry) => prepareEntry(entry, options.showDescription, options.viewMoreText),\n  );\n  await createList(\n    createFilters,\n    options,\n    block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/events/events.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/events/events.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  const title = block.querySelector('h1');\n  const relatedLink = block.querySelector('a');\n  const options = {\n    limitPerPage: parseInt(config.limitPerPage, 10) || 10,\n    limitForPagination: parseInt(config.limitForPagination, 9) || 9,\n    title: title ? title.innerHTML : '',\n    panelTitle: 'Filter By :',\n    noResult: 'No Event found !',\n    relatedLink,\n    showDescription: false,\n  };\n  options.activeFilters = new Map();\n  options.activeFilters.set('event-type', '');\n  options.activeFilters.set('event-region', '');\n  options.activeFilters.set('page', 1);\n\n  options.data = await fetchEvents();\n  await createOverview(\n    block,\n    options);\n}",
            "score": -0.8604651162790697
        },
        "blocks/events/events.js::fetchEvents": {
            "changes_after_merge": 2,
            "file_path": "blocks/events/events.js",
            "merged_function": "async function fetchEvents() {\n  const showFutureEvents = document.querySelector('.events.future');\n  const showArchivedEvents = document.querySelector('.events.archive');\n  const now = Date.now();\n  return ffetch('/query-index.json')\n    .sheet('events')\n    .filter(({ eventEnd }) => (showArchivedEvents && eventEnd * 1000 < now)\n        || (showFutureEvents && eventEnd * 1000 >= now))\n    .all();\n}",
            "score": -0.9069767441860466
        },
        "blocks/events/events.js::prepareEntry": {
            "changes_after_merge": 1,
            "file_path": "blocks/events/events.js",
            "merged_function": "function prepareEntry(entry, showDescription, viewMoreText) {\n  entry.filterEventType = toClassName(entry.eventType);\n  entry.filterEventRegion = toClassName(entry.eventRegion);\n  entry.date = '0';\n  const keywords = [];\n  if (entry.eventType !== '0') keywords[keywords.length] = entry.eventType;\n  if (entry.eventRegion !== '0') keywords[keywords.length] = entry.eventRegion;\n  if (entry.eventAddress !== '0') keywords[keywords.length] = entry.eventAddress;\n  entry.keywords = keywords;\n  if (!showDescription) {\n    entry.description = '';\n  }\n  if (viewMoreText) {\n    entry.viewMoreText = viewMoreText;\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/feature-products-carousel/feature-products-carousel.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/feature-products-carousel/feature-products-carousel.js",
            "merged_function": "async function decorate(block) {\n  const cssPromise = new Promise((resolve) => {\n    loadCSS('/blocks/carousel/carousel.css', (e) => resolve(e));\n  });\n  createCarousel(block);\n  await cssPromise;\n}",
            "score": -0.9069767441860466
        },
        "blocks/featured-highlights/featured-highlights.js::activeItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/featured-highlights/featured-highlights.js",
            "merged_function": "function activeItem(slider, item, diff) {\n  const carousel = slider.closest('.block').querySelector('.carousel');\n  // eslint-disable-next-line no-param-reassign\n  if (!item) item = slider.querySelector('li.active');\n  const itemsArray = Array.from(item.parentElement.children);\n  let index = itemsArray.indexOf(item);\n  if (diff) index += diff;\n  if (index > (itemsArray.length - 1)) index = 0;\n  if (index < 0) index = (itemsArray.length - 1);\n  [...item.closest('ul').querySelectorAll('li')].forEach((sliderItem, i) => {\n    sliderItem.classList.remove('active');\n    if (i === index) sliderItem.classList.add('active');\n  });\n  const scroll = (leftScroll) => carousel.scrollTo({ top: 0, left: leftScroll, behavior: 'smooth' });\n  scroll(carousel.offsetWidth * index);\n}",
            "score": -1.0
        },
        "blocks/featured-highlights/featured-highlights.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/featured-highlights/featured-highlights.js",
            "merged_function": "async function decorate(block) {\n  const heroSection = block.closest('main').querySelector('.section.hero-container, .section.hero-advanced-container');\n  heroSection.appendChild(block.parentElement);\n  const carousel = div({ class: 'carousel' });\n  const slider = div({ class: 'slider' }, div(span('Featured Highlights')));\n  const sliderInner = slider.querySelector('div');\n  const left = span({ class: 'icon icon-icon_link icon-flip' });\n  const right = span({ class: 'icon icon-icon_link' });\n  sliderInner.prepend(left);\n  sliderInner.append(right, ul());\n  [...block.children].forEach((row, i) => {\n    carousel.appendChild(row);\n    const sliderDot = li();\n    if (i === 0) sliderDot.classList.add('active');\n    slider.querySelector('ul').append(sliderDot);\n    sliderDot.addEventListener('click', (e) => {\n      activeItem(slider, e.target, null);\n    });\n  });\n  block.parentElement.prepend(a({ id: 'product-finder', href: '/product-finder' }, span({ class: 'icon icon-search' }), span('Product'), span('Finder')));\n  block.appendChild(slider);\n  block.appendChild(carousel);\n  decorateIcons(block);\n\n  left.addEventListener('click', () => { activeItem(slider, null, -1); });\n  right.addEventListener('click', () => { activeItem(slider, null, +1); });\n}",
            "score": -0.9534883720930233
        },
        "blocks/featured-highlights/featured-highlights.js::scroll": {
            "changes_after_merge": 0,
            "file_path": "blocks/featured-highlights/featured-highlights.js",
            "merged_function": "scroll = (leftScroll) => carousel.scrollTo({ top: 0, left: leftScroll, behavior: 'smooth' })",
            "score": -1.0
        },
        "blocks/featured-posts/featured-posts.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/featured-posts/featured-posts.js",
            "merged_function": "async function decorate(block) {\n  const newsUrls = [...block.querySelectorAll('a')].map((a) => a.href);\n  const newsItems = await ffetch('/query-index.json')\n    .filter(({ path }) => newsUrls.find((newsUrl) => newsUrl.indexOf(path) >= 0))\n    .all();\n\n  [...block.children].forEach((div, index) => {\n    const link = div.querySelector('a');\n    const newsItem = newsItems.find((news) => link.href.indexOf(news.path) >= 0);\n    if (newsItem) {\n      link.textContent = newsItem.title;\n    }\n\n    div.classList.add(`post-${index + 1}`);\n    div.firstElementChild.classList.add('zoom-effect-wrapper');\n    if (newsItem && !div.firstElementChild.querySelector('img')) {\n      const img = createOptimizedPicture(newsItem.image, newsItem.title, false);\n      div.firstElementChild.append(img);\n    }\n\n    const textDiv = div.lastElementChild;\n    const p = document.createElement('p');\n    p.innerHTML = textDiv.innerHTML;\n    textDiv.replaceWith(p);\n  });\n}",
            "score": -0.8604651162790697
        },
        "blocks/featured-products-carousel/featured-products-carousel.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/featured-products-carousel/featured-products-carousel.js",
            "merged_function": "async function decorate(block) {\n  const miniStyle = block.classList.contains('mini');\n  if (miniStyle) {\n    [...block.querySelectorAll('.featured-products-carousel.mini .button-container a')].map((linkItem) => addLinkIcon(linkItem));\n    await createCarousel(block, [...block.children], miniStyleConfig);\n    return;\n  }\n  createCarousel(block, [...block.children], {\n    defaultStyling: true,\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/features/features.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/features/features.js",
            "merged_function": "function decorate() {\n\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::addEventListeners": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function addEventListeners(container) {\n  const h3s = container.querySelectorAll('h3');\n  [...h3s].forEach((h3) => {\n    h3.addEventListener('click', (e) => {\n      toggleNewsEvents(container, e.target);\n    });\n  });\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::buildNewsEvents": {
            "changes_after_merge": 2,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function buildNewsEvents(container) {\n  [...container.children].forEach((row) => {\n    [...row.children].forEach((column, i) => {\n      column.classList.add('toggle');\n      if (i === 0) {\n        column.classList.add('on');\n      }\n    });\n  });\n  addEventListeners(container);\n}",
            "score": -0.9069767441860466
        },
        "blocks/footer/footer.js::buildNewsletter": {
            "changes_after_merge": 12,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function buildNewsletter(container) {\n  loadScript('../../scripts/iframeResizer.min.js');\n  const newsletterId = 'enewsletter';\n  const formId = 'enewsletterSubscribeForm';\n  const formUrl = 'https://info.moleculardevices.com/newsletter-signup';\n  const form = (\n    div({\n      id: newsletterId,\n      class: 'hubspot-iframe-wrapper',\n      loading: 'lazy',\n    },\n    div(\n      iframe({\n        id: formId,\n        src: formUrl,\n        loading: 'lazy',\n      }),\n    ),\n    )\n  );\n  // add submission form from hubspot\n  container.querySelector(`#${newsletterId}`).replaceWith(form);\n  iframeResizeHandler(formUrl, `#${formId}`, container);\n  // remove terms from plain footer, they are provided as part of the iframe\n  container.querySelector(`#${newsletterId} + p`).remove();\n}",
            "score": -0.4418604651162791
        },
        "blocks/footer/footer.js::decorate": {
            "changes_after_merge": 18,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function decorate(block) {\n  const cfg = readBlockConfig(block);\n  block.textContent = '';\n\n  const footerPath = cfg.footer || '/footer';\n  const resp = await fetch(`${footerPath}.plain.html`, window.location.pathname.endsWith('/footer') ? { cache: 'reload' } : {});\n  const html = await resp.text();\n  const footer = document.createElement('div');\n  footer.innerHTML = html;\n\n  const titles = footer.querySelectorAll('.footer-news-events h3');\n  [...titles].forEach((title, i) => {\n    const a = document.createElement('a');\n    a.textContent = title.textContent;\n    a.setAttribute('aria-label', title.textContent);\n    title.textContent = '';\n    title.append(a);\n    title.querySelector('a').addEventListener('click', () => {\n      switchGroup(title, i + 1);\n    });\n  });\n\n  const blockDiv = footer.querySelector('.footer-news-events');\n  [...blockDiv.children].forEach((div) => {\n    const pars = div.querySelectorAll('p');\n    const par = pars.item(pars.length - 1);\n    if (par) {\n      par.innerHTML\n        += \"<span class='icon-icon_link'></span>\";\n    }\n  });\n\n  await decorateIcons(footer);\n  block.append(footer);\n}",
            "score": -0.16279069767441856
        },
        "blocks/footer/footer.js::decorateImageWithLink": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function decorateImageWithLink(wrapper, link, title) {\n  const img = wrapper.innerHTML;\n  const newWrapper = `<a href=${link} aria-label='${title}'>${img}</a>`;\n  wrapper.innerHTML = newWrapper;\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::decorateSocialMediaLinks": {
            "changes_after_merge": 1,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function decorateSocialMediaLinks(socialIconsContainer) {\n  socialIconsContainer.querySelectorAll('a').forEach((iconLink) => {\n    iconLink.ariaLabel = `molecular devices ${iconLink.children[0].classList[1].split('-')[2]} page`;\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/footer/footer.js::iframeResizeHandler": {
            "changes_after_merge": 2,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function iframeResizeHandler(formUrl, id, container) {\n  container.querySelector('iframe').addEventListener('load', () => {\n    if (formUrl) {\n      /* global iFrameResize */\n      iFrameResize({ log: false }, id);\n    }\n  });\n}",
            "score": -0.9069767441860466
        },
        "blocks/footer/footer.js::renderEntry": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function renderEntry(item) {\n  return (\n    p(formatDate(unixDateToString(item.date)),\n      document.createElement('br'),\n      a({\n        href: item.path,\n        'aria-label': item.title,\n      }, item.title),\n    )\n  );\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::renderEvents": {
            "changes_after_merge": 6,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function renderEvents(container) {\n  const events = await ffetch('/query-index.json')\n    .filter(({ type }) => (type === 'Event'))\n    .slice(0, 3)\n    .all();\n  container.innerHTML = '';\n  events.forEach(\n    (item) => container.append(renderEntry(item)),\n  );\n  container.append(renderMoreLink('More Events', '/events'));\n}",
            "score": -0.7209302325581395
        },
        "blocks/footer/footer.js::renderMoreLink": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function renderMoreLink(text, link) {\n  return (\n    p(\n      a({\n        href: link,\n        'aria-label': text,\n      }, text, i({\n        class: 'fa fa-chevron-circle-right',\n        'aria-hidden': true,\n      }),\n      ),\n    )\n  );\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::renderNews": {
            "changes_after_merge": 4,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function renderNews(container) {\n  const news = await ffetch('/query-index.json')\n    .sheet('news')\n    .slice(0, 3)\n    .all();\n  container.innerHTML = '';\n  news.forEach(\n    (item) => container.append(renderEntry(item)),\n  );\n  container.append(renderMoreLink('More News', '/newsroom/news'));\n}",
            "score": -0.813953488372093
        },
        "blocks/footer/footer.js::switchGroup": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function switchGroup(selectionTitle, position) {\n  [...selectionTitle.parentElement.children].forEach((h3) => {\n    if (h3 !== selectionTitle) {\n      h3.classList.add('off');\n      h3.classList.remove('on');\n    } else {\n      h3.classList.add('on');\n      h3.classList.remove('off');\n    }\n  });\n  const blockDiv = selectionTitle.closest('.footer-news-events');\n  [...blockDiv.children].forEach((div) => {\n    div.classList.add('off');\n    div.classList.remove('on');\n  });\n  blockDiv.children[0].classList.add('on');\n  blockDiv.children[0].classList.remove('off');\n  blockDiv.children[position].classList.add('on');\n  blockDiv.children[position].classList.remove('off');\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::toggleNewsEvents": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function toggleNewsEvents(container, target) {\n  if (!target.parentElement.classList.contains('on')) {\n    const items = container.querySelectorAll('.toggle');\n    [...items].forEach((item) => {\n      item.classList.toggle('on');\n    });\n  }\n}",
            "score": -1.0
        },
        "blocks/fragment/fragment.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/fragment/fragment.js",
            "merged_function": "async function decorate(block) {\n  const link = block.querySelector('a');\n  const path = link ? link.getAttribute('href') : block.textContent.trim();\n  const fragment = await loadFragment(path);\n  if (fragment) {\n    const fragmentSection = fragment.querySelector(':scope .section');\n    if (fragmentSection) {\n      const section = block.closest('.section');\n      section.classList.add(...fragmentSection.classList);\n\n      section.style.background = fragmentSection.style.background\n        ? fragmentSection.style.background\n        : section.style.background;\n\n      section.style.backgroundImage = fragmentSection.style.backgroundImage\n        ? fragmentSection.style.backgroundImage\n        : section.style.background;\n\n      block.closest('.fragment-wrapper').replaceWith(...fragmentSection.childNodes);\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/fragment/fragment.js::loadFragment": {
            "changes_after_merge": 4,
            "file_path": "blocks/fragment/fragment.js",
            "merged_function": "async function loadFragment(path) {\n  if (path && path.startsWith('/')) {\n    const resp = await fetch(`${path}.plain.html`);\n    if (resp.ok) {\n      const main = document.createElement('main');\n      main.innerHTML = await resp.text();\n      decorateMain(main);\n      await loadBlocks(main);\n      return main;\n    }\n  }\n  return null;\n}",
            "score": -0.813953488372093
        },
        "blocks/get-in-touch/get-in-touch.js::addIframe": {
            "changes_after_merge": 1,
            "file_path": "blocks/get-in-touch/get-in-touch.js",
            "merged_function": "function addIframe() {\n  const hubspotUrl = document.querySelector('.get-in-touch-wrapper > div > div > div:first-of-type [href*=\"https://info.moleculardevices.com\"]');\n  const hubspotIframeWrapper = document.createElement('div');\n  const hubspotIframe = document.createElement('iframe');\n  hubspotIframeWrapper.className = 'hubspot-iframe-wrapper';\n  hubspotIframe.src = hubspotUrl.href;\n  hubspotIframe.setAttribute('loading', 'lazy');\n  hubspotIframeWrapper.appendChild(hubspotIframe);\n  hubspotUrl.parentNode.replaceChild(hubspotIframeWrapper, hubspotUrl);\n\n  const mapUrl = document.querySelector('.get-in-touch-wrapper > div > div > div:last-of-type [href*=\"https://maps.google.com\"]');\n  const mapIframe = document.createElement('iframe');\n  mapIframe.src = mapUrl.href;\n  mapIframe.setAttribute('loading', 'lazy');\n  mapUrl.parentNode.replaceChild(mapIframe, mapUrl);\n}",
            "score": -0.9534883720930233
        },
        "blocks/get-in-touch/get-in-touch.js::createForm": {
            "changes_after_merge": 0,
            "file_path": "blocks/get-in-touch/get-in-touch.js",
            "merged_function": "function createForm(block, hubspotUrl) {\n  const hubspotIframeWrapper = document.createElement('div');\n  const hubspotIframe = document.createElement('iframe');\n  hubspotIframeWrapper.className = 'hubspot-iframe-wrapper';\n  hubspotIframe.setAttribute('loading', 'lazy');\n  hubspotIframeWrapper.appendChild(hubspotIframe);\n  hubspotUrl.parentNode.replaceChild(hubspotIframeWrapper, hubspotUrl);\n\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      const hubUrl = hubSpotFinalUrl(hubspotUrl, 'region');\n      hubspotUrl.href = hubUrl.href;\n      hubspotIframe.src = hubspotUrl.href;\n    }\n  });\n  observer.observe(block);\n}",
            "score": -1.0
        },
        "blocks/get-in-touch/get-in-touch.js::createFormRoot": {
            "changes_after_merge": 0,
            "file_path": "blocks/get-in-touch/get-in-touch.js",
            "merged_function": "function createFormRoot(hubspotUrl, mapUrl) {\n  const hubspotIframeWrapper = document.createElement('div');\n  const hubspotIframe = document.createElement('iframe');\n\n  hubspotIframeWrapper.className = 'hubspot-iframe-wrapper';\n  hubspotIframe.setAttribute('loading', 'lazy');\n  hubspotIframeWrapper.appendChild(hubspotIframe);\n\n  const mapIframeWrapper = document.createElement('div');\n  const mapIframe = document.createElement('iframe');\n\n  mapIframeWrapper.className = 'map-iframe-wrapper';\n  mapIframe.setAttribute('loading', 'lazy');\n  mapIframeWrapper.appendChild(mapIframe);\n\n  hubspotUrl.parentNode.replaceChild(hubspotIframeWrapper, hubspotUrl);\n  mapUrl.parentNode.replaceChild(mapIframeWrapper, mapUrl);\n}",
            "score": -1.0
        },
        "blocks/get-in-touch/get-in-touch.js::createMap": {
            "changes_after_merge": 0,
            "file_path": "blocks/get-in-touch/get-in-touch.js",
            "merged_function": "function createMap(block, mapUrl) {\n  const mapIframeWrapper = document.createElement('div');\n  const mapIframe = document.createElement('iframe');\n  mapIframeWrapper.className = 'map-iframe-wrapper';\n  mapIframe.setAttribute('loading', 'lazy');\n  mapIframeWrapper.appendChild(mapIframe);\n  mapUrl.parentNode.replaceChild(mapIframeWrapper, mapUrl);\n\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      mapIframe.src = mapUrl.href;\n    }\n  });\n  observer.observe(block);\n}",
            "score": -1.0
        },
        "blocks/get-in-touch/get-in-touch.js::decorate": {
            "changes_after_merge": 4,
            "file_path": "blocks/get-in-touch/get-in-touch.js",
            "merged_function": "function decorate(block) {\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      addIframe();\n    }\n  });\n  observer.observe(block);\n}",
            "score": -0.813953488372093
        },
        "blocks/get-in-touch/get-in-touch.js::hubSpotFinalUrl": {
            "changes_after_merge": 6,
            "file_path": "blocks/get-in-touch/get-in-touch.js",
            "merged_function": "function hubSpotFinalUrl(hubspotUrl, paramName) {\n  const hubUrl = new URL(hubspotUrl.href);\n  const hubSearch = new URLSearchParams(hubUrl);\n  const searchParams = new URLSearchParams(hubUrl.searchParams.get('return_url'));\n  if (paramName === 'comments') {\n    searchParams.set(paramName, 'Sales');\n  } else {\n    const readQuery = getQueryParameter(paramName);\n    const queryStringParam = readQuery[paramName] ? readQuery[paramName] : '';\n    searchParams.set(paramName, queryStringParam);\n  }\n\n  hubSearch.set('return_url', searchParams.toString());\n  hubUrl.search = hubSearch.toString();\n  return hubUrl;\n}",
            "score": -0.7209302325581395
        },
        "blocks/get-in-touch/get-in-touch.js::scrollToForm": {
            "changes_after_merge": 0,
            "file_path": "blocks/get-in-touch/get-in-touch.js",
            "merged_function": "function scrollToForm(link, hubspotUrl) {\n  const hubspotIframe = document.querySelector('.hubspot-iframe-wrapper');\n  if (hubspotUrl) {\n    if (link.getAttribute('title') === 'Sales Inquiry Form') {\n      const hubUrl = hubSpotFinalUrl(hubspotUrl, 'comments');\n      hubspotUrl.href = hubUrl.href;\n    } else {\n      const [href] = hubspotUrl.href.split('&');\n      hubspotUrl.href = href;\n    }\n    hubspotIframe.querySelector('iframe').setAttribute('src', hubspotUrl);\n  }\n  window.scroll({\n    top: hubspotIframe.offsetTop - 100,\n    behavior: 'smooth',\n  });\n}",
            "score": -1.0
        },
        "blocks/header/header-events.js::addEventListenersDesktop": {
            "changes_after_merge": 12,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function addEventListenersDesktop() {\n  function expandMenu(element) {\n    collapseAllSubmenus(element.closest('ul'));\n    element.setAttribute('aria-expanded', 'true');\n  }\n\n  function showRightSubmenu(element) {\n    document.querySelectorAll('header .right-submenu').forEach((el) => el.setAttribute('aria-expanded', 'false'));\n    element.setAttribute('aria-expanded', 'true');\n  }\n\n  addListeners('.menu-nav-category', 'mousedown', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    expandMenu(e.currentTarget.parentElement);\n    const rightMenuClass = `${toClassName(e.currentTarget.textContent)}-right-submenu`;\n    const rightMenu = document.querySelector(`.${rightMenuClass}`).parentElement.parentElement;\n    showRightSubmenu(rightMenu);\n  });\n\n  addListeners('.menu-nav-submenu-close', 'mousedown', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    collapseAllSubmenus(e.currentTarget.closest('ul'));\n  });\n\n  addListeners('.menu-nav-submenu h1', 'mouseover', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const rightMenuClass = `${toClassName(e.currentTarget.textContent)}-right-submenu`;\n    const rightMenu = document.querySelector(`.${rightMenuClass}`).parentElement.parentElement;\n    showRightSubmenu(rightMenu);\n  });\n\n  addListeners('.menu-nav-submenu-sections li', 'mouseover', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const submenuTitle = e.currentTarget.querySelector('a').textContent;\n    const rightMenuClass = `${toClassName(submenuTitle)}-right-submenu`;\n    const rightMenu = document.querySelector(`.${rightMenuClass}`).parentElement.parentElement;\n    showRightSubmenu(rightMenu);\n  });\n}",
            "score": -0.4418604651162791
        },
        "blocks/header/header-events.js::addEventListenersMobile": {
            "changes_after_merge": 4,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function addEventListenersMobile() {\n  function toggleMenu(element) {\n    const expanded = element.getAttribute('aria-expanded') === 'true';\n    collapseAllSubmenus(element.closest('ul'));\n    element.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n  }\n\n  document.querySelectorAll('.menu-expandable').forEach((linkElement) => {\n    elementsWithEventListener.push(linkElement);\n\n    linkElement.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      toggleMenu(linkElement);\n    });\n  });\n}",
            "score": -0.813953488372093
        },
        "blocks/header/header-events.js::addListeners": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function addListeners(selector, eventType, callback) {\n  const elements = document.querySelectorAll(selector);\n\n  elements.forEach((element) => {\n    elementsWithEventListener.push(element);\n    element.addEventListener(eventType, callback);\n  });\n}",
            "score": -1.0
        },
        "blocks/header/header-events.js::collapseAllSubmenus": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function collapseAllSubmenus(menu) {\n  menu.querySelectorAll('*[aria-expanded=\"true\"]').forEach((el) => el.setAttribute('aria-expanded', 'false'));\n}",
            "score": -1.0
        },
        "blocks/header/header-events.js::expandMenu": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function expandMenu(element) {\n    collapseAllSubmenus(element.closest('ul'));\n    element.setAttribute('aria-expanded', 'true');\n  }",
            "score": -0.9534883720930233
        },
        "blocks/header/header-events.js::fetchAndOpenMegaMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "async function fetchAndOpenMegaMenu(event) {\n  const menuId = toClassName(event.currentTarget.textContent);\n  const submenuClass = `${menuId}-right-submenu`;\n\n  // fetch and style the megamenus if they haven't been fetched yet\n  if (!document.querySelector('.menu-nav-submenu')) {\n    const headerBlock = document.querySelector('.header');\n    const headerContent = await fetchHeaderContent();\n\n    // first we load the menu that the user clicked, to improve responsiveness\n    // only after, we start loading the others in the background\n    await fetchAndStyleMegamenu(headerBlock, headerContent, menuId);\n\n    const submenusList = getSubmenuIds();\n    submenusList.splice(submenusList.indexOf(menuId), 1);\n    fetchAndStyleMegamenus(headerBlock, headerContent, submenusList);\n  }\n\n  const menu = document.querySelector(`[menu-id=\"${menuId}\"]`);\n  expandMenu(menu.parentElement);\n  const rightMenu = document.querySelector(`.${submenuClass}`).parentElement.parentElement;\n  showRightSubmenu(rightMenu);\n}",
            "score": -1.0
        },
        "blocks/header/header-events.js::handleViewportChanges": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function handleViewportChanges(block) {\n  mediaQueryList.onchange = () => {\n    document.querySelector('main').style.visibility = '';\n    removeAllEventListeners();\n    collapseAllSubmenus(block);\n    reAttachEventListeners();\n  };\n  reAttachEventListeners();\n}",
            "score": -1.0
        },
        "blocks/header/header-events.js::reAttachEventListeners": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function reAttachEventListeners() {\n  if (mediaQueryList.matches) {\n    addEventListenersDesktop();\n  } else {\n    addEventListenersMobile();\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header-events.js::removeAllEventListeners": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function removeAllEventListeners() {\n  elementsWithEventListener.forEach((el) => {\n    el.replaceWith(el.cloneNode(true));\n  });\n  elementsWithEventListener = [];\n}",
            "score": -1.0
        },
        "blocks/header/header-events.js::showRightSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function showRightSubmenu(element) {\n    document.querySelectorAll('header .right-submenu').forEach((el) => el.setAttribute('aria-expanded', 'false'));\n    element.setAttribute('aria-expanded', 'true');\n  }",
            "score": -1.0
        },
        "blocks/header/header-events.js::toggleMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-events.js",
            "merged_function": "function toggleMenu(element) {\n    const expanded = element.getAttribute('aria-expanded') === 'true';\n    collapseAllSubmenus(element.closest('ul'));\n    element.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n  }",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::addIndividualComponents": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function addIndividualComponents(rightSubMenu, submenuId) {\n  if (submenuId === 'resource-hub') {\n    const searchBar = buildSearchBar('resourceHubSearchForm');\n    searchBar.classList.add('resources-submenu-search');\n    rightSubMenu.parentElement.appendChild(searchBar);\n    searchBar.addEventListener('submit', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      submitSearchForm(e, 'resourceHubSearchForm');\n    });\n    return;\n  }\n\n  if (submenuId === 'accessories-consumables') {\n    rightSubMenu.parentElement.appendChild(\n      img(\n        { class: 'spectra-accessories', src: '/images/header-menus/spectra-accessories.png', alt: 'Spectra Accessories' },\n      ),\n    );\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/header-megamenu-components.js::buildActionableCardSubmenu": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildActionableCardSubmenu(actionableCardContent) {\n  const link = actionableCardContent.querySelector('div:nth-child(2) > div:nth-child(2) > p > a');\n  const picture = actionableCardContent.querySelector('div:nth-child(2) > div:nth-child(2) > p > picture');\n  if (link && picture) {\n    wrapLinkAroundComponent(link, picture, true);\n  }\n  return actionableCardContent;\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/header-megamenu-components.js::buildBlogCardSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildBlogCardSubmenu(block) {\n  const featuredPostUrl = block.querySelector('a').getAttribute('href');\n  block.querySelector('a').remove();\n  getRecentBlogPostsHandler(featuredPostUrl);\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::buildCardsMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildCardsMenu(cardContent) {\n  // remove all <div><ul><li></li></ul></div> from cardContent\n  // sharepoint is generating empty lists in some elements, so we need to remove them\n  const lists = [...cardContent.querySelectorAll('div > ul > li')];\n  // check if each list is empty\n  lists.forEach((list) => {\n    if (list.innerHTML.trim() === '') {\n      list.parentElement.parentElement.remove();\n    }\n  });\n\n  // for each row div inside card\n  const rows = [...cardContent.querySelectorAll('div')];\n  rows.forEach((row) => {\n    // for each card inside the row\n    const cards = [...row.querySelectorAll('div')];\n    cards.forEach((card) => {\n      // if card div is not empty\n      if (card.innerHTML.trim() !== '') {\n        const link = card.querySelector('a');\n        const picture = card.querySelector('picture');\n\n        wrapLinkAroundComponent(link, picture);\n\n        // if the second paragraph of the card contains the string (expand-image),\n        // we style the image. We need this because some images fill the card, others dont\n        const secondParagraph = card.querySelector('p:nth-child(2)');\n        if (secondParagraph.textContent.includes('(expand-image)')) {\n          picture.classList.add('expanded-image');\n          // delete the second paragraph\n          secondParagraph.remove();\n        }\n      }\n    });\n  });\n\n  return cardContent;\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::buildImageCardSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildImageCardSubmenu(content) {\n  const link = content.querySelector('div a');\n  const picture = content.querySelector('div picture');\n  if (link && picture) {\n    wrapLinkAroundComponent(link, picture, false);\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::buildImageWithTextSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildImageWithTextSubmenu(imageWithTextContent) {\n  return imageWithTextContent;\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::buildImageWithoutTextSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildImageWithoutTextSubmenu(imageWithoutTextContent) {\n  return imageWithoutTextContent;\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::buildLargeCardsMenu": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildLargeCardsMenu(cardContent) {\n  const link = cardContent.querySelector('a');\n  const img = cardContent.querySelector('picture');\n  wrapLinkAroundComponent(link, img);\n  return cardContent;\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/header-megamenu-components.js::buildRightSubmenu": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildRightSubmenu(contentHeader) {\n  // get products-megamenu-head-wrapper located in the parent div of the div containing h1\n  const rightSubmenuWrapper = document.createElement('div');\n  rightSubmenuWrapper.classList.add('right-submenu');\n\n  // insert a div inside products-megamenu-head containing all its content\n  const rightSubmenuRow = document.createElement('div');\n  rightSubmenuRow.classList.add('right-submenu-row', 'flex-space-between');\n\n  // get div in the parent of the H2/H1 header\n  const headerParentDiv = contentHeader.parentElement;\n  // get all divs with a class right-submenu\n  const rightSubmenus = [...headerParentDiv.querySelectorAll('.right-submenu-content')];\n\n  // add all right-submenu divs to the H2\n  rightSubmenus.forEach((rightSubmenu) => {\n    // get the class name that has a suffix -submenu\n    const rightSubmenuClass = rightSubmenu.classList.value.split(' ').find((className) => className.endsWith('-submenu'));\n    const rightSubmenuBuilder = getRightSubmenuBuilder(rightSubmenuClass);\n    if (rightSubmenuBuilder) {\n      rightSubmenuBuilder(rightSubmenu);\n      rightSubmenuRow.appendChild(rightSubmenu);\n    }\n  });\n\n  rightSubmenuWrapper.innerHTML = rightSubmenuRow.outerHTML;\n  return rightSubmenuWrapper;\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/header-megamenu-components.js::buildTextSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function buildTextSubmenu(textContent) {\n  return textContent;\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::getRecentBlogPosts": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function getRecentBlogPosts(featuredPostUrl, isFeaturedPost) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      if (isFeaturedPost) {\n        resolve(\n          ffetch('/query-index.json')\n            .sheet('blog')\n            .filter((post) => featuredPostUrl.indexOf(post.path) > -1)\n            .chunks(5)\n            .limit(1)\n            .all(),\n        );\n      } else {\n        resolve(\n          ffetch('/query-index.json')\n            .sheet('blog')\n            .filter((post) => featuredPostUrl.indexOf(post.path) === -1)\n            .chunks(5)\n            .limit(4)\n            .all(),\n        );\n      }\n    }, 100);\n  });\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::getRecentBlogPostsHandler": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "async function getRecentBlogPostsHandler(featuredPostUrl) {\n  const recentPosts = div({ class: 'recent-blog-posts-block' });\n  const featuredpost = div({ class: 'featured-blog-posts-block' });\n  const blogPostMenu = div({ class: 'blog-posts-block' }, recentPosts, featuredpost);\n\n  const recentPostLinks = await getRecentBlogPosts(featuredPostUrl, false);\n  const featuredPostLink = await getRecentBlogPosts(featuredPostUrl, true);\n\n  document.querySelector('.blog-lab-notes-right-submenu').appendChild(blogPostMenu);\n\n  setTimeout(() => {\n    recentPostLinks.forEach((post) => {\n      const link = p(a({ href: post.path }, createOptimizedPicture(post.thumbnail, post.header)));\n      const title = p(a({ href: post.path }, `${post.h1.trim().substring(0, 40)}...`));\n      const postWrapper = div(link, title);\n      recentPosts.appendChild(postWrapper);\n    });\n    featuredPostLink.forEach((post) => {\n      const postTitle = post.title.length > 200\n        ? `${post.h1.trim().substring(0, 200)}...`\n        : post.h1;\n      const link = p(a({ href: post.path }, createOptimizedPicture(post.thumbnail, post.header)));\n      const title = p(a({ href: post.path }, postTitle));\n      const postWrapper = div(link, title);\n      featuredpost.appendChild(postWrapper);\n    });\n  }, 300);\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu-components.js::getRightSubmenuBuilder": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function getRightSubmenuBuilder(className) {\n  const map = new Map();\n  map.set('cards-submenu', buildCardsMenu);\n  map.set('text-submenu', buildTextSubmenu);\n  map.set('large-card-submenu', buildLargeCardsMenu);\n  map.set('actionable-card-submenu', buildActionableCardSubmenu);\n  map.set('image-with-text-submenu', buildImageWithTextSubmenu);\n  return map.get(className);\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/header-megamenu-components.js::wrapLinkAroundComponent": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/header-megamenu-components.js",
            "merged_function": "function wrapLinkAroundComponent(link, component, removeLink = false) {\n  const linkCopy = document.createElement('a');\n  linkCopy.href = link.href;\n  // Insert the new div before the existing div\n  component.parentNode.insertBefore(linkCopy, component);\n  // Move the existing div inside the new div\n  linkCopy.appendChild(component);\n\n  if (removeLink) {\n    link.remove();\n  }\n\n  return linkCopy;\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/header-megamenu.js::buildContactUs": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "function buildContactUs() {\n  return li(\n    { class: 'menu-expandable' },\n    div(\n      { class: 'menu-nav-category' },\n      a(\n        { href: '/contact' },\n        'Contact Us',\n      ),\n    ),\n  );\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu.js::buildLazyMegaMenus": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "async function buildLazyMegaMenus() {\n  const categories = document.querySelectorAll('.menu-nav-category');\n\n  // for each category, get the menu-id attribute\n  categories.forEach(async (category) => {\n    const menuId = category.getAttribute('menu-id');\n\n    await fetch(`/fragments/megamenu/${menuId}.plain.html`, window.location.pathname.endsWith(`/${menuId}`) ? { cache: 'reload' } : {})\n      .then(async (submenuResponse) => {\n        if (submenuResponse.ok) {\n          // eslint-disable-next-line no-await-in-loop\n          const submenuHtml = await submenuResponse.text();\n\n          const submenuContent = div();\n          submenuContent.innerHTML = submenuHtml;\n\n          // get all H2s and create a list of them\n          const h2s = [...submenuContent.querySelectorAll('h2')];\n          const h2List = ul({ class: 'menu-nav-submenu-sections' });\n\n          // add H2s to list\n          h2s.forEach((h2) => {\n            const element = reverseElementLinkTagRelation(h2);\n\n            const h2ListItem = li(\n              { class: 'menu-nav-submenu-section' },\n              element,\n              buildRightSubmenu(element),\n            );\n\n            h2List.append(h2ListItem);\n          });\n\n          // get the list item in the header block that contains a div with attribute menu-id\n          // that matches the menuId\n          const currentMenu = document.querySelector(\n            `.menu-nav-category[menu-id=\"${menuId}\"]`,\n          ).parentElement.querySelector('.menu-nav-submenu-sections');\n\n          currentMenu.innerHTML = h2List.innerHTML;\n\n          currentMenu.querySelectorAll('.menu-nav-submenu-section').forEach((el) => {\n            el.addEventListener('mouseover', (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              const rightMenu = e.currentTarget.querySelector('.right-submenu');\n              showRightSubmenu(rightMenu);\n            });\n          });\n        }\n      });\n  });\n\n  const body = document.querySelector('body');\n  body.setAttribute('built-lazy-megamenus', 'true');\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/header-megamenu.js::buildMegaMenu": {
            "changes_after_merge": 9,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "function buildMegaMenu(navContent, submenuContent) {\n  const productsSubmenu = document.createElement('div');\n  productsSubmenu.append(submenuContent.querySelector('h1'));\n  productsSubmenu.append(buildMegaMenuLeftMenus(submenuContent));\n  submenuContent.innerHTML = productsSubmenu.outerHTML;\n  const backgroundImg = navContent.querySelector('.submenu-background img');\n  submenuContent.style.backgroundImage = `url(${backgroundImg.src})`;\n}",
            "score": -0.5813953488372092
        },
        "blocks/header/header-megamenu.js::buildNavbar": {
            "changes_after_merge": 4,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "function buildNavbar(content) {\n  const megaMenu = div({ class: 'mainmenu-wrapper sticky-element sticky-desktop' });\n  const container = div({ class: 'container' });\n  const newNav = nav({ id: 'nav' });\n\n  const navTabs = content.querySelector('.nav-menu');\n\n  newNav.innerHTML = navTabs.outerHTML;\n\n  container.append(buildBrandLogo(content));\n  container.append(newNav);\n  megaMenu.append(container);\n\n  // link section\n  const navMenuUl = ul({ class: 'nav-tabs' });\n  const menus = [...megaMenu.querySelectorAll('.nav-menu > div')];\n\n  for (let i = 0; i < menus.length; i += 1) {\n    const item = li({ class: 'menu-expandable', 'aria-expanded': 'false' });\n\n    const menuTitle = menus[i];\n    const textDiv = menuTitle.querySelector('div');\n    menuTitle.innerHTML = textDiv.innerHTML;\n    menuTitle.classList.add('menu-nav-category');\n    menuTitle.setAttribute('menu-id', toClassName(menuTitle.textContent));\n\n    item.innerHTML = menuTitle.outerHTML;\n    navMenuUl.append(item);\n  }\n\n  navMenuUl.append(buildSearch(content));\n  navMenuUl.append(buildRequestQuote());\n\n  megaMenu.querySelector('.nav-menu').innerHTML = navMenuUl.outerHTML;\n\n  decorateIcons(megaMenu);\n\n  return megaMenu;\n}",
            "score": -0.813953488372093
        },
        "blocks/header/header-megamenu.js::buildRequestQuote": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "function buildRequestQuote() {\n  return li(\n    { class: 'header-rfq' },\n    a(\n      { href: '/quote-request?cid=12' },\n      'Request Quote',\n    ),\n  );\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu.js::createSubmenuBuildersMap": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "function createSubmenuBuildersMap() {\n  // create map of submenu name to function\n  const submenus = new Map();\n  submenus.set('products', buildProductsMegaMenu);\n  submenus.set('applications', buildMegaMenu);\n  submenus.set('resources', buildMegaMenu);\n  submenus.set('service-support', buildMegaMenu);\n  submenus.set('company', buildMegaMenu);\n  submenus.set('contact-us', () => { });\n  return submenus;\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu.js::fetchAndStyleMegamenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "async function fetchAndStyleMegamenu(headerBlock, headerContent, menuId) {\n  const submenuPath = getMetadata(`${menuId}-submenu`) || `/fragments/menu/${menuId}`;\n\n  const processingPromise = fetch(`${submenuPath}.plain.html`, window.location.pathname.endsWith(`/${menuId}`) ? { cache: 'reload' } : {})\n    .then(async (submenuResponse) => {\n      if (submenuResponse.ok) {\n        // eslint-disable-next-line no-await-in-loop\n        const submenuHtml = await submenuResponse.text();\n        const submenuContent = div({ class: 'menu-nav-submenu' });\n        submenuContent.innerHTML = submenuHtml;\n\n        // Get submenu builder, and build submenu\n        buildMegaMenu(headerBlock, headerContent, submenuContent, menuId);\n      }\n    });\n\n  return processingPromise;\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu.js::fetchAndStyleMegamenus": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "async function fetchAndStyleMegamenus(headerBlock) {\n  // ------ Submenus ------\n  const submenuBuildersMap = createSubmenuBuildersMap();\n\n  // get all keys from submenuBuildersMap\n  const submenuKeys = [...submenuBuildersMap.keys()];\n\n  // Fetch all submenu content concurrently\n  const submenuFetchPromises = [];\n  for (let i = 0; i < submenuKeys.length - 1; i += 1) {\n    const submenuId = submenuKeys[i];\n    const submenuPath = getMetadata(`${submenuId}-submenu`) || `/fragments/menu/${submenuId}`;\n    submenuFetchPromises.push(\n      fetch(`${submenuPath}.plain.html`, window.location.pathname.endsWith(`/${submenuId}`) ? { cache: 'reload' } : {}),\n    );\n  }\n\n  // Process all submenu responses\n  const submenuResponses = await Promise.all(submenuFetchPromises);\n\n  // fetch the header content, we need it to be able to get the background image\n  const headerContent = await fetchHeaderContent();\n\n  // iterate over all submenu responses\n  for (let i = 0; i < submenuResponses.length; i += 1) {\n    const submenuResponse = submenuResponses[i];\n    if (submenuResponse.ok) {\n      const closeButton = document.createElement('div');\n      closeButton.classList.add('menu-nav-submenu-close');\n\n      const submenuId = submenuKeys[i];\n      // eslint-disable-next-line no-await-in-loop\n      const submenuHtml = await submenuResponse.text();\n      const submenuContent = document.createElement('div');\n      submenuContent.classList.add('menu-nav-submenu');\n      submenuContent.innerHTML = submenuHtml;\n\n      // Get submenu builder, and build submenu\n      const submenuBuilder = submenuBuildersMap.get(toClassName(submenuId));\n      submenuBuilder(headerContent, submenuContent);\n\n      // Get the list item in the header block that contains a div with attribute menu-id\n      // that matches the submenuId\n      const li = headerBlock.querySelector(`div[menu-id=\"${submenuId}\"]`).closest('li');\n      li.append(closeButton);\n      li.append(submenuContent);\n    }\n  }\n\n  handleViewportChanges(headerBlock);\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/header-megamenu.js::getSubmenus": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "function getSubmenus() {\n  return ['products', 'applications', 'resources', 'service-support', 'company', 'contact-us'];\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu.js::reverseElementLinkTagRelation": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "function reverseElementLinkTagRelation(element) {\n  const linkElement = element.querySelector('a');\n  if (linkElement) {\n    element.removeChild(linkElement);\n\n    const newLinkElement = document.createElement('a');\n    newLinkElement.href = linkElement.href;\n\n    element.innerHTML = linkElement.innerHTML;\n    element.parentNode.replaceChild(newLinkElement, element);\n\n    newLinkElement.appendChild(element);\n    return newLinkElement;\n  }\n\n  return element;\n}",
            "score": -1.0
        },
        "blocks/header/header-megamenu.js::showRightSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header-megamenu.js",
            "merged_function": "function showRightSubmenu(element) {\n  document.querySelectorAll('header .right-submenu').forEach((el) => el.setAttribute('aria-expanded', 'false'));\n  element.setAttribute('aria-expanded', 'true');\n}",
            "score": -1.0
        },
        "blocks/header/header.js::addIndividualComponents": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/header.js",
            "merged_function": "function addIndividualComponents(block) {\n  // search for div with menu-id resources\n  const resources = block.querySelector('div[menu-id=\"resources\"]').parentElement;\n  const rightSubMenu = resources.querySelector('.menu-nav-submenu > div > .right-submenu');\n\n  // add search bar to right submenu\n  const searchBar = buildSearchBar('resourcesSearchForm');\n  searchBar.classList.add('resources-submenu-search');\n  rightSubMenu.appendChild(searchBar);\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/header.js::buildBrandLogo": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildBrandLogo(content) {\n  const logoWrapper = document.createElement('div');\n  logoWrapper.setAttribute('id', 'header-logo');\n  const logoImg = content.querySelector('.nav-brand > div > div > picture > img');\n  logoImg.classList = 'logo1';\n  logoWrapper.innerHTML = logoImg.outerHTML;\n  return logoWrapper;\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/header.js::buildRequestQuote": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildRequestQuote() {\n  const requestQuote = document.createElement('li');\n  requestQuote.innerHTML = `<li class=\"we-mega-menu-li header-rfq\">\n  <a class=\"we-mega-menu-li\" title=\"\" href=\"/quote-request?cid=12\" target=\"\">Request<br>Quote</a></li>`;\n  return requestQuote;\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/header.js::buildSearch": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildSearch() {\n  const search = document.createElement('li');\n  search.classList.add('searchlink', 'header-search', 'fa', 'fa-search');\n  search.innerHTML = '<a title=\"\" href=\"#\" target=\"\">Search</a>';\n  return search;\n}",
            "score": -1.0
        },
        "blocks/header/header.js::buildTools": {
            "changes_after_merge": 8,
            "file_path": "blocks/header/header.js",
            "merged_function": "function buildTools(content) {\n  const toolsList = content.querySelector('div:nth-child(2)');\n  const toolsWrapper = document.createElement('div');\n  toolsWrapper.classList = ('company-links');\n  toolsWrapper.innerHTML = toolsList.innerHTML;\n  return toolsWrapper;\n}",
            "score": -0.627906976744186
        },
        "blocks/header/header.js::decorate": {
            "changes_after_merge": 13,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function decorate(block) {\n  block.textContent = '';\n\n  // fetch nav content\n  const navPath = getMetadata('nav') || '/nav';\n  const resp = await fetch(`${navPath}.plain.html`, window.location.pathname.endsWith('/nav') ? { cache: 'reload' } : {});\n  if (!resp.ok) return;\n\n  const html = await resp.text();\n\n  // decorate nav DOM\n  const content = document.createElement('div');\n  content.innerHTML = html;\n\n  // Create wrapper for logo header part\n  const navbarHeader = document.createElement('div');\n  navbarHeader.classList.add('navbar-header');\n  navbarHeader.append(buildBrandLogo(content));\n  navbarHeader.append(buildTools(content));\n\n  const headerWrapper = document.createElement('div');\n  headerWrapper.classList.add('container', 'top-header');\n  headerWrapper.append(navbarHeader);\n\n  // ------ Nav ------\n  // Create wrapper for nav\n  const mainMenuWrapper = document.createElement('div');\n  mainMenuWrapper.classList.add('mainmenu-wrapper');\n\n  const container = document.createElement('div');\n  container.classList.add('container');\n  const newNav = document.createElement('nav');\n  newNav.setAttribute('id', 'nav');\n\n  const navTabs = content.querySelector('.nav-menu');\n  newNav.innerHTML = navTabs.outerHTML;\n  container.append(newNav);\n  mainMenuWrapper.append(container);\n\n  // link section\n  const navMenuUl = document.createElement('ul');\n  navMenuUl.classList.add('nav-tabs');\n  const menus = [...mainMenuWrapper.querySelectorAll('.nav-menu > div')];\n  for (let i = 0; i < menus.length - 1; i += 2) {\n    const li = document.createElement('li');\n    const menuTitle = menus[i];\n    menuTitle.classList.add('menu-nav-category');\n\n    li.append(menuTitle);\n\n    navMenuUl.append(li);\n  }\n\n  navMenuUl.append(buildRequestQuote());\n\n  mainMenuWrapper.querySelector('.nav-menu').innerHTML = navMenuUl.outerHTML;\n\n  decorateIcons(mainMenuWrapper);\n\n  block.append(headerWrapper, mainMenuWrapper);\n}",
            "score": -0.39534883720930236
        },
        "blocks/header/header.js::fetchHeaderContent": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function fetchHeaderContent() {\n  const navPath = getMetadata('nav') || '/nav';\n  const resp = await fetch(`${navPath}.plain.html`, window.location.pathname.endsWith('/nav') ? { cache: 'reload' } : {});\n  if (!resp.ok) return {};\n\n  const html = await resp.text();\n\n  const content = document.createElement('div');\n  content.innerHTML = html;\n  return content;\n}",
            "score": -1.0
        },
        "blocks/header/header.js::renderCart": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function renderCart() {\n  return (\n    li({ class: 'cart-link' },\n      i({ class: 'fa fa-shopping-cart' }),\n      span({ class: 'cart-count' }, getCartItemCount()),\n      a({\n        href: `${SHOP_BASE_URL}/cart`,\n        target: '_blank',\n        name: 'Cart',\n        rel: 'noopener noreferrer',\n      }, 'CART'),\n    )\n  );\n}",
            "score": -1.0
        },
        "blocks/header/header.js::renderStore": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function renderStore() {\n  return (\n    li({ class: 'store-link' },\n      span({ class: 'icon icon-store' }),\n      a({\n        href: `${SHOP_BASE_URL}/`,\n        target: '_blank',\n        name: 'Store',\n        rel: 'noopener noreferrer',\n      }, 'STORE'),\n    )\n  );\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::addCloseMenuButtonListener": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function addCloseMenuButtonListener(button) {\n  button.addEventListener('mousedown', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.currentTarget.closest('ul').querySelectorAll(\n      '*[aria-expanded=\"true\"]',\n    ).forEach(\n      (el) => el.setAttribute('aria-expanded', 'false'),\n    );\n  });\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::addListeners": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function addListeners(selector, eventType, callback) {\n  const elements = document.querySelectorAll(selector);\n\n  elements.forEach((element) => {\n    elementsWithEventListener.push(element);\n    element.addEventListener(eventType, callback);\n  });\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::buildBrandLogo": {
            "changes_after_merge": 4,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function buildBrandLogo(content) {\n  const logoWrapper = div({ id: 'header-logo' });\n  const logoImg = content.querySelector('.nav-brand > div > div > picture');\n  logoWrapper.innerHTML = logoImg.outerHTML;\n  return logoWrapper;\n}",
            "score": -0.813953488372093
        },
        "blocks/header/helpers.js::buildRequestQuote": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function buildRequestQuote(classes) {\n  const familyId = getMetadata('family-id');\n  const link = familyId ? `/quote-request?pid=${familyId}` : '/quote-request';\n  return li(\n    { class: classes },\n    a(\n      { href: link },\n      'Request Quote',\n    ),\n  );\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/helpers.js::collapseAllSubmenus": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function collapseAllSubmenus(menu) {\n  menu.querySelectorAll('*[aria-expanded=\"true\"]').forEach((el) => el.setAttribute('aria-expanded', 'false'));\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::decorateLanguagesTool": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function decorateLanguagesTool(tools) {\n  const languageTool = tools.querySelector('li:nth-child(2)');\n  const languagesList = languageTool.querySelector('ul');\n  languagesList.classList.add('languages-dropdown');\n\n  languageTool.addEventListener('click', () => {\n    languagesList.classList.toggle('show');\n  });\n\n  const body = document.querySelector('body');\n  body.addEventListener('click', (e) => {\n    if (e.target !== languageTool) {\n      languagesList.classList.remove('show');\n    }\n  });\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/helpers.js::expandMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function expandMenu(element) {\n  if (element.closest('.sticky') && element.querySelector('.menu-nav-submenu')) {\n    window.scroll({ behavior: 'smooth', top: 0 });\n  }\n\n  collapseAllSubmenus(element.closest('ul'));\n  element.setAttribute('aria-expanded', 'true');\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::fetchHeaderContent": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "async function fetchHeaderContent() {\n  const navPath = getMetadata('nav') || '/nav';\n  const resp = await fetch(`${navPath}.plain.html`, window.location.pathname.endsWith('/nav') ? { cache: 'reload' } : {});\n  if (!resp.ok) return {};\n\n  const html = await resp.text();\n\n  const content = document.createElement('div');\n  content.innerHTML = html;\n  return content;\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::getElementsWithEventListener": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function getElementsWithEventListener() {\n  return elementsWithEventListener;\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::getSubmenuIdFromTitle": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function getSubmenuIdFromTitle(title) {\n  return getSubmenuIds()[getSubmenus().indexOf(title)];\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::getSubmenuIds": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function getSubmenuIds() {\n  return getSubmenus().map((submenu) => toClassName(submenu));\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::getSubmenus": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function getSubmenus() {\n  return ['Products', 'Applications', 'Resources', 'Service & Support', 'Company', 'Contact Us'];\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::removeAllEventListeners": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function removeAllEventListeners() {\n  elementsWithEventListener.forEach((el) => {\n    el.replaceWith(el.cloneNode(true));\n  });\n  elementsWithEventListener = [];\n}",
            "score": -1.0
        },
        "blocks/header/helpers.js::reverseElementLinkTagRelation": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/helpers.js",
            "merged_function": "function reverseElementLinkTagRelation(element) {\n  const linkElement = element.querySelector('a');\n  if (linkElement) {\n    element.removeChild(linkElement);\n\n    const newLinkElement = a({ href: linkElement.href });\n\n    element.innerHTML = linkElement.innerHTML;\n    element.parentNode.replaceChild(newLinkElement, element);\n\n    newLinkElement.appendChild(element);\n    return newLinkElement;\n  }\n\n  return element;\n}",
            "score": -1.0
        },
        "blocks/header/menus/left-submenus.js::buildMegaMenuLeftMenus": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/menus/left-submenus.js",
            "merged_function": "function buildMegaMenuLeftMenus(submenuContent) {\n  // get all H2s and create a list of them\n  const h2s = [...submenuContent.querySelectorAll('h2')];\n  const h2List = document.createElement('ul');\n  h2List.classList.add('menu-nav-submenu-sections');\n\n  // add H2s to list\n  h2s.forEach((h2) => {\n    const h2ListItem = document.createElement('li');\n    h2ListItem.classList.add('menu-nav-submenu-section');\n    h2ListItem.innerHTML = h2.outerHTML;\n    h2List.append(h2ListItem);\n  });\n  return h2List;\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/menus/mobile-menu.js::addHamburgerListener": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function addHamburgerListener(hamburger) {\n  hamburger.addEventListener('click', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const body = document.querySelector('body');\n    body.classList.toggle('openmenu');\n  });\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/menus/mobile-menu.js::addOpenMenuListener": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function addOpenMenuListener(element, submenu) {\n  element.addEventListener('click', (e) => {\n    if (e.target === e.currentTarget) {\n      e.preventDefault();\n      e.stopPropagation();\n      openSubMenu(submenu);\n    }\n  });\n}",
            "score": -1.0
        },
        "blocks/header/menus/mobile-menu.js::buildHamburger": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function buildHamburger() {\n  const hamburger = button(\n    { class: 'hamburger hamburger-open' },\n    span(\n      { class: 'sr-only' },\n      'Toggle navigation',\n    ),\n    span(\n      { class: 'icon-bar' },\n    ),\n    span(\n      { class: 'icon-bar' },\n    ),\n    span(\n      { class: 'icon-bar' },\n    ),\n  );\n\n  // add listener to toggle hamburger\n  hamburger.addEventListener('click', () => {\n    const mobileMenu = document.querySelector('.mobile-menu');\n    if (hamburger.classList.contains('hamburger-open')) {\n      // if hamburger is open, close it\n      hamburger.classList.remove('hamburger-open');\n      hamburger.classList.add('hamburger-close');\n      mobileMenu.classList.toggle('mobile-menu-open');\n    } else {\n      // if hamburger is closed, open it\n      hamburger.classList.remove('hamburger-close');\n      hamburger.classList.add('hamburger-open');\n      mobileMenu.classList.toggle('mobile-menu-open');\n    }\n  });\n\n  return hamburger;\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/menus/mobile-menu.js::buildMobileMenu": {
            "changes_after_merge": 7,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function buildMobileMenu() {\n  return nav(\n    { class: 'mobile-menu' },\n    ul(\n      { class: 'mobile-menu-items' },\n      li(\n        { class: 'headersearch-item' },\n        buildMobileSearch(),\n      ),\n    ),\n  );\n}",
            "score": -0.6744186046511628
        },
        "blocks/header/menus/mobile-menu.js::buildMobileMenuItem": {
            "changes_after_merge": 7,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function buildMobileMenuItem(itemContent, menuId) {\n  // get all the h2s in the itemContent\n  const menuItem = li({ class: 'mobile-menu-item' });\n\n  // create first menu item which when clicked will show the other subcategories\n  const titleLink = itemContent.querySelector('h1 a');\n  menuItem.append(titleLink, span({ class: 'caret' }));\n\n  const h2s = [...itemContent.querySelectorAll('h2')];\n  const subCategories = ul({ class: 'mobile-menu-subcategories', 'menu-id': menuId });\n\n  // add back to parent button\n  const backToParentMenuItem = li(\n    { class: 'back-to-parent' },\n    a(\n      { href: '#' },\n      titleLink.textContent,\n    ),\n  );\n  subCategories.append(backToParentMenuItem);\n\n  // add button to parent directly\n  const parentItem = li(\n    { class: 'mobile-menu-subcategory-item' },\n    titleLink.textContent,\n  );\n  subCategories.append(parentItem);\n\n  // add H2s to list\n  h2s.forEach((h2) => {\n    const element = reverseElementLinkTagRelation(h2);\n    element.append(span({ class: 'caret' }));\n\n    const h2ListItem = li(\n      { class: 'mobile-menu-subcategory-item' },\n      element,\n    );\n\n    subCategories.append(h2ListItem);\n  });\n\n  menuItem.append(subCategories);\n\n  const mobileMenuItems = document.querySelector('.mobile-menu-items');\n  mobileMenuItems.append(menuItem);\n}",
            "score": -0.6744186046511628
        },
        "blocks/header/menus/mobile-menu.js::buildMobileMenuTools": {
            "changes_after_merge": 6,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function buildMobileMenuTools(content) {\n  const mobileMenuItems = document.querySelector('.mobile-menu-items');\n\n  // create Contact Us button\n  const contactUsItem = li(\n    { class: 'mobile-menu-item contact-us' },\n    a(\n      { href: '/contact' },\n      'Contact Us',\n    ),\n  );\n  mobileMenuItems.append(contactUsItem);\n\n  // create Request Quote button\n  const requestQuoteItem = li(\n    { class: 'mobile-menu-item request-quote' },\n    a(\n      { href: '/quote-request' },\n      'Request Quote',\n    ),\n  );\n  mobileMenuItems.append(requestQuoteItem);\n\n  // create Tools buttons\n  const toolsList = content.querySelector('div:nth-child(2)');\n  const toolsWrapper = li(\n    { class: 'mobile-menu-item company-links' },\n    toolsList,\n  );\n  mobileMenuItems.append(toolsWrapper);\n}",
            "score": -0.7209302325581395
        },
        "blocks/header/menus/mobile-menu.js::closeSubMenu": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function closeSubMenu(menuItem) {\n  // get parent that has class mobile-menu-item\n  const parentMenuItem = menuItem.closest('.mobile-menu-item');\n  parentMenuItem.classList.remove('submenu-open');\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/menus/mobile-menu.js::getResponseMetadata": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function getResponseMetadata(content, metadataField) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(content, 'text/html');\n  const meta = doc.head.querySelector(`meta[name=\"${metadataField}\"]`);\n\n  if (meta !== null) {\n    return meta.getAttribute('content');\n  }\n\n  return null;\n}",
            "score": -1.0
        },
        "blocks/header/menus/mobile-menu.js::openSubMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/mobile-menu.js",
            "merged_function": "function openSubMenu(menuItem) {\n  menuItem.classList.add('submenu-open');\n}",
            "score": -1.0
        },
        "blocks/header/menus/products.js::buildProductsMegaMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/products.js",
            "merged_function": "function buildProductsMegaMenu(navContent, submenuContent) {\n  const productsSubmenu = document.createElement('div');\n  productsSubmenu.append(submenuContent.querySelector('h1'));\n\n  // get products-megamenu-head-wrapper located in the parent div of the div containing h1\n  productsSubmenu.append(buildProductsMegaMenuHead(submenuContent));\n\n  productsSubmenu.append(buildMegaMenuLeftMenus(submenuContent));\n\n  submenuContent.innerHTML = productsSubmenu.outerHTML;\n  const backgroundImg = navContent.querySelector('.submenu-background img');\n  submenuContent.style.backgroundImage = `url(${backgroundImg.src})`;\n}",
            "score": -1.0
        },
        "blocks/header/menus/products.js::buildProductsMegaMenuHead": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/products.js",
            "merged_function": "function buildProductsMegaMenuHead(submenuContent) {\n  // get products-megamenu-head-wrapper located in the parent div of the div containing h1\n  const productsMegaMenuHeadWrapper = document.createElement('div');\n  productsMegaMenuHeadWrapper.classList.add('right-submenu');\n\n  // insert a div inside products-megamenu-head containing all its content\n  const productsMegaMenuHead = document.createElement('div');\n  productsMegaMenuHead.classList.add('right-submenu-row', 'flex-space-between');\n\n  // get all large-card divs\n  const largeCards = [...submenuContent.querySelectorAll('.large-card')];\n  largeCards.forEach((card) => {\n    // set the link in the card images too\n    const link = card.querySelector('a');\n    const img = card.querySelector('picture');\n    wrapLinkAroundComponent(link, img);\n    productsMegaMenuHead.appendChild(card);\n  });\n\n  productsMegaMenuHeadWrapper.innerHTML = productsMegaMenuHead.outerHTML;\n  return productsMegaMenuHeadWrapper;\n}",
            "score": -1.0
        },
        "blocks/header/menus/products.js::wrapLinkAroundComponent": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/products.js",
            "merged_function": "function wrapLinkAroundComponent(link, component) {\n  const linkCopy = document.createElement('a');\n  linkCopy.href = link.href;\n  linkCopy.innerHTML = component.outerHTML;\n  component.outerHTML = linkCopy.outerHTML;\n}",
            "score": -1.0
        },
        "blocks/header/menus/right-submenus.js::buildCardsMenu": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/menus/right-submenus.js",
            "merged_function": "function buildCardsMenu(cardContent) {\n  // remove all <div><ul><li></li></ul></div> from cardContent\n  // sharepoint is generating empty lists in some elements, so we need to remove them\n  const lists = [...cardContent.querySelectorAll('div > ul > li')];\n  // check if each list is empty\n  lists.forEach((list) => {\n    if (list.innerHTML.trim() === '') {\n      list.parentElement.parentElement.remove();\n    }\n  });\n\n  // for each row div inside card\n  const rows = [...cardContent.querySelectorAll('div')];\n  rows.forEach((row) => {\n    // for each card inside the row\n    const cards = [...row.querySelectorAll('div')];\n    cards.forEach((card) => {\n      // if card div is not empty\n      if (card.innerHTML.trim() !== '') {\n        const link = card.querySelector('a');\n        const picture = card.querySelector('picture');\n\n        wrapLinkAroundComponent(link, picture);\n\n        // if the second paragraph of the card contains the string (expand-image),\n        // we style the image. We need this because some images fill the card, others dont\n        const secondParagraph = card.querySelector('p:nth-child(2)');\n        if (secondParagraph.textContent.includes('(expand-image)')) {\n          picture.classList.add('expanded-image');\n          // delete the second paragraph\n          secondParagraph.remove();\n        }\n      }\n    });\n  });\n\n  return cardContent;\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/menus/right-submenus.js::buildRightSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/right-submenus.js",
            "merged_function": "function buildRightSubmenu(h2) {\n  // get products-megamenu-head-wrapper located in the parent div of the div containing h1\n  const rightSubmenuWrapper = document.createElement('div');\n  rightSubmenuWrapper.classList.add('right-submenu');\n\n  // insert a div inside products-megamenu-head containing all its content\n  const rightSubmenuRow = document.createElement('div');\n  rightSubmenuRow.classList.add('right-submenu-row', 'flex-space-between');\n\n  // get div in the parent of the H2\n  const h2ParentDiv = h2.parentElement;\n  // get all divs with a class right-submenu\n  const rightSubmenus = [...h2ParentDiv.querySelectorAll('.right-submenu-content')];\n\n  // add all right-submenu divs to the H2\n  rightSubmenus.forEach((rightSubmenu) => {\n    // get the class name that has a suffix -submenu\n    const rightSubmenuClass = rightSubmenu.classList.value.split(' ').find((className) => className.endsWith('-submenu'));\n    const rightSubmenuBuilder = getRightSubmenuBuilder(rightSubmenuClass);\n    if (rightSubmenuBuilder) {\n      rightSubmenuBuilder(rightSubmenu);\n      rightSubmenuRow.appendChild(rightSubmenu);\n    }\n  });\n\n  rightSubmenuWrapper.innerHTML = rightSubmenuRow.outerHTML;\n  return rightSubmenuWrapper;\n}",
            "score": -1.0
        },
        "blocks/header/menus/right-submenus.js::buildTextSubmenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/right-submenus.js",
            "merged_function": "function buildTextSubmenu(textContent) {\n  return textContent;\n}",
            "score": -1.0
        },
        "blocks/header/menus/right-submenus.js::getRightSubmenuBuilder": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/right-submenus.js",
            "merged_function": "function getRightSubmenuBuilder(className) {\n  const map = new Map();\n  map.set('cards-submenu', buildCardsMenu);\n  map.set('text-submenu', buildTextSubmenu);\n  return map.get(className);\n}",
            "score": -1.0
        },
        "blocks/header/menus/right-submenus.js::wrapLinkAroundComponent": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/right-submenus.js",
            "merged_function": "function wrapLinkAroundComponent(link, component) {\n  const linkCopy = document.createElement('a');\n  linkCopy.href = link.href;\n  // Insert the new div before the existing div\n  component.parentNode.insertBefore(linkCopy, component);\n  // Move the existing div inside the new div\n  linkCopy.appendChild(component);\n  return linkCopy;\n}",
            "score": -1.0
        },
        "blocks/header/menus/search.js::buildMobileSearch": {
            "changes_after_merge": 3,
            "file_path": "blocks/header/menus/search.js",
            "merged_function": "function buildMobileSearch() {\n  return div(\n    { class: 'headersearch' },\n    div(\n      { class: 'search' },\n      form(\n        { class: 'search-form', action: '/search-results', method: 'GET' },\n        input(\n          {\n            id: 'mobileSearchQuery', class: 'form-control', placeholder: 'Search moleculardevices.com', type: 'text',\n          },\n        ),\n        button(\n          { class: 'searchbutton', type: 'submit', 'aria-label': 'Search' },\n          i({ class: 'fa fa-search' }),\n        ),\n      ),\n    ),\n  );\n}",
            "score": -0.8604651162790697
        },
        "blocks/header/menus/search.js::buildSearch": {
            "changes_after_merge": 4,
            "file_path": "blocks/header/menus/search.js",
            "merged_function": "function buildSearch(content) {\n  // get div with class Robot Image with Speach from navContent\n  const robotDiv = content.querySelector('.robot-image-with-speech');\n\n  const searchForm = form(\n    { class: 'search-form', action: '/search-results', method: 'GET' },\n    input(\n      {\n        id: 'searchQuery', class: 'form-control', type: 'text', placeholder: 'moleculardevices.com',\n      },\n    ),\n    button(\n      { class: 'transparentBtn btn searchbutton', type: 'submit', 'aria-label': 'Search' },\n      'Search',\n    ),\n  );\n\n  const search = li(\n    { class: 'searchlink header-search fa fa-search', 'aria-expanded': 'false' },\n    div(\n      { class: 'menu-nav-search-flex' },\n      div(\n        { class: 'menu-nav-search-view' },\n        robotDiv,\n        div(\n          { class: 'menu-nav-search-bar' },\n          h3(\n            'Search',\n          ),\n          div(\n            { class: 'search-form-group' },\n            searchForm,\n          ),\n        ),\n      ),\n      div(\n        { class: 'menu-nav-submenu-close' },\n      ),\n    ),\n  );\n\n  return search;\n}",
            "score": -0.813953488372093
        },
        "blocks/header/menus/search.js::buildSearchBar": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/menus/search.js",
            "merged_function": "function buildSearchBar(formId) {\n  const searchForm = form(\n    {\n      id: formId, class: 'search-form', action: '/search-results', method: 'GET',\n    },\n    input(\n      {\n        class: 'form-control', type: 'text', placeholder: 'moleculardevices.com',\n      },\n    ),\n    button(\n      { class: 'transparentBtn btn searchbutton', type: 'submit', 'aria-label': 'Search' },\n      'Search',\n    ),\n  );\n\n  return div(\n    { class: 'menu-nav-search-bar' },\n    h3(\n      'Search',\n    ),\n    div(\n      { class: 'search-form-group' },\n      searchForm,\n    ),\n  );\n}",
            "score": -1.0
        },
        "blocks/header/menus/search.js::submitSearchForm": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/menus/search.js",
            "merged_function": "function submitSearchForm(event, searchQueryId) {\n  event.preventDefault();\n  const searchQuery = document.getElementById(searchQueryId).value;\n  const encodedQuery = encodeURIComponent(searchQuery);\n  const searchUrl = `/search-results#q=${encodedQuery}&t=All&sort=relevancy`;\n  window.location.href = searchUrl;\n}",
            "score": -0.9534883720930233
        },
        "blocks/hero-advanced/hero-advanced.js::buildMediaGallery": {
            "changes_after_merge": 6,
            "file_path": "blocks/hero-advanced/hero-advanced.js",
            "merged_function": "async function buildMediaGallery(mg) {\n  // container\n  const overlay = div({ class: 'overlay' });\n  const content = div({ class: 'overlay-content' });\n  const carousel = div({ class: 'overlay-carousel' });\n  mg.after(overlay);\n  overlay.appendChild(content);\n  content.appendChild(carousel);\n\n  // buttons\n  const close = a({ class: 'close' }, (span({ class: 'icon icon-close-video' })));\n  close.addEventListener('click', () => {\n    overlay.classList.remove('open');\n  });\n  const right = a({ class: 'right' }, (span({ class: 'icon icon-chevron-right' })));\n  right.addEventListener('click', () => {\n    carousel.scrollTo({ top: 0, left: carousel.scrollLeft + carousel.parentElement.offsetWidth, behavior: 'smooth' });\n  });\n  const left = a({ class: 'left' }, (span({ class: 'icon icon-chevron-left' })));\n  left.addEventListener('click', () => {\n    carousel.scrollTo({ top: 0, left: carousel.scrollLeft - carousel.parentElement.offsetWidth, behavior: 'smooth' });\n  });\n  content.append(close, right, left);\n  decorateIcons(content);\n\n  // fragment\n  const url = new URL(mg.href);\n  const fragment = await loadFragment(url.pathname);\n  [...fragment.children].forEach((section, i) => {\n    const h3 = section.querySelector('h3');\n    if (h3) h3.textContent = `${i + 1} of ${i + fragment.childElementCount} ${h3.textContent}`;\n    carousel.appendChild(section);\n  });\n}",
            "score": -0.7209302325581395
        },
        "blocks/hero-advanced/hero-advanced.js::decorate": {
            "changes_after_merge": 23,
            "file_path": "blocks/hero-advanced/hero-advanced.js",
            "merged_function": "async function decorate(block) {\n  const h1 = block.querySelector('h1');\n\n  const desktop = block.querySelector('div');\n  h1.parentNode.insertBefore(desktop.querySelector('div:nth-child(2)'), h1);\n  desktop.remove();\n\n  const mobile = block.querySelector('div');\n  h1.parentNode.insertBefore(mobile.querySelector('div:nth-child(2)'), h1.nextSibling);\n  mobile.remove();\n\n  const rightCol = block.querySelector('div > div:nth-child(2)');\n  if (getVideoId(rightCol.textContent)) {\n    rightCol.classList.add('video-column');\n    buildVideo(block, rightCol, getVideoId(rightCol.textContent));\n  }\n\n  buildHero(block);\n}",
            "score": 0.06976744186046502
        },
        "blocks/hero-advanced/hero-advanced.js::openMediaGallery": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero-advanced/hero-advanced.js",
            "merged_function": "async function openMediaGallery(mg) {\n  const overlay = mg.parentElement.querySelector('.overlay');\n  if (overlay) overlay.classList.add('open');\n}",
            "score": -1.0
        },
        "blocks/hero-advanced/hero-advanced.js::scroll": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero-advanced/hero-advanced.js",
            "merged_function": "scroll = (leftScroll) => carousel.scrollTo({ top: 0, left: leftScroll, behavior: 'smooth' })",
            "score": -1.0
        },
        "blocks/hero-advanced/hero-advanced.js::videoButton": {
            "changes_after_merge": 2,
            "file_path": "blocks/hero-advanced/hero-advanced.js",
            "merged_function": "function videoButton(container, button, url) {\n  const videoId = url.pathname.split('/').at(-1).trim();\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      loadScript('https://play.vidyard.com/embed/v4.js');\n      const overlay = div({ id: 'overlay' }, div({ class: 'vidyard-player-embed', 'data-uuid': videoId, 'dava-v': '4', 'data-type': 'lightbox', 'data-autoplay': '2' }));\n      container.prepend(overlay);\n      button.addEventListener('click', () => {\n        VidyardV4.api.getPlayersByUUID(videoId)[0].showLightbox();\n      });\n    }\n  });\n  observer.observe(container);\n}",
            "score": -0.9069767441860466
        },
        "blocks/hero-carousel/hero-carousel.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero-carousel/hero-carousel.js",
            "merged_function": "async function decorate(block) {\n  createCarousel(block, [...block.children], {\n    defaultStyling: true,\n    navButtons: true,\n    autoScroll: false,\n  });\n}",
            "score": -1.0
        },
        "blocks/hero-video/hero-video.js::createIcons": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero-video/hero-video.js",
            "merged_function": "function createIcons(target, iconNames) {\n  iconNames.forEach((iconName) => {\n    const icon = document.createElement('span');\n    icon.classList.add('icon');\n    icon.classList.add(`icon-${iconName}`);\n\n    target.appendChild(icon);\n  });\n\n  decorateIcons(target);\n}",
            "score": -1.0
        },
        "blocks/hero-video/hero-video.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero-video/hero-video.js",
            "merged_function": "function decorate(block) {\n  const videoBanner = block.children[0];\n  videoBanner.classList.add('hero-video-banner');\n\n  const heroContent = videoBanner.children[0];\n  heroContent.classList.add('teaser-video-container');\n\n  const teaserVideoLink = heroContent.querySelector('a');\n  const teaserPicture = heroContent.querySelector('img');\n\n  decorateTeaser(teaserVideoLink, teaserPicture, heroContent);\n\n  const overlay = videoBanner.children[1];\n  overlay.classList = 'overlay';\n\n  const fullScreenVideoLink = overlay.querySelector('a:last-of-type');\n  if (!fullScreenVideoLink) {\n    return;\n  }\n  const fullScreenVideoLinkHref = fullScreenVideoLink.href;\n  decorateOverlayButton(fullScreenVideoLink, block, overlay);\n  decorateFullScreenVideo(fullScreenVideoLinkHref, teaserPicture, videoBanner);\n}",
            "score": -1.0
        },
        "blocks/hero-video/hero-video.js::decorateFullScreenVideo": {
            "changes_after_merge": 1,
            "file_path": "blocks/hero-video/hero-video.js",
            "merged_function": "async function decorateFullScreenVideo(fullScreenVideoLink, teaserPicture, target) {\n  const fullVideoContainer = document.createElement('div');\n  fullVideoContainer.classList.add('full-video-container');\n\n  const video = document.createElement('video');\n  video.classList.add('video-cover');\n  video.innerHTML = `<source src=\"${fullScreenVideoLink}\" type=\"video/mp4\">`;\n  video.setAttribute('preload', 'metadata');\n  video.setAttribute('poster', teaserPicture.currentSrc);\n\n  video.addEventListener('click', () => { toggleVideoPlay(video); });\n\n  const closeVideoButton = document.createElement('div');\n  closeVideoButton.classList.add('close-video');\n  createIcons(closeVideoButton, ['close-video']);\n  closeVideoButton.addEventListener('click', () => {\n    video.pause();\n    video.currentTime = 0;\n    video.load();\n    fullVideoContainer.style.display = 'none';\n  });\n\n  const playPauseVideoButton = document.createElement('div');\n  playPauseVideoButton.classList.add('play-pause-fullscreen-button');\n  createIcons(playPauseVideoButton, ['full-screen-play', 'full-screen-pause']);\n  playPauseVideoButton.addEventListener('click', () => { toggleVideoPlay(video); });\n\n  video.addEventListener('play', () => {\n    const [playIcon] = playPauseVideoButton.querySelectorAll('svg');\n    playIcon.style.opacity = 1;\n    setTimeout(() => {\n      playIcon.style.opacity = 0;\n    }, 400);\n  });\n\n  video.addEventListener('pause', () => {\n    const [, pauseIcon] = playPauseVideoButton.querySelectorAll('svg');\n    pauseIcon.style.opacity = 1;\n    setTimeout(() => {\n      pauseIcon.style.opacity = 0;\n    }, 400);\n  });\n\n  fullVideoContainer.appendChild(closeVideoButton);\n  fullVideoContainer.appendChild(playPauseVideoButton);\n  fullVideoContainer.appendChild(video);\n  target.appendChild(fullVideoContainer);\n}",
            "score": -0.9534883720930233
        },
        "blocks/hero-video/hero-video.js::decorateOverlayButton": {
            "changes_after_merge": 1,
            "file_path": "blocks/hero-video/hero-video.js",
            "merged_function": "function decorateOverlayButton(fullScreenVideoLink, block, overlay) {\n  const button = document.createElement('button');\n  button.classList.add('video-banner-btn');\n\n  button.innerHTML = fullScreenVideoLink.innerHTML;\n\n  button.addEventListener('click', () => {\n    const fullVideoContainer = block.querySelector('.full-video-container');\n    fullVideoContainer.style.display = 'block';\n    fullVideoContainer.querySelector('video').play();\n  });\n\n  overlay.appendChild(button);\n  fullScreenVideoLink.remove();\n}",
            "score": -0.9534883720930233
        },
        "blocks/hero-video/hero-video.js::decorateTeaser": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero-video/hero-video.js",
            "merged_function": "function decorateTeaser(video, teaserPicture, target) {\n  if (!video && !teaserPicture) {\n    // nothing to decorate\n    return;\n  }\n\n  if (!video) {\n    // author didn't configure a teaser video\n    // we'll use the image as the hero content for all screen sizes\n    teaserPicture.style.setProperty('display', 'block', 'important');\n    decorateTeaserPicture(teaserPicture, target);\n    return;\n  }\n\n  const videoTag = document.createElement('video');\n  if (!teaserPicture) {\n    // author didn't configure a teaser picture\n    // we'll use the video for all screen sizes\n    videoTag.style.setProperty('display', 'block', 'important');\n  } else {\n    videoTag.setAttribute('poster', teaserPicture.currentSrc);\n    decorateTeaserPicture(teaserPicture, target);\n  }\n\n  videoTag.classList.add('video-cover');\n  videoTag.toggleAttribute('muted', true);\n  videoTag.toggleAttribute('loop', true);\n  videoTag.setAttribute('title', video.title);\n\n  const mql = window.matchMedia('only screen and (max-width: 768px)');\n  if (mql.matches && teaserPicture) {\n    videoTag.setAttribute('preload', 'metadata');\n  } else {\n    videoTag.toggleAttribute('autoplay', true);\n  }\n\n  mql.onchange = (e) => {\n    if (!e.matches && !videoTag.hasAttribute('autoplay')) {\n      videoTag.toggleAttribute('autoplay', true);\n      videoTag.play();\n    }\n  };\n\n  videoTag.innerHTML = `<source src=\"${video.href}\" type=\"video/mp4\">`;\n  target.prepend(videoTag);\n  videoTag.muted = true;\n  video.remove();\n}",
            "score": -1.0
        },
        "blocks/hero-video/hero-video.js::decorateTeaserPicture": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero-video/hero-video.js",
            "merged_function": "function decorateTeaserPicture(teaserPicture, target) {\n  teaserPicture.parentElement.classList.add('video-cover');\n  target.appendChild(teaserPicture.parentElement);\n}",
            "score": -1.0
        },
        "blocks/hero-video/hero-video.js::toggleVideoPlay": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero-video/hero-video.js",
            "merged_function": "function toggleVideoPlay(video) {\n  if (video.paused) {\n    video.play();\n  } else {\n    video.pause();\n  }\n}",
            "score": -1.0
        },
        "blocks/hero/hero.js::addBlockSticker": {
            "changes_after_merge": 1,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function addBlockSticker(container) {\n  const stickerContainer = document.createElement('div');\n  stickerContainer.classList.add('sticker');\n  const sticker = document.createElement('a');\n  sticker.href = '/lab-notes';\n\n  const stickerPicture = document.createElement('picture');\n  stickerPicture.innerHTML = `\n    <source type=\"image/webp\" srcset=\"/images/lab-notes-hero-sticker.webp\">\n    <img loading=\"lazy\" alt=\"Molecular Devices Lab Notes\" type=\"image/png\" src=\"/images/lab-notes-hero-sticker.png\">\n  `;\n  sticker.appendChild(stickerPicture);\n  stickerContainer.appendChild(sticker);\n  container.appendChild(stickerContainer);\n}",
            "score": -0.9534883720930233
        },
        "blocks/hero/hero.js::addMetadata": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function addMetadata(container) {\n  const metadataContainer = document.createElement('div');\n  metadataContainer.classList.add('metadata');\n\n  const publishDate = formatDate(getMetadata('publication-date'), { month: 'long' });\n\n  const publishDateContainer = document.createElement('div');\n  publishDateContainer.innerHTML = `\n    <i class=\"fa fa-calendar\"></i>\n    <span class=\"blog-publish-date\">${publishDate}</span>\n  `;\n  metadataContainer.appendChild(publishDateContainer);\n\n  const author = getMetadata('author');\n  if (author) {\n    const authorContainer = document.createElement('div');\n    authorContainer.innerHTML = `\n      <i class=\"fa fa-user\"></i>\n      <span class=\"blog-author\">${author}</span>\n    `;\n    metadataContainer.appendChild(authorContainer);\n  }\n\n  container.appendChild(metadataContainer);\n}",
            "score": -1.0
        },
        "blocks/hero/hero.js::buildHero": {
            "changes_after_merge": 23,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function buildHero(block) {\n  const inner = document.createElement('div');\n  inner.classList.add('hero-inner');\n  const container = document.createElement('div');\n  container.classList.add('container');\n\n  let picture = block.querySelector('picture');\n  if (picture) {\n    const originalHeroBg = picture.lastElementChild;\n    const optimizedHeroBg = createOptimizedPicture(\n      originalHeroBg.src,\n      originalHeroBg.getAttribute('alt'),\n      true,\n      [\n        { media: '(min-width: 600px)', width: '2000' },\n        { width: '1200' },\n      ],\n    );\n\n    picture.replaceWith(optimizedHeroBg);\n    picture = optimizedHeroBg;\n    picture.classList.add('hero-background');\n    inner.prepend(picture.parentElement);\n  }\n\n  const rows = block.children.length;\n  [...block.children].forEach((row, i) => {\n    if (i === (rows - 1)) {\n      if (row.childElementCount > 1) {\n        container.classList.add('two-column');\n        [...row.children].forEach((column) => {\n          container.appendChild(column);\n        });\n      } else {\n        container.appendChild(row);\n      }\n    } else {\n      row.remove();\n    }\n  });\n\n  const breadcrumbs = document.createElement('div');\n  breadcrumbs.classList.add('breadcrumbs');\n\n  block.appendChild(inner);\n  inner.appendChild(breadcrumbs);\n  inner.appendChild(container);\n\n  if (block.classList.contains('blog')) {\n    addMetadata(container);\n    addBlockSticker(breadcrumbs);\n    block.parentElement.appendChild(container);\n  }\n\n  loadBreadcrumbs(breadcrumbs);\n}",
            "score": 0.06976744186046502
        },
        "blocks/hero/hero.js::decorate": {
            "changes_after_merge": 19,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function decorate(block) {\n  const container = document.createElement('div');\n  container.classList.add('container');\n\n  [...block.children].forEach((div) => {\n    container.appendChild(div);\n  });\n\n  block.appendChild(container);\n\n  const picture = block.querySelector('picture');\n  block.prepend(picture.parentElement);\n}",
            "score": -0.11627906976744184
        },
        "blocks/hero/hero.js::decoratePricingStyles": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function decoratePricingStyles(pricintRequestButtonContainer) {\n  if (!pricintRequestButtonContainer) {\n    return;\n  }\n  const singlePrimaryButton = pricintRequestButtonContainer.closest('.pricing.single-primary-button');\n  const nextButtons = pricintRequestButtonContainer.parentElement.querySelectorAll('.button-container + .button-container');\n  let cntButtons = 0;\n  nextButtons.forEach((button) => {\n    const primaryButton = button.querySelector('a.primary');\n    if (primaryButton && singlePrimaryButton) {\n      // in case upcoming primary buttons should be ignored, hide these primary buttons\n      button.style.display = 'none';\n    } else {\n      if (cntButtons > 0) {\n        // show max one button after primary button\n        button.style.display = 'none';\n      }\n      cntButtons++;\n      if (primaryButton) {\n        // make sure next button is displayed as secondary button\n        primaryButton.classList.remove('primary');\n        primaryButton.classList.add('secondary');\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "blocks/hero/hero.js::detectPricingRequestAvailable": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function detectPricingRequestAvailable() {\n  if (!localStorage.getItem('ipstack:geolocation')) {\n    return false;\n  }\n\n  try {\n    const contient = JSON.parse(localStorage.getItem('ipstack:geolocation')).continent_code;\n    return contient === 'EU' || contient === 'NA';\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Could not load user information.', err);\n    return false;\n  }\n}",
            "score": -1.0
        },
        "blocks/hero/hero.js::loadBreadcrumbs": {
            "changes_after_merge": 0,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "async function loadBreadcrumbs(breadcrumbsContainer) {\n  const breadCrumbsModule = await import('../breadcrumbs/breadcrumbs-create.js');\n  breadCrumbsModule.default(breadcrumbsContainer);\n}",
            "score": -1.0
        },
        "blocks/hero/hero.js::showHidePricingRequestButton": {
            "changes_after_merge": 3,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function showHidePricingRequestButton(block) {\n  const pricingRequestButton = block.querySelector('a[href*=\"/quote-request\"][href*=\"type=quote\"]');\n  if (!pricingRequestButton) return;\n\n  const pricintRequestButtonContainer = pricingRequestButton.closest('.button-container');\n  if (!pricintRequestButtonContainer) return;\n\n  if (!detectPricingRequestAvailable()) {\n    pricintRequestButtonContainer.style.display = 'none';\n  } else {\n    pricintRequestButtonContainer.style.display = '';\n  }\n}",
            "score": -0.8604651162790697
        },
        "blocks/hubspot-modal/hubspot-modal.js::closeModal": {
            "changes_after_merge": 0,
            "file_path": "blocks/hubspot-modal/hubspot-modal.js",
            "merged_function": "function closeModal() {\n  const modal = document.getElementById('my-modal');\n  modal.classList.remove('open');\n}",
            "score": -1.0
        },
        "blocks/hubspot-modal/hubspot-modal.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/hubspot-modal/hubspot-modal.js",
            "merged_function": "function decorate(block) {\n  block.classList.add('modal-block');\n\n  // Create the modal element\n  const closeButton = button({ class: 'modal-close' });\n  const closeButtonImage = document.createElement('img');\n  closeButtonImage.src = 'https://www.moleculardevices.com/themes/moldev/images/close2.png';\n  closeButtonImage.alt = 'Close';\n  closeButton.appendChild(closeButtonImage);\n\n  const modal = div({ id: 'my-modal', class: 'modal' },\n    div({ class: 'modal-content' }),\n    closeButton,\n  );\n\n  document.body.appendChild(modal);\n\n  // Add event listener to open the modal\n  block.addEventListener('click', (event) => {\n    if (event.target.tagName === 'A') {\n      event.preventDefault(); // Prevent the link from opening in a new tab\n    }\n    openModal(block);\n  });\n\n  // Add event listener to close the modal when clicking the backdrop and close button\n  modal.addEventListener('click', (event) => {\n    if (event.target === modal || event.target === closeButtonImage) {\n      closeModal();\n    }\n  });\n}",
            "score": -1.0
        },
        "blocks/hubspot-modal/hubspot-modal.js::openModal": {
            "changes_after_merge": 0,
            "file_path": "blocks/hubspot-modal/hubspot-modal.js",
            "merged_function": "function openModal(block) {\n  const modal = document.getElementById('my-modal');\n  const link = block.querySelector('a');\n  const iframeSrc = link.href;\n\n  const modalContent = modal.querySelector('.modal-content');\n\n  // Check if the iframe is already present\n  if (!modalContent.querySelector('iframe')) {\n    modalContent.appendChild(iframe({ src: iframeSrc }));\n  }\n\n  modal.classList.add('open');\n}",
            "score": -1.0
        },
        "blocks/image-gallery/image-gallery.js::decorate": {
            "changes_after_merge": 5,
            "file_path": "blocks/image-gallery/image-gallery.js",
            "merged_function": "async function decorate(block) {\n  const wrapper = block.parentElement;\n\n  block.querySelectorAll(':scope > div > div > p:nth-of-type(2) > picture').forEach((picture) => {\n    picture.parentElement.previousElementSibling.classList.add('thumbnail');\n  });\n\n  const scroll = (leftScroll) => {\n    let resultingLeftScroll = leftScroll;\n    if (leftScroll < 0) {\n      resultingLeftScroll = leftScroll + wrapper.offsetWidth * block.children.length;\n    } else if (leftScroll + wrapper.offsetWidth > wrapper.offsetWidth * block.children.length) {\n      resultingLeftScroll = 0;\n    }\n    block.scrollTo({ top: 0, left: resultingLeftScroll, behavior: 'smooth' });\n  };\n  const right = span({ class: 'icon icon-icon_link gallery-button-right' });\n  const left = span({ class: 'icon icon-icon_link gallery-button-left' });\n  const close = span({ class: 'icon icon-close-circle-outline gallery-button-close' });\n\n  right.addEventListener('click', () => { scroll(block.scrollLeft + wrapper.offsetWidth); });\n  left.addEventListener('click', () => { scroll(block.scrollLeft - wrapper.offsetWidth); });\n  close.addEventListener('click', () => {\n    wrapper.parentElement.classList.remove('overlay');\n    block.scrollIntoView({ behavior: 'instant', block: 'center' });\n  });\n  wrapper.append(close, right, left);\n  [...block.children].forEach((row, i) => {\n    row.querySelector('img:first-of-type').addEventListener('click', () => {\n      wrapper.parentElement.classList.add('overlay');\n      scroll((wrapper.offsetWidth * (i)));\n    });\n  });\n  await decorateIcons(wrapper);\n}",
            "score": -0.7674418604651163
        },
        "blocks/image-gallery/image-gallery.js::scroll": {
            "changes_after_merge": 1,
            "file_path": "blocks/image-gallery/image-gallery.js",
            "merged_function": "scroll = (leftScroll) => {\n    let resultingLeftScroll = leftScroll;\n    if (leftScroll < 0) {\n      resultingLeftScroll = leftScroll + wrapper.offsetWidth * block.children.length;\n    } else if (leftScroll + wrapper.offsetWidth > wrapper.offsetWidth * block.children.length) {\n      resultingLeftScroll = 0;\n    }\n    block.scrollTo({ top: 0, left: resultingLeftScroll, behavior: 'smooth' });\n  }",
            "score": -0.9534883720930233
        },
        "blocks/image-list/image-list.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/image-list/image-list.js",
            "merged_function": "function decorate() {\n\n}",
            "score": -0.9534883720930233
        },
        "blocks/latest-events/latest-events.js::buildList": {
            "changes_after_merge": 1,
            "file_path": "blocks/latest-events/latest-events.js",
            "merged_function": "function buildList(data, block) {\n  const list = div({ class: 'list' });\n  block.append(list);\n  data.forEach((item) => {\n    list.append(div({ class: 'item' },\n      p({},\n        a({ href: item.path, title: item.title },\n          item.title,\n        ),\n      ),\n      p({}, `${formatDate(item.eventStart, item.eventEnd)} | ${item.eventRegion}`),\n    ));\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/latest-events/latest-events.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/latest-events/latest-events.js",
            "merged_function": "async function decorate(block) {\n  const data = await ffetch('/query-index.json')\n    .sheet('events')\n    .chunks(5)\n    .limit(4)\n    .all();\n  buildList(data, block);\n}",
            "score": -1.0
        },
        "blocks/latest-events/latest-events.js::formatDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/latest-events/latest-events.js",
            "merged_function": "function formatDate(startDate, endDate) {\n  const startDateObj = new Date(Date.UTC(0, 0, 0, 0, 0, startDate));\n  const endDateObj = new Date(Date.UTC(0, 0, 0, 0, 0, endDate));\n  return `${startDateObj.toLocaleDateString('en-US', { month: 'short', day: '2-digit' })}\n    - ${endDateObj.toLocaleDateString('en-US', { month: 'short', day: '2-digit', year: 'numeric' })}`;\n}",
            "score": -1.0
        },
        "blocks/latest-news/latest-news.js::buildList": {
            "changes_after_merge": 1,
            "file_path": "blocks/latest-news/latest-news.js",
            "merged_function": "function buildList(data, block) {\n  data.forEach((item, idx) => {\n    let dateLine = formatDate(item.date);\n    if (item.publisher) dateLine += ` | ${item.publisher}`;\n    block.append(article({},\n      div({ class: 'image' },\n        a({ href: item.path, title: item.title },\n          createOptimizedPicture(item.image, item.title, (idx === 0), [{ width: '500' }]),\n        ),\n      ),\n      div({ class: 'title' },\n        p({}, dateLine),\n        p({}, a({ href: item.path, title: item.title }, item.title)),\n      ),\n    ));\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/latest-news/latest-news.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/latest-news/latest-news.js",
            "merged_function": "async function decorate(block) {\n  const data = await ffetch('/query-index.json')\n    .sheet('news')\n    .chunks(5)\n    .limit(3)\n    .all();\n  buildList(data, block);\n}",
            "score": -1.0
        },
        "blocks/latest-news/latest-news.js::formatDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/latest-news/latest-news.js",
            "merged_function": "function formatDate(date) {\n  const dateObj = new Date(Date.UTC(0, 0, 0, 0, 0, date));\n  return dateObj.toLocaleDateString('en-US', { month: 'short', day: '2-digit', year: 'numeric' });\n}",
            "score": -1.0
        },
        "blocks/latest-publications/latest-publications.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/latest-publications/latest-publications.js",
            "merged_function": "async function decorate(block) {\n  const data = await ffetch('/query-index.json')\n    .sheet('publications')\n    .chunks(5)\n    .limit(4)\n    .all();\n  buildList(data, block);\n}",
            "score": -1.0
        },
        "blocks/latest-resources/latest-resources.js::decorate": {
            "changes_after_merge": 9,
            "file_path": "blocks/latest-resources/latest-resources.js",
            "merged_function": "async function decorate(block) {\n  const template = getMetadata('template');\n  const title = document.querySelector('.hero .container h1, .hero-advanced .container h1').textContent;\n\n  const resources = await ffetch('/query-index.json')\n    .sheet('resources')\n    .filter((resource) => resource[relatedResourcesHeaders[template]].includes(title)\n        && !relatedResourcesExcludedTypes.includes(resource.type))\n    .limit(9)\n    .all();\n\n  const resourceCard = await createCard({\n    defaultButtonText: 'Learn more',\n    descriptionLength: block.classList.contains('list') ? 180 : 75,\n  });\n  await createCarousel(\n    block,\n    resources,\n    {\n      defaultStyling: true,\n      navButtons: true,\n      dotButtons: false,\n      infiniteScroll: true,\n      autoScroll: false,\n      visibleItems: [\n        {\n          items: 1,\n          condition: () => window.screen.width < 768,\n        },\n        {\n          items: 2,\n          condition: () => window.screen.width < 1200,\n        }, {\n          items: 3,\n        },\n      ],\n      cardRenderer: resourceCard,\n    },\n  );\n  const viewAllBtn = div({ class: 'latest-resources-button' },\n    p({ class: 'button-container' },\n      strong(\n        a({\n          href: '#resources',\n          class: 'button primary',\n          onclick: onViewAllClick,\n        }, 'View all Resources'),\n      ),\n    ),\n  );\n  decorateButtons(viewAllBtn);\n  block.parentElement.parentElement.append(viewAllBtn);\n}",
            "score": -0.5813953488372092
        },
        "blocks/latest-resources/latest-resources.js::getFeaturedResources": {
            "changes_after_merge": 0,
            "file_path": "blocks/latest-resources/latest-resources.js",
            "merged_function": "async function getFeaturedResources(paths) {\n  return ffetch('/query-index.json')\n    .sheet('resources')\n    .chunks(2000)\n    .filter((resource) => paths.includes(resource.path)\n      || paths.includes(resource.gatedURL)\n      || (resource.gatedURL && resource.gatedURL !== '0' && paths.includes(new URL(resource.gatedURL, 'https://moleculardevices.com').pathname)),\n    )\n    .limit(9)\n    .all();\n}",
            "score": -1.0
        },
        "blocks/latest-resources/latest-resources.js::getResourcesFromMetaTags": {
            "changes_after_merge": 0,
            "file_path": "blocks/latest-resources/latest-resources.js",
            "merged_function": "async function getResourcesFromMetaTags() {\n  const template = getMetadata('template');\n  const identifier = getMetadata('identifier') || document.querySelector('.hero .container h1, .hero-advanced .container h1').textContent;\n\n  const includedResourceTypes = Object.keys(resourceMapping);\n  const relatedResource = relatedResourcesHeaders[template] || 'relatedProducts';\n\n  return ffetch('/query-index.json')\n    .sheet('resources')\n    .chunks(2000)\n    .filter((resource) => resource[relatedResource].includes(identifier)\n      && includedResourceTypes.includes(resource.type))\n    .limit(9)\n    .all();\n}",
            "score": -1.0
        },
        "blocks/latest-resources/latest-resources.js::onViewAllClick": {
            "changes_after_merge": 1,
            "file_path": "blocks/latest-resources/latest-resources.js",
            "merged_function": "function onViewAllClick(e) {\n  e.preventDefault();\n  const resourcesLink = document.querySelector('.page-tabs li > a[href=\"#resources\"]');\n  resourcesLink.click();\n  window.scroll(0, 0);\n}",
            "score": -0.9534883720930233
        },
        "blocks/local-distributor/local-distributor.js::createExternalLink": {
            "changes_after_merge": 0,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function createExternalLink(val) {\n  return `<a href='${val}' target=\"_blank\">${val}</a>`;\n}",
            "score": -1.0
        },
        "blocks/local-distributor/local-distributor.js::decorate": {
            "changes_after_merge": 12,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "async function decorate(block) {\n  const distributors = await ffetch('/contacts/local-distibutors.json').withFetch(fetch).all();\n\n  const productFamilyList = await ffetch('/contacts/local-distibutors.json')\n    .sheet('PF')\n    .map(({ PrimaryProducts }) => PrimaryProducts)\n    .all();\n\n  const countryList = [...new Set(distributors.map(({ Country }) => Country))];\n\n  const renderAddress = () => {\n    let countryName = document.getElementById('country').value;\n    const productFamily = document.getElementById('product_family').value;\n\n    if (!countryName) {\n      countryName = 'United States';\n      document.querySelector('#country').value = countryName;\n    }\n\n    const filterdata = distributors\n      .filter(({ Country }) => Country.includes(countryName) > 0)\n      .filter(({ PrimaryProducts }) => PrimaryProducts.includes(productFamily) > 0);\n\n    let finalHtml = '';\n    const resultHeading = document.createElement('h3');\n    const searchResultEl = document.querySelector('.local-distributor .search-result');\n\n    filterdata.forEach((row) => {\n      const primeProduct = row.PrimaryProducts.replace(/,/g, ' | ');\n\n      const customClass = row.Type.split(' ').join('-').toLowerCase();\n\n      const supportLink = row.Link\n        ? `<a href=\"${row.Link}\" target=\"_blank\" rel=\"noopener noreferrer\">Online Support Request</a>`\n        : '';\n\n      let newStr = '';\n      row.Address.split(' ').forEach((add) => {\n        if (add.indexOf(':') > -1) {\n          if (add.indexOf('http') > -1) {\n            newStr += replaceHTMLTag(add, ` <a href='${add}'>${add}</a> `);\n          } else {\n            newStr += replaceHTMLTag(add, ` <strong>${add}</strong> `);\n          }\n        } else if (add.indexOf('@') > -1) {\n          newStr += replaceHTMLTag(add, ` <a href='mailto:${add}'>${add}</a> `);\n        } else {\n          newStr += `${add} `;\n        }\n      });\n      const molAddress = `${newStr.replace(/\\n/g, '<br>')}<br>`;\n\n      if ((row.PrimaryProducts.length && row.Address.trim().length) === 0) {\n        resultHeading.textContent = 'NO RESULT FOUND';\n      } else {\n        resultHeading.textContent = row.Country;\n        finalHtml += `\n                      <div class=\"search-result-content ${customClass}-result\">\n                        <div class=\"type\">${row.Type}</div>\n                        <div class=\"productfamily\">${primeProduct}</div>\n                        <div class=\"address\">\n                          ${molAddress}\n                          ${supportLink}\n                        </div>\n                        <p><a href=\"#\">Contact your local ${row.Type} Team</a></p>\n                      </div>\n                    `;\n      }\n    });\n    searchResultEl.innerHTML = finalHtml;\n    searchResultEl.insertBefore(resultHeading, searchResultEl.firstChild);\n  };\n\n  const heading = block.querySelector('h5');\n  const cloneHeading = heading.cloneNode(true);\n  heading.remove();\n  block.insertBefore(cloneHeading, block.firstChild);\n  const searchResult = document.createElement('div');\n  searchResult.setAttribute('class', 'search-result');\n  const formWrapper = searchDistributorForm(countryList, productFamilyList);\n  document.querySelector('.local-distributor > div').lastElementChild.innerHTML = formWrapper;\n  document.querySelector('.local-distributor').appendChild(searchResult);\n  const searchButton = document.getElementById('searchButton');\n  searchButton.addEventListener('click', renderAddress);\n  renderAddress();\n}",
            "score": -0.4418604651162791
        },
        "blocks/local-distributor/local-distributor.js::getSelectOptions": {
            "changes_after_merge": 0,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function getSelectOptions(rows) {\n  return rows.map((value) => `<option value='${value}'>${value}</option>`);\n}",
            "score": -1.0
        },
        "blocks/local-distributor/local-distributor.js::hideResult": {
            "changes_after_merge": 0,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function hideResult() {\n  if (window.location.pathname !== '/contact-search') {\n    document.querySelector('.search-result').style.display = 'none';\n  }\n}",
            "score": -1.0
        },
        "blocks/local-distributor/local-distributor.js::queryString": {
            "changes_after_merge": 0,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function queryString() {\n  const params = new Proxy(new URLSearchParams(window.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  return params;\n}",
            "score": -1.0
        },
        "blocks/local-distributor/local-distributor.js::redirectToContactSearch": {
            "changes_after_merge": 1,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function redirectToContactSearch() {\n  const countryName = document.getElementById('country').value;\n  const primeProduct = document.getElementById('product_family').value;\n  window.open(`/contact-search?country=${countryName}&product_family=${primeProduct}`, '_blank');\n  Event.preventDefault();\n}",
            "score": -0.9534883720930233
        },
        "blocks/local-distributor/local-distributor.js::renderAddress": {
            "changes_after_merge": 8,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "renderAddress = () => {\n    let countryName = document.getElementById('country').value;\n    const productFamily = document.getElementById('product_family').value;\n\n    if (!countryName) {\n      countryName = 'United States';\n      document.querySelector('#country').value = countryName;\n    }\n\n    const filterdata = distributors\n      .filter(({ Country }) => Country.includes(countryName) > 0)\n      .filter(({ PrimaryProducts }) => PrimaryProducts.includes(productFamily) > 0);\n\n    let finalHtml = '';\n    const resultHeading = document.createElement('h3');\n    const searchResultEl = document.querySelector('.local-distributor .search-result');\n\n    filterdata.forEach((row) => {\n      const primeProduct = row.PrimaryProducts.replace(/,/g, ' | ');\n\n      const customClass = row.Type.split(' ').join('-').toLowerCase();\n\n      const supportLink = row.Link\n        ? `<a href=\"${row.Link}\" target=\"_blank\" rel=\"noopener noreferrer\">Online Support Request</a>`\n        : '';\n\n      let newStr = '';\n      row.Address.split(' ').forEach((add) => {\n        if (add.indexOf(':') > -1) {\n          if (add.indexOf('http') > -1) {\n            newStr += replaceHTMLTag(add, ` <a href='${add}'>${add}</a> `);\n          } else {\n            newStr += replaceHTMLTag(add, ` <strong>${add}</strong> `);\n          }\n        } else if (add.indexOf('@') > -1) {\n          newStr += replaceHTMLTag(add, ` <a href='mailto:${add}'>${add}</a> `);\n        } else {\n          newStr += `${add} `;\n        }\n      });\n      const molAddress = `${newStr.replace(/\\n/g, '<br>')}<br>`;\n\n      if ((row.PrimaryProducts.length && row.Address.trim().length) === 0) {\n        resultHeading.textContent = 'NO RESULT FOUND';\n      } else {\n        resultHeading.textContent = row.Country;\n        finalHtml += `\n                      <div class=\"search-result-content ${customClass}-result\">\n                        <div class=\"type\">${row.Type}</div>\n                        <div class=\"productfamily\">${primeProduct}</div>\n                        <div class=\"address\">\n                          ${molAddress}\n                          ${supportLink}\n                        </div>\n                        <p><a href=\"#\">Contact your local ${row.Type} Team</a></p>\n                      </div>\n                    `;\n      }\n    });\n    searchResultEl.innerHTML = finalHtml;\n    searchResultEl.insertBefore(resultHeading, searchResultEl.firstChild);\n  }",
            "score": -0.627906976744186
        },
        "blocks/local-distributor/local-distributor.js::replaceHTMLTag": {
            "changes_after_merge": 1,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function replaceHTMLTag(element, replaceWith) {\n  return element.replace(element, replaceWith);\n}",
            "score": -0.9534883720930233
        },
        "blocks/local-distributor/local-distributor.js::scrollToForm": {
            "changes_after_merge": 0,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function scrollToForm() {\n  const getInTouchBlock = document.querySelector('.get-in-touch');\n  window.scroll({\n    top: getInTouchBlock.offsetTop,\n    behavior: 'smooth',\n  });\n}",
            "score": -1.0
        },
        "blocks/local-distributor/local-distributor.js::searchDistributorForm": {
            "changes_after_merge": 1,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function searchDistributorForm(countryList, productFamilyList) {\n  return `\n            <div class=\"form\">\n              <div class=\"form-group\">\n                <div class=\"fields\">\n                  <div class=\"select-wrapper\">\n                    <select name=\"country\" id=\"country\" class=\"form-control\" required=\"\">\n                      <option value=\"\">Select Region/Country</option>\n                      ${getSelectOptions(countryList)}\n                    </select>\n                    <span class=\"fa fa-chevron-down\"></span>\n                  </div>\n                  <div class=\"select-wrapper\">\n                    <select name=\"product_family\" id=\"product_family\" class=\"form-control\">\n                      <option value=\"\">Select Product Group</option>\n                      ${getSelectOptions(productFamilyList)}\n                    </select>\n                    <span class=\"fa fa-chevron-down\"></span>\n                  </div>\n                </div>\n                <div class=\"button\" id=\"searchButton\">\n                  <button>SEARCH</button>\n                </div>\n              </div>\n            </div>\n          `;\n}",
            "score": -0.9534883720930233
        },
        "blocks/local-distributor/local-distributor.js::wrapWithStrong": {
            "changes_after_merge": 0,
            "file_path": "blocks/local-distributor/local-distributor.js",
            "merged_function": "function wrapWithStrong(val) {\n  return `<strong>${val}</strong>`;\n}",
            "score": -1.0
        },
        "blocks/news-carousel/news-carousel.js::decorate": {
            "changes_after_merge": 4,
            "file_path": "blocks/news-carousel/news-carousel.js",
            "merged_function": "async function decorate(block) {\n  const newsItems = await ffetch('/query-index.json')\n    .sheet('news')\n    .limit(5)\n    .all();\n\n  createCarousel(\n    block,\n    newsItems,\n    {\n      navButtons: true,\n      dotButtons: false,\n      infiniteScroll: false,\n      autoScroll: false,\n      visibleItems: [\n        {\n          items: 1,\n          condition: () => window.screen.width < 768,\n        },\n        {\n          items: 2,\n          condition: () => window.screen.width < 1200,\n        }, {\n          items: 3,\n        },\n      ],\n      renderItem,\n    },\n  );\n}",
            "score": -0.813953488372093
        },
        "blocks/news-carousel/news-carousel.js::formatDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/news-carousel/news-carousel.js",
            "merged_function": "function formatDate(newsDate) {\n  const dateObj = new Date(0);\n  dateObj.setUTCSeconds(newsDate);\n\n  return dateObj.toLocaleDateString('en-US', {\n    month: 'short',\n    day: '2-digit',\n    year: 'numeric',\n  });\n}",
            "score": -1.0
        },
        "blocks/news-carousel/news-carousel.js::renderItem": {
            "changes_after_merge": 2,
            "file_path": "blocks/news-carousel/news-carousel.js",
            "merged_function": "function renderItem(item) {\n  const newsItem = document.createElement('div');\n  newsItem.classList.add('news-carousel-item');\n\n  const newsThumb = document.createElement('div');\n  newsThumb.classList.add('news-carousel-item-thumb');\n  newsThumb.append(createOptimizedPicture(item.image, item.title, 'lazy', [{ width: '800' }]));\n  newsItem.appendChild(newsThumb);\n\n  const newsCaption = document.createElement('div');\n  newsCaption.classList.add('news-carousel-caption');\n\n  const newsCaptionText = document.createElement('div');\n  newsCaptionText.classList.add('news-carousel-caption-text');\n  newsCaptionText.innerHTML = `\n    <p>${formatDate(item.date)}</p>\n    <p>${item.title}</p>\n  `;\n\n  const newsCaptionCTA = document.createElement('div');\n  newsCaptionCTA.classList.add('news-carousel-caption-cta');\n\n  const newsCaptionButton = document.createElement('a');\n  newsCaptionButton.href = item.path;\n  newsCaptionButton.innerHTML = '&nbsp;';\n  newsCaptionCTA.appendChild(newsCaptionButton);\n\n  newsCaption.appendChild(newsCaptionText);\n  newsCaption.appendChild(newsCaptionCTA);\n  newsItem.appendChild(newsCaption);\n\n  return newsItem;\n}",
            "score": -0.9069767441860466
        },
        "blocks/news/news.js::createFilters": {
            "changes_after_merge": 2,
            "file_path": "blocks/news/news.js",
            "merged_function": "function createFilters(options, createDropdown) {\n  const date = Array.from(new Set(options.data.map((n) => n.filterYear)));\n  return [\n    createDropdown(date, options.activeFilters.year, 'year', 'Select Year'),\n  ];\n}",
            "score": -0.9069767441860466
        },
        "blocks/news/news.js::createOverview": {
            "changes_after_merge": 1,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function createOverview(\n  block,\n  options,\n) {\n  block.innerHTML = '';\n  options.data.forEach(\n    (entry) => prepareEntry(entry, options.showDescription, options.viewMoreText),\n  );\n  await createList(\n    createFilters,\n    options,\n    block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/news/news.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  const options = {\n    limitPerPage: parseInt(config.limitPerPage, 10) || 10,\n    limitForPagination: parseInt(config.limitForPagination, 9) || 9,\n    showDescription: false,\n    viewMoreText: '',\n    panelTitle: 'Filter By :',\n  };\n  options.activeFilters = new Map();\n  options.activeFilters.set('year', '');\n  options.activeFilters.set('page', 1);\n\n  options.data = await fetchData('news');\n  // console.log(`found ${data.length} entries`);\n  await createOverview(\n    block,\n    options);\n}",
            "score": -0.9069767441860466
        },
        "blocks/news/news.js::fetchData": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function fetchData(type) {\n  const data = await ffetch('/query-index.json')\n    .sheet(type)\n    .all();\n  return data;\n}",
            "score": -1.0
        },
        "blocks/news/news.js::formatDateFullYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "function formatDateFullYear(unixDateString) {\n  return new Date(unixDateString * 1000).getFullYear();\n}",
            "score": -1.0
        },
        "blocks/news/news.js::prepareEntry": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "function prepareEntry(entry, showDescription, viewMoreText) {\n  entry.filterYear = formatDateFullYear(entry.date);\n  if (!showDescription) {\n    entry.description = '';\n  }\n  if (viewMoreText) {\n    entry.viewMoreText = viewMoreText;\n  }\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::addToCart": {
            "changes_after_merge": 11,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function addToCart(event) {\n  const el = event.target;\n  const counterEl = el.closest('.variant-item-store-content').querySelector('.variant-item-store-count .count');\n  const counter = parseInt(counterEl.textContent, 10) || 1;\n  const itemId = el.getAttribute('id');\n\n  await fetch(`${SHOP_BASE_URL}/cart/add.js?${new URLSearchParams({\n    id: itemId,\n    quantity: counter,\n    _: Date.now(),\n  })}`)\n    .catch((err) => {\n    // eslint-disable-next-line no-console\n      console.warn(`Could not add id ${itemId} to cart.`, err);\n    });\n\n  await setCartItemCount();\n  updateCounters();\n}",
            "score": -0.4883720930232558
        },
        "blocks/ordering-options/ordering-options.js::buildOrderingForm": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function buildOrderingForm(options) {\n  const orderContainer = document.querySelector('.order-container');\n  if (!orderContainer) return;\n  let selectedOption = null;\n  let selectedVariant = null;\n\n  function closeAllDropDowns() {\n    orderContainer.querySelectorAll('.drop-down.show')\n      .forEach((openDropdown) => openDropdown.classList.remove('show'));\n  }\n\n  function updateVariantsDropdownLabel() {\n    const variantDropDown = orderContainer.querySelector('.drop-down.variants-drop-down .drop-down-btn .drop-down-btn-text');\n    if (variantDropDown) {\n      variantDropDown.innerHTML = selectedVariant.title;\n    }\n  }\n\n  function updatePrice(price) {\n    const priceContent = orderContainer.querySelector('.price');\n    priceContent.textContent = `${(price / 100).toLocaleString('en-US')}.00 USD`;\n  }\n\n  function handleVariantSelection(variant) {\n    selectedVariant = variant;\n    updateVariantsDropdownLabel(orderContainer);\n    updatePrice(variant.price);\n\n    closeAllDropDowns();\n  }\n\n  function checkOptionValidity() {\n    const variantDropDown = orderContainer.querySelector('.drop-down.variants-drop-down');\n    if (!selectedOption || !selectedOption.variants || !selectedOption.variants.length) {\n      selectedVariant = { title: 'Select Variation' };\n      variantDropDown.classList.add('disabled');\n      updateVariantsDropdownLabel();\n    } else {\n      variantDropDown.classList.remove('disabled');\n    }\n  }\n\n  function openDropdownMenu(event) {\n    const dropDownContent = event.target\n      .closest('.drop-down')\n      .querySelector('.drop-down-content');\n\n    if (dropDownContent.children.length !== 0) {\n      dropDownContent.parentElement.classList.toggle('show');\n    }\n  }\n\n  function handleOptionSelection(option) {\n    selectedOption = option;\n    const optionsDropDown = orderContainer.querySelector('.drop-down.options-drop-down');\n    const optionsDropDownButton = optionsDropDown.querySelector('.drop-down-btn .drop-down-btn-text');\n    optionsDropDownButton.textContent = selectedOption.title;\n\n    checkOptionValidity();\n    updatePrice(0);\n    const variantsContent = orderContainer.querySelector('.drop-down.variants-drop-down .drop-down-content');\n    variantsContent.replaceChildren();\n    if (option.variants && option.variants.length) {\n      option.variants.forEach((variant) => {\n        variantsContent.appendChild(\n          a({ class: 'option', id: variant.id, onclick: () => handleVariantSelection(variant) }, variant.title),\n        );\n      });\n    }\n\n    closeAllDropDowns();\n  }\n\n  window.addEventListener('click', (e) => {\n    if (!e.target.closest('.drop-down')) {\n      closeAllDropDowns();\n    }\n  });\n\n  function increaseQuantity(e) {\n    const qInput = e.currentTarget\n      .closest('.quantity-counter')\n      .querySelector('.quantity-number');\n\n    qInput.value = parseInt(qInput.value, 10) + 1;\n\n    qInput.dispatchEvent(new Event('change'));\n  }\n\n  function decreaseQuantity(e) {\n    const qInput = e.currentTarget\n      .closest('.quantity-counter')\n      .querySelector('.quantity-number');\n\n    let currentQuantity = parseInt(qInput.value, 10);\n    if (currentQuantity > 1) {\n      currentQuantity -= 1;\n      qInput.value = currentQuantity;\n    }\n\n    qInput.dispatchEvent(new Event('change'));\n  }\n\n  function quantityChange(e) {\n    const qInput = e.target;\n    const currentQuantity = parseInt(qInput.value, 10);\n    if (Number.isNaN(currentQuantity) || currentQuantity < 0) {\n      qInput.value = 0;\n    }\n  }\n\n  function heroAddToCartHandler(e) {\n    const quantity = orderContainer.querySelector('.quantity-number');\n    if (!parseInt(quantity.value, 10)) {\n      return;\n    }\n\n    addToCart(e.target, selectedVariant, quantity);\n  }\n\n  const orderFormContainer = (\n    div({ class: 'order-container-inner' },\n      div({ class: 'drop-down options-drop-down' },\n        button({ class: 'drop-down-btn', onclick: (e) => openDropdownMenu(e) },\n          span({ class: 'drop-down-btn-text' }, 'Product Options'),\n        ),\n        div({ class: 'drop-down-content' },\n          a({ class: 'option placeholder', onclick: () => handleOptionSelection({ title: 'Product Options' }) }, 'Product Options'),\n          ...options.map((option) => a({ class: 'option', onclick: () => { handleOptionSelection(option); } }, option.title)),\n        ),\n      ),\n      div({ class: 'drop-down variants-drop-down disabled' },\n        button({ class: 'drop-down-btn', onclick: (e) => openDropdownMenu(e) },\n          span({ class: 'drop-down-btn-text' }, 'Select Variation'),\n        ),\n        div({ class: 'drop-down-content' },\n          // dynamically populated when selecting a product\n        ),\n      ),\n      div({ class: 'price-container' },\n        label({ class: 'price-label' }, 'PRICE'),\n        span({ class: 'price-currency' }, '$'),\n        span({ class: 'price' }, '0.00 USD'),\n      ),\n      div({ class: 'quantity-container' },\n        label({ class: 'quantity-label' }, 'QUANTITY'),\n        div({ class: 'quantity-counter' },\n          button({ class: 'quantity-button', onclick: (e) => { decreaseQuantity(e); } }, '-'),\n          input({ class: 'quantity-number', onchange: (e) => quantityChange(e), type: 'text', value: '0' }),\n          button({ class: 'quantity-button', onclick: (e) => { increaseQuantity(e); } }, '+'),\n        ),\n      ),\n      button({ class: 'add-to-cart primary', onclick: (e) => { heroAddToCartHandler(e); } }, 'Add to cart'),\n    )\n  );\n  orderContainer.appendChild(orderFormContainer);\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::checkOptionValidity": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function checkOptionValidity() {\n    const variantDropDown = orderContainer.querySelector('.drop-down.variants-drop-down');\n    if (!selectedOption || !selectedOption.variants || !selectedOption.variants.length) {\n      selectedVariant = { title: 'Select Variation' };\n      variantDropDown.classList.add('disabled');\n      updateVariantsDropdownLabel();\n    } else {\n      variantDropDown.classList.remove('disabled');\n    }\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::closeAllDropDowns": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function closeAllDropDowns() {\n    orderContainer.querySelectorAll('.drop-down.show')\n      .forEach((openDropdown) => openDropdown.classList.remove('show'));\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::decorate": {
            "changes_after_merge": 11,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function decorate(block) {\n  renderList(block);\n}",
            "score": -0.4883720930232558
        },
        "blocks/ordering-options/ordering-options.js::decreaseQuantity": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function decreaseQuantity(e) {\n    const qInput = e.currentTarget\n      .closest('.quantity-counter')\n      .querySelector('.quantity-number');\n\n    let currentQuantity = parseInt(qInput.value, 10);\n    if (currentQuantity > 1) {\n      currentQuantity -= 1;\n      qInput.value = currentQuantity;\n    }\n\n    qInput.dispatchEvent(new Event('change'));\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::fetchOption": {
            "changes_after_merge": 1,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function fetchOption(option) {\n  return fetch(`https://shop.moleculardevices.com/products/${option}.js`, {\n    mode: 'cors',\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(response);\n  }).catch((err) => {\n    // eslint-disable-next-line no-console\n    console.warn(`Could not fetch ordering details for option ${option}, got status ${err.status}.`, err.statusText);\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/ordering-options/ordering-options.js::fetchOptionIntoArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function fetchOptionIntoArray(array, idx, option) {\n  array[idx] = await fetchOption(option.trim());\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::getCartDetails": {
            "changes_after_merge": 4,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function getCartDetails() {\n  return fetch(`${SHOP_BASE_URL}/cart.json`)\n    .catch((err) => {\n    // eslint-disable-next-line no-console\n      console.warn('Could not get cart details.', err);\n    });\n}",
            "score": -0.813953488372093
        },
        "blocks/ordering-options/ordering-options.js::getOrderingOptions": {
            "changes_after_merge": 1,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function getOrderingOptions(block) {\n  const refs = [...block.querySelectorAll('.ordering-options > div > div')]\n    .map((ref) => (ref.innerHTML).split(', '))\n    .reduce((a, b) => a.concat(b), []);\n\n  const options = new Array(refs.length);\n  await Promise.all(refs\n    .map((option, idx) => fetchOptionIntoArray(options, idx, option)),\n  );\n  return options;\n}",
            "score": -0.9534883720930233
        },
        "blocks/ordering-options/ordering-options.js::handleOptionSelection": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function handleOptionSelection(option) {\n    selectedOption = option;\n    const optionsDropDown = orderContainer.querySelector('.drop-down.options-drop-down');\n    const optionsDropDownButton = optionsDropDown.querySelector('.drop-down-btn .drop-down-btn-text');\n    optionsDropDownButton.textContent = selectedOption.title;\n\n    checkOptionValidity();\n    updatePrice(0);\n    const variantsContent = orderContainer.querySelector('.drop-down.variants-drop-down .drop-down-content');\n    variantsContent.replaceChildren();\n    if (option.variants && option.variants.length) {\n      option.variants.forEach((variant) => {\n        variantsContent.appendChild(\n          a({ class: 'option', id: variant.id, onclick: () => handleVariantSelection(variant) }, variant.title),\n        );\n      });\n    }\n\n    closeAllDropDowns();\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::handleVariantSelection": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function handleVariantSelection(variant) {\n    selectedVariant = variant;\n    updateVariantsDropdownLabel(orderContainer);\n    updatePrice(variant.price);\n\n    closeAllDropDowns();\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::heroAddToCartHandler": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function heroAddToCartHandler(e) {\n    const quantity = orderContainer.querySelector('.quantity-number');\n    if (!parseInt(quantity.value, 10)) {\n      return;\n    }\n\n    addToCart(e.target, selectedVariant, quantity);\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::increaseAndDecreaseCounter": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function increaseAndDecreaseCounter(event) {\n  const btnContainer = event.target.closest('span');\n  const counterEl = btnContainer.parentElement.querySelector('.count');\n  const counter = parseInt(counterEl.textContent, 10) || 1;\n  if (btnContainer.classList.contains('up')) {\n    counterEl.textContent = counter + 1;\n  } else {\n    counterEl.textContent = (counter > 1) ? counter - 1 : 1;\n  }\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::increaseQuantity": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function increaseQuantity(e) {\n    const qInput = e.currentTarget\n      .closest('.quantity-counter')\n      .querySelector('.quantity-number');\n\n    qInput.value = parseInt(qInput.value, 10) + 1;\n\n    qInput.dispatchEvent(new Event('change'));\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::openDropdownMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function openDropdownMenu(event) {\n    const dropDownContent = event.target\n      .closest('.drop-down')\n      .querySelector('.drop-down-content');\n\n    if (dropDownContent.children.length !== 0) {\n      dropDownContent.parentElement.classList.toggle('show');\n    }\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::quantityChange": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function quantityChange(e) {\n    const qInput = e.target;\n    const currentQuantity = parseInt(qInput.value, 10);\n    if (Number.isNaN(currentQuantity) || currentQuantity < 0) {\n      qInput.value = 0;\n    }\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::renderAddToCart": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function renderAddToCart(item) {\n  if (!item) return '';\n\n  return (\n    div({ class: 'variant-item-store' },\n      div({ class: 'variant-item-store-header' },\n        p({ class: 'legend' }, `$${(item.price / 100).toLocaleString('en-US', { maximumFractionDigits: 2, minimumFractionDigits: 2 })} USD`),\n      ),\n      div({ class: 'variant-item-store-content' },\n        div({ class: 'variant-item-store-count' },\n          span({ class: 'down' }, i({ class: 'fa fa-minus', data: item.id })),\n          span({ class: 'count', id: item.id }, 1),\n          span({ class: 'up' }, i({ class: 'fa fa-plus', data: item.id })),\n        ),\n        div({ class: 'variant-item-store-add-to-cart' },\n          a({\n            class: 'button primary',\n            id: item.id,\n            name: 'Add to cart',\n          }, 'Add to cart'),\n        ),\n      ),\n    )\n  );\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::renderCartWidget": {
            "changes_after_merge": 4,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function renderCartWidget() {\n  return (\n    div({ class: 'cart-widget' },\n      span({ class: 'cart-count' }, getCartItemCount()),\n      a({\n        href: `${SHOP_BASE_URL}/cart`,\n        target: '_blank',\n        name: 'Cart',\n        rel: 'noopener noreferrer',\n      }, i({ class: 'fa fa-shopping-cart' }),\n      ),\n    )\n  );\n}",
            "score": -0.813953488372093
        },
        "blocks/ordering-options/ordering-options.js::renderHeroOrder": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function renderHeroOrder(heroBlock) {\n  if (heroBlock) {\n    const heroContainer = heroBlock.querySelector('.container');\n    if (heroContainer) {\n      const heroOrder = div({ class: 'order-container' });\n      heroOrder.classList.add(STORE_HIDDEN_CLASS);\n      heroContainer.appendChild(heroOrder);\n      heroBlock.classList.add('order');\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::renderItem": {
            "changes_after_merge": 4,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function renderItem(item) {\n  if (!item) return '';\n\n  return (\n    div({ class: 'ordering-option-item', id: item.handle },\n      div({ class: 'header' },\n        h3({ class: 'title' }, item.title),\n      ),\n      div({ class: 'ordering-option-item-variants' },\n        ...item.variants.map((variant) => div({ class: 'variant-item' },\n          h4({ class: 'legend' }, variant.public_title),\n          p({ class: 'legend' }, `#${variant.sku}`),\n        ),\n        ),\n      ),\n    )\n  );\n}",
            "score": -0.813953488372093
        },
        "blocks/ordering-options/ordering-options.js::renderList": {
            "changes_after_merge": 5,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function renderList(block) {\n  const options = await getOrderingOptions(block);\n  const items = [];\n  options.forEach((option) => {\n    items.push(renderItem(option));\n  });\n\n  block.innerHTML = '';\n  const container = div({ class: 'ordering-options-list' });\n  container.append(...items);\n  block.append(container);\n}",
            "score": -0.7674418604651163
        },
        "blocks/ordering-options/ordering-options.js::renderOptions": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function renderOptions(orderBlock, heroBlock, productRefs, itemDescriptionsMap) {\n  const container = div({ class: 'ordering-options-list' });\n  container.classList.add(STORE_HIDDEN_CLASS);\n  orderBlock.append(container);\n\n  renderHeroOrder(heroBlock);\n\n  const orderingOptions = await getOrderingOptions(productRefs);\n  renderList(orderingOptions, container, itemDescriptionsMap);\n  const options = orderingOptions.filter((o) => !!o);\n\n  buildOrderingForm(options);\n\n  await getCartDetails();\n  updateCounters();\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::renderStore": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function renderStore(block, productRefs, itemDescriptionsMap) {\n  let container = block.querySelector('div.ordering-options-list');\n  if (container) {\n    container.innerHTML = '';\n  } else {\n    container = div({ class: 'ordering-options-list' });\n    block.append(container);\n  }\n\n  const showStore = detectStore();\n  const orderingOptions = await getOrderingOptions(productRefs);\n  await renderList(orderingOptions, showStore, container, itemDescriptionsMap);\n  const options = orderingOptions.filter((o) => !!o);\n  if (showStore) {\n    buildOrderingForm(options);\n    block.classList.add('cart-store');\n    await getCartDetails();\n    updateCounters();\n\n    // cart visible everywhere in product page\n    const productsMain = document.querySelector('.product main');\n    if (productsMain) productsMain.append(renderCartWidget());\n  }\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::setCartItemCount": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function setCartItemCount() {\n  const details = await getCartDetails();\n  const count = details.item_count;\n  setCookie(COOKIE_NAME_CART_ITEM_COUNT, count || 0);\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::showHideStoreFeature": {
            "changes_after_merge": 2,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function showHideStoreFeature(showStore, orderBlock, heroBlock) {\n  renderCartWidget(showStore);\n  const heroOrder = heroBlock.querySelector('.order-container');\n  if (showStore) {\n    orderBlock.classList.remove(STORE_HIDDEN_CLASS);\n    if (heroOrder) heroOrder.classList.remove(STORE_HIDDEN_CLASS);\n    // hide buttons in hero and instead show option form\n    if (heroBlock) {\n      heroBlock.querySelectorAll('.button-container').forEach((buttonContainer) => {\n        buttonContainer.remove();\n      });\n    }\n  } else {\n    orderBlock.classList.add(STORE_HIDDEN_CLASS);\n    if (heroOrder) heroOrder.classList.add(STORE_HIDDEN_CLASS);\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/ordering-options/ordering-options.js::updateCounters": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "async function updateCounters() {\n  const count = getCartItemCount();\n  const cartCounters = document.querySelectorAll('.cart-count');\n  if (cartCounters) {\n    cartCounters.forEach((cartCounter) => {\n      cartCounter.textContent = count;\n    });\n  }\n}",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::updatePrice": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function updatePrice(price) {\n    const priceContent = orderContainer.querySelector('.price');\n    priceContent.textContent = `${(price / 100).toLocaleString('en-US')}.00 USD`;\n  }",
            "score": -1.0
        },
        "blocks/ordering-options/ordering-options.js::updateVariantsDropdownLabel": {
            "changes_after_merge": 0,
            "file_path": "blocks/ordering-options/ordering-options.js",
            "merged_function": "function updateVariantsDropdownLabel() {\n    const variantDropDown = orderContainer.querySelector('.drop-down.variants-drop-down .drop-down-btn .drop-down-btn-text');\n    if (variantDropDown) {\n      variantDropDown.innerHTML = selectedVariant.title;\n    }\n  }",
            "score": -1.0
        },
        "blocks/page-tabs/page-tabs.js::createTabList": {
            "changes_after_merge": 2,
            "file_path": "blocks/page-tabs/page-tabs.js",
            "merged_function": "function createTabList(sections, active) {\n  const ul = document.createElement('ul');\n  sections.forEach((section) => {\n    const li = document.createElement('li');\n    const a = document.createElement('a');\n    a.href = `#${section.getAttribute('data-name')}`;\n    a.id = section.getAttribute('data-name');\n    a.textContent = section.title;\n    a.addEventListener('click', openTab);\n    li.append(a);\n    if (section.getAttribute('data-name') === active) {\n      li.setAttribute('aria-selected', true);\n    } else {\n      li.setAttribute('aria-selected', false);\n    }\n    ul.append(li);\n  });\n  return ul;\n}",
            "score": -0.9069767441860466
        },
        "blocks/page-tabs/page-tabs.js::decorate": {
            "changes_after_merge": 9,
            "file_path": "blocks/page-tabs/page-tabs.js",
            "merged_function": "function decorate(block) {\n  const main = block.closest('main');\n  const sections = main.querySelectorAll('div.section.tabs');\n  const namedSections = [...sections].filter((section) => section.hasAttribute('data-name'));\n  if (namedSections) {\n    const activeHash = window.location.hash;\n    const active = activeHash ? activeHash.substring(1, activeHash.length) : namedSections[0].getAttribute('data-name');\n\n    sections.forEach((section) => {\n      if (active === section.getAttribute('aria-labelledby')) {\n        section.setAttribute('aria-hidden', false);\n      } else {\n        section.setAttribute('aria-hidden', true);\n      }\n    });\n\n    block.append(createTabList(namedSections, active));\n  }\n}",
            "score": -0.5813953488372092
        },
        "blocks/page-tabs/page-tabs.js::openTab": {
            "changes_after_merge": 2,
            "file_path": "blocks/page-tabs/page-tabs.js",
            "merged_function": "function openTab(e) {\n  const { target } = e;\n  const parent = target.parentNode;\n  const main = parent.closest('main');\n  const selected = target.getAttribute('aria-selected') === 'true';\n\n  if (!selected) {\n    // close all open tabs\n    const openPageNav = parent.parentNode.querySelectorAll('li[aria-selected=\"true\"]');\n    const openContent = main.querySelectorAll('div.section[aria-hidden=\"false\"]');\n    openPageNav.forEach((tab) => tab.setAttribute('aria-selected', false));\n    openContent.forEach((tab) => tab.setAttribute('aria-hidden', true));\n    // open clicked tab\n    parent.setAttribute('aria-selected', true);\n    const tabs = main.querySelectorAll(`div.section[aria-labelledby=\"${target.id}\"]`);\n    tabs.forEach((tab) => tab.setAttribute('aria-hidden', false));\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/product-carousel/product-carousel.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/product-carousel/product-carousel.js",
            "merged_function": "async function decorate(block) {\n  const productPaths = [...block.querySelectorAll('a')].map((elem) => elem.getAttribute('href'));\n  const products = await ffetch('/query-index.json')\n    .sheet('products')\n    .filter((product) => productPaths.includes(product.path))\n    .all();\n\n  const cardRenderer = await createCard({\n    titleLink: false,\n    thumbnailLink: false,\n    defaultButtonText: 'Details',\n    c2aLinkStyle: true,\n  });\n\n  await createCarousel(\n    block,\n    products,\n    {\n      defaultStyling: true,\n      navButtons: window.matchMedia('only screen and (max-width: 1200px)').matches || products.length > 3,\n      dotButtons: false,\n      infiniteScroll: products.length > 3,\n      autoScroll: false,\n      visibleItems: [\n        {\n          items: 1,\n          condition: () => window.screen.width < 768,\n        },\n        {\n          items: 2,\n          condition: () => window.screen.width < 1200,\n        }, {\n          items: 3,\n        },\n      ],\n      cardRenderer,\n    },\n  );\n}",
            "score": -0.9069767441860466
        },
        "blocks/product-comparison/product-comparison.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/product-comparison/product-comparison.js",
            "merged_function": "async function decorate(block) {\n  const specURLs = [...block.querySelectorAll('a')].map((link) => link.href);\n  const attributes = [...block.querySelectorAll('.product-comparison > div:last-child > div:last-child > p')]\n    .map((attrP) => attrP.textContent.trim());\n\n  block.innerHTML = '';\n  const productSpecs = {};\n  await Promise.all(specURLs.map(async (url) => {\n    const response = await fetch(url);\n    const specData = await response.json();\n    specData[':names'].forEach(((group) => {\n      specData[group].data.forEach((item) => {\n        if (!productSpecs[item.identifier]) {\n          productSpecs[item.identifier] = {};\n        }\n        productSpecs[item.identifier] = { ...productSpecs[item.identifier], ...item };\n      });\n    }));\n    return specData;\n  }));\n\n  const attributeMapping = productSpecs.Identifier;\n  delete productSpecs.Identifier;\n  const productIdentifiers = Object.keys(productSpecs);\n\n  // render table head\n  const headRow = domEl('tr',\n    domEl('th', ''),\n  );\n  let maxHeight = 0;\n  productIdentifiers.forEach((productIdentifier) => {\n    const productSpec = productSpecs[productIdentifier];\n    headRow.append(domEl('th',\n      div({ class: 'product-heading' },\n        div({ class: 'product-heading-title darkgrey' }, productSpec.title),\n        createOptimizedPicture(productSpec.thumbnail),\n        productSpec.description ? p(productSpec.description) : '',\n        a({ href: productSpec.path, class: 'product-info-btn' }, 'PRODUCT INFO'),\n      )),\n    );\n    if (productSpec.description) {\n      const pElem = headRow.querySelector('p').cloneNode(true);\n      pElem.style.visibility = 'hidden';\n      pElem.innerText = productSpec.description;\n      document.body.appendChild(pElem);\n      if (pElem.offsetHeight > maxHeight) {\n        maxHeight = pElem.offsetHeight;\n      }\n      document.body.removeChild(pElem);\n    }\n  });\n\n  // render table body\n  const tBodyBlock = domEl('tbody');\n  attributes.forEach((attribute) => {\n    const thisRow = domEl('tr');\n    const rowHeadBlock = span();\n    rowHeadBlock.innerHTML = attributeMapping[attribute];\n    thisRow.append(domEl('td', rowHeadBlock));\n    productIdentifiers.forEach((productIdentifier) => {\n      let rowValue = productSpecs[productIdentifier][attribute] || '';\n      rowValue = rowValue.replace(/true/gi, '<img src=\"/images/check-icon.png\" alt=\"true\" width=\"30\" height=\"30\">');\n      rowValue = rowValue.replace(/false/gi, '<img src=\"/images/false-icon.png\" alt=\"false\" width=\"30\" height=\"30\">');\n      if (!rowValue) rowValue = '<img src=\"/images/false-icon.png\" alt=\"false\" width=\"30\" height=\"30\">';\n      const rowBlock = span();\n      rowBlock.innerHTML = rowValue;\n      thisRow.append(domEl('td', rowBlock));\n    });\n    tBodyBlock.append(thisRow);\n  });\n\n  const tHeadBlock = domEl('thead', { class: 'table-head' }, headRow,\n  );\n  block.append(div({ class: 'table-container' },\n    domEl('table', { class: 'responsive-table' }, tHeadBlock, tBodyBlock),\n  ));\n\n  block.querySelectorAll('.product-comparison .product-heading p').forEach((paragraph) => { paragraph.style.minHeight = `${5.3 * maxHeight - 6}px`; });\n\n  return block;\n}",
            "score": -0.8604651162790697
        },
        "blocks/product-finder/product-finder.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "async function decorate(block) {\n  placeholders = await fetchPlaceholders();\n  block.prepend(\n    h3({ class: 'product-finder-tab-title' }, placeholders.selectProductType || DEFAULT_TITLE),\n  );\n\n  const progressSteps = block.querySelectorAll('ul li');\n  progressSteps.forEach((progressStep, idx) => {\n    const stepCheckbox = a({ class: `progress-step progress-step-${idx + 1}` });\n    const step = li(\n      stepCheckbox,\n      span({ class: 'step-text' }, progressStep.innerHTML),\n    );\n    progressStep.replaceWith(step);\n    // when the checkbox is checked and the user clicks on the label, the checkbox is unchecked\n    // and we return to that step\n    stepCheckbox.addEventListener('click', (e) => {\n      // if stepbox does not have the checked class\n      if (stepCheckbox.classList.contains(CHECKED_CLASS)) {\n        if (idx === 0) {\n          startOver(e);\n        } else if (idx === 1) {\n          stepCheckbox.classList.remove(CHECKED_CLASS);\n          const progressCustomTexts = document.querySelectorAll('.product-finder-container .step-custom-text');\n          progressCustomTexts.forEach((progressCustomText) => {\n            progressCustomText.remove();\n          });\n          stepTwo(e);\n        }\n      }\n    });\n  });\n\n  const resetBtn = renderResetButton(startOver);\n  block.append(resetBtn);\n  decorateIcons(resetBtn);\n\n  block.appendChild(\n    div(\n      div({\n        id: `${STEP_PREFIX}-1`,\n        class: 'product-finder-step-wrapper active',\n      }),\n      div({\n        id: `${STEP_PREFIX}-2`,\n        class: 'product-finder-step-wrapper',\n        style: 'display: none;',\n      }),\n      div({\n        id: `${STEP_PREFIX}-3`,\n        class: 'product-finder-step-wrapper',\n        style: 'display: none;',\n      }),\n    ),\n  );\n  stepOne(stepTwo);\n}",
            "score": -0.9534883720930233
        },
        "blocks/product-finder/product-finder.js::getCategories": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "async function getCategories(tab) {\n  const categories = await ffetch(PRODUCT_FINDER_URL).sheet('categories').all();\n  return categories.filter(({ type }) => type.includes(tab) > 0);\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::getListIdentifier": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function getListIdentifier(tabName) {\n  return toClassName(tabName);\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::getProducts": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "async function getProducts(filterType, filterCategory) {\n  return ffetch('/query-index.json')\n    .sheet('product-finder')\n    .withFetch(fetch)\n    .filter(({ productType }) => productType.includes(filterType))\n    .filter(({ category }) => category.includes(filterCategory))\n    .all();\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::getTabCategory": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function getTabCategory(el) {\n  const linkEl = el.classList.contains('.icon-link') ? el : el.closest('.icon-link');\n  return linkEl.getAttribute('data-category');\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::getTabName": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function getTabName(el) {\n  const linkEl = el.classList.contains('.icon-link') ? el : el.closest('.icon-link');\n  return linkEl.getAttribute('data-tab');\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::getTabTitle": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function getTabTitle(el) {\n  const linkEl = el.classList.contains('.icon-link') ? el : el.closest('.icon-link');\n  return linkEl.getAttribute('data-title');\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::getTabType": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function getTabType(el) {\n  const linkEl = el.classList.contains('.icon-link') ? el : el.closest('.icon-link');\n  return linkEl.getAttribute('data-type');\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::handleReagentsAndMediaDataInconsistency": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function handleReagentsAndMediaDataInconsistency(type, category) {\n  if (type === 'Assay Kits' && (category === 'Reagents' || category === 'Media')) {\n    return ['Media', 'Culture Media and Reagents'];\n  }\n  return [type, category];\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::renderIconCards": {
            "changes_after_merge": 2,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "async function renderIconCards(listArr, progressStep, tabName, callback) {\n  const list = div({\n    class: 'product-finder-list',\n    'data-card-type': getListIdentifier(tabName),\n  });\n\n  listArr.forEach((item) => {\n    item.title = progressStep === `${STEP_PREFIX}-1` ? item.title : item.category;\n    item.id = toClassName(item.type);\n  });\n\n  const cardRenderer = await createCard({\n    renderItem: renderIconItem,\n  });\n  listArr.forEach((rfq) => {\n    list.append(cardRenderer.renderItem(rfq, progressStep, callback));\n  });\n  return list;\n}",
            "score": -0.9069767441860466
        },
        "blocks/product-finder/product-finder.js::renderIconItem": {
            "changes_after_merge": 1,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function renderIconItem(item, progressStep, callback) {\n  return (\n    div(\n      { class: 'card icon-card' },\n      a({\n        class: 'icon-link',\n        id: item.id,\n        href: progressStep === 'step-1' ? '#step-2' : '#step-3',\n        'data-tab': item.type,\n        'data-title': item.title,\n        onclick: callback,\n      },\n      span({ class: 'icon-img' },\n        img({\n          src: item.image,\n          alt: item.title,\n        }),\n      ),\n      span({ class: 'icon-title' }, item.title),\n      ),\n    )\n  );\n}",
            "score": -0.9534883720930233
        },
        "blocks/product-finder/product-finder.js::renderResetButton": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function renderResetButton(callback) {\n  return a(\n    {\n      id: 'start-over',\n      class: 'reset',\n      href: `#${STEP_PREFIX}-1`,\n      onclick: callback,\n    },\n    span({ class: 'icon icon-fa-arrow-circle-left' }),\n    placeholders.startOver || 'Start Over',\n  );\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::startOver": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function startOver(e) {\n  e.preventDefault();\n\n  step2Type = '';\n  step2Title = '';\n\n  const currentTab = document.querySelector('.product-finder-step-wrapper.active');\n  const firstTab = document.getElementById(`${STEP_PREFIX}-1`);\n  const productsTab = document.getElementById(`${STEP_PREFIX}-3`);\n  const backBtn = document.querySelector('.product-finder-container .reset');\n  currentTab.style.display = 'none';\n  firstTab.style.display = 'block';\n  backBtn.classList.add(HIDDEN_CLASS);\n  firstTab.classList.add(ACTIVE_CLASS);\n  currentTab.classList.remove(ACTIVE_CLASS);\n  currentTab.removeAttribute('data-type');\n  currentTab.removeAttribute('data-category');\n  currentTab.removeAttribute('data-card-type');\n  productsTab.innerHTML = '';\n\n  const titleEl = document.querySelector('.product-finder-wrapper .product-finder-tab-title');\n  titleEl.innerHTML = placeholders.selectProductType || DEFAULT_TITLE;\n\n  const progressCheckList = document.querySelectorAll(`.product-finder-container a.${CHECKED_CLASS}`);\n  progressCheckList.forEach((check) => {\n    check.classList.remove(CHECKED_CLASS);\n  });\n\n  const progressCustomTexts = document.querySelectorAll('.product-finder-container .step-custom-text');\n  progressCustomTexts.forEach((progressCustomText) => {\n    progressCustomText.remove();\n  });\n\n  firstTab.querySelector('.product-finder-list').classList.remove(HIDDEN_CLASS);\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::stepOne": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "async function stepOne(callback) {\n  const stepNum = `${STEP_PREFIX}-1`;\n  const root = document.getElementById(stepNum);\n\n  const types = await ffetch(PRODUCT_FINDER_URL).sheet('types').all();\n  root.append(await renderIconCards(types, stepNum, '', callback));\n}",
            "score": -1.0
        },
        "blocks/product-finder/product-finder.js::stepThree": {
            "changes_after_merge": 1,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "async function stepThree(e) {\n  e.preventDefault();\n\n  const stepNum = `${STEP_PREFIX}-3`;\n  const prevStepNum = `${STEP_PREFIX}-2`;\n\n  let type = getTabName(e.target);\n  let category = getTabTitle(e.target);\n  const root = switchTab(category, stepNum, prevStepNum, 'Select Product');\n\n  const originalType = type;\n  const originalCategory = category;\n  [type, category] = handleReagentsAndMediaDataInconsistency(type, category);\n\n  root.setAttribute('data-type', type);\n  root.setAttribute('data-category', category);\n\n  const dataCardType = getListIdentifier(`${type}-${category}-products`);\n  const lists = root.querySelectorAll('.product-finder-list');\n  lists.forEach((list) => {\n    const listCardType = list.attributes['data-card-type'].value;\n    if (listCardType !== dataCardType) {\n      list.remove();\n      const count = root.querySelector(`.result-count[data-card-type=\"${listCardType}\"]`);\n      count.remove();\n      const filters = root.querySelector(`.finder-filters[data-card-type=\"${listCardType}\"]`);\n      if (filters) filters.remove();\n    }\n  });\n\n  const products = await getProducts(type, category);\n  products.sort((item1, item2) => item2.productWeight - item1.productWeight);\n\n  let list = root.querySelector(`.product-finder-list[data-card-type=\"${dataCardType}\"]`);\n  if (list) {\n    list.classList.remove(HIDDEN_CLASS);\n  } else {\n    list = div({\n      class: 'product-finder-list',\n      'data-card-type': dataCardType,\n    });\n    const cardRenderer = await createCard({\n      c2aLinkStyle: true,\n      defaultButtonText: placeholders.requestQuote || 'Request Quote',\n    });\n    products.forEach((product) => {\n      product.c2aLinkConfig = {\n        href: `/quote-request?pid=${product.familyID}`,\n        'aria-label': placeholders.requestQuote || 'Request Quote',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n      };\n      const card = cardRenderer.renderItem(product);\n      // add product path attribute\n      card.setAttribute('data-product-path', product.path);\n      list.append(card);\n    });\n  }\n\n  const count = root.querySelector(`.result-count[data-card-type=\"${dataCardType}\"]`);\n  if (count) count.remove();\n\n  let filters = root.querySelector(`.finder-filters[data-card-type=\"${dataCardType}\"]`);\n  if (!filters) {\n    filters = await renderFiltersRow(originalCategory, originalType, products, dataCardType);\n  }\n\n  if (list.children.length === 1) {\n    const compareButton = list.querySelector('.compare-button');\n    compareButton.style.display = 'none';\n  }\n\n  const cardTitles = list.querySelectorAll('.card-caption h3 a');\n  cardTitles.forEach((title) => {\n    title.appendChild(span({ class: 'icon icon-chevron-right-outline' }));\n  });\n\n  decorateIcons(list);\n\n  const totalCount = span(\n    { class: 'result-count', 'data-card-type': dataCardType },\n    `${list.children.length} Results`,\n  );\n\n  const categories = await getCategories(originalType);\n  const categoryData = categories.find(\n    (c) => c.category === originalCategory && c.type === originalType,\n  );\n  if (categoryData.displayImage === 'false') {\n    const cardThumbs = list.querySelectorAll('.card-thumb');\n    cardThumbs.forEach((thumb) => {\n      thumb.style.display = 'none';\n    });\n  }\n\n  if (filters) root.append(filters);\n  root.append(totalCount);\n  root.append(list);\n}",
            "score": -0.9534883720930233
        },
        "blocks/product-finder/product-finder.js::stepTwo": {
            "changes_after_merge": 2,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "async function stepTwo(e) {\n  e.preventDefault();\n\n  const type = step2Type || getTabName(e.target);\n  const title = step2Title || getTabTitle(e.target);\n  step2Title = title;\n  step2Type = type;\n\n  const stepNum = `${STEP_PREFIX}-2`;\n  const prevStepNum = `${STEP_PREFIX}-1`;\n  const root = switchTab(title, stepNum, prevStepNum, 'Select tab Category');\n\n  // generate the icons only once\n  const dataCardType = getListIdentifier(`${type}`);\n\n  // get all product-finder-list\n  const lists = root.querySelectorAll('.product-finder-list');\n  lists.forEach((list) => {\n    if (list.attributes['data-card-type'].value !== dataCardType) {\n      list.remove();\n    }\n  });\n\n  const list = root.querySelector(`.product-finder-list[data-card-type=\"${dataCardType}\"]`);\n  if (list) {\n    list.classList.remove(HIDDEN_CLASS);\n  } else {\n    const categories = await getCategories(type);\n    root.append(await renderIconCards(categories, stepNum, type, stepThree));\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/product-finder/product-finder.js::switchTab": {
            "changes_after_merge": 1,
            "file_path": "blocks/product-finder/product-finder.js",
            "merged_function": "function switchTab(tab, stepNum, prevStepNum, title) {\n  const root = document.getElementById(stepNum);\n  const prevRoot = document.getElementById(prevStepNum);\n  const backBtn = document.querySelector('.product-finder-container .reset');\n  root.style.display = 'block';\n  prevRoot.style.display = 'none';\n  backBtn.classList.remove(HIDDEN_CLASS);\n  prevRoot.classList.remove(ACTIVE_CLASS);\n  root.classList.add(ACTIVE_CLASS);\n\n  if (title) {\n    const titleEl = document.querySelector('.product-finder-wrapper .product-finder-tab-title');\n    titleEl.innerHTML = title.replace('tab', tab);\n  }\n\n  document.querySelector(`.product-finder-container .progress-${prevStepNum}`).classList.add(CHECKED_CLASS);\n  document.querySelector(`.product-finder-container .progress-${prevStepNum} + span.step-text`).append(\n    span({ class: 'step-custom-text' }, ': ', strong(tab),\n    ),\n  );\n\n  const iconLists = prevRoot.querySelectorAll('.product-finder-list');\n  iconLists.forEach((iconList) => {\n    iconList.classList.add(HIDDEN_CLASS);\n  });\n\n  return root;\n}",
            "score": -0.9534883720930233
        },
        "blocks/product-video-highlight/product-video-highlight.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/product-video-highlight/product-video-highlight.js",
            "merged_function": "async function decorate(block) {\n  block.style = `grid-template-rows: repeat(${Math.max(block.children.length - 1, 3)}, auto);`;\n\n  await Promise.all([...block.children].map(async (child, idx) => {\n    child.classList.add(idx ? 'related' : 'main');\n\n    // vidyard video\n    if (child.querySelector('a[href*=\"vidyard.com\"], a[href*=\"vids.moleculardevices.com\"]')) {\n      return;\n    }\n\n    // ceros demo\n    if (child.querySelector('a[href*=\"ceros.com')) {\n      const cerosBlock = buildBlock(\n        'ceros', [[child.children[0].children[0], child.children[0].children[1]]],\n      );\n      child.children[0].prepend(cerosBlock);\n      decorateBlock(cerosBlock);\n      await loadBlock(cerosBlock);\n      return;\n    }\n\n    // picture with external reference\n    if (child.querySelector('picture') && child.querySelector('a')) {\n      const picture = child.querySelector('picture');\n      const link = child.querySelector('a');\n\n      if (link.children[0] !== picture) {\n        picture.parentElement.remove();\n        link.innerHTML = '';\n        link.appendChild(picture);\n      }\n\n      link.className = '';\n      link.classList.add('reference-placeholder');\n      link.appendChild(\n        button({\n          class: 'video-icon',\n          'aria-label': 'Open in new tab',\n          onclick: (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            window.open(link.href, '_blank');\n          },\n        }),\n      );\n    }\n  }));\n\n  const seeMoreVideos = block.querySelector('a[title=\"See more videos\"]');\n  if (seeMoreVideos) {\n    seeMoreVideos.appendChild(span({ class: 'icon icon-chevron-right-outline' }));\n    block.parentElement.appendChild(seeMoreVideos.parentElement);\n    decorateIcons(seeMoreVideos);\n  }\n}",
            "score": -1.0
        },
        "blocks/publication/publication.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/publication/publication.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  const options = {\n    limitPerPage: parseInt(config.limitPerPage, 10) || 10,\n    limitForPagination: parseInt(config.limitForPagination, 9) || 9,\n    showDescription: true,\n    viewMoreText: 'learn more',\n    panelTitle: 'Filter By :',\n  };\n  options.activeFilters = new Map();\n  options.activeFilters.set('year', '');\n  options.activeFilters.set('page', 1);\n\n  options.data = await fetchData('publications');\n  // console.log(`found ${data.length} entries`);\n  await createOverview(\n    block,\n    options);\n}",
            "score": -0.9069767441860466
        },
        "blocks/quote-request/iframeResizer.min.js::A": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function A(a,b){function c(){u(\"Send Page Info\",\"pageInfo:\"+z(),a,b)}x(c,32)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function B(){function a(a,b){function c(){P[f]?A(P[f].iframe,f):d()}[\"scroll\",\"resize\"].forEach(function(d){h(f,a+d+\" listener for sendPageInfo\"),b(window,d,c)})}function d(){a(\"Remove \",c)}function e(){a(\"Add \",b)}var f=V;e(),P[f]&&(P[f].stopPageInfo=d)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::C": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function C(){P[V]&&P[V].stopPageInfo&&(P[V].stopPageInfo(),delete P[V].stopPageInfo)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::D": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function D(){var a=!0;return null===U.iframe&&(j(V,\"IFrame (\"+U.id+\") not found\"),a=!1),a}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::E": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function E(a){var b=a.getBoundingClientRect();return o(V),{x:Math.floor(Number(b.left)+Number(M.x)),y:Math.floor(Number(b.top)+Number(M.y))}}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function F(a){function b(){M=f,G(),h(V,\"--\")}function c(){return{x:Number(U.width)+e.x,y:Number(U.height)+e.y}}function d(){window.parentIFrame?window.parentIFrame[\"scrollTo\"+(a?\"Offset\":\"\")](f.x,f.y):j(V,\"Unable to scroll to requested position, window.parentIFrame not found\")}var e=a?E(U.iframe):{x:0,y:0},f=c();h(V,\"Reposition requested from iFrame (offset x:\"+e.x+\" y:\"+e.y+\")\"),window.top!==window.self?d():b()}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::G": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function G(){!1!==I(\"scrollCallback\",M)?p(V):q()}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function H(a){function b(){var a=E(f);h(V,\"Moving to in page link (#\"+d+\") at x: \"+a.x+\" y: \"+a.y),M={x:a.x,y:a.y},G(),h(V,\"--\")}function c(){window.parentIFrame?window.parentIFrame.moveToAnchor(d):h(V,\"In page link #\"+d+\" not found and window.parentIFrame not found\")}var d=a.split(\"#\")[1]||\"\",e=decodeURIComponent(d),f=document.getElementById(e)||document.getElementsByName(e)[0];f?b():window.top!==window.self?c():h(V,\"In page link #\"+d+\" not found\")}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::I": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function I(a,b){return m(V,a,b)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::N": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function N(){switch(P[V]&&P[V].firstRun&&S(),U.type){case\"close\":P[V].closeRequestCallback?m(V,\"closeRequestCallback\",P[V].iframe):n(U.iframe);break;case\"message\":y(w(6));break;case\"scrollTo\":F(!1);break;case\"scrollToOffset\":F(!0);break;case\"pageInfo\":A(P[V]&&P[V].iframe,V),B();break;case\"pageInfoStop\":C();break;case\"inPageLink\":H(w(9));break;case\"reset\":r(U);break;case\"init\":d(),I(\"initCallback\",U.iframe);break;default:d()}}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::O": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function O(a){var b=!0;return P[a]||(b=!1,j(U.type+\" No settings for \"+a+\". Message was: \"+T)),b}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function Q(){for(var a in P)u(\"iFrame requested init\",v(a),document.getElementById(a),a)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function S(){P[V]&&(P[V].firstRun=!1)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::a": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function a(){s(U),p(V),I(\"resizedCallback\",U)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function b(a,b,c){\"addEventListener\"in window?a.addEventListener(b,c,!1):\"attachEvent\"in window&&a.attachEvent(\"on\"+b,c)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function c(a,b,c){\"removeEventListener\"in window?a.removeEventListener(b,c,!1):\"detachEvent\"in window&&a.detachEvent(\"on\"+b,c)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function d(){var a,b=[\"moz\",\"webkit\",\"o\",\"ms\"];for(a=0;a<b.length&&!N;a+=1)N=window[b[a]+\"RequestAnimationFrame\"];N||h(\"setup\",\"RequestAnimationFrame not supported\")}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function e(a){var b=\"Host page: \"+a;return window.top!==window.self&&(b=window.parentIFrame&&window.parentIFrame.getId?window.parentIFrame.getId()+\": \"+a:\"Nested host page: \"+a),b}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function f(a){return K+\"[\"+e(a)+\"]\"}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function g(a){return P[a]?P[a].log:G}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function h(a,b){k(\"log\",a,b,g(a))}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function i(a,b){k(\"info\",a,b,g(a))}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::j": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function j(a,b){k(\"warn\",a,b,!0)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function k(a,b,c,d){!0===d&&\"object\"==typeof window.console&&console[a](f(b),c)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::l": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function l(a){function d(){function a(){s(U),p(V),I(\"resizedCallback\",U)}f(\"Height\"),f(\"Width\"),t(a,U,\"init\")}function e(){var a=T.substr(L).split(\":\");return{iframe:P[a[0]]&&P[a[0]].iframe,id:a[0],height:a[1],width:a[2],type:a[3]}}function f(a){var b=Number(P[V][\"max\"+a]),c=Number(P[V][\"min\"+a]),d=a.toLowerCase(),e=Number(U[d]);h(V,\"Checking \"+d+\" is in range \"+c+\"-\"+b),c>e&&(e=c,h(V,\"Set \"+d+\" to min value\")),e>b&&(e=b,h(V,\"Set \"+d+\" to max value\")),U[d]=\"\"+e}function g(){function b(){function a(){var a=0,b=!1;for(h(V,\"Checking connection is from allowed list of origins: \"+d);a<d.length;a++)if(d[a]===c){b=!0;break}return b}function b(){var a=P[V]&&P[V].remoteHost;return h(V,\"Checking connection is from: \"+a),c===a}return d.constructor===Array?a():b()}var c=a.origin,d=P[V]&&P[V].checkOrigin;if(d&&\"\"+c!=\"null\"&&!b())throw new Error(\"Unexpected message received from: \"+c+\" for \"+U.iframe.id+\". Message was: \"+a.data+\". This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.\");return!0}function k(){return K===(\"\"+T).substr(0,L)&&T.substr(L).split(\":\")[0]in P}function l(){var a=U.type in{\"true\":1,\"false\":1,undefined:1};return a&&h(V,\"Ignoring init message from meta parent page\"),a}function w(a){return T.substr(T.indexOf(\":\")+J+a)}function y(a){h(V,\"MessageCallback passed: {iframe: \"+U.iframe.id+\", message: \"+a+\"}\"),I(\"messageCallback\",{iframe:U.iframe,message:JSON.parse(a)}),h(V,\"--\")}function z(){var a=document.body.getBoundingClientRect(),b=U.iframe.getBoundingClientRect();return JSON.stringify({iframeHeight:b.height,iframeWidth:b.width,clientHeight:Math.max(document.documentElement.clientHeight,window.innerHeight||0),clientWidth:Math.max(document.documentElement.clientWidth,window.innerWidth||0),offsetTop:parseInt(b.top-a.top,10),offsetLeft:parseInt(b.left-a.left,10),scrollTop:window.pageYOffset,scrollLeft:window.pageXOffset})}function A(a,b){function c(){u(\"Send Page Info\",\"pageInfo:\"+z(),a,b)}x(c,32)}function B(){function a(a,b){function c(){P[f]?A(P[f].iframe,f):d()}[\"scroll\",\"resize\"].forEach(function(d){h(f,a+d+\" listener for sendPageInfo\"),b(window,d,c)})}function d(){a(\"Remove \",c)}function e(){a(\"Add \",b)}var f=V;e(),P[f]&&(P[f].stopPageInfo=d)}function C(){P[V]&&P[V].stopPageInfo&&(P[V].stopPageInfo(),delete P[V].stopPageInfo)}function D(){var a=!0;return null===U.iframe&&(j(V,\"IFrame (\"+U.id+\") not found\"),a=!1),a}function E(a){var b=a.getBoundingClientRect();return o(V),{x:Math.floor(Number(b.left)+Number(M.x)),y:Math.floor(Number(b.top)+Number(M.y))}}function F(a){function b(){M=f,G(),h(V,\"--\")}function c(){return{x:Number(U.width)+e.x,y:Number(U.height)+e.y}}function d(){window.parentIFrame?window.parentIFrame[\"scrollTo\"+(a?\"Offset\":\"\")](f.x,f.y):j(V,\"Unable to scroll to requested position, window.parentIFrame not found\")}var e=a?E(U.iframe):{x:0,y:0},f=c();h(V,\"Reposition requested from iFrame (offset x:\"+e.x+\" y:\"+e.y+\")\"),window.top!==window.self?d():b()}function G(){!1!==I(\"scrollCallback\",M)?p(V):q()}function H(a){function b(){var a=E(f);h(V,\"Moving to in page link (#\"+d+\") at x: \"+a.x+\" y: \"+a.y),M={x:a.x,y:a.y},G(),h(V,\"--\")}function c(){window.parentIFrame?window.parentIFrame.moveToAnchor(d):h(V,\"In page link #\"+d+\" not found and window.parentIFrame not found\")}var d=a.split(\"#\")[1]||\"\",e=decodeURIComponent(d),f=document.getElementById(e)||document.getElementsByName(e)[0];f?b():window.top!==window.self?c():h(V,\"In page link #\"+d+\" not found\")}function I(a,b){return m(V,a,b)}function N(){switch(P[V]&&P[V].firstRun&&S(),U.type){case\"close\":P[V].closeRequestCallback?m(V,\"closeRequestCallback\",P[V].iframe):n(U.iframe);break;case\"message\":y(w(6));break;case\"scrollTo\":F(!1);break;case\"scrollToOffset\":F(!0);break;case\"pageInfo\":A(P[V]&&P[V].iframe,V),B();break;case\"pageInfoStop\":C();break;case\"inPageLink\":H(w(9));break;case\"reset\":r(U);break;case\"init\":d(),I(\"initCallback\",U.iframe);break;default:d()}}function O(a){var b=!0;return P[a]||(b=!1,j(U.type+\" No settings for \"+a+\". Message was: \"+T)),b}function Q(){for(var a in P)u(\"iFrame requested init\",v(a),document.getElementById(a),a)}function S(){P[V]&&(P[V].firstRun=!1)}var T=a.data,U={},V=null;\"[iFrameResizerChild]Ready\"===T?Q():k()?(U=e(),V=R=U.id,P[V]&&(P[V].loaded=!0),!l()&&O(V)&&(h(V,\"Received: \"+T),D()&&g()&&N())):i(V,\"Ignored: \"+T)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::m": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function m(a,b,c){var d=null,e=null;if(P[a]){if(d=P[a][b],\"function\"!=typeof d)throw new TypeError(b+\" on iFrame[\"+a+\"] is not a function\");e=d(c)}return e}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function n(a){var b=a.id;h(b,\"Removing iFrame: \"+b),a.parentNode&&a.parentNode.removeChild(a),m(b,\"closedCallback\",b),h(b,\"--\"),delete P[b]}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::o": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function o(b){null===M&&(M={x:window.pageXOffset!==a?window.pageXOffset:document.documentElement.scrollLeft,y:window.pageYOffset!==a?window.pageYOffset:document.documentElement.scrollTop},h(b,\"Get page position: \"+M.x+\",\"+M.y))}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::p": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function p(a){null!==M&&(window.scrollTo(M.x,M.y),h(a,\"Set page position: \"+M.x+\",\"+M.y),q())}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::q": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function q(){M=null}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function r(a){function b(){s(a),u(\"reset\",\"reset\",a.iframe,a.id)}h(a.id,\"Size reset requested by \"+(\"init\"===a.type?\"host page\":\"iFrame\")),o(a.id),t(b,a,\"reset\")}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function s(a){function b(b){a.iframe.style[b]=a[b]+\"px\",h(a.id,\"IFrame (\"+e+\") \"+b+\" set to \"+a[b]+\"px\")}function c(b){H||\"0\"!==a[b]||(H=!0,h(e,\"Hidden iFrame detected, creating visibility listener\"),y())}function d(a){b(a),c(a)}var e=a.iframe.id;P[e]&&(P[e].sizeHeight&&d(\"height\"),P[e].sizeWidth&&d(\"width\"))}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::t": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function t(a,b,c){c!==b.type&&N?(h(b.id,\"Requesting animation frame\"),N(a)):a()}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function u(a,b,c,d,e){function f(){var e=P[d]&&P[d].targetOrigin;h(d,\"[\"+a+\"] Sending msg to iframe[\"+d+\"] (\"+b+\") targetOrigin: \"+e),c.contentWindow.postMessage(K+b,e)}function g(){j(d,\"[\"+a+\"] IFrame(\"+d+\") not found\")}function i(){c&&\"contentWindow\"in c&&null!==c.contentWindow?f():g()}function k(){function a(){!P[d]||P[d].loaded||l||(l=!0,j(d,\"IFrame has not responded within \"+P[d].warningTimeout/1e3+\" seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ingored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning.\"))}e&&P[d]&&P[d].warningTimeout&&(P[d].msgTimeout=setTimeout(a,P[d].warningTimeout))}var l=!1;d=d||c.id,P[d]&&(i(),k())}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function v(a){return a+\":\"+P[a].bodyMarginV1+\":\"+P[a].sizeWidth+\":\"+P[a].log+\":\"+P[a].interval+\":\"+P[a].enablePublicMethods+\":\"+P[a].autoResize+\":\"+P[a].bodyMargin+\":\"+P[a].heightCalculationMethod+\":\"+P[a].bodyBackground+\":\"+P[a].bodyPadding+\":\"+P[a].tolerance+\":\"+P[a].inPageLinks+\":\"+P[a].resizeFrom+\":\"+P[a].widthCalculationMethod}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::w": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function w(a){return T.substr(T.indexOf(\":\")+J+a)}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::x": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function x(a,b){null===Q&&(Q=setTimeout(function(){Q=null,a()},b))}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function y(a){h(V,\"MessageCallback passed: {iframe: \"+U.iframe.id+\", message: \"+a+\"}\"),I(\"messageCallback\",{iframe:U.iframe,message:JSON.parse(a)}),h(V,\"--\")}",
            "score": -1.0
        },
        "blocks/quote-request/iframeResizer.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/iframeResizer.min.js",
            "merged_function": "function z(){var a=document.body.getBoundingClientRect(),b=U.iframe.getBoundingClientRect();return JSON.stringify({iframeHeight:b.height,iframeWidth:b.width,clientHeight:Math.max(document.documentElement.clientHeight,window.innerHeight||0),clientWidth:Math.max(document.documentElement.clientWidth,window.innerWidth||0),offsetTop:parseInt(b.top-a.top,10),offsetLeft:parseInt(b.left-a.left,10),scrollTop:window.pageYOffset,scrollLeft:window.pageXOffset})}",
            "score": -1.0
        },
        "blocks/quote-request/quote-request.js::backOneStep": {
            "changes_after_merge": 1,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function backOneStep(stepNum) {\n  const currentTab = document.getElementById(stepNum);\n  const prevTab = currentTab.previousElementSibling;\n\n  currentTab.style.display = 'none';\n  prevTab.style.display = 'block';\n}",
            "score": -0.9534883720930233
        },
        "blocks/quote-request/quote-request.js::createBackBtn": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function createBackBtn(stepNum) {\n  return button(\n    {\n      class: 'back-step-btn',\n      onclick: () => {\n        backOneStep(stepNum);\n      },\n    },\n    i({ class: 'fa-angle-left fa' }),\n  );\n}",
            "score": -1.0
        },
        "blocks/quote-request/quote-request.js::createProgessBar": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function createProgessBar(val, checkStep) {\n  return div(\n    { class: 'progress-wrapper' },\n    checkStep === 'step-1' ? div({ class: 'progress-bullet' }) : '',\n    div(\n      { class: 'progress-bar' },\n      div({ class: 'progress', id: 'progressBar', style: `width: ${val}%` }),\n    ),\n  );\n}",
            "score": -1.0
        },
        "blocks/quote-request/quote-request.js::createRFQListBox": {
            "changes_after_merge": 1,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function createRFQListBox(listArr, checkStep, callback) {\n  const list = ul({ class: 'rfq-icon-list' });\n\n  listArr.forEach((rfq) => {\n    const id = rfq.Type.toLowerCase().replace(',', '').trim();\n    list.appendChild(\n      li(\n        { class: 'rfq-icon-item' },\n        a(\n          {\n            class: 'rfq-icon-link',\n            id: id.split(' ').join('-'),\n            href: checkStep === 'step-1' ? '#step-2' : '#step-3',\n            'data-tab': checkStep === 'step-1' ? rfq.Type : rfq.Category,\n            onclick: callback,\n          },\n          img({\n            class: 'rfq-icon-img',\n            src: rfq['RFQ-Image'],\n            alt: checkStep === 'step-1' ? rfq.Type : rfq.Category,\n          }),\n          span({ class: 'rfq-icon-title' }, checkStep === 'step-1' ? rfq.Type : rfq.Category),\n        ),\n      ),\n    );\n  });\n  return list;\n}",
            "score": -0.9534883720930233
        },
        "blocks/quote-request/quote-request.js::decorate": {
            "changes_after_merge": 18,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "async function decorate(block) {\n  block.innerHTML = `\n  <div id=\"step-1\" class=\"rfq-product-wrapper\"></div>\n  <div id=\"step-2\" class=\"rfq-product-wrapper\" style=\"display: none;\"></div>\n  <div id=\"step-3\" class=\"rfq-product-wrapper request-quote-form\" style=\"display: none;\"></div>`;\n  stepOne(stepTwo);\n}",
            "score": -0.16279069767441856
        },
        "blocks/quote-request/quote-request.js::getRFQData": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "async function getRFQData(pid) {\n  if (pid) {\n    const productRfq = await ffetch('/query-index.json')\n      .sheet('rfq')\n      .withFetch(fetch)\n      .filter(({ familyID }) => familyID === pid)\n      .first();\n    return productRfq;\n  }\n  return false;\n}",
            "score": -1.0
        },
        "blocks/quote-request/quote-request.js::getRFQDataByFamilyID": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "async function getRFQDataByFamilyID(pid) {\n  if (pid) {\n    const productRfq = await ffetch('/query-index.json')\n      .sheet('rfq')\n      .withFetch(fetch)\n      .filter(({ familyID }) => familyID === pid)\n      .first();\n    return productRfq;\n  }\n  return false;\n}",
            "score": -1.0
        },
        "blocks/quote-request/quote-request.js::getRFQDataByTitle": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "async function getRFQDataByTitle(name) {\n  if (name) {\n    const productRfq = await ffetch('/query-index.json')\n      .sheet('rfq')\n      .withFetch(fetch)\n      .filter(({ title }) => title === name)\n      .first();\n    return productRfq;\n  }\n  return false;\n}",
            "score": -1.0
        },
        "blocks/quote-request/quote-request.js::iframeResizehandler": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function iframeResizehandler(formUrl, id, root) {\n  root.querySelector('iframe').addEventListener('load', () => {\n    if (formUrl) {\n      /* global iFrameResize */\n      iFrameResize({ log: false }, id);\n    }\n  });\n}",
            "score": -1.0
        },
        "blocks/quote-request/quote-request.js::loadIframeForm": {
            "changes_after_merge": 43,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function loadIframeForm(stepNum, tab) {\n  loadScript('/blocks/quote-request/iframeResizer.min.js');\n  const root = document.getElementById(stepNum);\n  root.innerHTML = '';\n\n  const formUrl = 'https://info.moleculardevices.com/rfq';\n\n  const productFamily = rfqCategories.filter(({ Category }) => Category.includes(tab) > 0);\n  const sfdcProductFamily = productFamily[0].ProductFamily;\n\n  const cmpValue = getCookie('cmp') ? getCookie('cmp') : '70170000000hlRa';\n\n  const hubSpotQuery = {\n    product_family__c: sfdcProductFamily,\n    product_selection__c: sfdcProductFamily,\n    product_primary_application__c: sfdcProductFamily,\n    cmp: cmpValue,\n    google_analytics_medium__c: getCookie('utm_medium') ? getCookie('utm_medium') : '',\n    google_analytics_source__c: getCookie('utm_source') ? getCookie('utm_source') : '',\n    keyword_ppc__c: getCookie('utm_keyword') ? getCookie('utm_keyword') : '',\n    gclid__c: getCookie('gclid') ? getCookie('gclid') : '',\n    product_image: 'NA',\n    requested_qdc_discussion__c: 'Quote',\n    return_url: `https://www.moleculardevices.com/quote-request-success?cat=${tab}&cmp=${cmpValue}`,\n  };\n\n  root.appendChild(\n    div(\n      h3('Got it. Now, let\\'s get in touch.'),\n      p(\n        'A team member will contact you within 24-business hours regarding your product inquiry for: ',\n        span({ style: 'display: block;font-weight: bold;' }, tab),\n      ),\n      iframe({\n        class: 'contact-quote-request',\n        id: 'contactQuoteRequest',\n        src: `${formUrl}?${new URLSearchParams(hubSpotQuery).toString()}`,\n      }),\n    ),\n  );\n  root.appendChild(createBackBtn(stepNum));\n  iframeResizehandler(formUrl, '#contactQuoteRequest', root);\n}",
            "score": 1.0
        },
        "blocks/quote-request/quote-request.js::prepImageUrl": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function prepImageUrl(thumbImage) {\n  let thumbImg = thumbImage;\n  if (!thumbImg.startsWith('https')) {\n    if (thumbImg.startsWith('.')) {\n      thumbImg = thumbImage.substring(1);\n    }\n    thumbImg = `https://www.moleculardevices.com${thumbImage}`;\n  }\n  return thumbImg;\n}",
            "score": -1.0
        },
        "blocks/quote-request/quote-request.js::rfqData": {
            "changes_after_merge": 1,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "async function rfqData() {\n  const pid = 'pid';\n  const readQuery = getQueryParameter(pid);\n  if (readQuery[pid]) {\n    const productRfq = await ffetch('/query-index.json')\n      .sheet('rfq')\n      .withFetch(fetch)\n      .filter(({ familyID }) => familyID.includes(readQuery[pid]))\n      .first();\n    return productRfq;\n  }\n  return false;\n}",
            "score": -0.9534883720930233
        },
        "blocks/quote-request/quote-request.js::stepOne": {
            "changes_after_merge": 1,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function stepOne(callback) {\n  const stepNum = 'step-1';\n  const root = document.getElementById(stepNum);\n  const defaultProgessValue = 40;\n\n  const fetchRQFTypes = createRFQListBox(rfqTypes, stepNum, callback);\n  const progressBarHtml = createProgessBar(defaultProgessValue, stepNum);\n\n  root.appendChild(h3('What type of product are you interested in?'));\n  root.appendChild(fetchRQFTypes);\n  root.appendChild(progressBarHtml);\n}",
            "score": -0.9534883720930233
        },
        "blocks/quote-request/quote-request.js::stepThree": {
            "changes_after_merge": 2,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function stepThree(e) {\n  e.preventDefault();\n  let tab = '';\n  if (e.target.getAttribute('data-tab')) {\n    tab = e.target.getAttribute('data-tab');\n  } else {\n    tab = e.target.closest('.rfq-icon-link').getAttribute('data-tab');\n  }\n\n  const stepNum = 'step-3';\n  const prevRoot = document.getElementById('step-2');\n  const root = document.getElementById(stepNum);\n  root.innerHTML = '';\n\n  loadIframeForm(stepNum, tab);\n\n  root.style.display = 'block';\n  prevRoot.style.display = 'none';\n}",
            "score": -0.9069767441860466
        },
        "blocks/quote-request/quote-request.js::stepTwo": {
            "changes_after_merge": 3,
            "file_path": "blocks/quote-request/quote-request.js",
            "merged_function": "function stepTwo(e) {\n  e.preventDefault();\n\n  let tab = '';\n  if (e.target.getAttribute('data-tab')) {\n    tab = e.target.getAttribute('data-tab');\n  } else {\n    tab = e.target.closest('.rfq-icon-link').getAttribute('data-tab');\n  }\n\n  const stepNum = 'step-2';\n  const prevRoot = document.getElementById('step-1');\n  const root = document.getElementById(stepNum);\n  root.innerHTML = '';\n  const filterData = rfqCategories.filter(({ Type }) => Type.includes(tab) > 0);\n\n  const defaultProgessValue = 70;\n  const fetchRQFTypes = createRFQListBox(filterData, stepNum, stepThree);\n  const progressBarHtml = createProgessBar(defaultProgessValue, stepNum);\n\n  root.appendChild(h3('Please select the Instrument category'));\n  root.appendChild(fetchRQFTypes);\n  root.appendChild(progressBarHtml);\n  root.appendChild(createBackBtn(stepNum));\n  root.style.display = 'block';\n  prevRoot.style.display = 'none';\n}",
            "score": -0.8604651162790697
        },
        "blocks/quote/quote.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/quote/quote.js",
            "merged_function": "function decorate(block) {\n  block.children.length > 0 && block.children[0].classList.add('quote-text');\n  block.children.length > 1 && block.children[1].classList.add('quote-author');\n}",
            "score": -1.0
        },
        "blocks/recent-blogs-carousel/recent-blogs-carousel.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/recent-blogs-carousel/recent-blogs-carousel.js",
            "merged_function": "async function decorate(block) {\n  let blogs = await ffetch('/query-index.json')\n    .sheet('blog')\n    .limit(6)\n    .all();\n  blogs = blogs.filter((blog) => blog.path !== window.location.pathname).slice(0, 5);\n\n  await createCarousel(\n    block,\n    blogs,\n    {\n      navButtons: true,\n      dotButtons: false,\n      infiniteScroll: true,\n      autoScroll: false,\n      visibleItems: [\n        {\n          items: 1,\n          condition: () => window.screen.width < 768,\n        },\n        {\n          items: 2,\n          condition: () => window.screen.width < 1200,\n        }, {\n          items: 3,\n        },\n      ],\n      renderItem,\n    },\n  );\n}",
            "score": -0.8604651162790697
        },
        "blocks/recent-blogs-carousel/recent-blogs-carousel.js::renderItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-blogs-carousel/recent-blogs-carousel.js",
            "merged_function": "function renderItem(item) {\n  const itemImage = item.thumbnail && item.thumbnail !== '0' ? item.thumbnail : item.image;\n  const buttonText = item.cardC2A && item.cardC2A !== '0' ? item.cardC2A : 'Read More';\n\n  return (\n    div({ class: 'blog-carousel-item' },\n      div({ class: 'blog-carousel-thumb' },\n        a({ href: item.path },\n          createOptimizedPicture(itemImage, item.title, 'lazy', [{ width: '800' }]),\n        ),\n      ),\n      div({ class: 'blog-carousel-caption' },\n        h3(\n          a({ href: item.path }, item.title),\n        ),\n        p({ class: 'blog-description' }, summariseDescription(item.description)),\n        p({ class: 'button-container' },\n          a({ href: item.path, 'aria-label': buttonText, class: 'button primary' }, buttonText),\n        ),\n      ),\n    )\n  );\n}",
            "score": -1.0
        },
        "blocks/recent-blogs-carousel/recent-blogs-carousel.js::summariseDescription": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-blogs-carousel/recent-blogs-carousel.js",
            "merged_function": "function summariseDescription(description) {\n  let result = description;\n  if (result.length > 75) {\n    result = result.substring(0, 75);\n    const lastSpaceIndex = result.lastIndexOf(' ');\n    if (lastSpaceIndex !== -1) {\n      result = result.substring(0, lastSpaceIndex);\n    }\n  }\n  return `${result}\u2026'`;\n}",
            "score": -1.0
        },
        "blocks/regional-contacts/regional-contacts.js::accordianHandler": {
            "changes_after_merge": 0,
            "file_path": "blocks/regional-contacts/regional-contacts.js",
            "merged_function": "function accordianHandler() {\n  const siblings = this.parentElement.parentElement.children;\n  const siblingsCount = siblings.length;\n\n  if (this.children[0].classList.contains('fa-plus')) {\n    /* eslint no-plusplus: \"error\" */\n    for (let i = 0; i < siblingsCount; i += 1) {\n      siblings[i].children[0].children[0].classList.add('fa-plus');\n      siblings[i].children[0].children[0].classList.remove('fa-minus');\n      siblings[i].children[1].classList.remove('active');\n    }\n    this.nextElementSibling.classList.add('active');\n    this.children[0].classList.remove('fa-plus');\n    this.children[0].classList.add('fa-minus');\n  } else {\n    this.children[0].classList.remove('fa-minus');\n    this.children[0].classList.add('fa-plus');\n    this.nextElementSibling.classList.remove('active');\n  }\n}",
            "score": -1.0
        },
        "blocks/regional-contacts/regional-contacts.js::createAccordian": {
            "changes_after_merge": 0,
            "file_path": "blocks/regional-contacts/regional-contacts.js",
            "merged_function": "function createAccordian(tab, plusIcon, index) {\n  if (index === 0) {\n    plusIcon.classList.remove('fa-plus');\n    plusIcon.classList.add('fa-minus');\n    tab.nextElementSibling.classList.add('active');\n  }\n\n  tab.appendChild(plusIcon);\n  tab.addEventListener('click', accordianHandler);\n}",
            "score": -1.0
        },
        "blocks/regional-contacts/regional-contacts.js::createTabButtons": {
            "changes_after_merge": 1,
            "file_path": "blocks/regional-contacts/regional-contacts.js",
            "merged_function": "function createTabButtons(tabWrapper, tabName, tabClassName, index) {\n  const tabBtn = document.createElement('a');\n\n  tabBtn.textContent = tabName;\n  tabBtn.href = `#${tabName.toLowerCase()}`;\n  tabBtn.classList.add(tabClassName);\n\n  if (index === 0) {\n    tabBtn.classList.add('active');\n    document.getElementById(tabName.toLowerCase()).style.display = 'block';\n  }\n\n  tabBtn.addEventListener('click', tabHandler);\n  tabWrapper.appendChild(tabBtn);\n}",
            "score": -0.9534883720930233
        },
        "blocks/regional-contacts/regional-contacts.js::tabHandler": {
            "changes_after_merge": 2,
            "file_path": "blocks/regional-contacts/regional-contacts.js",
            "merged_function": "function tabHandler(event) {\n  event.preventDefault();\n\n  const tabID = this.href.split('#')[1];\n  const tabContents = document.querySelectorAll('.tab-content');\n  const tabCount = this.parentElement.children.length;\n\n  /* eslint no-plusplus: \"error\" */\n  for (let i = 0; i < tabCount; i += 1) {\n    this.parentElement.children[i].classList.remove('active');\n    if (tabContents[i].id === tabID) {\n      tabContents[i].style.display = 'block';\n    } else {\n      tabContents[i].style.display = 'none';\n    }\n  }\n\n  this.classList.add('active');\n}",
            "score": -0.9069767441860466
        },
        "blocks/regional-contacts/regional-contacts.js::tabQueryString": {
            "changes_after_merge": 1,
            "file_path": "blocks/regional-contacts/regional-contacts.js",
            "merged_function": "function tabQueryString(tabID) {\n  const newurl = `${window.location.origin}${window.location.pathname}?region=${tabID}`;\n  window.history.pushState({ path: newurl }, '', newurl);\n}",
            "score": -0.9534883720930233
        },
        "blocks/related-applications/related-applications.js::alignTitles": {
            "changes_after_merge": 0,
            "file_path": "blocks/related-applications/related-applications.js",
            "merged_function": "function alignTitles() {\n  // eslint-disable-next-line consistent-return\n  const observer = new ResizeObserver((entries) => {\n    entries.forEach((entry) => {\n      const cards = entry.target.querySelectorAll('.related-app');\n      // cleanup heights\n      cards.forEach((card) => {\n        const title = card.querySelector('h3');\n        if (title) title.style.removeProperty('height');\n      });\n      // set heights for 2-column layout\n      if (window.matchMedia('only screen and (min-width: 992px)').matches) {\n        for (let i = 0; i < cards.length; i += 2) {\n          const leftEl = cards[i].querySelector('h3');\n          const rightEl = ((i + 1) < cards.length) ? cards[i + 1].querySelector('h3') : '';\n          if (leftEl && rightEl) {\n            const calcHeight = Math.max(leftEl.clientHeight, rightEl.clientHeight);\n            leftEl.style.height = `${calcHeight}px`;\n            rightEl.style.height = `${calcHeight}px`;\n          }\n        }\n      }\n    });\n  });\n\n  const relApps = document.querySelectorAll('.related-apps-container');\n  relApps.forEach((relApp) => {\n    observer.observe(relApp);\n  });\n}",
            "score": -1.0
        },
        "blocks/related-applications/related-applications.js::decorate": {
            "changes_after_merge": 5,
            "file_path": "blocks/related-applications/related-applications.js",
            "merged_function": "async function decorate(block) {\n  const fragmentPaths = [...block.querySelectorAll('a')].map((a) => a.href);\n  const hasTOC = block.classList.contains('toc');\n  block.innerHTML = '';\n\n  if (fragmentPaths.length === 0) {\n    return '';\n  }\n\n  const fragments = await Promise.all(fragmentPaths.map(async (path) => {\n    const fragmentHtml = await getFragmentHtml(path);\n    if (fragmentHtml) {\n      const fragmentElement = document.createElement('div');\n      fragmentElement.innerHTML = fragmentHtml;\n      const h1 = fragmentElement.querySelector('h1');\n      return { id: h1.id, title: h1.textContent, html: fragmentElement };\n    }\n    return null;\n  }));\n\n  const sortedFragments = fragments.filter((item) => !!item).sort((a, b) => {\n    if (a.title < b.title) {\n      return -1;\n    }\n    if (a.title > b.title) {\n      return 1;\n    }\n    return 0;\n  });\n\n  const apps = document.createElement('div');\n  apps.classList.add('related-apps-container');\n  const links = document.createElement('ul');\n  links.classList.add('related-links-container');\n  if (sortedFragments.length > 10) {\n    links.classList.add('cols-3');\n  }\n\n  sortedFragments.forEach((fragment) => {\n    if (hasTOC) {\n      const linkFragment = document.createElement('li');\n      linkFragment.innerHTML = `<a href=\"#${fragment.id}\">${fragment.title}</a>`;\n      renderFragment(linkFragment, links, 'related-link');\n    }\n    renderFragment(fragment.html, apps, 'related-app');\n  });\n\n  if (hasTOC) {\n    block.append(links);\n  }\n  block.append(apps);\n\n  return block;\n}",
            "score": -0.7674418604651163
        },
        "blocks/related-applications/related-applications.js::getFragmentHtml": {
            "changes_after_merge": 0,
            "file_path": "blocks/related-applications/related-applications.js",
            "merged_function": "async function getFragmentHtml(path) {\n  const response = await fetch(`${path}.plain.html`);\n  if (!response.ok) {\n    // eslint-disable-next-line no-console\n    console.error('error loading fragment details', response);\n    return null;\n  }\n  const text = await response.text();\n  if (!text) {\n    // eslint-disable-next-line no-console\n    console.error('fragment details empty');\n    return null;\n  }\n  return text;\n}",
            "score": -1.0
        },
        "blocks/related-applications/related-applications.js::renderFragment": {
            "changes_after_merge": 0,
            "file_path": "blocks/related-applications/related-applications.js",
            "merged_function": "async function renderFragment(fragment, block, className) {\n  fragment.classList.add(className);\n  const actionLink = fragment.querySelector('div > p:last-child:last-of-type a:only-child');\n  if (actionLink) {\n    addLinkIcon(actionLink);\n  }\n  block.append(fragment);\n}",
            "score": -1.0
        },
        "blocks/related-assay-data/related-assay-data.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/related-assay-data/related-assay-data.js",
            "merged_function": "async function decorate(block) {\n  const fragmentPaths = [...block.querySelectorAll('a')].map((a) => a.href);\n  block.innerHTML = '';\n  if (fragmentPaths.length === 0) {\n    return '';\n  }\n\n  const fragments = {};\n  await Promise.all(fragmentPaths.map(async (path) => {\n    const fragmentHtml = await fetchFragment(path);\n    if (fragmentHtml) {\n      const fragmentElement = document.createElement('div');\n      fragmentElement.innerHTML = fragmentHtml;\n      const headerBlock = fragmentElement.querySelector('h3');\n      const pictureBlock = fragmentElement.querySelector('picture');\n      const otherChildren = fragmentElement.querySelectorAll('p:not(:has(picture))');\n      fragments[path] = {\n        headerBlock,\n        pictureBlock,\n        otherChildren,\n      };\n    }\n  }));\n\n  fragmentPaths.forEach((path) => {\n    const fragment = fragments[path];\n    if (fragment) {\n      const { headerBlock, otherChildren, pictureBlock } = fragment;\n      block.append(\n        div({ class: 'assay' },\n          div({ class: 'assay-content' },\n            headerBlock,\n            ...otherChildren,\n          ),\n          div({ class: 'assay-picture' },\n            pictureBlock,\n          ),\n        ),\n      );\n    }\n  });\n\n  return block;\n}",
            "score": -1.0
        },
        "blocks/related-products/related-products.js::decorate": {
            "changes_after_merge": 4,
            "file_path": "blocks/related-products/related-products.js",
            "merged_function": "async function decorate(block) {\n  const relatedProductsMeta = getMetadata('related-products');\n  const relatedProductsTitles = relatedProductsMeta.split(',').map((item) => item.trim());\n  // TODO: add related categories\n  // const relatedCategoriesMeta = getMetadata('related-categories');\n  // const relatedCategoriesTitles = relatedCategoriesMeta.split(',').map((item) => item.trim());\n\n  const products = await ffetch('/query-index.json')\n    .sheet('products')\n    .filter((product) => relatedProductsTitles.includes(product.h1))\n    .all();\n\n  const cardRenderer = await createCard({\n    descriptionLength: 75,\n    c2aLinkStyle: true,\n    defaultButtonText: 'Details',\n  });\n\n  products.forEach((product) => {\n    product.type = product.category;\n    if (product.subCategory && !['0', 'Other'].includes(product.subCategory)) {\n      product.type = product.subCategory;\n    }\n    block.append(cardRenderer.renderItem(product));\n  });\n\n  return block;\n}",
            "score": -0.813953488372093
        },
        "blocks/resources-carousel/resources-carousel.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/resources-carousel/resources-carousel.js",
            "merged_function": "async function decorate(block) {\n  const blockLinks = block.querySelectorAll('a');\n  let resources = [];\n\n  if (blockLinks.length !== 0) {\n    resources = await getFeaturedResources(\n      [...blockLinks].map((link) => link.getAttribute('href')),\n    );\n  }\n\n  const placeholders = await fetchPlaceholders();\n\n  const resourceCard = await createCard({\n    titleLink: false,\n    thumbnailLink: false,\n    defaultButtonText: placeholders.learnMore || 'Learn more',\n    descriptionLength: block.classList.contains('list') ? 180 : 180,\n  });\n\n  await createCarousel(block, resources, {\n    cssFiles: ['/blocks/carousel/carousel-cards.css'],\n    defaultStyling: true,\n    navButtons: true,\n    dotButtons: false,\n    infiniteScroll: true,\n    autoScroll: false,\n    visibleItems: [\n      {\n        items: 1,\n        condition: () => window.screen.width < 768,\n      },\n      {\n        items: 2,\n        condition: () => window.screen.width < 1200,\n      },\n      {\n        items: 3,\n      },\n    ],\n    cardRenderer: resourceCard,\n  });\n}",
            "score": -1.0
        },
        "blocks/resources-carousel/resources-carousel.js::getFeaturedResources": {
            "changes_after_merge": 0,
            "file_path": "blocks/resources-carousel/resources-carousel.js",
            "merged_function": "async function getFeaturedResources(paths) {\n  return ffetch('/query-index.json')\n    .sheet('resources')\n    .chunks(2000)\n    .filter(\n      (resource) => (\n        paths.includes(resource.path)\n        || paths.includes(resource.gatedURL)\n        || (resource.gatedURL\n          && resource.gatedURL !== '0'\n          && paths.includes(new URL(resource.gatedURL, 'https://moleculardevices.com').pathname))\n      ))\n    .limit(9)\n    .all();\n}",
            "score": -1.0
        },
        "blocks/resources/resources.js::decorate": {
            "changes_after_merge": 17,
            "file_path": "blocks/resources/resources.js",
            "merged_function": "async function decorate(block) {\n  const template = getMetadata('template');\n  const title = document.querySelector('.hero .container h1, .hero-advanced .container h1').textContent;\n  const includedResourceTypes = Object.keys(resourceMapping);\n\n  const resources = await ffetch('/query-index.json')\n    .sheet('resources')\n    .filter((resource) => resource[relatedResourcesHeaders[template]].includes(title)\n        && includedResourceTypes.includes(resource.type))\n    .all();\n  const otherResources = resources.filter((item) => !['Videos and Webinars', 'Citation'].includes(item.type));\n  const videoResources = resources.filter((item) => item.type === 'Videos and Webinars');\n\n  const filtersBlock = ul({ class: 'filters' });\n  const filters = [...new Set(otherResources.map((item) => item.type))]\n    .filter((item) => item !== 'Citation');\n  filters.push('Videos and Webinars');\n  const sortedFilters = filters.sort((x, y) => (x.toLowerCase() < y.toLowerCase() ? -1 : 1));\n  sortedFilters.unshift('View All');\n\n  sortedFilters.forEach((filter, idx) => {\n    filtersBlock.append(li({ class: 'filter' },\n      span({ class: 'filter-divider' }, idx === 0 ? '' : '|'),\n      a({\n        'aria-labelledby': filter,\n        href: '#',\n        'aria-selected': idx === 0,\n        onclick: handleFilterClick,\n      }, filter),\n    ));\n  });\n\n  block.append(filtersBlock);\n\n  const otherResourcesBlock = div({ class: 'resources-section' });\n  otherResources.forEach((item) => {\n    const resourceType = item.type;\n    const resourceImage = resourceMapping[item.type]?.image;\n    const resourceBlock = div(\n      {\n        class: 'resource filtered-item',\n        'aria-hidden': false,\n        'aria-labelledby': resourceType,\n      },\n      div(\n        { class: 'resource-icon' },\n        createOptimizedPicture(\n          `/images/resource-icons/${resourceImage}.png`,\n          resourceImage,\n          false,\n          [{ media: '(max-width: 991px)', width: '35' }, { width: '60' }],\n        ),\n      ),\n      div(\n        { class: 'resource-info' },\n        div(\n          { class: 'resource-header' },\n          p(item.type),\n          h3(item.title),\n        ),\n        div(\n          { class: 'resource-description' },\n          item.description && item.description !== '0' ? item.description : '',\n        ),\n        div(\n          { class: 'resource-actions' },\n          p(\n            { class: 'resource-link' },\n            a(\n              { href: item.path },\n              `${resourceMapping[resourceType].action} ${resourceType}`,\n              i({ class: 'fa fa-chevron-circle-right' }),\n            ),\n          ),\n        ),\n      ),\n    );\n    otherResourcesBlock.append(resourceBlock);\n  });\n\n  block.append(otherResourcesBlock);\n\n  if (videoResources.length > 0) {\n    const videoResourcesBlock = div({\n      class: 'videos-container filtered-item',\n      'aria-hidden': false,\n      'aria-labelledby': 'Videos and Webinars',\n    });\n    videoResourcesBlock.append(h2({ class: 'video-resources-title' }, 'Videos & Webinars'));\n\n    const videosContainerBlock = div({ class: 'resources-section' });\n\n    await Promise.all(videoResources.map(async (item) => {\n      const videoFragmentHtml = await fetchFragment(item.path);\n      const videoFragment = document.createElement('div');\n      videoFragment.innerHTML = videoFragmentHtml;\n      const videoElement = videoFragment.querySelector('p a[href^=\"https://share.vidyard.com/watch/\"]');\n      const videoHref = videoElement?.href;\n      if (videoElement && videoHref && videoHref.startsWith('https://')) {\n        const videoURL = new URL(videoHref);\n        const videoWrapper = div({ class: 'video-wrapper' },\n          div({ class: 'video-container' },\n            a({ href: videoHref }, videoHref),\n          ),\n          p({ class: 'video-title' }, item.title),\n        );\n        embedVideo(videoWrapper.querySelector('a'), videoURL, 'lightbox');\n        videosContainerBlock.append(videoWrapper);\n      }\n    }));\n\n    videoResourcesBlock.append(videosContainerBlock);\n    block.append(videoResourcesBlock);\n  }\n\n  return block;\n}",
            "score": -0.2093023255813954
        },
        "blocks/resources/resources.js::handleFilterClick": {
            "changes_after_merge": 1,
            "file_path": "blocks/resources/resources.js",
            "merged_function": "function handleFilterClick(e) {\n  e.preventDefault();\n  const { target } = e;\n  const selected = target.getAttribute('aria-selected') === 'true';\n  if (!selected) {\n    const resourceType = target.getAttribute('aria-labelledby');\n    const allFilters = document.querySelectorAll('.filter a');\n    allFilters.forEach((item) => item.setAttribute('aria-selected', false));\n    target.setAttribute('aria-selected', true);\n    if (resourceType === 'View All') {\n      const filteredResources = document.querySelectorAll('.filtered-item');\n      filteredResources.forEach((item) => item.setAttribute('aria-hidden', false));\n    } else {\n      // hide all displayed items\n      const filteredResources = document.querySelectorAll('.filtered-item');\n      filteredResources.forEach((item) => item.setAttribute('aria-hidden', true));\n      // show filtered items\n      const selectedResources = document.querySelectorAll(`.filtered-item[aria-labelledby=\"${resourceType}\"]`);\n      selectedResources.forEach((item) => item.setAttribute('aria-hidden', false));\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/share-story/share-story.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/share-story/share-story.js",
            "merged_function": "function decorate(block) {\n  const shareMessage = block.querySelector('h3').textContent;\n  block.innerHTML = '';\n\n  const socials = ['facebook', 'linkedin', 'twitter'];\n  const shareSocialBlock = socialShareBlock('share this story', socials);\n  decorateIcons(shareSocialBlock);\n  const shareMessageBlock = div({ class: 'share-message' },\n    h3(shareMessage),\n  );\n  const shareButtonBlock = div({ class: 'share-button' },\n    p({ class: 'button-container' },\n      a({\n        class: 'button primary',\n        href: '#',\n        'aria-label': 'Submit your story',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n        onclick: showSubmitStoryModal,\n      },\n      'Submit your story',\n      span({ class: 'button-border' }),\n      ),\n    ),\n  );\n\n  block.append(shareSocialBlock);\n  block.append(shareMessageBlock);\n  block.append(shareButtonBlock);\n\n  // submit story modal\n  const modal = div({ class: 'submit-story-modal', id: 'submit-story-modal' });\n  const modalCloseButton = button({\n    class: 'submit-story-modal-close',\n    id: 'submit-story-modal-close',\n    onclick: hideSubmitStoryModal,\n  });\n  modalCloseButton.innerHTML = '&times;';\n  const modalContent = div({ class: 'submit-story-modal-wrapper' },\n    iframe({\n      id: 'submit-story-iframe',\n      src: '',\n      loading: 'lazy',\n    }),\n  );\n  modal.append(modalCloseButton);\n  modal.append(modalContent);\n  const modalOverlay = div({\n    class: 'submit-story-modal-overlay',\n    id: 'submit-story-modal-overlay',\n    onclick: hideSubmitStoryModal,\n  });\n  document.body.appendChild(modal);\n  document.body.appendChild(modalOverlay);\n\n  return block;\n}",
            "score": -0.9534883720930233
        },
        "blocks/share-story/share-story.js::hideSubmitStoryModal": {
            "changes_after_merge": 0,
            "file_path": "blocks/share-story/share-story.js",
            "merged_function": "function hideSubmitStoryModal(e) {\n  e.preventDefault();\n  document.getElementById('submit-story-modal').classList.remove('show');\n  document.getElementById('submit-story-modal-overlay').classList.remove('show');\n  document.body.classList.remove('modal-open');\n}",
            "score": -1.0
        },
        "blocks/share-story/share-story.js::showSubmitStoryModal": {
            "changes_after_merge": 0,
            "file_path": "blocks/share-story/share-story.js",
            "merged_function": "function showSubmitStoryModal(e) {\n  e.preventDefault();\n  document.getElementById('submit-story-modal').classList.add('show');\n  document.getElementById('submit-story-modal-overlay').classList.add('show');\n  document.body.classList.add('modal-open');\n  // only load iframe on first modal display\n  const submitStoryFrame = document.getElementById('submit-story-iframe');\n  if (submitStoryFrame.src !== SUBMIT_STORY_IFRAME_URL) {\n    submitStoryFrame.src = SUBMIT_STORY_IFRAME_URL;\n  }\n}",
            "score": -1.0
        },
        "blocks/social-media-buttons/social-media-buttons.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/social-media-buttons/social-media-buttons.js",
            "merged_function": "function decorate(/* block */) {\n  // no-op\n}",
            "score": -1.0
        },
        "blocks/social-share/social-share.js::blogHideSocialShareOnHero": {
            "changes_after_merge": 0,
            "file_path": "blocks/social-share/social-share.js",
            "merged_function": "function blogHideSocialShareOnHero(block) {\n  const heroBlock = document.querySelector('div.hero');\n  block.classList.add('social-share-hidden');\n  if (!heroBlock) return;\n\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      block.classList.add('social-share-hidden');\n    } else {\n      block.classList.remove('social-share-hidden');\n    }\n  });\n  observer.observe(heroBlock);\n}",
            "score": -1.0
        },
        "blocks/social-share/social-share.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/social-share/social-share.js",
            "merged_function": "function decorate(block) {\n  const title = block.querySelector('.social-share p').innerHTML;\n\n  block.innerHTML = `\n    <div class=\"share-event\">\n      <p>${title}</p>\n      <div class=\"social-links blue-ico\">\n        <ul class=\"button-container\"></ul>\n      </div>\n    </div>`;\n  const socials = ['facebook', 'linkedin', 'twitter', 'envelope'];\n  socials.forEach((social) => {\n    const li = document.createElement('li');\n    li.className = `share-${social}`;\n    li.innerHTML = `<i class=\"fa fa-${social}\"></i>`;\n    li.setAttribute('data-type', social);\n    block.querySelector('.social-links .button-container').append(li);\n  });\n\n  decorateIcons(block);\n}",
            "score": -0.9069767441860466
        },
        "blocks/social-share/social-share.js::decorateIcons": {
            "changes_after_merge": 1,
            "file_path": "blocks/social-share/social-share.js",
            "merged_function": "function decorateIcons(element) {\n  const url = getURL();\n  const title = getTitle();\n\n  element.querySelectorAll('li').forEach((social) => {\n    const type = social.getAttribute('data-type');\n    const icon = social.querySelector('i');\n    switch (type) {\n      case 'facebook':\n        decorateLink(social, 'Facebook', icon, `https://www.facebook.com/sharer/sharer.php?u=${url}`);\n        break;\n      case 'linkedin':\n        decorateLink(social, 'LinkedIn', icon, `https://www.linkedin.com/shareArticle?mini=true&url=${url}&title=${title}`);\n        break;\n      case 'twitter':\n        decorateLink(social, 'Twitter', icon, `https://www.twitter.com/share?&url=${url}&text=${title}`);\n        break;\n      case 'envelope':\n        decorateLink(social, 'Google', icon);\n        icon.classList.add('addthis-share-button');\n        icon.setAttribute('data-service', 'email');\n        break;\n      default:\n        break;\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/social-share/social-share.js::decorateLink": {
            "changes_after_merge": 1,
            "file_path": "blocks/social-share/social-share.js",
            "merged_function": "function decorateLink(social, type, icon, url) {\n  icon.setAttribute('aria-label', type);\n  if (url) {\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('aria-label', `Share to ${type}`);\n    link.setAttribute('target', '_blank');\n    link.setAttribute('rel', 'noopener noreferrer');\n    link.append(icon);\n    social.append(link);\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/social-share/social-share.js::getTitle": {
            "changes_after_merge": 0,
            "file_path": "blocks/social-share/social-share.js",
            "merged_function": "function getTitle() {\n  const h1 = document.querySelector('h1');\n  return h1 ? encodeURIComponent(h1.textContent) : '';\n}",
            "score": -1.0
        },
        "blocks/social-share/social-share.js::getURL": {
            "changes_after_merge": 0,
            "file_path": "blocks/social-share/social-share.js",
            "merged_function": "function getURL() {\n  return encodeURIComponent(window.location.href);\n}",
            "score": -1.0
        },
        "blocks/social-share/social-share.js::onSocialShareClick": {
            "changes_after_merge": 0,
            "file_path": "blocks/social-share/social-share.js",
            "merged_function": "function onSocialShareClick(event) {\n  event.preventDefault();\n  const href = event.currentTarget.getAttribute('href');\n  if (!href) return;\n  window.open(href, 'popup', 'width=800,height=700,scrollbars=no,resizable=no');\n}",
            "score": -1.0
        },
        "blocks/social-share/social-share.js::socialShareBlock": {
            "changes_after_merge": 0,
            "file_path": "blocks/social-share/social-share.js",
            "merged_function": "function socialShareBlock(title, socials) {\n  return div({ class: 'share-event' },\n    p(title),\n    div({ class: 'social-links' },\n      ul({ class: 'button-container' },\n        ...socials.map((social) =>\n          // eslint-disable-next-line implicit-arrow-linebreak\n          li({ class: `share-${social}`, 'data-type': social },\n            i({ class: `fa fa-${social}` }),\n          ),\n        ),\n      ),\n    ),\n  );\n}",
            "score": -1.0
        },
        "blocks/specifications/specifications.js::decorate": {
            "changes_after_merge": 6,
            "file_path": "blocks/specifications/specifications.js",
            "merged_function": "async function decorate(block) {\n  decorateDownloadButton();\n\n  const jsonFileBlock = block.querySelector('a');\n  const jsonFile = jsonFileBlock?.href;\n  block.innerHTML = '';\n  if (!jsonFile) {\n    return block;\n  }\n  const familyId = getMetadata('family-id');\n  const response = await fetch(jsonFile);\n  const specData = await response.json();\n  let categories = [];\n  // render table head\n  const headRow = domEl('tr',\n    domEl('th', ''),\n  );\n  specData.product?.data?.forEach((product, idx) => {\n    if (idx === 0) {\n      categories = product.categories?.split(',');\n    }\n    headRow.append(domEl('th',\n      div({ class: 'product-heading' },\n        p(product.title),\n        a({ href: `/quote-request?pid=${familyId}` },\n          'Request a Quote',\n          i({ class: 'fa fa-chevron-circle-right' }),\n        ),\n      ),\n    ));\n  });\n\n  // render table body\n  const tBodyBlock = domEl('tbody');\n  categories.forEach((dataName) => {\n    const groupData = specData[dataName];\n    const attrs = Object.keys(groupData.data[0] || {});\n    attrs.forEach((attr) => {\n      if (attr === 'path') {\n        return;\n      }\n      const thisRow = domEl('tr');\n      if (attr === 'Name') {\n        thisRow.append(domEl('td',\n          h3(groupData.data[0].Name)),\n        );\n      } else {\n        thisRow.append(domEl('td', attr));\n        groupData.data.forEach((item) => {\n          let rowValue = item[attr];\n          rowValue = rowValue.replace(/true/gi, '<img src=\"/images/check-icon.png\" alt=\"true\" width=\"30\" height=\"30\">');\n          rowValue = rowValue.replace(/false/gi, '<img src=\"/images/false-icon.png\" alt=\"false\" width=\"30\" height=\"30\">');\n          const rowBlock = span();\n          rowBlock.innerHTML = rowValue;\n          thisRow.append(domEl('td', rowBlock));\n        });\n      }\n      tBodyBlock.append(thisRow);\n    });\n  });\n\n  const tHeadBlock = domEl('thead', { class: 'table-head' }, headRow,\n  );\n  block.append(div({ class: 'table-container' },\n    domEl('table', { class: 'responsive-table' }, tHeadBlock, tBodyBlock),\n  ));\n\n  return block;\n}",
            "score": -0.7209302325581395
        },
        "blocks/specifications/specifications.js::decorateDownloadButton": {
            "changes_after_merge": 0,
            "file_path": "blocks/specifications/specifications.js",
            "merged_function": "function decorateDownloadButton() {\n  const specsAnnotationBlock = document.querySelector('.section[aria-labelledby=\"specifications-options\"] .default-content-wrapper:last-child');\n  const downloadHeading = specsAnnotationBlock?.querySelector('h3');\n  if (downloadHeading) {\n    const downloadHeadingLink = downloadHeading.querySelector('a');\n    const downloadImage = specsAnnotationBlock.querySelector('picture');\n    if (downloadImage) {\n      const downloadImageP = downloadImage.parentNode;\n      downloadHeadingLink.insertBefore(downloadImage, downloadHeadingLink.firstChild);\n      specsAnnotationBlock.removeChild(downloadImageP);\n    }\n    downloadHeading.classList.add('download-button');\n  }\n}",
            "score": -1.0
        },
        "blocks/spectra-bot/spectra-bot.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/spectra-bot/spectra-bot.js",
            "merged_function": "function decorate(block) {\n  if (block.classList.contains('softmax')) {\n    decorateBubbleWrapper(block.querySelector('div:nth-child(1)'));\n    decorateBubbleWrapper(block.querySelector('div:nth-child(2)'));\n    const bgImg = block.querySelector('div:nth-child(3)');\n    bgImg.classList.add('background-img');\n  } else {\n    decorateBubbleWrapper(block.querySelector('div:nth-child(1)'));\n    const bgImg = block.querySelector('div:nth-child(2)');\n    bgImg.classList.add('background-img');\n  }\n}",
            "score": -1.0
        },
        "blocks/spectra-bot/spectra-bot.js::decorateBubbleWrapper": {
            "changes_after_merge": 0,
            "file_path": "blocks/spectra-bot/spectra-bot.js",
            "merged_function": "function decorateBubbleWrapper(elem) {\n  elem.classList.add('bubble-wrapper');\n\n  elem.querySelector(':scope > div:first-child')\n    .classList\n    .add('text-over');\n\n  const bubbleSrc = elem.querySelector(':scope > div:last-child img').src;\n  elem.style = `background-image: url(${bubbleSrc})`;\n  elem.querySelector(':scope > div:last-child')\n    .remove();\n}",
            "score": -1.0
        },
        "blocks/table/table.js::buildCell": {
            "changes_after_merge": 1,
            "file_path": "blocks/table/table.js",
            "merged_function": "function buildCell(rowIndex, colspan, dataAlign, dataVAlign) {\n  const cell = rowIndex\n    ? document.createElement('td')\n    : document.createElement('th');\n  if (colspan > 0) cell.setAttribute('colspan', colspan);\n  if (dataAlign) cell.classList.add(`text-align-${dataAlign}`);\n  if (dataVAlign) cell.classList.add(`vertical-align-${dataVAlign}`);\n  return cell;\n}",
            "score": -0.9534883720930233
        },
        "blocks/table/table.js::calculateColspan": {
            "changes_after_merge": 0,
            "file_path": "blocks/table/table.js",
            "merged_function": "function calculateColspan(colIndex, cols, maxCols) {\n  // calculate how many columns have to be merged\n  let colspan = 0;\n  if (cols !== maxCols && cols === colIndex + 1) {\n    colspan = maxCols - colIndex;\n  }\n  return colspan;\n}",
            "score": -1.0
        },
        "blocks/table/table.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/table/table.js",
            "merged_function": "async function decorate(block) {\n  const table = document.createElement('table');\n  const thead = document.createElement('thead');\n  const tbody = document.createElement('tbody');\n  table.append(thead, tbody);\n\n  const cols = getNumberOfColumns(block);\n  [...block.children].forEach((child, i) => {\n    const row = document.createElement('tr');\n    if (i) {\n      tbody.append(row);\n    } else {\n      thead.append(row);\n    }\n    [...child.children].forEach((col, j) => {\n      const colspan = calculateColspan(j, child.children.length, cols);\n      const dataAlign = col.getAttribute('data-align');\n      const dataVAlign = col.getAttribute('data-valign');\n      const cell = buildCell(i, colspan, dataAlign, dataVAlign);\n      cell.innerHTML += col.innerHTML;\n      row.append(cell);\n    });\n  });\n  block.innerHTML = '';\n  block.append(table);\n}",
            "score": -0.9534883720930233
        },
        "blocks/table/table.js::getNumberOfColumns": {
            "changes_after_merge": 0,
            "file_path": "blocks/table/table.js",
            "merged_function": "function getNumberOfColumns(block) {\n  // get max children length for colspan\n  let maxCols = 1;\n  [...block.children].forEach((child) => {\n    if (child.children.length > maxCols) maxCols = child.children.length;\n  });\n  return maxCols;\n}",
            "score": -1.0
        },
        "blocks/table/table.js::isApparentHeading": {
            "changes_after_merge": 0,
            "file_path": "blocks/table/table.js",
            "merged_function": "function isApparentHeading(idx, originalRow, allRows, orderVariant = false) {\n  return orderVariant\n    && originalRow.children.length === 1\n    && isHeader(idx, originalRow, orderVariant)\n    && idx + 1 < allRows.length\n    && isHeader(idx + 1, allRows[idx + 1], orderVariant);\n}",
            "score": -1.0
        },
        "blocks/table/table.js::isHeader": {
            "changes_after_merge": 0,
            "file_path": "blocks/table/table.js",
            "merged_function": "function isHeader(idx, originalRow, orderVariant = false) {\n  return !idx // regular tables: first row is a header\n  // Product pages -> Order tab.\n  // * Rows with strong elements are header.\n  // * Rows with heading are not. :)\n  || (orderVariant\n    && originalRow.querySelector('strong')\n    && !originalRow.querySelector('h3,em'));\n}",
            "score": -1.0
        },
        "blocks/tabs-horizontal/tabs-horizontal.js::buildNav": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-horizontal/tabs-horizontal.js",
            "merged_function": "function buildNav(block) {\n  const titles = block.querySelectorAll('.tabs-horizontal > div > div:first-child');\n  const elemWidth = Math.floor(100 / titles.length);\n  const navList = ul({ class: 'tabs-nav' });\n  [...titles].forEach((title, idx) => {\n    const tabTitle = title.textContent;\n    const listItem = li(\n      {\n        class: 'tabs-nav-item',\n        id: toClassName(tabTitle),\n        style: `width: ${elemWidth}%;`,\n        onclick: (e) => { handleTabClick(e, idx); },\n        'aria-label': tabTitle,\n      },\n      div(tabTitle),\n    );\n    navList.append(listItem);\n  });\n  navList.querySelector('li').classList.add(classActive);\n  return navList;\n}",
            "score": -1.0
        },
        "blocks/tabs-horizontal/tabs-horizontal.js::buildTabs": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-horizontal/tabs-horizontal.js",
            "merged_function": "async function buildTabs(block) {\n  const tabPanes = block.querySelectorAll('.tabs-horizontal > div > div:last-child');\n  const tabList = div({ class: 'tabs-list' });\n  const decoratedPanes = await Promise.all([...tabPanes].map(async (pane) => {\n    pane.classList.add('tab-pane');\n    const decoratedPane = await processEmbedFragment(pane);\n    return decoratedPane;\n  }));\n  decoratedPanes.forEach((pane) => { tabList.append(pane); });\n  tabList.querySelector('.tab-pane').classList.add(classActive);\n  return tabList;\n}",
            "score": -1.0
        },
        "blocks/tabs-horizontal/tabs-horizontal.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-horizontal/tabs-horizontal.js",
            "merged_function": "async function decorate(block) {\n  const nav = buildNav(block);\n  const tabs = await buildTabs(block);\n  block.innerHTML = '';\n\n  block.append(nav);\n  block.append(tabs);\n  redirectedNav();\n  return block;\n}",
            "score": -1.0
        },
        "blocks/tabs-horizontal/tabs-horizontal.js::handleTabClick": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-horizontal/tabs-horizontal.js",
            "merged_function": "function handleTabClick(e, idx) {\n  e.preventDefault();\n  const { target } = e;\n  [...target.closest('.tabs-nav').children].forEach((nav) => nav.classList.remove(classActive));\n  target.closest('.tabs-nav-item').classList.add(classActive);\n  const panes = target.closest('.tabs-horizontal').querySelectorAll('.tab-pane');\n  [...panes].forEach((pane) => pane.classList.remove(classActive));\n  panes[idx].classList.add(classActive);\n}",
            "score": -1.0
        },
        "blocks/tabs-horizontal/tabs-horizontal.js::redirectedNav": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-horizontal/tabs-horizontal.js",
            "merged_function": "function redirectedNav() {\n  const hashUrl = window.location.hash.split('#')[1];\n  setTimeout(() => {\n    const tab = document.getElementById(hashUrl);\n    if (tab) {\n      const tabSection = tab.closest('.section');\n      tab.click();\n      window.scroll({\n        top: tabSection.getBoundingClientRect().top + window.screenY - 150,\n        behavior: 'smooth',\n      });\n    }\n  }, 500);\n}",
            "score": -1.0
        },
        "blocks/tabs-vertical/tabs-vertical.js::buildNav": {
            "changes_after_merge": 3,
            "file_path": "blocks/tabs-vertical/tabs-vertical.js",
            "merged_function": "function buildNav(block) {\n  const ul = document.createElement('ul');\n  const titles = block.querySelectorAll('div:not(:first-child) > div:first-child');\n\n  [...titles].forEach((title, i) => {\n    const li = document.createElement('li');\n    const a = document.createElement('a');\n    a.textContent = title.textContent;\n    a.setAttribute('aria-label', title.textContent);\n    a.addEventListener('click', (e) => {\n      toggleNav(block, e.target, i);\n    });\n    li.appendChild(a);\n    ul.appendChild(li);\n  });\n\n  ul.querySelector('li').classList.add(classActive);\n  return (ul);\n}",
            "score": -0.8604651162790697
        },
        "blocks/tabs-vertical/tabs-vertical.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-vertical/tabs-vertical.js",
            "merged_function": "function decorate(block) {\n  const ul = buildNav(block);\n  ul.classList.add('nav-tabs');\n\n  const tabList = block.querySelector('div');\n  tabList.classList.add('tabs-vertical-list');\n  tabList.querySelector('div').appendChild(ul);\n\n  const tabMainContent = document.createElement('div');\n  tabMainContent.classList.add('tabs-vertical-main-content');\n\n  [...block.children].forEach((row, i) => {\n    // first row is for navigation, start from second row\n    if (i) {\n      const tabPane = document.createElement('div');\n      tabPane.classList.add('tabs-vertical-pane');\n\n      const picture = row.querySelector('picture');\n      tabPane.appendChild(picture);\n\n      row.classList.add('tabs-vertical-pane-inside');\n      tabPane.appendChild(row);\n\n      const div = row.querySelector('div');\n      const button = document.createElement('button');\n      button.classList.add('tabs-vertical-btn');\n      button.innerHTML = `<i class='fa ${iconPlus}'></i>${div.textContent}`;\n      button.addEventListener('click', (e) => {\n        toggleNav(block, e.target, i - 1);\n      });\n      div.remove();\n      row.prepend(button);\n\n      row.querySelector('div').classList.add('tabs-vertical-content');\n      tabMainContent.appendChild(tabPane);\n    }\n  });\n\n  // set first tab active\n  const firstTabPane = tabMainContent.querySelector('.tabs-vertical-pane');\n  firstTabPane.classList.add(classActive);\n  const firstI = firstTabPane.querySelector('i');\n  firstI.classList.remove(iconPlus);\n  firstI.classList.add(iconMinus);\n\n  block.appendChild(tabMainContent);\n}",
            "score": -1.0
        },
        "blocks/tabs-vertical/tabs-vertical.js::getEmptyHeight": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-vertical/tabs-vertical.js",
            "merged_function": "function getEmptyHeight(tabPane) {\n  const tabPaneInside = tabPane.querySelector('.tabs-vertical-pane-inside');\n  const tabPaneInsideCS = window.getComputedStyle(tabPaneInside);\n  const tabBtn = tabPane.querySelector('.tabs-vertical-btn');\n  const emptyHeight = (parseInt(tabPaneInsideCS.paddingTop, 10) * 2) + tabBtn.offsetHeight;\n  return emptyHeight;\n}",
            "score": -1.0
        },
        "blocks/tabs-vertical/tabs-vertical.js::setHeights": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-vertical/tabs-vertical.js",
            "merged_function": "function setHeights(block) {\n  const tabPanes = block.querySelectorAll('.tabs-vertical-pane');\n  [...tabPanes].forEach((tabPane) => {\n    if (window.matchMedia(verticalMediaQuery).matches) {\n      const emptyHeight = getEmptyHeight(tabPane);\n      if (tabPane.classList.contains('active')) {\n        const height = `${(tabPane.querySelector('.tabs-vertical-content').offsetHeight + emptyHeight)}px`;\n        tabPane.style.height = height;\n      } else {\n        tabPane.style.height = `${emptyHeight}px`;\n      }\n    } else {\n      tabPane.style.removeProperty('height');\n    }\n  });\n}",
            "score": -1.0
        },
        "blocks/tabs-vertical/tabs-vertical.js::toggleItem": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-vertical/tabs-vertical.js",
            "merged_function": "function toggleItem(item, on) {\n  if (item) {\n    const icon = item.querySelector('i');\n    if (on) {\n      item.classList.add(classActive);\n      if (icon) icon.classList.replace(iconPlus, iconMinus);\n    } else {\n      item.classList.remove(classActive);\n      if (icon) icon.classList.replace(iconMinus, iconPlus);\n    }\n  }\n  setHeights(item.closest('.tabs-vertical.block'));\n}",
            "score": -1.0
        },
        "blocks/tabs-vertical/tabs-vertical.js::toggleNav": {
            "changes_after_merge": 0,
            "file_path": "blocks/tabs-vertical/tabs-vertical.js",
            "merged_function": "function toggleNav(block, target, i) {\n  if (!(target.closest('.tabs-vertical-list') && target.closest('.active'))) {\n    const actives = block.querySelectorAll(`.${classActive}`);\n    if (actives.length) {\n      [...actives].forEach((active) => {\n        const newActive = active.parentElement.children[i];\n        toggleItem(active, false);\n        if (active !== newActive) {\n          toggleItem(newActive, true);\n        }\n      });\n    } else {\n      toggleItem(target.closest('.tabs-vertical-pane'), true);\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/toc/toc.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/toc/toc.js",
            "merged_function": "async function decorate(block) {\n  const levelsFromClass = /levels-(\\d+)/.exec(block.className);\n  const levels = levelsFromClass ? Number(levelsFromClass[1]) : 5;\n  const itemsStartFromClass = /items-(\\d+)/.exec(block.className);\n  const itemsEndFromClass = /items-\\d+-(\\d+)/.exec(block.className);\n  const itemsStart = itemsStartFromClass ? Number(itemsStartFromClass[1]) : 1;\n  const itemsEnd = itemsEndFromClass ? Number(itemsEndFromClass[1]) : 100;\n  const toc = block.classList.contains('numbers') ? document.createElement('ol') : document.createElement('ul');\n  const section = block.closest('.section');\n  const tocPosition = Array.from(section.children).indexOf(block.parentElement);\n  const hTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  const headings = section.querySelectorAll(hTagNames.map((i) => `div:nth-child(n+${tocPosition + 1}) ${i}`).join(','));\n  const firstHTagName = headings[0].tagName;\n  const firstHTagNameIndex = hTagNames.indexOf(firstHTagName);\n  let previousHTagNameIndex = firstHTagNameIndex;\n  let currentList = toc;\n  [...headings].forEach((title, i) => {\n    const hTagNameIndex = hTagNames.indexOf(title.tagName);\n    if (hTagNameIndex >= firstHTagNameIndex\n        && hTagNameIndex < (firstHTagNameIndex + levels)\n        && i >= (itemsStart - 1)\n        && i < itemsEnd) {\n      if (hTagNameIndex > previousHTagNameIndex) {\n        currentList.append(block.classList.contains('numbers') ? document.createElement('ol') : document.createElement('ul'));\n        currentList = currentList.querySelector('ul:last-of-type, ol:last-of-type');\n      } else if (hTagNameIndex < previousHTagNameIndex) currentList = currentList.parentElement;\n      currentList.append(li(a({ href: `#${title.id}` }, title.textContent.replace(/^\\d*[0-9].\\s/g, ''))));\n    }\n    previousHTagNameIndex = hTagNameIndex;\n  });\n  block.appendChild(toc);\n}",
            "score": -1.0
        },
        "blocks/vidyard/video-create.js::buildVideo": {
            "changes_after_merge": 1,
            "file_path": "blocks/vidyard/video-create.js",
            "merged_function": "function buildVideo(block, div, videoId) {\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      loadScript('https://play.vidyard.com/embed/v4.js');\n\n      const videoIcon = document.createElement('div');\n      const thumbnail = document.createElement('img');\n      videoIcon.append(thumbnail);\n      videoIcon.classList.add('video-icon');\n      thumbnail.src = '/images/play_icon.png';\n\n      div.innerHTML = `<div id=\"sample\">\n        <div class=\"vidyard-player-embed\" data-uuid=\"${videoId}\" data-v=\"4\" data-type=\"lightbox\" data-autoplay=\"2\"></div>\n      </div>`;\n      div.appendChild(videoIcon);\n\n      thumbnail.addEventListener('click', () => {\n        // eslint-disable-next-line no-undef\n        const players = VidyardV4.api.getPlayersByUUID(videoId);\n        const player = players[0];\n        player.showLightbox();\n      });\n    }\n  });\n  observer.observe(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/vidyard/video-create.js::getUrls": {
            "changes_after_merge": 0,
            "file_path": "blocks/vidyard/video-create.js",
            "merged_function": "function getUrls(text) {\n  const match = text.match(/\\b((https?|ftp|file):\\/\\/|(www|ftp)\\.)[-A-Z0-9+&@#/%?=~_|$!:,.;]*[A-Z0-9+&@#/%=~_|$]/ig);\n  if (match) return match;\n  return null;\n}",
            "score": -1.0
        },
        "blocks/vidyard/video-create.js::getVideoId": {
            "changes_after_merge": 0,
            "file_path": "blocks/vidyard/video-create.js",
            "merged_function": "function getVideoId(text) {\n  if (getVideoUrl(text)) {\n    const parts = getVideoUrl(text).split('/');\n    return parts.at(-1).trim();\n  }\n  return null;\n}",
            "score": -1.0
        },
        "blocks/vidyard/video-create.js::getVideoUrl": {
            "changes_after_merge": 0,
            "file_path": "blocks/vidyard/video-create.js",
            "merged_function": "function getVideoUrl(text) {\n  let videoUrl = null;\n  if (getUrls(text)) {\n    const hostnames = ['vids.moleculardevices.com', 'share.vidyard.com'];\n    [...getUrls(text)].forEach((url) => {\n      if (isValidUrl(url)) {\n        [...hostnames].forEach((hostname) => {\n          if (url.includes(hostname)) {\n            videoUrl = url;\n          }\n        });\n      }\n    });\n  }\n  return videoUrl;\n}",
            "score": -1.0
        },
        "blocks/vidyard/video-create.js::isValidUrl": {
            "changes_after_merge": 0,
            "file_path": "blocks/vidyard/video-create.js",
            "merged_function": "function isValidUrl(string) {\n  try {\n    // eslint-disable-next-line no-new\n    new URL(string);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}",
            "score": -1.0
        },
        "blocks/vidyard/vidyard.js::decorate": {
            "changes_after_merge": 4,
            "file_path": "blocks/vidyard/vidyard.js",
            "merged_function": "function decorate(block) {\n  const videoUrl = block.querySelector('a');\n  if (videoUrl) {\n    const videoId = videoUrl.href.substring(videoUrl.href.lastIndexOf('/') + 1);\n    const thumbnail = block.querySelector('img');\n    if (thumbnail) {\n      loadScript('https://play.vidyard.com/embed/v4.js');\n      thumbnail.style = 'width: 100%; margin: auto; display: block;';\n      thumbnail.classList.add('vidyard-player-embed');\n      thumbnail.setAttribute('data-uuid', videoId);\n      thumbnail.setAttribute('data-v', '4');\n      thumbnail.setAttribute('data-type', block.classList.contains('lightbox') ? 'lightbox' : 'inline');\n      videoUrl.remove();\n    } else {\n      const observer = new IntersectionObserver((entries) => {\n        if (entries.some((e) => e.isIntersecting)) {\n          observer.disconnect();\n          loadScript('https://play.vidyard.com/embed/v4.js');\n          block.innerHTML = `<img style=\"width: 100%; margin: auto; display: block;\"\n            class=\"vidyard-player-embed\"\n            src=\"https://play.vidyard.com/${videoId}.jpg\"\n            data-uuid=\"${videoId}\"\n            data-v=\"4\"\n            data-type=\"${block.classList.contains('lightbox') ? 'lightbox' : 'inline'}\" />`;\n        }\n      });\n      observer.observe(block);\n    }\n  }\n}",
            "score": -0.813953488372093
        },
        "blocks/virtual-events/virtual-events.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/virtual-events/virtual-events.js",
            "merged_function": "function decorate(block) {\n  block.children[0].classList.add('main');\n  block.children[1].classList.add('side');\n}",
            "score": -1.0
        },
        "blocks/webinar-teaser/webinar-teaser.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/webinar-teaser/webinar-teaser.js",
            "merged_function": "function decorate(block) {\n  const container = block.querySelector(':scope > div > div');\n\n  const teaserTitle = container.querySelector('h2');\n  const webinarTitle = container.querySelector('h3');\n\n  const speaker = container.querySelector('h4');\n  const speakerTitle = container.querySelector('h5');\n\n  const picture = container.querySelector('a > picture > img');\n  const video = (picture) ? picture.closest('p') : '';\n  if (video) {\n    video.classList.add('webinar-teaser-video-link');\n    const videoLink = picture.closest('a');\n    videoLink.setAttribute('target', '_blank');\n  }\n\n  const registerButton = container.querySelector('p.button-container > a');\n  if (registerButton) {\n    registerButton.classList.add('button');\n    registerButton.classList.add('secondary');\n    registerButton.append(span({ class: 'icon icon-fa-external-link' }));\n    registerButton.setAttribute('target', '_blank');\n  }\n\n  const headerDiv = div({ class: 'webinar-teaser-header' });\n  headerDiv.append(teaserTitle, webinarTitle);\n\n  const leftColDiv = div({ class: 'webinar-teaser-left-col' });\n\n  const videoDiv = div({ class: 'webinar-teaser-video' });\n  videoDiv.append(speaker, speakerTitle, video);\n  leftColDiv.append(videoDiv);\n\n  const rightColDiv = div({ class: 'webinar-teaser-right-col' });\n\n  const contentDiv = div({ class: 'webinar-teaser-content' });\n  contentDiv.append(leftColDiv);\n\n  container.append(headerDiv, contentDiv);\n  contentDiv.append(rightColDiv);\n\n  // right column holds the rest of the content\n  const description = document.querySelectorAll('.webinar-teaser > div > div > p');\n  description.forEach((elem) => {\n    rightColDiv.append(elem);\n  });\n\n  decorateIcons(block);\n}",
            "score": -0.9534883720930233
        },
        "campaigns/de/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfh9y?cmp=70170000001DQtV',\n          'name':'SpectraMax i3x Multifunktions-Mikroplattenleser ',\n          'description':'Der SpectraMax i3x ist ein Multifunktions-Mikroplattenleser-System, das sich mit Ihren zuk\u00fcnftigen Anforderungen weiterentwickelt und ein uneingeschr\u00e4nktes Spektrum an Anwendungsm\u00f6glichkeiten bietet.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfjhk?cmp=70170000001DQtz',\n          'name':'SpectraMax Paradigm Multifunktions-Mikroplattenleser ',\n          'description':'Sichern Sie die Zukunft Ihres Labors mit dem SpectraMax Paradigm Multifunktions-Mikroplattenleser. Erhalten Sie das System, welches Ihnen  heute  die ben\u00f6tigten Daten bereitstellt \u2013wenn Sie mehr brauchen, r\u00fcsten Sie Ihren Mikroplattenleser durch Upgrades f\u00fcr die weiteren Erkennungsmodi in weniger als zwei Minuten t  um.' \n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdbf?cmp=70170000001DQt1',\n          'name':'FlexStation 3 Multifunktions-Mikroplattenleser',\n          'description':'Mithilfe des modernen Dual-Optik-Systems, das \u00fcber und unter Ihren Mikroplatten arbeitet, misst der FlexStation 3 Leser Absorption, Fluoreszenz-Intensit\u00e4t, Fluoreszenz-Polarisation, Lumineszenz, und zeitaufgel\u00f6ste Fluoreszenz.'\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfj3w?cmp=70170000001DQtk',\n          'name':'Multifunktions-Mikroplattenleser der SpectraMax M- Serie',\n          'description':'Bei sechs verschiedenen Modellen zur Auswahl f\u00e4llt es nicht schwer, das richtige Modell f\u00fcr Ihr Labor zu finden. Jeder Multifunktions-Mikroplattenleser  der SpectraMax\u00ae M-Serie f\u00fchrt standardm\u00e4\u00dfig Messungen der Absorption von UV- und sichtbarem Licht sowie Fluoreszenz-Intensit\u00e4tsmessungen an Mikroplatten und K\u00fcvetten durch.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4whplk?cmp=70170000001DQuT',\n          'name':'SpectraMax Plus 384 Mikroplattenleser',\n          'description':'Erhalten Sie schnelle Absorptionsmessungen von 190 bis 1000 nm f\u00fcr Proben in Reagenzgl\u00e4sern, K\u00fcvetten und 96- oder 384-Well Mikroplatten.'\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wflgp?cmp=70170000001DQuE',\n          'name':'SpectraMax 340PC384 Mikroplattenleser ',\n          'description':'Lassen Sie sich von den Antworten auf eine unendliche Reihe von Forschungsfragen inspirieren, die Ihnen der SpectraMax 340PC384 Mikroplatten-Leser bietet, unser einstellbarer Mikroplattenleser f\u00fcr die Absorption sichtbaren Lichts in 96- und 384-Well-Mikroplatten. Erfassen Sie Daten in Endpunkt-, kinetischen und spektralen Scanmodi unter Verwendung von Wellenl\u00e4ngen von 340-850 nm, die sich in 1 nm-Schritten einstellen lassen.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfj3w?cmp=70170000001DQtk',\n          'name':'VersaMax-Mikroplattenleser',\n          'description':'Machen Sie das Beste aus Ihrer Investitionmit dem VersaMax\u2122-Mikroplattenleser, unserem preisg\u00fcnstigen Leser f\u00fcr 96-Well Mikroplatten, der das sichtbare Absorptionsspektrum abdeckt. Dieser mit umfangreichen Funktionen ausgestattete Mikroplattenleser bietet Ihnen die Geschwindigkeit, Bequemlichkeit und Wirtschaftlichkeit einer monochromatorbasierten Wellenl\u00e4ngenauswahl f\u00fcr Absorptionsmessungen im sichtbaren Bereich zwischen 340 nm und 850 nm, sodass Sie mehr mit weniger erreichen.'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdnc?cmp=70170000001DQtG',\n          'name':'Gemini EM Mikroplattenleser',\n          'description':'Erschaffen Sie kundenspezifische Fluoreszenz-Analysen, ohne teure Filtersets kaufen zu m\u00fcssen. Der Ober- und Unterseiten-Mikroplattenleser Gemini EM mit Dual-Monochromatoren l\u00e4sst Sie die optimalen Anregungs- und Emissionseinstellungen f\u00fcr Ihre neuen, kreativen Fluoreszenz-Intensit\u00e4ts-Assays festlegen. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wjjnr?cmp=70170000001DQux',\n          'name':'SpectraMax L Mikroplattenleser ',\n          'description':'Messen Sie Flash- und Glow-Analysen, einschlie\u00dflich Dual-Luziferase Reporter Gen, G Protein-gekoppelte Rezeptoren (GPCR) \u00fcber Aequorin, Biolumineszenz-Resonanz-Energietransfer  (BRET) sowie Acridiniumester-Flash-Analysen, in sowohl 96- als auch 384-Well-Platten.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-06/4vhfpm?cmp=70170000001DQsX',\n          'name':'EMax Plus Mikroplattenleser',\n          'description':'Der EMax\u00ae Plus-Mikroplattenleser bietet einfachen, unmittelbaren Zugriff auf die Daten, die Sie f\u00fcr Ihre n\u00e4chste Entscheidung ben\u00f6tigen. Acht Filtermodi erm\u00f6glichen Absorptionsmessungsanwendungen im sichtbaren Wellenl\u00e4ngenbereich, beispielsweise Proteinquantifizierung, Zellviabilit\u00e4t und ELISA.'\n        },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop-Spektralphotometer f\u00fcr Niedrigstmengen',\n          'description':'One-Touch-Vollspektrum-Absorptionsleseger\u00e4t zur schnellen, genauen DNA-, RNA- und Proteinquantifizierung bei Niedrigstmengen.'\n        \n\t\t  \n\t  }\n\t\t\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/de/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/de/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfh9y?cmp=70170000001DQtV',\n          'name':'SpectraMax i3x Multifunktions-Mikroplattenleser ',\n          'description':'Der SpectraMax i3x ist ein Multifunktions-Mikroplattenleser-System, das sich mit Ihren zuk\u00fcnftigen Anforderungen weiterentwickelt und ein uneingeschr\u00e4nktes Spektrum an Anwendungsm\u00f6glichkeiten bietet.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfjhk?cmp=70170000001DQtz',\n          'name':'SpectraMax Paradigm Multifunktions-Mikroplattenleser ',\n          'description':'Sichern Sie die Zukunft Ihres Labors mit dem SpectraMax Paradigm Multifunktions-Mikroplattenleser. Erhalten Sie das System, welches Ihnen  heute  die ben\u00f6tigten Daten bereitstellt \u2013wenn Sie mehr brauchen, r\u00fcsten Sie Ihren Mikroplattenleser durch Upgrades f\u00fcr die weiteren Erkennungsmodi in weniger als zwei Minuten t  um.' \n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdbf?cmp=70170000001DQt1',\n          'name':'FlexStation 3 Multifunktions-Mikroplattenleser',\n          'description':'Mithilfe des modernen Dual-Optik-Systems, das \u00fcber und unter Ihren Mikroplatten arbeitet, misst der FlexStation 3 Leser Absorption, Fluoreszenz-Intensit\u00e4t, Fluoreszenz-Polarisation, Lumineszenz, und zeitaufgel\u00f6ste Fluoreszenz.'\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfj3w?cmp=70170000001DQtk',\n          'name':'Multifunktions-Mikroplattenleser der SpectraMax M- Serie',\n          'description':'Bei sechs verschiedenen Modellen zur Auswahl f\u00e4llt es nicht schwer, das richtige Modell f\u00fcr Ihr Labor zu finden. Jeder Multifunktions-Mikroplattenleser  der SpectraMax\u00ae M-Serie f\u00fchrt standardm\u00e4\u00dfig Messungen der Absorption von UV- und sichtbarem Licht sowie Fluoreszenz-Intensit\u00e4tsmessungen an Mikroplatten und K\u00fcvetten durch.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4whplk?cmp=70170000001DQuT',\n          'name':'SpectraMax Plus 384 Mikroplattenleser',\n          'description':'Erhalten Sie schnelle Absorptionsmessungen von 190 bis 1000 nm f\u00fcr Proben in Reagenzgl\u00e4sern, K\u00fcvetten und 96- oder 384-Well Mikroplatten.'\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wflgp?cmp=70170000001DQuE',\n          'name':'SpectraMax 340PC384 Mikroplattenleser ',\n          'description':'Lassen Sie sich von den Antworten auf eine unendliche Reihe von Forschungsfragen inspirieren, die Ihnen der SpectraMax 340PC384 Mikroplatten-Leser bietet, unser einstellbarer Mikroplattenleser f\u00fcr die Absorption sichtbaren Lichts in 96- und 384-Well-Mikroplatten. Erfassen Sie Daten in Endpunkt-, kinetischen und spektralen Scanmodi unter Verwendung von Wellenl\u00e4ngen von 340-850 nm, die sich in 1 nm-Schritten einstellen lassen.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfj3w?cmp=70170000001DQtk',\n          'name':'VersaMax-Mikroplattenleser',\n          'description':'Machen Sie das Beste aus Ihrer Investitionmit dem VersaMax\u2122-Mikroplattenleser, unserem preisg\u00fcnstigen Leser f\u00fcr 96-Well Mikroplatten, der das sichtbare Absorptionsspektrum abdeckt. Dieser mit umfangreichen Funktionen ausgestattete Mikroplattenleser bietet Ihnen die Geschwindigkeit, Bequemlichkeit und Wirtschaftlichkeit einer monochromatorbasierten Wellenl\u00e4ngenauswahl f\u00fcr Absorptionsmessungen im sichtbaren Bereich zwischen 340 nm und 850 nm, sodass Sie mehr mit weniger erreichen.'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdnc?cmp=70170000001DQtG',\n          'name':'Gemini EM Mikroplattenleser',\n          'description':'Erschaffen Sie kundenspezifische Fluoreszenz-Analysen, ohne teure Filtersets kaufen zu m\u00fcssen. Der Ober- und Unterseiten-Mikroplattenleser Gemini EM mit Dual-Monochromatoren l\u00e4sst Sie die optimalen Anregungs- und Emissionseinstellungen f\u00fcr Ihre neuen, kreativen Fluoreszenz-Intensit\u00e4ts-Assays festlegen. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wjjnr?cmp=70170000001DQux',\n          'name':'SpectraMax L Mikroplattenleser ',\n          'description':'Messen Sie Flash- und Glow-Analysen, einschlie\u00dflich Dual-Luziferase Reporter Gen, G Protein-gekoppelte Rezeptoren (GPCR) \u00fcber Aequorin, Biolumineszenz-Resonanz-Energietransfer  (BRET) sowie Acridiniumester-Flash-Analysen, in sowohl 96- als auch 384-Well-Platten.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-06/4vhfpm?cmp=70170000001DQsX',\n          'name':'EMax Plus Mikroplattenleser',\n          'description':'Der EMax\u00ae Plus-Mikroplattenleser bietet einfachen, unmittelbaren Zugriff auf die Daten, die Sie f\u00fcr Ihre n\u00e4chste Entscheidung ben\u00f6tigen. Acht Filtermodi erm\u00f6glichen Absorptionsmessungsanwendungen im sichtbaren Wellenl\u00e4ngenbereich, beispielsweise Proteinquantifizierung, Zellviabilit\u00e4t und ELISA.'\n        },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop-Spektralphotometer f\u00fcr Niedrigstmengen',\n          'description':'One-Touch-Vollspektrum-Absorptionsleseger\u00e4t zur schnellen, genauen DNA-, RNA- und Proteinquantifizierung bei Niedrigstmengen.'\n        \n\t\t  \n\t  }\n\t\t\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/de/legen-sie-ihren-eigenen-kurs-fest/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-22/4d2y91?cmp=70170000001LWlW',\n          'name':'SpectraMax i3x Multi-Mode Microplate Reader',\n          'description':'The SpectraMax\u00ae i3x is a multi-mode microplate reader system that evolves with your future needs and offers an unlimited breadth of application possibilities.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-28/4fxy31?cmp=70170000000dHvR',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk7yy?cmp=70170000001LWlq',\n          'name':'FlexStation 3 Multi-Mode Microplate Reader',\n          'description':'With advanced dual optical systems operating above and below your microplates, the FlexStation\u00ae 3 Reader measures absorbance, fluorescence intensity, fluorescence polarization, luminescence, and time-resolved fluorescence.  '\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'SpectraMax M Series',\n          'description':'With six different models to choose from, it\\'s easy to find the one you want for your lab. Every SpectraMax\u00ae M Series Multi-Mode Microplate Reader does UV and visible absorbance, and fluorescence intensity measurements on microplates and cuvettes, standard.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4hb4vc?cmp=70170000000dHvq',\n          'name':'SpectraMax Plus 384 Microplate Reader',\n          'description':'Get absorbance measurements from 190 to 1000 nm quickly for samples in test tubes, cuvettes, and 96- or 384-well microplates. '\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h9rm1?cmp=70170000000dHvR',\n          'name':'SpectraMax 340PC384 Microplate Reader',\n          'description':'Acquire data in endpoint, kinetic, and spectral scan modes using wavelegths from 340-850 nm, tunable in 1 nm increments. The SpectraMax\u00ae 340PC384 Microplate Reader comes with temperature control up to 45 \u00b0C, a robotics-compatible interface, and  SoftMax\u00ae Pro Data Analysis Software. PathCheck\u00ae Sensor technology automatically measures the liquid depth of each well, and can also be used to calculate concentrations without a standard curve and expand the dynamic range of your readings to 6+ OD.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'VersaMax Microplate Reader',\n          'description':'Make the most of your budget with the VersaMax\u2122 ELISA Microplate Reader, our affordable, visible spectrum absorbance reader for 96-well microplates. This richly featured reader gives you the speed, convenience, and economy of monochromator-based wavelength selection for visible absorbance measurements between 340 nm and 850 nm, so you can accomplish more, with less'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-19/4mq2tp?cmp=70170000000dHtf',\n          'name':'Gemini EM Microplate Reader',\n          'description':'Create custom fluorescence assays without having to purchase expensive filter sets. The top- and bottom-reading Gemini EM Microplate Reader with dual monochromators lets you determine the optimal excitation and emission settings for your creative new fluorescence intensity assays. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h74v7?cmp=70170000000dHuE',\n          'name':'SpectraMax L Microplate Reader',\n          'description':'Measure flash and glow assays, including dual luciferase reporter gene, G protein-coupled receptor (GPCR) via aequorin, bioluminsescence resonance energy transfer (BRET), and acridinium ester flash assays, in both 96- and 384-well plates.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk96y?cmp=70170000001LWlg',\n          'name':'EMax Plus Microplate Reader',\n          'description':'The EMax\u00ae Plus Microplate Reader gives you simple, walk-up access to the data you need to make your next decision. Eight filter modes enable visible-wavelength absorption measurement applications such as protein quantification, cell viability and ELISA.'\n       },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop Micro-Volume Spectrophotometer',\n          'description':'Rapid, accurate DNA, RNA, and protein quantitation in a one-touch, full-spectrum micro-volume absorbance reader.'\n        \n\t\t  \n\t  }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-22/4d2y91?cmp=70170000001LWlW',\n          'name':'SpectraMax i3x Multi-Mode Microplate Reader',\n          'description':'The SpectraMax\u00ae i3x is a multi-mode microplate reader system that evolves with your future needs and offers an unlimited breadth of application possibilities.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-28/4fxy31?cmp=70170000000dHvR',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk7yy?cmp=70170000001LWlq',\n          'name':'FlexStation 3 Multi-Mode Microplate Reader',\n          'description':'With advanced dual optical systems operating above and below your microplates, the FlexStation\u00ae 3 Reader measures absorbance, fluorescence intensity, fluorescence polarization, luminescence, and time-resolved fluorescence.  '\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'SpectraMax M Series',\n          'description':'With six different models to choose from, it\\'s easy to find the one you want for your lab. Every SpectraMax\u00ae M Series Multi-Mode Microplate Reader does UV and visible absorbance, and fluorescence intensity measurements on microplates and cuvettes, standard.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4hb4vc?cmp=70170000000dHvq',\n          'name':'SpectraMax Plus 384 Microplate Reader',\n          'description':'Get absorbance measurements from 190 to 1000 nm quickly for samples in test tubes, cuvettes, and 96- or 384-well microplates. '\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h9rm1?cmp=70170000000dHvR',\n          'name':'SpectraMax 340PC384 Microplate Reader',\n          'description':'Acquire data in endpoint, kinetic, and spectral scan modes using wavelegths from 340-850 nm, tunable in 1 nm increments. The SpectraMax\u00ae 340PC384 Microplate Reader comes with temperature control up to 45 \u00b0C, a robotics-compatible interface, and  SoftMax\u00ae Pro Data Analysis Software. PathCheck\u00ae Sensor technology automatically measures the liquid depth of each well, and can also be used to calculate concentrations without a standard curve and expand the dynamic range of your readings to 6+ OD.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'VersaMax Microplate Reader',\n          'description':'Make the most of your budget with the VersaMax\u2122 ELISA Microplate Reader, our affordable, visible spectrum absorbance reader for 96-well microplates. This richly featured reader gives you the speed, convenience, and economy of monochromator-based wavelength selection for visible absorbance measurements between 340 nm and 850 nm, so you can accomplish more, with less'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-19/4mq2tp?cmp=70170000000dHtf',\n          'name':'Gemini EM Microplate Reader',\n          'description':'Create custom fluorescence assays without having to purchase expensive filter sets. The top- and bottom-reading Gemini EM Microplate Reader with dual monochromators lets you determine the optimal excitation and emission settings for your creative new fluorescence intensity assays. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h74v7?cmp=70170000000dHuE',\n          'name':'SpectraMax L Microplate Reader',\n          'description':'Measure flash and glow assays, including dual luciferase reporter gene, G protein-coupled receptor (GPCR) via aequorin, bioluminsescence resonance energy transfer (BRET), and acridinium ester flash assays, in both 96- and 384-well plates.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk96y?cmp=70170000001LWlg',\n          'name':'EMax Plus Microplate Reader',\n          'description':'The EMax\u00ae Plus Microplate Reader gives you simple, walk-up access to the data you need to make your next decision. Eight filter modes enable visible-wavelength absorption measurement applications such as protein quantification, cell viability and ELISA.'\n       },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop Micro-Volume Spectrophotometer',\n          'description':'Rapid, accurate DNA, RNA, and protein quantitation in a one-touch, full-spectrum micro-volume absorbance reader.'\n        \n\t\t  \n\t  }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/b/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/en/b/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/b/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-22/4d2y91?cmp=70170000001LWlW',\n          'name':'SpectraMax i3x Multi-Mode Microplate Reader',\n          'description':'The SpectraMax\u00ae i3x is a multi-mode microplate reader system that evolves with your future needs and offers an unlimited breadth of application possibilities.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-28/4fxy31?cmp=70170000000dHvR',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk7yy?cmp=70170000001LWlq',\n          'name':'FlexStation 3 Multi-Mode Microplate Reader',\n          'description':'With advanced dual optical systems operating above and below your microplates, the FlexStation\u00ae 3 Reader measures absorbance, fluorescence intensity, fluorescence polarization, luminescence, and time-resolved fluorescence.  '\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'SpectraMax M Series',\n          'description':'With six different models to choose from, it\\'s easy to find the one you want for your lab. Every SpectraMax\u00ae M Series Multi-Mode Microplate Reader does UV and visible absorbance, and fluorescence intensity measurements on microplates and cuvettes, standard.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4hb4vc?cmp=70170000000dHvq',\n          'name':'SpectraMax Plus 384 Microplate Reader',\n          'description':'Get absorbance measurements from 190 to 1000 nm quickly for samples in test tubes, cuvettes, and 96- or 384-well microplates. '\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h9rm1?cmp=70170000000dHvR',\n          'name':'SpectraMax 340PC384 Microplate Reader',\n          'description':'Acquire data in endpoint, kinetic, and spectral scan modes using wavelegths from 340-850 nm, tunable in 1 nm increments. The SpectraMax\u00ae 340PC384 Microplate Reader comes with temperature control up to 45 \u00b0C, a robotics-compatible interface, and  SoftMax\u00ae Pro Data Analysis Software. PathCheck\u00ae Sensor technology automatically measures the liquid depth of each well, and can also be used to calculate concentrations without a standard curve and expand the dynamic range of your readings to 6+ OD.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'VersaMax Microplate Reader',\n          'description':'Make the most of your budget with the VersaMax\u2122 ELISA Microplate Reader, our affordable, visible spectrum absorbance reader for 96-well microplates. This richly featured reader gives you the speed, convenience, and economy of monochromator-based wavelength selection for visible absorbance measurements between 340 nm and 850 nm, so you can accomplish more, with less'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-19/4mq2tp?cmp=70170000000dHtf',\n          'name':'Gemini EM Microplate Reader',\n          'description':'Create custom fluorescence assays without having to purchase expensive filter sets. The top- and bottom-reading Gemini EM Microplate Reader with dual monochromators lets you determine the optimal excitation and emission settings for your creative new fluorescence intensity assays. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h74v7?cmp=70170000000dHuE',\n          'name':'SpectraMax L Microplate Reader',\n          'description':'Measure flash and glow assays, including dual luciferase reporter gene, G protein-coupled receptor (GPCR) via aequorin, bioluminsescence resonance energy transfer (BRET), and acridinium ester flash assays, in both 96- and 384-well plates.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk96y?cmp=70170000001LWlg',\n          'name':'EMax Plus Microplate Reader',\n          'description':'The EMax\u00ae Plus Microplate Reader gives you simple, walk-up access to the data you need to make your next decision. Eight filter modes enable visible-wavelength absorption measurement applications such as protein quantification, cell viability and ELISA.'\n       },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop Micro-Volume Spectrophotometer',\n          'description':'Rapid, accurate DNA, RNA, and protein quantitation in a one-touch, full-spectrum micro-volume absorbance reader.'\n        \n\t\t  \n\t  }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-22/4d2y91?cmp=70170000001LWlW',\n          'name':'SpectraMax i3x Multi-Mode Microplate Reader',\n          'description':'The SpectraMax\u00ae i3x is a multi-mode microplate reader system that evolves with your future needs and offers an unlimited breadth of application possibilities.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-28/4fxy31?cmp=70170000000dHvR',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk7yy?cmp=70170000001LWlq',\n          'name':'FlexStation 3 Multi-Mode Microplate Reader',\n          'description':'With advanced dual optical systems operating above and below your microplates, the FlexStation\u00ae 3 Reader measures absorbance, fluorescence intensity, fluorescence polarization, luminescence, and time-resolved fluorescence.  '\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'SpectraMax M Series',\n          'description':'With six different models to choose from, it\\'s easy to find the one you want for your lab. Every SpectraMax\u00ae M Series Multi-Mode Microplate Reader does UV and visible absorbance, and fluorescence intensity measurements on microplates and cuvettes, standard.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4hb4vc?cmp=70170000000dHvq',\n          'name':'SpectraMax Plus 384 Microplate Reader',\n          'description':'Get absorbance measurements from 190 to 1000 nm quickly for samples in test tubes, cuvettes, and 96- or 384-well microplates. '\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h9rm1?cmp=70170000000dHvR',\n          'name':'SpectraMax 340PC384 Microplate Reader',\n          'description':'Acquire data in endpoint, kinetic, and spectral scan modes using wavelegths from 340-850 nm, tunable in 1 nm increments. The SpectraMax\u00ae 340PC384 Microplate Reader comes with temperature control up to 45 \u00b0C, a robotics-compatible interface, and  SoftMax\u00ae Pro Data Analysis Software. PathCheck\u00ae Sensor technology automatically measures the liquid depth of each well, and can also be used to calculate concentrations without a standard curve and expand the dynamic range of your readings to 6+ OD.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'VersaMax Microplate Reader',\n          'description':'Make the most of your budget with the VersaMax\u2122 ELISA Microplate Reader, our affordable, visible spectrum absorbance reader for 96-well microplates. This richly featured reader gives you the speed, convenience, and economy of monochromator-based wavelength selection for visible absorbance measurements between 340 nm and 850 nm, so you can accomplish more, with less'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-19/4mq2tp?cmp=70170000000dHtf',\n          'name':'Gemini EM Microplate Reader',\n          'description':'Create custom fluorescence assays without having to purchase expensive filter sets. The top- and bottom-reading Gemini EM Microplate Reader with dual monochromators lets you determine the optimal excitation and emission settings for your creative new fluorescence intensity assays. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h74v7?cmp=70170000000dHuE',\n          'name':'SpectraMax L Microplate Reader',\n          'description':'Measure flash and glow assays, including dual luciferase reporter gene, G protein-coupled receptor (GPCR) via aequorin, bioluminsescence resonance energy transfer (BRET), and acridinium ester flash assays, in both 96- and 384-well plates.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk96y?cmp=70170000001LWlg',\n          'name':'EMax Plus Microplate Reader',\n          'description':'The EMax\u00ae Plus Microplate Reader gives you simple, walk-up access to the data you need to make your next decision. Eight filter modes enable visible-wavelength absorption measurement applications such as protein quantification, cell viability and ELISA.'\n       },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop Micro-Volume Spectrophotometer',\n          'description':'Rapid, accurate DNA, RNA, and protein quantitation in a one-touch, full-spectrum micro-volume absorbance reader.'\n        \n\t\t  \n\t  }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/en/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/en/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/en/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdp7?cmp=70170000001DQtL',\n          'name':'SpectraMax i3x Multi-Mode Microplate Reader',\n          'description':'The SpectraMax\u00ae i3x is a multi-mode microplate reader system that evolves with your future needs and offers an unlimited breadth of application possibilities.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfj5f?cmp=70170000001DQtp',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-06/4vpywp?cmp=70170000001DQsr',\n          'name':'FlexStation 3 Multi-Mode Microplate Reader',\n          'description':'With advanced dual optical systems operating above and below your microplates, the FlexStation\u00ae 3 Reader measures absorbance, fluorescence intensity, fluorescence polarization, luminescence, and time-resolved fluorescence.  '\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfhb5?cmp=70170000001DQta',\n          'name':'SpectraMax M Series',\n          'description':'With six different models to choose from, it\\'s easy to find the one you want for your lab. Every SpectraMax\u00ae M Series Multi-Mode Microplate Reader does UV and visible absorbance, and fluorescence intensity measurements on microplates and cuvettes, standard.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wflq7?cmp=70170000001DQuJ',\n          'name':'SpectraMax Plus 384 Microplate Reader',\n          'description':'Get absorbance measurements from 190 to 1000 nm quickly for samples in test tubes, cuvettes, and 96- or 384-well microplates. '\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfk5f?cmp=70170000001DQu4',\n          'name':'SpectraMax 340PC384 Microplate Reader',\n          'description':'Acquire data in endpoint, kinetic, and spectral scan modes using wavelegths from 340-850 nm, tunable in 1 nm increments. The SpectraMax\u00ae 340PC384 Microplate Reader comes with temperature control up to 45 \u00b0C, a robotics-compatible interface, and  SoftMax\u00ae Pro Data Analysis Software. PathCheck\u00ae Sensor technology automatically measures the liquid depth of each well, and can also be used to calculate concentrations without a standard curve and expand the dynamic range of your readings to 6+ OD.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfhb5?cmp=70170000001DQta',\n          'name':'VersaMax Microplate Reader',\n          'description':'Make the most of your budget with the VersaMax\u2122 ELISA Microplate Reader, our affordable, visible spectrum absorbance reader for 96-well microplates. This richly featured reader gives you the speed, convenience, and economy of monochromator-based wavelength selection for visible absorbance measurements between 340 nm and 850 nm, so you can accomplish more, with less'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdjy?cmp=70170000001DQt6',\n          'name':'Gemini EM Microplate Reader',\n          'description':'Create custom fluorescence assays without having to purchase expensive filter sets. The top- and bottom-reading Gemini EM Microplate Reader with dual monochromators lets you determine the optimal excitation and emission settings for your creative new fluorescence intensity assays. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wjjhm?cmp=70170000001DQun',\n          'name':'SpectraMax L Microplate Reader',\n          'description':'Measure flash and glow assays, including dual luciferase reporter gene, G protein-coupled receptor (GPCR) via aequorin, bioluminsescence resonance energy transfer (BRET), and acridinium ester flash assays, in both 96- and 384-well plates.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-03/4sxht5?cmp=70170000001DQsN',\n          'name':'EMax Plus Microplate Reader',\n          'description':'The EMax\u00ae Plus Microplate Reader gives you simple, walk-up access to the data you need to make your next decision. Eight filter modes enable visible-wavelength absorption measurement applications such as protein quantification, cell viability and ELISA.'\n        },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop Micro-Volume Spectrophotometer',\n          'description':'Rapid, accurate DNA, RNA, and protein quantitation in a one-touch, full-spectrum micro-volume absorbance reader.'\n        \n\t\t  \n\t  }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdp7?cmp=70170000001DQtL',\n          'name':'SpectraMax i3x Multi-Mode Microplate Reader',\n          'description':'The SpectraMax\u00ae i3x is a multi-mode microplate reader system that evolves with your future needs and offers an unlimited breadth of application possibilities.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfj5f?cmp=70170000001DQtp',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-06/4vpywp?cmp=70170000001DQsr',\n          'name':'FlexStation 3 Multi-Mode Microplate Reader',\n          'description':'With advanced dual optical systems operating above and below your microplates, the FlexStation\u00ae 3 Reader measures absorbance, fluorescence intensity, fluorescence polarization, luminescence, and time-resolved fluorescence.  '\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfhb5?cmp=70170000001DQta',\n          'name':'SpectraMax M Series',\n          'description':'With six different models to choose from, it\\'s easy to find the one you want for your lab. Every SpectraMax\u00ae M Series Multi-Mode Microplate Reader does UV and visible absorbance, and fluorescence intensity measurements on microplates and cuvettes, standard.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wflq7?cmp=70170000001DQuJ',\n          'name':'SpectraMax Plus 384 Microplate Reader',\n          'description':'Get absorbance measurements from 190 to 1000 nm quickly for samples in test tubes, cuvettes, and 96- or 384-well microplates. '\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfk5f?cmp=70170000001DQu4',\n          'name':'SpectraMax 340PC384 Microplate Reader',\n          'description':'Acquire data in endpoint, kinetic, and spectral scan modes using wavelegths from 340-850 nm, tunable in 1 nm increments. The SpectraMax\u00ae 340PC384 Microplate Reader comes with temperature control up to 45 \u00b0C, a robotics-compatible interface, and  SoftMax\u00ae Pro Data Analysis Software. PathCheck\u00ae Sensor technology automatically measures the liquid depth of each well, and can also be used to calculate concentrations without a standard curve and expand the dynamic range of your readings to 6+ OD.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfhb5?cmp=70170000001DQta',\n          'name':'VersaMax Microplate Reader',\n          'description':'Make the most of your budget with the VersaMax\u2122 ELISA Microplate Reader, our affordable, visible spectrum absorbance reader for 96-well microplates. This richly featured reader gives you the speed, convenience, and economy of monochromator-based wavelength selection for visible absorbance measurements between 340 nm and 850 nm, so you can accomplish more, with less'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdjy?cmp=70170000001DQt6',\n          'name':'Gemini EM Microplate Reader',\n          'description':'Create custom fluorescence assays without having to purchase expensive filter sets. The top- and bottom-reading Gemini EM Microplate Reader with dual monochromators lets you determine the optimal excitation and emission settings for your creative new fluorescence intensity assays. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wjjhm?cmp=70170000001DQun',\n          'name':'SpectraMax L Microplate Reader',\n          'description':'Measure flash and glow assays, including dual luciferase reporter gene, G protein-coupled receptor (GPCR) via aequorin, bioluminsescence resonance energy transfer (BRET), and acridinium ester flash assays, in both 96- and 384-well plates.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-03/4sxht5?cmp=70170000001DQsN',\n          'name':'EMax Plus Microplate Reader',\n          'description':'The EMax\u00ae Plus Microplate Reader gives you simple, walk-up access to the data you need to make your next decision. Eight filter modes enable visible-wavelength absorption measurement applications such as protein quantification, cell viability and ELISA.'\n        },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop Micro-Volume Spectrophotometer',\n          'description':'Rapid, accurate DNA, RNA, and protein quantitation in a one-touch, full-spectrum micro-volume absorbance reader.'\n        \n\t\t  \n\t  }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/eu/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/eu/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/eu/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wffr3?cmp=70170000001DQtQ',\n          'name':'Lecteur de microplaques multi-mode SpectraMax i3x',\n          'description':'La technologie SpectraMax i3x est un lecteur de microplaques multi-mode qui \u00e9volue au fil de vos besoins et assure une vari\u00e9t\u00e9 infinie d\u2019applications.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfj5h?cmp=70170000001DQtu',\n          'name':'Lecteur de microplaques multi-mode SpectraMax Paradigm',\n          'description':'Anticipez l\u2019avenir de votre laboratoire avec le lecteur de microplaques multi-mode SpectraMax Paradigm. Profitez d\u2019un syst\u00e8me qui vous fournit les donn\u00e9es dont vous avez besoin aujourd\u2019hui. Il vous faut un syst\u00e8me plus performant ? Transformez votre lecteur gr\u00e2ce \u00e0 la mise \u00e0 niveau du mode de d\u00e9tection, qui s\u2019effectue en moins de deux minutes.' \n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfd7f?cmp=70170000001DQsw',\n          'name':'Lecteur de microplaques multi-mode FlexStation 3',\n          'description':'Gr\u00e2ce aux syst\u00e8mes optiques de pointe plac\u00e9s au-dessus et en dessous de vos microplaques, le lecteur FlexStation 3 mesure l\u2019absorbance, l\u2019intensit\u00e9 de fluorescence, la polarisation de fluorescence, la luminescence et la fluorescence en temps diff\u00e9r\u00e9.'\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfhbc?cmp=70170000001DQtf',\n          'name':'Lecteurs de microplaques multi-mode de la gamme SpectraMax M',\n          'description':'Avec six mod\u00e8les diff\u00e9rents, il vous est beaucoup plus facile de trouver celui adapt\u00e9 \u00e0 votre laboratoire. Par d\u00e9faut, chaque lecteur de microplaques multi-mode de la gamme SpectraMax\u00ae M est optimis\u00e9 pour r\u00e9aliser l\u2019absorbance visible et UV, ainsi que les mesures de l\u2019intensit\u00e9 de fluorescence sur les microplaques et les cuvettes.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wg365?cmp=70170000001DQuO',\n          'name':'Lecteur de microplaques SpectraMax Plus 384',\n          'description':'Obtenez rapidement des mesures d\u2019absorbance allant de 190 \u00e0 1 000 nm \u00e0 partir d\u2019\u00e9chantillons contenus dans des tubes \u00e0 essai, des cuvettes, ou encore des microplaques 96 ou 384 puits.'\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfkhc?cmp=70170000001DQu9',\n          'name':'Lecteur de microplaques SpectraMax 340PC384',\n          'description':'Laissez-vous inspirer par les r\u00e9sultats d\u2019analyse qu\u2019est parvenu \u00e0 obtenir le lecteur de microplaques SpectraMax 340PC384, notre lecteur d\u2019absorbance visible programmable pour microplaques de 96 et de 384 puits. Obtenez des donn\u00e9es en point final, cin\u00e9tique ou balayage spectral dans la gamme de longueurs d\u2019onde de 340 \u00e0 850 nm, programmables par incr\u00e9ments de 1 nm.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfhbc?cmp=70170000001DQtf',\n          'name':'Lecteur de microplaques VersaMax',\n          'description':'Optimisez votre investissement avec le lecteur de microplaques abordable VersaMax\u2122 qui mesure l\u2019absorbance du spectre visible sur les microplaques \u00e0 96 puits. Ce lecteur riche en fonctionnalit\u00e9s vous offre la rapidit\u00e9, la commodit\u00e9 et le faible co\u00fbt d\u2019une s\u00e9lection de longueurs d\u2019onde par monochromateur pour des mesures d\u2019absorbance visible entre 340 nm et 850 nm. Vous pouvez donc accomplir plus de t\u00e2ches en d\u00e9pensant moins.'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdm9?cmp=70170000001DQtB',\n          'name':'Lecteur de microplaques Gemini EM',\n          'description':'Cr\u00e9ez vos propres dosages par fluorescence sans devoir acheter de kits de filtres co\u00fbteux. Le lecteur de microplaques Gemini EM \u00e0 lecture inf\u00e9rieure et sup\u00e9rieure avec monochromateurs doubles vous permet de d\u00e9finir les param\u00e8tres d\u2019excitation et d\u2019\u00e9mission ad\u00e9quats pour vos nouveaux dosages d\u2019intensit\u00e9 de fluorescence. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wjjjk?cmp=70170000001DQus',\n          'name':'Lecteur de microplaques SpectraMax L',\n          'description':'R\u00e9alisez des dosages de type flash et glow, notamment du g\u00e8ne rapporteur de lucif\u00e9rase double, du r\u00e9cepteur coupl\u00e9 \u00e0 la prot\u00e9ine G (GPRC) via l\u2019aequorine, du transfert d\u2019\u00e9nergie par r\u00e9sonance de bioluminescence (BRET), ou encore des dosages d\u2019ester d\u2019acridinium de type flash, dans des plaques de 96 et 384 puits.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-03/4sxhy3?cmp=70170000001DQsS',\n          'name':'Lecteur de microplaques EMax Plus',\n          'description':'Le lecteur de microplaques EMax\u00ae Plus offre un acc\u00e8s simple et unique aux donn\u00e9es n\u00e9cessaires pour prendre vos d\u00e9cisions. Les huit modes de filtre vous permettent d\u2019effectuer des mesures d\u2019absorption de longueurs d\u2019ondes visibles telles que la quantification des prot\u00e9ines, la viabilit\u00e9 cellulaire et les tests ELISA.'\n        },\n\t\t 'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'Spectrophotom\u00e8tre micro-volume SpectraMax QuickDrop',\n          'description':'Quantification rapide et pr\u00e9cise de l\u2019ADN, de l\u2019ARN et des prot\u00e9ines en appuyant sur un seul bouton avec un lecteur d\u2019absorbance micro-volume \u00e0 spectre complet.'\n        }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/fr/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/fr/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wffr3?cmp=70170000001DQtQ',\n          'name':'Lecteur de microplaques multi-mode SpectraMax i3x',\n          'description':'La technologie SpectraMax i3x est un lecteur de microplaques multi-mode qui \u00e9volue au fil de vos besoins et assure une vari\u00e9t\u00e9 infinie d\u2019applications.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfj5h?cmp=70170000001DQtu',\n          'name':'Lecteur de microplaques multi-mode SpectraMax Paradigm',\n          'description':'Anticipez l\u2019avenir de votre laboratoire avec le lecteur de microplaques multi-mode SpectraMax Paradigm. Profitez d\u2019un syst\u00e8me qui vous fournit les donn\u00e9es dont vous avez besoin aujourd\u2019hui. Il vous faut un syst\u00e8me plus performant ? Transformez votre lecteur gr\u00e2ce \u00e0 la mise \u00e0 niveau du mode de d\u00e9tection, qui s\u2019effectue en moins de deux minutes.' \n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfd7f?cmp=70170000001DQsw',\n          'name':'Lecteur de microplaques multi-mode FlexStation 3',\n          'description':'Gr\u00e2ce aux syst\u00e8mes optiques de pointe plac\u00e9s au-dessus et en dessous de vos microplaques, le lecteur FlexStation 3 mesure l\u2019absorbance, l\u2019intensit\u00e9 de fluorescence, la polarisation de fluorescence, la luminescence et la fluorescence en temps diff\u00e9r\u00e9.'\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfhbc?cmp=70170000001DQtf',\n          'name':'Lecteurs de microplaques multi-mode de la gamme SpectraMax M',\n          'description':'Avec six mod\u00e8les diff\u00e9rents, il vous est beaucoup plus facile de trouver celui adapt\u00e9 \u00e0 votre laboratoire. Par d\u00e9faut, chaque lecteur de microplaques multi-mode de la gamme SpectraMax\u00ae M est optimis\u00e9 pour r\u00e9aliser l\u2019absorbance visible et UV, ainsi que les mesures de l\u2019intensit\u00e9 de fluorescence sur les microplaques et les cuvettes.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wg365?cmp=70170000001DQuO',\n          'name':'Lecteur de microplaques SpectraMax Plus 384',\n          'description':'Obtenez rapidement des mesures d\u2019absorbance allant de 190 \u00e0 1 000 nm \u00e0 partir d\u2019\u00e9chantillons contenus dans des tubes \u00e0 essai, des cuvettes, ou encore des microplaques 96 ou 384 puits.'\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfkhc?cmp=70170000001DQu9',\n          'name':'Lecteur de microplaques SpectraMax 340PC384',\n          'description':'Laissez-vous inspirer par les r\u00e9sultats d\u2019analyse qu\u2019est parvenu \u00e0 obtenir le lecteur de microplaques SpectraMax 340PC384, notre lecteur d\u2019absorbance visible programmable pour microplaques de 96 et de 384 puits. Obtenez des donn\u00e9es en point final, cin\u00e9tique ou balayage spectral dans la gamme de longueurs d\u2019onde de 340 \u00e0 850 nm, programmables par incr\u00e9ments de 1 nm.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfhbc?cmp=70170000001DQtf',\n          'name':'Lecteur de microplaques VersaMax',\n          'description':'Optimisez votre investissement avec le lecteur de microplaques abordable VersaMax\u2122 qui mesure l\u2019absorbance du spectre visible sur les microplaques \u00e0 96 puits. Ce lecteur riche en fonctionnalit\u00e9s vous offre la rapidit\u00e9, la commodit\u00e9 et le faible co\u00fbt d\u2019une s\u00e9lection de longueurs d\u2019onde par monochromateur pour des mesures d\u2019absorbance visible entre 340 nm et 850 nm. Vous pouvez donc accomplir plus de t\u00e2ches en d\u00e9pensant moins.'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wfdm9?cmp=70170000001DQtB',\n          'name':'Lecteur de microplaques Gemini EM',\n          'description':'Cr\u00e9ez vos propres dosages par fluorescence sans devoir acheter de kits de filtres co\u00fbteux. Le lecteur de microplaques Gemini EM \u00e0 lecture inf\u00e9rieure et sup\u00e9rieure avec monochromateurs doubles vous permet de d\u00e9finir les param\u00e8tres d\u2019excitation et d\u2019\u00e9mission ad\u00e9quats pour vos nouveaux dosages d\u2019intensit\u00e9 de fluorescence. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-07/4wjjjk?cmp=70170000001DQus',\n          'name':'Lecteur de microplaques SpectraMax L',\n          'description':'R\u00e9alisez des dosages de type flash et glow, notamment du g\u00e8ne rapporteur de lucif\u00e9rase double, du r\u00e9cepteur coupl\u00e9 \u00e0 la prot\u00e9ine G (GPRC) via l\u2019aequorine, du transfert d\u2019\u00e9nergie par r\u00e9sonance de bioluminescence (BRET), ou encore des dosages d\u2019ester d\u2019acridinium de type flash, dans des plaques de 96 et 384 puits.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-06-03/4sxhy3?cmp=70170000001DQsS',\n          'name':'Lecteur de microplaques EMax Plus',\n          'description':'Le lecteur de microplaques EMax\u00ae Plus offre un acc\u00e8s simple et unique aux donn\u00e9es n\u00e9cessaires pour prendre vos d\u00e9cisions. Les huit modes de filtre vous permettent d\u2019effectuer des mesures d\u2019absorption de longueurs d\u2019ondes visibles telles que la quantification des prot\u00e9ines, la viabilit\u00e9 cellulaire et les tests ELISA.'\n        },\n\t\t 'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'Spectrophotom\u00e8tre micro-volume SpectraMax QuickDrop',\n          'description':'Quantification rapide et pr\u00e9cise de l\u2019ADN, de l\u2019ARN et des prot\u00e9ines en appuyant sur un seul bouton avec un lecteur d\u2019absorbance micro-volume \u00e0 spectre complet.'\n        }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/fr/tracez-votre-propre-chemin/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-22/4d2y91?cmp=70170000001LWlW',\n          'name':'SpectraMax i3x Multi-Mode Microplate Reader',\n          'description':'The SpectraMax\u00ae i3x is a multi-mode microplate reader system that evolves with your future needs and offers an unlimited breadth of application possibilities.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-28/4fxy31?cmp=70170000000dHvR',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk7yy?cmp=70170000001LWlq',\n          'name':'FlexStation 3 Multi-Mode Microplate Reader',\n          'description':'With advanced dual optical systems operating above and below your microplates, the FlexStation\u00ae 3 Reader measures absorbance, fluorescence intensity, fluorescence polarization, luminescence, and time-resolved fluorescence.  '\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'SpectraMax M Series',\n          'description':'With six different models to choose from, it\\'s easy to find the one you want for your lab. Every SpectraMax\u00ae M Series Multi-Mode Microplate Reader does UV and visible absorbance, and fluorescence intensity measurements on microplates and cuvettes, standard.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4hb4vc?cmp=70170000000dHvq',\n          'name':'SpectraMax Plus 384 Microplate Reader',\n          'description':'Get absorbance measurements from 190 to 1000 nm quickly for samples in test tubes, cuvettes, and 96- or 384-well microplates. '\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h9rm1?cmp=70170000000dHvR',\n          'name':'SpectraMax 340PC384 Microplate Reader',\n          'description':'Acquire data in endpoint, kinetic, and spectral scan modes using wavelegths from 340-850 nm, tunable in 1 nm increments. The SpectraMax\u00ae 340PC384 Microplate Reader comes with temperature control up to 45 \u00b0C, a robotics-compatible interface, and  SoftMax\u00ae Pro Data Analysis Software. PathCheck\u00ae Sensor technology automatically measures the liquid depth of each well, and can also be used to calculate concentrations without a standard curve and expand the dynamic range of your readings to 6+ OD.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'VersaMax Microplate Reader',\n          'description':'Make the most of your budget with the VersaMax\u2122 ELISA Microplate Reader, our affordable, visible spectrum absorbance reader for 96-well microplates. This richly featured reader gives you the speed, convenience, and economy of monochromator-based wavelength selection for visible absorbance measurements between 340 nm and 850 nm, so you can accomplish more, with less'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-19/4mq2tp?cmp=70170000000dHtf',\n          'name':'Gemini EM Microplate Reader',\n          'description':'Create custom fluorescence assays without having to purchase expensive filter sets. The top- and bottom-reading Gemini EM Microplate Reader with dual monochromators lets you determine the optimal excitation and emission settings for your creative new fluorescence intensity assays. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h74v7?cmp=70170000000dHuE',\n          'name':'SpectraMax L Microplate Reader',\n          'description':'Measure flash and glow assays, including dual luciferase reporter gene, G protein-coupled receptor (GPCR) via aequorin, bioluminsescence resonance energy transfer (BRET), and acridinium ester flash assays, in both 96- and 384-well plates.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk96y?cmp=70170000001LWlg',\n          'name':'EMax Plus Microplate Reader',\n          'description':'The EMax\u00ae Plus Microplate Reader gives you simple, walk-up access to the data you need to make your next decision. Eight filter modes enable visible-wavelength absorption measurement applications such as protein quantification, cell viability and ELISA.'\n       },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop Micro-Volume Spectrophotometer',\n          'description':'Rapid, accurate DNA, RNA, and protein quantitation in a one-touch, full-spectrum micro-volume absorbance reader.'\n        \n\t\t  \n\t  }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-22/4d2y91?cmp=70170000001LWlW',\n          'name':'SpectraMax i3x Multi-Mode Microplate Reader',\n          'description':'The SpectraMax\u00ae i3x is a multi-mode microplate reader system that evolves with your future needs and offers an unlimited breadth of application possibilities.'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-28/4fxy31?cmp=70170000000dHvR',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk7yy?cmp=70170000001LWlq',\n          'name':'FlexStation 3 Multi-Mode Microplate Reader',\n          'description':'With advanced dual optical systems operating above and below your microplates, the FlexStation\u00ae 3 Reader measures absorbance, fluorescence intensity, fluorescence polarization, luminescence, and time-resolved fluorescence.  '\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'SpectraMax M Series',\n          'description':'With six different models to choose from, it\\'s easy to find the one you want for your lab. Every SpectraMax\u00ae M Series Multi-Mode Microplate Reader does UV and visible absorbance, and fluorescence intensity measurements on microplates and cuvettes, standard.'\n        },\n      /*'M3':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },\n      'M2/2E':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':''\n        },*/\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4hb4vc?cmp=70170000000dHvq',\n          'name':'SpectraMax Plus 384 Microplate Reader',\n          'description':'Get absorbance measurements from 190 to 1000 nm quickly for samples in test tubes, cuvettes, and 96- or 384-well microplates. '\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h9rm1?cmp=70170000000dHvR',\n          'name':'SpectraMax 340PC384 Microplate Reader',\n          'description':'Acquire data in endpoint, kinetic, and spectral scan modes using wavelegths from 340-850 nm, tunable in 1 nm increments. The SpectraMax\u00ae 340PC384 Microplate Reader comes with temperature control up to 45 \u00b0C, a robotics-compatible interface, and  SoftMax\u00ae Pro Data Analysis Software. PathCheck\u00ae Sensor technology automatically measures the liquid depth of each well, and can also be used to calculate concentrations without a standard curve and expand the dynamic range of your readings to 6+ OD.'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk881?cmp=70170000001LWlb',\n          'name':'VersaMax Microplate Reader',\n          'description':'Make the most of your budget with the VersaMax\u2122 ELISA Microplate Reader, our affordable, visible spectrum absorbance reader for 96-well microplates. This richly featured reader gives you the speed, convenience, and economy of monochromator-based wavelength selection for visible absorbance measurements between 340 nm and 850 nm, so you can accomplish more, with less'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-19/4mq2tp?cmp=70170000000dHtf',\n          'name':'Gemini EM Microplate Reader',\n          'description':'Create custom fluorescence assays without having to purchase expensive filter sets. The top- and bottom-reading Gemini EM Microplate Reader with dual monochromators lets you determine the optimal excitation and emission settings for your creative new fluorescence intensity assays. '\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-03/4h74v7?cmp=70170000000dHuE',\n          'name':'SpectraMax L Microplate Reader',\n          'description':'Measure flash and glow assays, including dual luciferase reporter gene, G protein-coupled receptor (GPCR) via aequorin, bioluminsescence resonance energy transfer (BRET), and acridinium ester flash assays, in both 96- and 384-well plates.'\n        },\n      'Emax Plus':{\n          'img':'EMax Plus-1_NoBckgd.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-02/4gk96y?cmp=70170000001LWlg',\n          'name':'EMax Plus Microplate Reader',\n          'description':'The EMax\u00ae Plus Microplate Reader gives you simple, walk-up access to the data you need to make your next decision. Eight filter modes enable visible-wavelength absorption measurement applications such as protein quantification, cell viability and ELISA.'\n       },\n\t\t'QuickDrop':{\n          'img':'quickdrop.png',\n          'link':'https://www.moleculardevices.com/spectramax-quickdrop-micro-volume-spectrophotometer',\n          'name':'SpectraMax QuickDrop Micro-Volume Spectrophotometer',\n          'description':'Rapid, accurate DNA, RNA, and protein quantitation in a one-touch, full-spectrum micro-volume absorbance reader.'\n        \n\t\t  \n\t  }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'JSON',\n        success:function(data){\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/zh/b/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/b/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7cc3?cmp=70170000000v2cf',\n          'name':'\u9762\u5411\u672a\u6765\u7684\u68c0\u6d4b\u5e73\u53f0SpectraMax i3x \u591a\u529f\u80fd\u9176\u6807\u4eea',\n          'description':'SpectraMax    i3x\u591a\u529f\u80fd\u8bfb\u677f\u673a\u9664\u4e86\u5177\u6709\u5168\u6ce2\u957f\u7684\u5149\u5438\u6536\u3001\u8367\u5149\u3001\u5316\u5b66\u53d1\u5149\u548cFRET\u68c0\u6d4b\u529f\u80fd\u4ee5\u5916\uff0c\u8fd8\u517c\u5bb9\u4e86\u5ba2\u6237\u7aef\u6a21\u5757\u5316\u5347\u7ea7\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4efb\u4f55\u65f6\u95f4\u968f\u610f\u5347\u7ea7\u81f3\u8367\u5149\u504f\u632fFP\u3001HTRF\u3001AlphaScreen\u3001Western Blot\u3001\u7ec6\u80de\u6210\u50cf\u548c\u5e26\u6709\u6ce8\u5c04\u5668\u6a21\u5f0f\u4e0b\u7684\u5feb\u901f\u52a8\u529b\u5b66\u68c0\u6d4b\u7b49\u3002'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-28/4fxy31?cmp=70170000000dHvR',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jhh?cmp=70170000000v2dE',\n          'name':'\u552f\u4e00\u6574\u5408\u4e868\u621616\u901a\u9053\u6db2\u4f53\u8f6c\u79fb\u7cfb\u7edf\u7684\u4e94\u529f\u80fd\u7684FlexStation 3 \u591a\u529f\u80fd\u9176\u6807\u4eea',\n          'description':'FlexStation 3 \u628aSpectraMax M5e\u548c8\u9053/16\u9053\u7684\u79fb\u6db2\u7cfb\u7edf\u6574\u5408\u5728\u4e00\u8d77\u6210\u4e3a\u4f53\u79ef\u5c0f\u5de7\u529f\u80fd\u5f3a\u5927\u7684\u8bfb\u677f\u673a\u7cfb\u7edf\u3002\u8be5\u6574\u5408\u7cfb\u7edf\u4e0d\u4f46\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u591a\u529f\u80fd\u68c0\u6d4b\u5e73\u53f0\uff0c\u8fd8\u589e\u52a0\u4e86\u6db2\u4f53\u5904\u7406\u7684\u901a\u91cf\u548c\u63d0\u5347\u4e86\u68c0\u6d4b\u751f\u5316\u548c\u7ec6\u80de\u52a8\u529b\u5b66\u5b9e\u9a8c\u7684\u7075\u6d3b\u6027\uff0c\u4f8b\u5982\u8fdb\u884c\u9499\u6d41\u68c0\u6d4b\u548c\u5176\u4ed6\u5feb\u901f\u52a8\u529b\u5b66\u68c0\u6d4b\u3002'\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jgh?cmp=70170000000v2d4',\n          'name':'SpectraMax M \u7cfb\u5217\u591a\u529f\u80fd\u9176\u6807\u4eea',\n          'description':'SpectraMax   M\u7cfb\u5217\u591a\u529f\u80fd\u9176\u6807\u4eea\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u3001\u53ef\u5347\u7ea7\u7684\u3001\u53cc\u5149\u6805\u8fde\u7eed\u5149\u8c31\u7684\u68c0\u6d4b\u5e73\u53f0\uff0c\u4e3a\u751f\u547d\u79d1\u5b66\u7814\u7a76\u53ca\u836f\u7269\u7814\u53d1\u63d0\u4f9b\u5e7f\u6cdb\u5e94\u7528\u53ca\u9ad8\u6027\u80fd\u8868\u73b0\u3002\u6839\u636e\u7528\u6237\u7684\u7279\u5b9a\u5e94\u7528\u53ca\u9884\u7b97\u9700\u6c42\u6765\u9009\u62e9\u4e0d\u540c\u529f\u80fd\u7684\u9176\u6807\u4eea\u3002\u6240\u6709\u914d\u7f6e\u5747\u63d0\u4f9b\u6bd4\u8272\u76bf\u63d2\u69fd(\u53ef\u8fdb\u884c\u4e09\u79cd\u6a21\u5f0f\u6d4b\u8bfb)\u3001\u7cbe\u786e\u6e29\u5ea6\u63a7\u5236\u3001\u5fae\u5b54\u677f\u632f\u8361\u53ca\u4f7f\u7528SoftMax   Pro\u6570\u636e\u91c7\u96c6\u548c\u5206\u6790\u8f6f\u4ef6\u8fdb\u884c\u7efc\u5408\u6570\u636e\u7ba1\u7406\u3002'\n        },\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7fm3?cmp=70170000000v2ck',\n          'name':'\u5168\u6ce2\u957f\u3001\u591a\u901a\u9053\u5fae\u5b54\u677f\u68c0\u6d4b\u4eea-SpectraMax Plus 384 \u5149\u5438\u6536\u578b\u9176\u6807\u4eea',\n          'description':'\u53ef\u4ee5\u540c\u65f6\u5b9e\u73b0\u6807\u51c6\u7684\u5206\u5149\u5149\u5ea6\u8ba1\u548c\u5fae\u5b54\u677f\u8bfb\u677f\u673a\u7684\u529f\u80fd\uff0c\u5373\u8bfb\u53d6\u4efb\u610f\u4e00\u79cd\u6807\u51c6\u89c4\u683c\u7684\u6bd4\u8272\u76bf\u621612x75mm\u7684\u8bd5\u7ba1\u300196\u6216384\u5b54\u7684\u5fae\u5b54\u677f\u4e2d\u7684\u6837\u54c1\u3002\u5373\u4f7f\u662f\u66f4\u9ad8\u901a\u91cf\u7684\u68c0\u6d4b\u8981\u6c42\uff0c\u7cfb\u7edf\u4e5f\u80fd\u8f7b\u677e\u7684\u6574\u5408\u5b8c\u6574\u7684\u673a\u68b0\u5316\u64cd\u4f5c\u6765\u914d\u5408\u60a8\u6240\u8981\u7684\u5b9e\u9a8c\u8fdb\u5ea6\u548c\u8981\u6c42\u3002'\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jjy?cmp=70170000000v2cz',\n          'name':'\u5168\u6ce2\u957f\u3001\u591a\u901a\u9053\u5fae\u5b54\u677f\u68c0\u6d4b\u4eea-340PC384\u5149\u5438\u6536\u578b\u9176\u6807\u4eea',\n          'description':'\u63d0\u4f9b\u68c0\u6d4b\u53ef\u89c1\u5149\u8303\u56f4\u5185\u7684\u5149\u5438\u6536\u68c0\u6d4b\u6240\u9700\u8981\u7684\u4e00\u5207\uff0c\u5305\u62ec\u6e29\u5ea6\u63a7\u5236\u3001\u673a\u68b0\u81c2\u517c\u5bb9\u5e73\u53f0\u548cSoftMax Pro\u6570\u636e\u5206\u6790\u8f6f\u4ef6\u3002\u5176\u5149\u5b66\u8bbe\u8ba1\u771f\u5b9e\u5730\u6a21\u62df\u53cc\u5149\u675f\u5206\u5149\u5149\u5ea6\u8ba1\u3002\u6bcf\u4e2a\u5b54\u6709\u5176\u5404\u81ea\u7684\u6837\u54c1\u5149\u675f\u68c0\u6d4b\u548c\u53c2\u6bd4\u68c0\u6d4b\u30028\u901a\u9053\u7684\u7cfb\u7edf\uff0c\u5305\u542b8\u6761\u6837\u54c1\u68c0\u6d4b\u5149\u675f\u548c8\u6761\u53c2\u6bd4\u5149\u675f\uff0c\u7ed9\u4e88\u51fa\u4f17\u7684\u7cbe\u786e\u5ea6\u548c\u9ad8\u901f\u8bfb\u677f\u65b9\u5f0f\u3002'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jj7?cmp=70170000000v2d9',\n          'name':'\u5168\u6ce2\u957f\u3001\u591a\u901a\u9053\u5fae\u5b54\u677f\u68c0\u6d4b\u4eea-Versamax\u5149\u5438\u6536\u578b\u9176\u6807\u4eea',\n          'description':'\u5185\u7f6e\u957f\u5bff\u547d\u6c19\u95ea\u706f\uff0c\u5149\u6805\u5355\u8272\u5668\u62e5\u6709\u7075\u6d3b\u68c0\u6d4b\u4f18\u52bf\uff0c\u65e0\u9700\u52a0\u914d\u989d\u5916\u7684\u6ee4\u5149\u7247\uff0c\u6ce2\u957f\u8303\u56f4340nm\u81f3850nm\uff0c\u76f8\u5f53\u4e8e\u914d\u5907\u4e86511\u5757\u6ee4\u5149\u7247\u3002\u53ef\u7528\u4e8e\u68c0\u6d4b\u5706\u5e95\u3001\u5e73\u5e95\u548c\u534a\u9762\u79ef\u768496\u5b54\u677f\u68c0\u6d4b\uff0c\u53cc\u6ce2\u957f\u8bfb\u677f\u53ef\u62a5\u544a\u6bcf\u4e2a\u6ce2\u957f\u7684\u5b9e\u9645\u5149\u5438\u6536\u503c\uff0c\u6570\u636e\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7684\u9700\u6c42\u8fdb\u884c\u5206\u6790\u3002'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-19/4mq2tp?cmp=70170000000dHtf',\n          'name':'\u5168\u6ce2\u957f\u3001\u53cc\u5149\u8def-Gemini EM\u8367\u5149\u578b\u9176\u6807\u4eea',\n          'description':'\u91c7\u7528\u53cc\u5149\u6805\u578b\u5355\u8272\u5668\uff0c\u53ef\u4ee5\u68c0\u6d4b\u5404\u79cd\u65b0\u9896\u7684\u8367\u5149\u67d3\u6599\u5206\u5b50\u800c\u65e0\u987b\u53e6\u5916\u8d2d\u4e70\u6602\u8d35\u7684\u6ee4\u5149\u7247\u3002\u65e0\u8bba\u662f\u9488\u5bf9\u5747\u5300\u6eb6\u6db2\u8367\u5149\u4fe1\u53f7\u7684\u68c0\u6d4b\u6216\u8005\u662f\u8d34\u58c1\u7ec6\u80de\u8367\u5149\u5f3a\u5ea6\u7684\u5224\u65ad\uff0c\u5176\u5177\u6709\u7684\u9876\u90e8\u3001\u5e95\u90e8\u53cc\u8367\u5149\u5149\u8def\u90fd\u53ef\u4ee5\u8f7b\u677e\u5e94\u5bf9\u3001\u81ea\u7531\u5207\u6362\u3002'\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jgr?cmp=70170000000v2cp',\n          'name':'\u8d85\u7075\u654f\u3001\u9ad8\u901a\u91cf\u7684-SpectraMax L\u5316\u5b66\u53d1\u5149\u578b\u9176\u6807\u4eea',\n          'description':'\u72ec\u7279\u5149\u8def\u8bbe\u8ba1\u4ee5\u53ca\u6807\u914d\u6709\u5355\u5149\u5b50\u8ba1\u6570PMT\u5728\u5206\u6790\u7269\u7684\u68c0\u6d4b\u548c\u57fa\u56e0\u66f4\u4f4e\u6c34\u5e73\u8868\u8fbe\u68c0\u6d4b\u4e0a\u63d0\u4f9b\u51fa\u4f17\u7684\u4fe1\u566a\u6bd4\u7387\uff0c\u591a\u901a\u9053\u81ea\u52a8\u6ce8\u5c04\u5668\u53ef\u4ee5\u6ee1\u8db3\u4e0d\u540c\u5b9e\u9a8c\u7684\u9700\u6c42\uff0c\u5982\u5316\u5b66\u53d1\u5149\u4e2d\u5feb\u53cd\u5e94\u548c\u6162\u53cd\u5e94\uff0c\u5305\u62ec\u53cc\u8367\u5149\u7d20\u9176\u548cY\u5576\u8102\u5feb\u53cd\u5e94\u7b49\u3002'\n        },\n      'Emax Plus':{\n          'img':'EMax_Plus-1_NoBckgd_new.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-11-01/66klf5?cmp=70170000000v76E',\n          'name':'\u9ad8\u6027\u4ef7\u6bd4\u6ee4\u5149\u7247\u5149\u5438\u6536\u578b\u9176\u6807\u4eea',\n          'description':'Molecular Devices\u65b0\u51fa\u54c1\u7684CMax Plus\u662f\u4e00\u6b3e\u4e13\u95e8\u4e3a\u79d1\u7814\u5b9e\u9a8c\u5ba4\u91cf\u8eab\u6253\u9020\u7684\u7075\u6d3b\u4e14\u5f3a\u5927\u7684\u5fae\u5b54\u677f\u8bfb\u677f\u673a\uff0c\u53ef\u8f6f\u4ef6\u4e0a\u81ea\u5b9a\u4e49\u591a\u79cd\u68c0\u6d4b\u6a21\u677f\u53ca\u7ed9\u51fa\u7ed3\u679c\u8bc4\u4ef7\u3002\u4eea\u5668\u652f\u6301\u4e0d\u540c\u7c7b\u578b\u768496\u5b54\u677f\uff0c\u5e94\u7528\u7684\u8986\u76d6\u8303\u56f4\u5e7f\u6cdb\uff0c\u5305\u62ec\u86cb\u767d\u5b9a\u91cf\u3001\u7ec6\u80de\u6d3b\u529b\u3001\u519c\u836f\u6b8b\u7559\u3001\u5404\u79cdELISA\u5b9e\u9a8c\u7b49\u3002\u5b83\u4f53\u79ef\u5c0f\uff0c\u5185\u7f6e8\u4f4d\u6ee4\u5149\u7247\u4f4d\uff0c\u6807\u914d6\u4e2a\u6ee4\u5149\u7247\u3002\u53ea\u9700\u51e0\u79d2\u5373\u53ef\u83b7\u5f97\u7ed3\u679c\uff0c\u5206\u6790\u8f6f\u4ef6\u5168\u4e2d\u6587\u754c\u9762\u64cd\u4f5c\u3002'\n        }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'text',\n        success:function(data1){\n\t\t\tvar data = JSON.parse(data1);\n\t\t\t\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/chart-your-own-course/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::changeSlide": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function changeSlide(){\n    if (!$('.slide:visible').length){\n        $('.slide:first').show();\n    }else{\n        var current = $('.slide:visible');\n        current.hide();\n        if (current.next().length){            \n            current.next().show();\n        }else{\n            $('.slide:first').show();\n        }\n    }    \n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::hide_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function hide_quiz(){    \n    $('#slides').removeClass('open-quiz');\n    $('#quiz').removeClass('open');    \n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::new_search": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function new_search(e){\n    e.preventDefault();\n    $('progress, #next-quest, #prev-quest, #quiz-pages').show();\n    $('#quiz-results, #quiz-cta, #new-search').hide();\n    $('#quiz :radio, #quiz :checkbox').prop('checked', false);\n    $('.quiz-page').removeClass('current');\n    $('.quiz-page:first').addClass('current');\n    $('progress').prop('value', 0);\n    $('progress').text('0/'+$('progress').attr('max'));\n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::next_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function next_page(e){\n    e.preventDefault();    \n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (current_page.find(':radio').length && current_page.find(':checked').length == 0){\n        return;\n    }\n    if (index < $('.quiz-page').length-1){        \n        $('.quiz-page').removeClass('current');\n        current_page.next().addClass('current');\n    }else{\n        //show results\n        select_product();              \n    }\n    //last page check\n    var value = parseInt($('progress').prop('value'));\n    current_page = $('.quiz-page.current');\n    index = $('.quiz-page').index(current_page);\n\n    if (index >= 2 && value <= index){\n        value++;\n        console.log(current_page.find(':checked').length);              \n    }else if (current_page.find(':checked').length){\n        value = index+1;\n    }   \n    $('progress').prop('value', value);\n    $('progress').text(value+'/'+$('progress').attr('max'));  \n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::prev_page": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function prev_page(e){\n    e.preventDefault();\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    if (index > 0){\n        $('.quiz-page').removeClass('current');\n        current_page.prev().addClass('current');\n        \n        var value = index;        \n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }else{\n        hide_quiz();\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::quiz_radio": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function quiz_radio(){\n    var current_page = $('.quiz-page.current');\n    var index = $('.quiz-page').index(current_page);\n    var value = parseInt($('progress').prop('value'));\n\n    if (value <= index){\n        value++;\n        $('progress').prop('value', value);\n        $('progress').text(value+'/'+$('progress').attr('max'));\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::select_product": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function select_product(){\n    var products = {\n      'i3x':{\n          'img':'result-i3x.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7cc3?cmp=70170000000v2cf',\n          'name':'\u9762\u5411\u672a\u6765\u7684\u68c0\u6d4b\u5e73\u53f0SpectraMax i3x \u591a\u529f\u80fd\u9176\u6807\u4eea',\n          'description':'SpectraMax    i3x\u591a\u529f\u80fd\u8bfb\u677f\u673a\u9664\u4e86\u5177\u6709\u5168\u6ce2\u957f\u7684\u5149\u5438\u6536\u3001\u8367\u5149\u3001\u5316\u5b66\u53d1\u5149\u548cFRET\u68c0\u6d4b\u529f\u80fd\u4ee5\u5916\uff0c\u8fd8\u517c\u5bb9\u4e86\u5ba2\u6237\u7aef\u6a21\u5757\u5316\u5347\u7ea7\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4efb\u4f55\u65f6\u95f4\u968f\u610f\u5347\u7ea7\u81f3\u8367\u5149\u504f\u632fFP\u3001HTRF\u3001AlphaScreen\u3001Western Blot\u3001\u7ec6\u80de\u6210\u50cf\u548c\u5e26\u6709\u6ce8\u5c04\u5668\u6a21\u5f0f\u4e0b\u7684\u5feb\u901f\u52a8\u529b\u5b66\u68c0\u6d4b\u7b49\u3002'\n        },\n      'Paradigm':{\n          'img':'SpectraMax Paradigm_cartinsert-TUNE.png', \n          'link':'http://go.moleculardevices.com/l/83942/2016-04-28/4fxy31?cmp=70170000000dHvR',\n          'name':'SpectraMax Paradigm Multi-Mode Microplate Reader',\n          'description':'The SpectraMax Paradigm is a compact, capable, and user-upgradeable microplate reader that enables you to do more, with less.'\n        },\n      'FlexStation3':{\n          'img':'FlexStation3 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jhh?cmp=70170000000v2dE',\n          'name':'\u552f\u4e00\u6574\u5408\u4e868\u621616\u901a\u9053\u6db2\u4f53\u8f6c\u79fb\u7cfb\u7edf\u7684\u4e94\u529f\u80fd\u7684FlexStation 3 \u591a\u529f\u80fd\u9176\u6807\u4eea',\n          'description':'FlexStation 3 \u628aSpectraMax M5e\u548c8\u9053/16\u9053\u7684\u79fb\u6db2\u7cfb\u7edf\u6574\u5408\u5728\u4e00\u8d77\u6210\u4e3a\u4f53\u79ef\u5c0f\u5de7\u529f\u80fd\u5f3a\u5927\u7684\u8bfb\u677f\u673a\u7cfb\u7edf\u3002\u8be5\u6574\u5408\u7cfb\u7edf\u4e0d\u4f46\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u591a\u529f\u80fd\u68c0\u6d4b\u5e73\u53f0\uff0c\u8fd8\u589e\u52a0\u4e86\u6db2\u4f53\u5904\u7406\u7684\u901a\u91cf\u548c\u63d0\u5347\u4e86\u68c0\u6d4b\u751f\u5316\u548c\u7ec6\u80de\u52a8\u529b\u5b66\u5b9e\u9a8c\u7684\u7075\u6d3b\u6027\uff0c\u4f8b\u5982\u8fdb\u884c\u9499\u6d41\u68c0\u6d4b\u548c\u5176\u4ed6\u5feb\u901f\u52a8\u529b\u5b66\u68c0\u6d4b\u3002'\n        },\n      'M-series':{\n          'img':'SpectraMaxM5e_web_image.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jgh?cmp=70170000000v2d4',\n          'name':'SpectraMax M \u7cfb\u5217\u591a\u529f\u80fd\u9176\u6807\u4eea',\n          'description':'SpectraMax   M\u7cfb\u5217\u591a\u529f\u80fd\u9176\u6807\u4eea\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u3001\u53ef\u5347\u7ea7\u7684\u3001\u53cc\u5149\u6805\u8fde\u7eed\u5149\u8c31\u7684\u68c0\u6d4b\u5e73\u53f0\uff0c\u4e3a\u751f\u547d\u79d1\u5b66\u7814\u7a76\u53ca\u836f\u7269\u7814\u53d1\u63d0\u4f9b\u5e7f\u6cdb\u5e94\u7528\u53ca\u9ad8\u6027\u80fd\u8868\u73b0\u3002\u6839\u636e\u7528\u6237\u7684\u7279\u5b9a\u5e94\u7528\u53ca\u9884\u7b97\u9700\u6c42\u6765\u9009\u62e9\u4e0d\u540c\u529f\u80fd\u7684\u9176\u6807\u4eea\u3002\u6240\u6709\u914d\u7f6e\u5747\u63d0\u4f9b\u6bd4\u8272\u76bf\u63d2\u69fd(\u53ef\u8fdb\u884c\u4e09\u79cd\u6a21\u5f0f\u6d4b\u8bfb)\u3001\u7cbe\u786e\u6e29\u5ea6\u63a7\u5236\u3001\u5fae\u5b54\u677f\u632f\u8361\u53ca\u4f7f\u7528SoftMax   Pro\u6570\u636e\u91c7\u96c6\u548c\u5206\u6790\u8f6f\u4ef6\u8fdb\u884c\u7efc\u5408\u6570\u636e\u7ba1\u7406\u3002'\n        },\n      'Plus 384':{\n          'img':'SpectraMaxPlus384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7fm3?cmp=70170000000v2ck',\n          'name':'\u5168\u6ce2\u957f\u3001\u591a\u901a\u9053\u5fae\u5b54\u677f\u68c0\u6d4b\u4eea-SpectraMax Plus 384 \u5149\u5438\u6536\u578b\u9176\u6807\u4eea',\n          'description':'\u53ef\u4ee5\u540c\u65f6\u5b9e\u73b0\u6807\u51c6\u7684\u5206\u5149\u5149\u5ea6\u8ba1\u548c\u5fae\u5b54\u677f\u8bfb\u677f\u673a\u7684\u529f\u80fd\uff0c\u5373\u8bfb\u53d6\u4efb\u610f\u4e00\u79cd\u6807\u51c6\u89c4\u683c\u7684\u6bd4\u8272\u76bf\u621612x75mm\u7684\u8bd5\u7ba1\u300196\u6216384\u5b54\u7684\u5fae\u5b54\u677f\u4e2d\u7684\u6837\u54c1\u3002\u5373\u4f7f\u662f\u66f4\u9ad8\u901a\u91cf\u7684\u68c0\u6d4b\u8981\u6c42\uff0c\u7cfb\u7edf\u4e5f\u80fd\u8f7b\u677e\u7684\u6574\u5408\u5b8c\u6574\u7684\u673a\u68b0\u5316\u64cd\u4f5c\u6765\u914d\u5408\u60a8\u6240\u8981\u7684\u5b9e\u9a8c\u8fdb\u5ea6\u548c\u8981\u6c42\u3002'\n        },\n      '340 PC 384':{\n          'img':'SpectraMax340PC384 TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jjy?cmp=70170000000v2cz',\n          'name':'\u5168\u6ce2\u957f\u3001\u591a\u901a\u9053\u5fae\u5b54\u677f\u68c0\u6d4b\u4eea-340PC384\u5149\u5438\u6536\u578b\u9176\u6807\u4eea',\n          'description':'\u63d0\u4f9b\u68c0\u6d4b\u53ef\u89c1\u5149\u8303\u56f4\u5185\u7684\u5149\u5438\u6536\u68c0\u6d4b\u6240\u9700\u8981\u7684\u4e00\u5207\uff0c\u5305\u62ec\u6e29\u5ea6\u63a7\u5236\u3001\u673a\u68b0\u81c2\u517c\u5bb9\u5e73\u53f0\u548cSoftMax Pro\u6570\u636e\u5206\u6790\u8f6f\u4ef6\u3002\u5176\u5149\u5b66\u8bbe\u8ba1\u771f\u5b9e\u5730\u6a21\u62df\u53cc\u5149\u675f\u5206\u5149\u5149\u5ea6\u8ba1\u3002\u6bcf\u4e2a\u5b54\u6709\u5176\u5404\u81ea\u7684\u6837\u54c1\u5149\u675f\u68c0\u6d4b\u548c\u53c2\u6bd4\u68c0\u6d4b\u30028\u901a\u9053\u7684\u7cfb\u7edf\uff0c\u5305\u542b8\u6761\u6837\u54c1\u68c0\u6d4b\u5149\u675f\u548c8\u6761\u53c2\u6bd4\u5149\u675f\uff0c\u7ed9\u4e88\u51fa\u4f17\u7684\u7cbe\u786e\u5ea6\u548c\u9ad8\u901f\u8bfb\u677f\u65b9\u5f0f\u3002'\n        },\n      'versamax':{\n          'img':'VersaMax TPBG.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jj7?cmp=70170000000v2d9',\n          'name':'\u5168\u6ce2\u957f\u3001\u591a\u901a\u9053\u5fae\u5b54\u677f\u68c0\u6d4b\u4eea-Versamax\u5149\u5438\u6536\u578b\u9176\u6807\u4eea',\n          'description':'\u5185\u7f6e\u957f\u5bff\u547d\u6c19\u95ea\u706f\uff0c\u5149\u6805\u5355\u8272\u5668\u62e5\u6709\u7075\u6d3b\u68c0\u6d4b\u4f18\u52bf\uff0c\u65e0\u9700\u52a0\u914d\u989d\u5916\u7684\u6ee4\u5149\u7247\uff0c\u6ce2\u957f\u8303\u56f4340nm\u81f3850nm\uff0c\u76f8\u5f53\u4e8e\u914d\u5907\u4e86511\u5757\u6ee4\u5149\u7247\u3002\u53ef\u7528\u4e8e\u68c0\u6d4b\u5706\u5e95\u3001\u5e73\u5e95\u548c\u534a\u9762\u79ef\u768496\u5b54\u677f\u68c0\u6d4b\uff0c\u53cc\u6ce2\u957f\u8bfb\u677f\u53ef\u62a5\u544a\u6bcf\u4e2a\u6ce2\u957f\u7684\u5b9e\u9645\u5149\u5438\u6536\u503c\uff0c\u6570\u636e\u53ef\u4ee5\u6839\u636e\u7528\u6237\u7684\u9700\u6c42\u8fdb\u884c\u5206\u6790\u3002'\n        },\n      'Gemini':{\n          'img':'Gemini_0.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-05-19/4mq2tp?cmp=70170000000dHtf',\n          'name':'\u5168\u6ce2\u957f\u3001\u53cc\u5149\u8def-Gemini EM\u8367\u5149\u578b\u9176\u6807\u4eea',\n          'description':'\u91c7\u7528\u53cc\u5149\u6805\u578b\u5355\u8272\u5668\uff0c\u53ef\u4ee5\u68c0\u6d4b\u5404\u79cd\u65b0\u9896\u7684\u8367\u5149\u67d3\u6599\u5206\u5b50\u800c\u65e0\u987b\u53e6\u5916\u8d2d\u4e70\u6602\u8d35\u7684\u6ee4\u5149\u7247\u3002\u65e0\u8bba\u662f\u9488\u5bf9\u5747\u5300\u6eb6\u6db2\u8367\u5149\u4fe1\u53f7\u7684\u68c0\u6d4b\u6216\u8005\u662f\u8d34\u58c1\u7ec6\u80de\u8367\u5149\u5f3a\u5ea6\u7684\u5224\u65ad\uff0c\u5176\u5177\u6709\u7684\u9876\u90e8\u3001\u5e95\u90e8\u53cc\u8367\u5149\u5149\u8def\u90fd\u53ef\u4ee5\u8f7b\u677e\u5e94\u5bf9\u3001\u81ea\u7531\u5207\u6362\u3002'\n        },\n      'SpectraMax L':{\n          'img':'SpectraMaxL-Lumi+ TPBG_edit.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-09-30/5w7jgr?cmp=70170000000v2cp',\n          'name':'\u8d85\u7075\u654f\u3001\u9ad8\u901a\u91cf\u7684-SpectraMax L\u5316\u5b66\u53d1\u5149\u578b\u9176\u6807\u4eea',\n          'description':'\u72ec\u7279\u5149\u8def\u8bbe\u8ba1\u4ee5\u53ca\u6807\u914d\u6709\u5355\u5149\u5b50\u8ba1\u6570PMT\u5728\u5206\u6790\u7269\u7684\u68c0\u6d4b\u548c\u57fa\u56e0\u66f4\u4f4e\u6c34\u5e73\u8868\u8fbe\u68c0\u6d4b\u4e0a\u63d0\u4f9b\u51fa\u4f17\u7684\u4fe1\u566a\u6bd4\u7387\uff0c\u591a\u901a\u9053\u81ea\u52a8\u6ce8\u5c04\u5668\u53ef\u4ee5\u6ee1\u8db3\u4e0d\u540c\u5b9e\u9a8c\u7684\u9700\u6c42\uff0c\u5982\u5316\u5b66\u53d1\u5149\u4e2d\u5feb\u53cd\u5e94\u548c\u6162\u53cd\u5e94\uff0c\u5305\u62ec\u53cc\u8367\u5149\u7d20\u9176\u548cY\u5576\u8102\u5feb\u53cd\u5e94\u7b49\u3002'\n        },\n      'Emax Plus':{\n          'img':'EMax_Plus-1_NoBckgd_new.png',\n          'link':'http://go.moleculardevices.com/l/83942/2016-11-01/66klf5?cmp=70170000000v76E',\n          'name':'\u9ad8\u6027\u4ef7\u6bd4\u6ee4\u5149\u7247\u5149\u5438\u6536\u578b\u9176\u6807\u4eea',\n          'description':'Molecular Devices\u65b0\u51fa\u54c1\u7684CMax Plus\u662f\u4e00\u6b3e\u4e13\u95e8\u4e3a\u79d1\u7814\u5b9e\u9a8c\u5ba4\u91cf\u8eab\u6253\u9020\u7684\u7075\u6d3b\u4e14\u5f3a\u5927\u7684\u5fae\u5b54\u677f\u8bfb\u677f\u673a\uff0c\u53ef\u8f6f\u4ef6\u4e0a\u81ea\u5b9a\u4e49\u591a\u79cd\u68c0\u6d4b\u6a21\u677f\u53ca\u7ed9\u51fa\u7ed3\u679c\u8bc4\u4ef7\u3002\u4eea\u5668\u652f\u6301\u4e0d\u540c\u7c7b\u578b\u768496\u5b54\u677f\uff0c\u5e94\u7528\u7684\u8986\u76d6\u8303\u56f4\u5e7f\u6cdb\uff0c\u5305\u62ec\u86cb\u767d\u5b9a\u91cf\u3001\u7ec6\u80de\u6d3b\u529b\u3001\u519c\u836f\u6b8b\u7559\u3001\u5404\u79cdELISA\u5b9e\u9a8c\u7b49\u3002\u5b83\u4f53\u79ef\u5c0f\uff0c\u5185\u7f6e8\u4f4d\u6ee4\u5149\u7247\u4f4d\uff0c\u6807\u914d6\u4e2a\u6ee4\u5149\u7247\u3002\u53ea\u9700\u51e0\u79d2\u5373\u53ef\u83b7\u5f97\u7ed3\u679c\uff0c\u5206\u6790\u8f6f\u4ef6\u5168\u4e2d\u6587\u754c\u9762\u64cd\u4f5c\u3002'\n        }\n    };\n    \n    $.ajax({\n        //url:'data/product_selector.json',\n        url:'data/product_selector_old.json',\n        dataType:'text',\n        success:function(data1){\n\t\t\tvar data = JSON.parse(data1);\n\t\t\t\n            var step1 = $('[name=\"quest1\"]:checked').val();\n            var step2 = $('[name=\"quest2\"]:checked').val();\n            /*var step3 = $('[name=\"quest3[]\"]:checked').val();\n            if (step3 == null || step3 == ''){\n                step3 = 0;\n            }\n            var step4 = [];\n            $('[name=\"quest4[]\"]:checked').each(function(){\n                step4.push($(this).val());\n            });*/\n            var step3 = [];\n            $('[name=\"quest3[]\"]:checked').each(function(){\n                step3.push($(this).val());\n            });\n                     \n            console.log(step1);\n            console.log(step2);\n            console.log(step3);            \n            /*var selections = data[step1][step2][step3].selections;\n            console.log(selections);*/\n            var product_result;\n            \n            /*$.each(selections, function(n, product){\n               var matches = 0;\n               $.each(step4, function(m, sel){\n                if (product.selection.indexOf(sel) != -1){\n                   matches++;\n                }    \n               });\n               \n               if (matches >= step4.length){\n                   product_result = product.result;\n                   return false;\n               }\n            });*/\n            var results = [];\n            var lowest = 99;\n            if (step3.length == 0){\n                step3 = [0];\n            }\n            $.each(step3, function(n, s){\n                var key = data[step1][step2][s].selections[0].result;\n                results.push(key);\n                var index = Object.keys(products).indexOf(key);\n                if (index < lowest){\n                    lowest = index;\n                    product_result = key;\n                }\n            });\n            \n            console.log(results);\n            \n            console.log(product_result);\n            \n            \n            $('progress, #next-quest, #prev-quest, #quiz-pages').hide();\n            $('#quiz-results, #quiz-cta, #new-search').show();\n            var product_info = products[product_result];\n            if (product_info != null){\n                $('#product-pic').attr('src','img/'+product_info.img);\n                $('#quiz-cta').attr('href', product_info.link);\n                $('#result-spotlight h3').text(product_info.name);\n                $('#result-spotlight p').text(product_info.description);\n            }  \n        }\n    })\n    \n    \n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::show_quiz": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function show_quiz(e){\n    e.preventDefault();\n    $('#slides').addClass('open-quiz');\n    $('#quiz').addClass('open');\n    $('#quiz-cta, #new-search').hide();\n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::single_check": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function single_check(){\n    if ($(this).is(':checked')){\n        $(this).parents('.single-check').find(':checkbox').not($(this)).prop('checked', false);\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::toggle_menu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function toggle_menu(e){\n    e.preventDefault();\n    $('.main-nav-menu').toggleClass('open-menu');\n    if ($('.main-nav-menu').hasClass('open-menu')){\n        var button = '<span class=\"touch-button fa fa-chevron-circle-down active\"></span>';\n        $('.main-nav-menu ul').after(button);\n    }else{\n        $('.touch-button').remove();\n    }\n}",
            "score": -1.0
        },
        "campaigns/zh/js/functions.js::toggle_submenu": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/functions.js",
            "merged_function": "function toggle_submenu(e){\n    var menu = $(this).prev('ul');    \n    $(menu).toggleClass('open');\n}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "B=function(a,b){return a===b&&(l=!0),0}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Ca(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Cb(a){return n.attr(a,\"class\")||\"\"}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Da(a){return a.type=(null!==n.find.attr(a,\"type\"))+\"/\"+a.type,a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}\"script\"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):\"object\"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):\"input\"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):\"option\"===c?b.defaultSelected=b.selected=a.defaultSelected:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,\"script\"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,\"script\"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||\"\")&&!n._data(g,\"globalEval\")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||\"\").replace(za,\"\")));k=e=null}return a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,\"script\")),d.parentNode.removeChild(d));return a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::J": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::K": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function K(){(d.addEventListener||\"load\"===a.event.type||\"complete\"===d.readyState)&&(J(),n.ready())}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::La": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::M": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "M=function(a){var b=n.noData[(a.nodeName+\" \").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute(\"classid\")===b}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),\"none\"!==c&&c||(Ja=(Ja||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function P(a,b,c){if(void 0===c&&1===a.nodeType){var d=\"data-\"+b.replace(O,\"-$1\").toLowerCase();if(c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;\n}return c}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Q(a){var b;for(b in a)if((\"data\"!==b||!n.isEmptyObject(a[b]))&&\"toJSON\"!==b)return!1;return!0}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||\"string\"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),\"object\"!=typeof b&&\"function\"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),\"string\"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(\" \")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Tb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Tb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d.charAt(0)?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Ub": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Vb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "W=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Wb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+\" \"+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::X": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Xb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Yb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Yb(a){return a.style&&a.style.display||n.css(a,\"display\")}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::Zb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function Zb(a){while(a&&1===a.nodeType){if(\"none\"===Yb(a)||\"hidden\"===a.type)return!0;a=a.parentNode}return!1}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::bb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "c=function(a){n.event.simulate(b,a.target,n.event.fix(a))}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ca": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::cb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&W(d)&&(f[g]=n._data(d,\"olddisplay\",Ma(d.nodeName)))):(e=W(d),(c&&\"none\"!==c||!e)&&n._data(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "d=function(a){var b=a.stop;delete a.stop,b(c)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::da": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "da=function(){m()}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::db": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||\"px\"):b}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::dc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)dc(a+\"[\"+e+\"]\",b[e],c,d)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ea": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ea(a,b){var c,d,e=0,f=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::eb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function eb(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+V[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+V[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+V[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+V[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+V[f]+\"Width\",!0,e)));return g}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::fa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::fb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function fb(b,c,e){var f=!0,g=\"width\"===c?b.offsetWidth:b.offsetHeight,h=Ra(b),i=l.boxSizing&&\"border-box\"===n.css(b,\"boxSizing\",!1,h);if(d.msFullscreenElement&&a.top!==a&&b.getClientRects().length&&(g=Math.round(100*b.getBoundingClientRect()[c])),0>=g||null==g){if(g=Sa(b,c,h),(0>g||null==g)&&(g=b.style[c]),Oa.test(g))return g;f=i&&(l.boxSizingReliable()||g===b.style[c]),g=parseFloat(g)||0}return g+eb(b,c,e||(i?\"border\":\"content\"),f,h)+\"px\"}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "g=function(){n.dequeue(a,b)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ga": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::gb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ha": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ha(a){return a[u]=!0,a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::hc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function hc(){try{return new a.XMLHttpRequest}catch(b){}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ia": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ic": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ic(){try{return new a.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(b){}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ja": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText=\"-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b=\"1%\"!==(l||{}).top,h=\"2px\"===(l||{}).marginLeft,e=\"4px\"===(l||{width:\"4px\"}).width,j.style.marginRight=\"50%\",c=\"4px\"===(l||{marginRight:\"4px\"}).marginRight,k=j.appendChild(d.createElement(\"div\")),k.style.cssText=j.style.cssText=\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",k.style.marginRight=k.style.width=\"0\",j.style.width=\"1px\",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display=\"none\",f=0===j.getClientRects().length,f&&(j.style.display=\"\",j.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",k=j.getElementsByTagName(\"td\"),k[0].style.cssText=\"margin:0;border:0;padding:0;display:none\",f=0===k[0].offsetHeight,f&&(k[0].style.display=\"\",k[1].style.display=\"none\",f=0===k[0].offsetHeight)),m.removeChild(i)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ka": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::la": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::lb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ma": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::mb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d[\"margin\"+c]=d[\"padding\"+c]=a;return b&&(d.opacity=d.width=a),d}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::mc": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "n=function(a,b){return new n.fn.init(a,b)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::na": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::nb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::oa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ob": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?n._data(a,\"olddisplay\")||Ma(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(l.inlineBlockNeedsLayout&&\"inline\"!==Ma(a.nodeName)?p.zoom=1:p.display=\"inline-block\")),c.overflow&&(p.overflow=\"hidden\",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(q?\"hide\":\"show\")){if(\"show\"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))\"inline\"===(\"none\"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?\"hidden\"in r&&(q=r.hidden):r=n._data(a,\"fxshow\",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,\"fxshow\");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::pa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function pa(){}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::pb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::qa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::qb": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "r=function(a,b){return b.toUpperCase()}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ra": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::sa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ta": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::ua": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::va": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::wa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::xa": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||\"\",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(n.lastModified[f]=x),x=w.getResponseHeader(\"etag\"),x&&(n.etag[f]=x)),204===b||\"HEAD\"===l.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+\"\",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?\"ajaxSuccess\":\"ajaxError\",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger(\"ajaxComplete\",[w,l]),--n.active||n.event.trigger(\"ajaxStop\")))}",
            "score": -1.0
        },
        "campaigns/zh/js/jquery-1.12.3.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "campaigns/zh/js/jquery-1.12.3.min.js",
            "merged_function": "function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::createCoveoFields": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "function createCoveoFields(index, icons) {\n  console.log('Procesing data...');\n  index.data.forEach((item) => {\n    if (isNotEmpty(item.identifier)) {\n      INDENTIFIER_MAPPING.set(item.identifier, item);\n    }\n\n    const lastModified = new Date(0);\n    lastModified.setUTCSeconds(isNotEmpty(item.date) ? item.date : item.lastModified);\n    item.lastmod = lastModified.toISOString();\n\n    item.path = isNotEmpty(item.gatedURL) ? item.gatedURL : item.internal_path;\n    if (!item.path.startsWith('http')) {\n      const url = new URL(BASE_URL);\n      url.pathname = item.path;\n      item.path = url.toString();\n    }\n\n    item.description = isNotEmpty(item.internal_description)\n      ? item.internal_description\n      : item.title;\n\n    item.filetype = item.internal_path.endsWith('.pdf') ? 'pdf' : 'html';\n\n    item.md_rfq = item.familyid && item.familyid !== '0'\n      ? `${BASE_URL}/quote-request?pid=${item.familyid}`\n      : '';\n\n    // image computation must happen before type remapping\n    const coveoImage = item.type === 'Product'\n      ? isNotEmpty(item.thumbnail) ? item.thumbnail : item.image\n      : icons[item.type] || '/images/resource-icons/document.png';\n\n    const TYPE_REMAP_PREFIXES = {\n      '/en/assets/app-note/': 'Application Note',\n      '/en/assets/ebook/': 'eBook',\n      '/en/assets/scientific-posters/': 'Scientific Poster',\n      '/en/assets/tutorials-videos/': 'Videos & Webinars',\n      '/en/assets/customer-breakthrough/': 'Customer Breakthrough',\n      '/en/assets/brochures/': 'Brochure',\n      '/en/assets/presentations': 'Presentations',\n    };\n\n    const TYPE_REMAP = {\n      'Videos and Webinars': 'Videos & Webinars',\n      'Publication': 'Publications',\n      'homepage': 'home',\n      'Video Gallery': 'video-gallery',\n      'Integrity and Compliance': 'page',\n      'About Us': 'multi_pages',\n      '/applications': 'Application',\n      '/citations': 'Citation',\n      '/leadership': 'multi_pages',\n      '/customer-breakthroughs': 'customer-breakthroughs',\n      '/events': 'Event',\n      '/product-finder': 'product-finder',\n      '/quote-request': 'quote-request',\n      '/search-results': 'resources-search',\n      '/service-support': 'Services and Support',\n      '/products/microplate-readers/softmax-pro-insider': 'page',\n    };\n\n    Object.keys(TYPE_REMAP_PREFIXES).forEach((prefix) => {\n      if (item.internal_path.startsWith(prefix)) {\n        item.type = TYPE_REMAP_PREFIXES[prefix];\n      }\n    });\n    item.type = TYPE_REMAP[item.internal_path] || TYPE_REMAP[item.type] || item.type;\n    item.type = isNotEmpty(item.type) ? item.type : 'page';\n\n    const isResource = RESOURCES.includes(item.type);\n    item.md_pagetype = isResource ? 'Resource' : (item.type.includes('Category') ? 'Category' : item.type);\n    item.md_contenttype = isResource ? item.type : '';\n\n    const coveoImageURL = new URL(coveoImage, BASE_URL);\n    coveoImageURL.search = '';\n\n    item.md_img = coveoImageURL.toString();\n\n    if (item.type === 'Product' && isNotEmpty(item.category)) {\n      const result = [item.category];\n      isNotEmpty(item.subcategory) && result.push(`${item.category}|${item.subcategory}`);\n      isNotEmpty(item.subcategory) && result.push(`${item.category}|${item.subcategory}|${itemSearchTitle(item)}`);\n      item.mdproductsdatacategory = result.join(';');\n    }\n\n    if (item.md_pagetype === 'Resource' || item.path.endsWith('.pdf')) {\n      item.md_title = itemSearchTitle(item);\n    }\n\n    item.priority = PRIORITYMAPPING[item.internal_path] || PRIORITYMAPPING[item.md_pagetype] || 0.5;\n  });\n}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::createCoveoFieldsFromRelatedData": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "function createCoveoFieldsFromRelatedData(index) {\n  index.data.forEach((item) => {\n    if (item.md_pagetype === 'Resource') {\n      // set related product info\n      if (isNotEmpty(item.relatedProducts)) {\n        const relatedProducts = item.relatedProducts.split(',')\n          .map((identifier) => INDENTIFIER_MAPPING.get(identifier.trim()))\n          .filter((product) => !!product);\n\n        item.md_product = relatedProducts.map(itemSearchTitle).join(';');\n        item.mdproductsdatacategory = relatedProducts\n          .map((product) => product.mdproductsdatacategory)\n          .filter((category) => !!category)\n          .join(';');\n      }\n\n      // set related application info\n      if (isNotEmpty(item.relatedApplications)) {\n        item.md_application = item.relatedApplications.split(',')\n          .map((identifier) => INDENTIFIER_MAPPING.get(identifier.trim()))\n          .filter((application) => !!application)\n          .map(itemSearchTitle)\n          .join(';');\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::getCoveoIcons": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "async function getCoveoIcons() {\n  return new Promise((resolve) => {\n    resolve({\n      'Data Sheet': '/images/resource-icons/data-sheet.png',\n      COA: '/images/resource-icons/coa.png',\n      'Scientific Poster': '/images/resource-icons/scientific-poster.png',\n      Event: '/images/resource-icons/event.png',\n      'User Guide': '/images/resource-icons/brochure.png',\n      Legal: '/images/resource-icons/document.png',\n      'Technical Guide': '/images/resource-icons/brochure.png',\n      eBook: '/images/resource-icons/ebook.png',\n      Brochure: '/images/resource-icons/brochure.png',\n      'Customer Breakthrough': '/images/resource-icons/customer-breakthrough.png',\n      SDS: '/images/resource-icons/sds.png',\n      Application: '/images/resource-icons/application-note.png',\n      Blog: '/images/resource-icons/blog.png',\n      'Videos and Webinars': '/images/resource-icons/videos-and-webinars.png',\n      Publication: '/images/resource-icons/document.png',\n      News: '/images/resource-icons/document.png',\n      Flyer: '/images/resource-icons/flyer.png',\n      'Product Insert': '/images/resource-icons/document.png',\n      Citation: '/images/resource-icons/citation.png',\n      'Training Material': '/images/resource-icons/document.png',\n      'Interactive Demo': '/images/resource-icons/interactive-demo.png',\n      Technology: '/images/resource-icons/technology.png',\n      Infographic: '/images/resource-icons/infographic.png',\n      'White Paper': '/images/resource-icons/document.png',\n      Presentations: '/images/resource-icons/presentations.png',\n      Newsletter: '/images/resource-icons/document.png',\n      'Application Note': '/images/resource-icons/application-note.png',\n      'Cell Counter': '/images/resource-icons/document.png',\n      'Declaration of Conformity': '/images/resource-icons/document.png',\n      Category: '/images/resource-icons/technology.png',\n      homepage: '/images/resource-icons/technology.png',\n      'Video Gallery': '/images/resource-icons/technology.png',\n      'Integrity and Compliance': '/images/resource-icons/technology.png',\n    }); // TODO get from sheet\n  });\n}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::getData": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "async function getData() {\n  return new Promise((resolve) => {\n    https.get('https://main--moleculardevices--hlxsites.hlx.live/query-index.json?sheet=coveo-sitemap-source&limit=7000', (res) => {\n      const data = [];\n\n      res.on('data', (chunk) => {\n        data.push(chunk);\n      });\n\n      res.on('end', () => {\n        const entries = JSON.parse(Buffer.concat(data).toString());\n        console.log(`Successfully retrieved ${entries.data.length} items from index`);\n        resolve(entries);\n      });\n    }).on('error', (err) => {\n      console.log('Error: ', err.message);\n    });\n  });\n}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::isNotEmpty": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "function isNotEmpty(field) {\n  return field && field !== '0' && field !== '#N/A';\n}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::itemSearchTitle": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "function itemSearchTitle(item) {\n  if (isNotEmpty(item.searchTitle)) {\n    return item.searchTitle;\n  }\n\n  if (isNotEmpty(item.h1)) {\n    return item.h1;\n  }\n\n  if (isNotEmpty(item.title)) {\n    return item.title;\n  }\n\n  return '';\n}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::main": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "async function main() {\n  const index = await getData();\n  const icons = await getCoveoIcons();\n\n  preprocess(index);\n  createCoveoFields(index, icons);\n  createCoveoFieldsFromRelatedData(index);\n  writeCoveoSitemapXML(index);\n}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::preprocess": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "function preprocess(index) {\n  index.data.forEach((item) => {\n    // There are some technology pages that should also be indexed as applications\n    if (item.type === 'Technology' && isNotEmpty(item.category)) {\n      const deepClone = JSON.parse(JSON.stringify(item));\n      deepClone.type = 'Application';\n      deepClone.internal_path = deepClone.internal_path.replace('/technology/', '/applications/');\n      index.data.push(deepClone);\n    }\n  });\n}",
            "score": -1.0
        },
        "coveo/generate-coveo-sitemap.js::writeCoveoSitemapXML": {
            "changes_after_merge": 0,
            "file_path": "coveo/generate-coveo-sitemap.js",
            "merged_function": "async function writeCoveoSitemapXML(index) {\n  index.data.sort((item1, item2) => item1.priority - item2.priority);\n\n  const EMPTY = '<![CDATA[ ]]>';\n  const xmlData = [];\n  xmlData.push('<urlset xmlns=\"http://www.google.com/schemas/sitemap/0.84\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:coveo=\"http://www.coveo.com/schemas/metadata\" xsi:schemaLocation=\"http://www.google.com/schemas/sitemap/0.84 http://www.google.com/schemas/sitemap/0.84/sitemap.xsd\">');\n  let count = 0;\n\n  index.data.forEach((item) => {\n    if (item.internal_path.startsWith('/products/series-products')) return;\n    if (item.internal_path.startsWith('/fragments')) return;\n\n    if (item.type === 'Landing Page') return;\n    const excludedPaths = [\n      '/nav',\n      '/nav-landing-page',\n      '/footer',\n      '/quote-request-success',\n      '/contact-search',\n      '/archived-events',\n      '/video-gallery-landing/de',\n      '/video-gallery-landing/fr',\n      '/cp-request',\n    ];\n\n    if (excludedPaths.includes(item.internal_path)) {\n      return;\n    }\n\n    xmlData.push('  <url>');\n    xmlData.push(`    <loc>${item.path}</loc>`);\n    xmlData.push(`    <lastmod>${item.lastmod}</lastmod>`);\n    xmlData.push('    <changefreq>daily</changefreq>');\n    xmlData.push(`    <priority>${item.priority}</priority>`);\n    xmlData.push('    <coveo:metadata>');\n    item.md_title && xmlData.push(`      <md_title><![CDATA[ ${itemSearchTitle(item)} ]]></md_title>`);\n    xmlData.push(`      <md_contenttype><![CDATA[ ${item.md_contenttype || ''} ]]></md_contenttype>`);\n    xmlData.push(`      <md_pagetype>${item.md_pagetype || EMPTY}</md_pagetype>`);\n    xmlData.push(`      <md_img>${item.md_img}</md_img>`);\n    xmlData.push(`      <md_product><![CDATA[ ${item.md_product || ''}  ]]></md_product>`);\n    xmlData.push(`      <md_application><![CDATA[ ${item.md_application || ''} ]]></md_application>`);\n    xmlData.push(`      <mdproductsdatacategory><![CDATA[ ${item.mdproductsdatacategory || ''} ]]></mdproductsdatacategory>`); // TODO\n    item.md_rfq && xmlData.push(`      <md_rfq>${item.md_rfq}</md_rfq>`);\n    xmlData.push(`      <md_country><![CDATA[ ${isNotEmpty(item.md_country) ? item.md_country : ''} ]]></md_country>`); // TODO\n    xmlData.push(`      <md_lang><![CDATA[ ${isNotEmpty(item.md_lang) ? item.md_lang : ''} ]]></md_lang>`); // TODO\n    xmlData.push(`      <md_source><![CDATA[ ${isNotEmpty(item.md_source) ? item.md_source : ''} ]]></md_source>`); // TODO\n    xmlData.push('    </coveo:metadata>');\n    xmlData.push('    <md_pagesort>1</md_pagesort>');\n    xmlData.push('  </url>');\n\n    count += 1;\n  });\n\n  xmlData.push('</urlset>');\n\n  try {\n    fs.writeFileSync('coveo-xml.xml', xmlData.join('\\n'));\n    console.log(`Successfully wrote ${count} items to coveo xml`);\n  } catch (err) {\n    console.error(err);\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::LoadDriftWidget": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "function LoadDriftWidget() {\n    var t = window.driftt = window.drift = window.driftt || [];\n    if (!t.init) {\n        if (t.invoked) return void (window.console && console.error && console.error(\"Drift snippet included twice.\"));\n        t.invoked = !0, t.methods = [ \"identify\", \"config\", \"track\", \"reset\", \"debug\", \"show\", \"ping\", \"page\", \"hide\", \"off\", \"on\" ], \n        t.factory = function(e) {\n        return function() {\n            var n = Array.prototype.slice.call(arguments);\n            return n.unshift(e), t.push(n), t;\n        };\n        }, t.methods.forEach(function(e) {\n        t[e] = t.factory(e);\n        }), t.load = function(t) {\n        var e = 3e5, n = Math.ceil(new Date() / e) * e, o = document.createElement(\"script\");\n        o.type = \"text/javascript\", o.async = !0, o.crossorigin = \"anonymous\", o.src = \"https://js.driftt.com/include/\" + n + \"/\" + t + \".js\";\n        var i = document.getElementsByTagName(\"script\")[0];\n        i.parentNode.insertBefore(o, i);\n    };\n    }\n    drift.SNIPPET_VERSION = '0.3.1';\n    drift.load('pyupvvckemp9');\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::loadGTM": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function loadGTM() {\n  const scriptTag = document.createElement('script');\n  scriptTag.innerHTML = `\n  // googleTagManager\n  (function (w, d, s, l, i) {\n      w[l] = w[l] || [];\n      w[l].push({\n          'gtm.start':\n              new Date().getTime(), event: 'gtm.js'\n      });\n      var f = d.getElementsByTagName(s)[0],\n          j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';\n      j.async = true;\n      j.src =\n          'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n      f.parentNode.insertBefore(j, f);\n  })(window, document, 'script', 'dataLayer', 'GTM-MTQV2H');\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('set', {\n      'cookie_flags': 'SameSite=None;Secure'\n  });\n  `;\n  document.head.prepend(scriptTag);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::loadUserData": {
            "changes_after_merge": 7,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function loadUserData() {\n  const attrCountryCode = 'country_code';\n  if (getCookie(attrCountryCode)) return;\n  fetch('https://api.ipstack.com/check?access_key=fa0c43f899d86d91bf5aa529a5774566', {\n    /* Referrer Policy is set to strict-origin-when-cross-origin by default\n       to avoid data leaking of private information.\n       See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy#directives\n       Set mode to 'cors' to allow cross-origin requests, see https://developer.mozilla.org/en-US/docs/Web/API/Request/mode.\n    */\n    mode: 'cors',\n  }).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(response);\n  }).then((data) => {\n    if (!data.success) {\n      const { error } = data;\n      // eslint-disable-next-line no-console\n      console.warn(`Error code ${error.code} occured while loading user information.`, `${error.type}: ${error.info}`);\n    }\n    if (data[attrCountryCode]) {\n      setCookie(attrCountryCode, data[attrCountryCode], 30);\n    }\n  }).catch((err) => {\n    // eslint-disable-next-line no-console\n    console.warn('Could not load user information.', err);\n  });\n}",
            "score": -0.6744186046511628
        },
        "scripts/dom-helpers.js::a": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function a(...items) { return domEl('a', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::article": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function article(...items) { return domEl('article', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::button": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function button(...items) { return domEl('button', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::div": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function div(...items) { return domEl('div', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::domEl": {
            "changes_after_merge": 1,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function domEl(tag, ...items) {\n  const element = document.createElement(tag);\n\n  if (!items || items.length === 0) return element;\n\n  if (!(items[0] instanceof Element || items[0] instanceof HTMLElement) && typeof items[0] === 'object') {\n    const [attributes, ...rest] = items;\n    items = rest;\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      if (!key.startsWith('on')) {\n        element.setAttribute(key, Array.isArray(value) ? value.join(' ') : value);\n      } else {\n        element.addEventListener(key.substring(2), value);\n      }\n    });\n  }\n\n  items.forEach((item) => {\n    item = item instanceof Element || item instanceof HTMLElement\n      ? item\n      : document.createTextNode(item);\n    element.appendChild(item);\n  });\n\n  return element;\n}",
            "score": -0.9534883720930233
        },
        "scripts/dom-helpers.js::fieldset": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function fieldset(...items) { return domEl('fieldset', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::form": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function form(...items) { return domEl('form', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h1": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h1(...items) { return domEl('h1', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h2": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h2(...items) { return domEl('h2', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h3": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h3(...items) { return domEl('h3', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h4": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h4(...items) { return domEl('h4', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h5": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h5(...items) { return domEl('h5', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h6": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h6(...items) { return domEl('h6', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::i": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function i(...items) { return domEl('i', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::iframe": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function iframe(...items) { return domEl('iframe', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::img": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function img(...items) { return domEl('img', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::input": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function input(...items) { return domEl('input', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::label": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function label(...items) { return domEl('label', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::li": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function li(...items) { return domEl('li', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::nav": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function nav(...items) { return domEl('nav', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::ol": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function ol(...items) { return domEl('ol', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::p": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function p(...items) { return domEl('p', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::span": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function span(...items) { return domEl('span', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::strong": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function strong(...items) { return domEl('strong', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::ul": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function ul(...items) { return domEl('ul', ...items); }",
            "score": -1.0
        },
        "scripts/ffetch.js::all": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function all(upstream) {\n  const result = [];\n  for await (const entry of upstream) {\n    result.push(entry);\n  }\n  return result;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::assignOperations": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function assignOperations(generator, context) {\n  // operations that return a new generator\n  function createOperation(fn) {\n    return (...rest) =>\n      assignOperations(fn.apply(null, [generator, context, ...rest]), context);\n  }\n  const operations = {\n    skip: createOperation(skip),\n    limit: createOperation(limit),\n    slice: createOperation(slice),\n    map: createOperation(map),\n    filter: createOperation(filter),\n    follow: createOperation(follow),\n  };\n\n  // functions that either return the upstream generator or no generator at all\n  const functions = {\n    chunks: chunks.bind(null, generator, context),\n    all: all.bind(null, generator, context),\n    first: first.bind(null, generator, context),\n    withFetch: withFetch.bind(null, generator, context),\n    withHtmlParser: withHtmlParser.bind(null, generator, context),\n    sheet: sheet.bind(null, generator, context),\n  };\n\n  return Object.assign(generator, operations, functions);\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::chunks": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function chunks(upstream, context, chunks) {\n  context.chunks = chunks;\n  return upstream;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::createOperation": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function createOperation(fn) {\n    return (...rest) =>\n      assignOperations(fn.apply(null, [generator, context, ...rest]), context);\n  }",
            "score": -1.0
        },
        "scripts/ffetch.js::fetch": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "fetch = (...rest) => window.fetch.apply(null, rest)",
            "score": -1.0
        },
        "scripts/ffetch.js::ffetch": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function ffetch(url) {\n  let chunks = 255;\n  const fetch = (...rest) => window.fetch.apply(null, rest);\n  const parseHtml = (html) => new window.DOMParser().parseFromString(html, 'text/html');\n\n  try {\n    if (\n      'connection' in window.navigator &&\n      window.navigator.connection.saveData === true\n    ) {\n      // request smaller chunks in save data mode\n      chunks = 64;\n    }\n  } catch (e) {\n    /* ignore */\n  }\n\n  const context = { chunks, fetch, parseHtml };\n  const generator = request(url, context);\n\n  return assignOperations(generator, context);\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::filter": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* filter(upstream, context, fn) {\n  for await (const entry of upstream) {\n    if (fn(entry)) {\n      yield entry;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::first": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function first(upstream) {\n  /* eslint-disable-next-line no-unreachable-loop */\n  for await (const entry of upstream) {\n    return entry;\n  }\n  return null;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::follow": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function follow(upstream, context, name, maxInFlight = 5) {\n  const { fetch, parseHtml } = context;\n  return map(\n    upstream,\n    context,\n    async (entry) => {\n      const value = entry[name];\n      if (value) {\n        const resp = await fetch(value);\n        return {\n          ...entry,\n          [name]: resp.ok ? parseHtml(await resp.text()) : null,\n        };\n      }\n      return entry;\n    },\n    maxInFlight,\n  );\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::limit": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* limit(upstream, context, limit) {\n  let yielded = 0;\n  for await (const entry of upstream) {\n    yield entry;\n    yielded += 1;\n    if (yielded === limit) {\n      return;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::map": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* map(upstream, context, fn, maxInFlight = 5) {\n  const promises = [];\n  for await (let entry of upstream) {\n    promises.push(fn(entry));\n    if (promises.length === maxInFlight) {\n      for (entry of promises) {\n        entry = await entry;\n        if (entry) yield entry;\n      }\n      promises.splice(0, promises.length);\n    }\n  }\n  for (let entry of promises) {\n    entry = await entry;\n    if (entry) yield entry;\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::parseHtml": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "parseHtml = (html) => new window.DOMParser().parseFromString(html, 'text/html')",
            "score": -1.0
        },
        "scripts/ffetch.js::request": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* request(url, context) {\n  const { chunks, sheet, fetch } = context;\n  for (let offset = 0, total = Infinity; offset < total; offset += chunks) {\n    const params = new URLSearchParams(`offset=${offset}&limit=${chunks}`);\n    if (sheet) params.append(`sheet`, sheet);\n    const resp = await fetch(`${url}?${params.toString()}`);\n    if (resp.ok) {\n      const json = await resp.json();\n      total = json.total;\n      for (const entry of json.data) yield entry;\n    } else {\n      return;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::sheet": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function sheet(upstream, context, sheet) {\n  context.sheet = sheet;\n  return upstream;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::skip": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "async function* skip(upstream, context, skip) {\n  let skipped = 0;\n  for await (const entry of upstream) {\n    if (skipped < skip) {\n      skipped += 1;\n    } else {\n      yield entry;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::slice": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function slice(upstream, context, from, to) {\n  return limit(skip(upstream, context, from), context, to - from);\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::withFetch": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function withFetch(upstream, context, fetch) {\n  context.fetch = fetch;\n  return upstream;\n}",
            "score": -1.0
        },
        "scripts/ffetch.js::withHtmlParser": {
            "changes_after_merge": 0,
            "file_path": "scripts/ffetch.js",
            "merged_function": "function withHtmlParser(upstream, context, parseHtml) {\n  context.parseHtml = parseHtml;\n  return upstream;\n}",
            "score": -1.0
        },
        "scripts/header-utils.js::loadHeader": {
            "changes_after_merge": 0,
            "file_path": "scripts/header-utils.js",
            "merged_function": "function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  loadBlock(headerBlock);\n  return fetchAndStyleHeaderMegamenus(headerBlock);\n}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::A": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function A(a,b){function c(){u(\"Send Page Info\",\"pageInfo:\"+z(),a,b)}x(c,32)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::B": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function B(){function a(a,b){function c(){P[f]?A(P[f].iframe,f):d()}[\"scroll\",\"resize\"].forEach(function(d){h(f,a+d+\" listener for sendPageInfo\"),b(window,d,c)})}function d(){a(\"Remove \",c)}function e(){a(\"Add \",b)}var f=V;e(),P[f]&&(P[f].stopPageInfo=d)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::C": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function C(){P[V]&&P[V].stopPageInfo&&(P[V].stopPageInfo(),delete P[V].stopPageInfo)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::D": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function D(){var a=!0;return null===U.iframe&&(j(V,\"IFrame (\"+U.id+\") not found\"),a=!1),a}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::E": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function E(a){var b=a.getBoundingClientRect();return o(V),{x:Math.floor(Number(b.left)+Number(M.x)),y:Math.floor(Number(b.top)+Number(M.y))}}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::F": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function F(a){function b(){M=f,G(),h(V,\"--\")}function c(){return{x:Number(U.width)+e.x,y:Number(U.height)+e.y}}function d(){window.parentIFrame?window.parentIFrame[\"scrollTo\"+(a?\"Offset\":\"\")](f.x,f.y):j(V,\"Unable to scroll to requested position, window.parentIFrame not found\")}var e=a?E(U.iframe):{x:0,y:0},f=c();h(V,\"Reposition requested from iFrame (offset x:\"+e.x+\" y:\"+e.y+\")\"),window.top!==window.self?d():b()}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::G": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function G(){!1!==I(\"scrollCallback\",M)?p(V):q()}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::H": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function H(a){function b(){var a=E(f);h(V,\"Moving to in page link (#\"+d+\") at x: \"+a.x+\" y: \"+a.y),M={x:a.x,y:a.y},G(),h(V,\"--\")}function c(){window.parentIFrame?window.parentIFrame.moveToAnchor(d):h(V,\"In page link #\"+d+\" not found and window.parentIFrame not found\")}var d=a.split(\"#\")[1]||\"\",e=decodeURIComponent(d),f=document.getElementById(e)||document.getElementsByName(e)[0];f?b():window.top!==window.self?c():h(V,\"In page link #\"+d+\" not found\")}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::I": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function I(a,b){return m(V,a,b)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::N": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function N(){switch(P[V]&&P[V].firstRun&&S(),U.type){case\"close\":P[V].closeRequestCallback?m(V,\"closeRequestCallback\",P[V].iframe):n(U.iframe);break;case\"message\":y(w(6));break;case\"scrollTo\":F(!1);break;case\"scrollToOffset\":F(!0);break;case\"pageInfo\":A(P[V]&&P[V].iframe,V),B();break;case\"pageInfoStop\":C();break;case\"inPageLink\":H(w(9));break;case\"reset\":r(U);break;case\"init\":d(),I(\"initCallback\",U.iframe);break;default:d()}}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::O": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function O(a){var b=!0;return P[a]||(b=!1,j(U.type+\" No settings for \"+a+\". Message was: \"+T)),b}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function Q(){for(var a in P)u(\"iFrame requested init\",v(a),document.getElementById(a),a)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function S(){P[V]&&(P[V].firstRun=!1)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::a": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function a(){s(U),p(V),I(\"resizedCallback\",U)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::b": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function b(a,b,c){\"addEventListener\"in window?a.addEventListener(b,c,!1):\"attachEvent\"in window&&a.attachEvent(\"on\"+b,c)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::c": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function c(a,b,c){\"removeEventListener\"in window?a.removeEventListener(b,c,!1):\"detachEvent\"in window&&a.detachEvent(\"on\"+b,c)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::d": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function d(){var a,b=[\"moz\",\"webkit\",\"o\",\"ms\"];for(a=0;a<b.length&&!N;a+=1)N=window[b[a]+\"RequestAnimationFrame\"];N||h(\"setup\",\"RequestAnimationFrame not supported\")}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::e": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function e(a){var b=\"Host page: \"+a;return window.top!==window.self&&(b=window.parentIFrame&&window.parentIFrame.getId?window.parentIFrame.getId()+\": \"+a:\"Nested host page: \"+a),b}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::f": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function f(a){return K+\"[\"+e(a)+\"]\"}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function g(a){return P[a]?P[a].log:G}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::h": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function h(a,b){k(\"log\",a,b,g(a))}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function i(a,b){k(\"info\",a,b,g(a))}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::j": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function j(a,b){k(\"warn\",a,b,!0)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function k(a,b,c,d){!0===d&&\"object\"==typeof window.console&&console[a](f(b),c)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::l": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function l(a){function d(){function a(){s(U),p(V),I(\"resizedCallback\",U)}f(\"Height\"),f(\"Width\"),t(a,U,\"init\")}function e(){var a=T.substr(L).split(\":\");return{iframe:P[a[0]]&&P[a[0]].iframe,id:a[0],height:a[1],width:a[2],type:a[3]}}function f(a){var b=Number(P[V][\"max\"+a]),c=Number(P[V][\"min\"+a]),d=a.toLowerCase(),e=Number(U[d]);h(V,\"Checking \"+d+\" is in range \"+c+\"-\"+b),c>e&&(e=c,h(V,\"Set \"+d+\" to min value\")),e>b&&(e=b,h(V,\"Set \"+d+\" to max value\")),U[d]=\"\"+e}function g(){function b(){function a(){var a=0,b=!1;for(h(V,\"Checking connection is from allowed list of origins: \"+d);a<d.length;a++)if(d[a]===c){b=!0;break}return b}function b(){var a=P[V]&&P[V].remoteHost;return h(V,\"Checking connection is from: \"+a),c===a}return d.constructor===Array?a():b()}var c=a.origin,d=P[V]&&P[V].checkOrigin;if(d&&\"\"+c!=\"null\"&&!b())throw new Error(\"Unexpected message received from: \"+c+\" for \"+U.iframe.id+\". Message was: \"+a.data+\". This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.\");return!0}function k(){return K===(\"\"+T).substr(0,L)&&T.substr(L).split(\":\")[0]in P}function l(){var a=U.type in{\"true\":1,\"false\":1,undefined:1};return a&&h(V,\"Ignoring init message from meta parent page\"),a}function w(a){return T.substr(T.indexOf(\":\")+J+a)}function y(a){h(V,\"MessageCallback passed: {iframe: \"+U.iframe.id+\", message: \"+a+\"}\"),I(\"messageCallback\",{iframe:U.iframe,message:JSON.parse(a)}),h(V,\"--\")}function z(){var a=document.body.getBoundingClientRect(),b=U.iframe.getBoundingClientRect();return JSON.stringify({iframeHeight:b.height,iframeWidth:b.width,clientHeight:Math.max(document.documentElement.clientHeight,window.innerHeight||0),clientWidth:Math.max(document.documentElement.clientWidth,window.innerWidth||0),offsetTop:parseInt(b.top-a.top,10),offsetLeft:parseInt(b.left-a.left,10),scrollTop:window.pageYOffset,scrollLeft:window.pageXOffset})}function A(a,b){function c(){u(\"Send Page Info\",\"pageInfo:\"+z(),a,b)}x(c,32)}function B(){function a(a,b){function c(){P[f]?A(P[f].iframe,f):d()}[\"scroll\",\"resize\"].forEach(function(d){h(f,a+d+\" listener for sendPageInfo\"),b(window,d,c)})}function d(){a(\"Remove \",c)}function e(){a(\"Add \",b)}var f=V;e(),P[f]&&(P[f].stopPageInfo=d)}function C(){P[V]&&P[V].stopPageInfo&&(P[V].stopPageInfo(),delete P[V].stopPageInfo)}function D(){var a=!0;return null===U.iframe&&(j(V,\"IFrame (\"+U.id+\") not found\"),a=!1),a}function E(a){var b=a.getBoundingClientRect();return o(V),{x:Math.floor(Number(b.left)+Number(M.x)),y:Math.floor(Number(b.top)+Number(M.y))}}function F(a){function b(){M=f,G(),h(V,\"--\")}function c(){return{x:Number(U.width)+e.x,y:Number(U.height)+e.y}}function d(){window.parentIFrame?window.parentIFrame[\"scrollTo\"+(a?\"Offset\":\"\")](f.x,f.y):j(V,\"Unable to scroll to requested position, window.parentIFrame not found\")}var e=a?E(U.iframe):{x:0,y:0},f=c();h(V,\"Reposition requested from iFrame (offset x:\"+e.x+\" y:\"+e.y+\")\"),window.top!==window.self?d():b()}function G(){!1!==I(\"scrollCallback\",M)?p(V):q()}function H(a){function b(){var a=E(f);h(V,\"Moving to in page link (#\"+d+\") at x: \"+a.x+\" y: \"+a.y),M={x:a.x,y:a.y},G(),h(V,\"--\")}function c(){window.parentIFrame?window.parentIFrame.moveToAnchor(d):h(V,\"In page link #\"+d+\" not found and window.parentIFrame not found\")}var d=a.split(\"#\")[1]||\"\",e=decodeURIComponent(d),f=document.getElementById(e)||document.getElementsByName(e)[0];f?b():window.top!==window.self?c():h(V,\"In page link #\"+d+\" not found\")}function I(a,b){return m(V,a,b)}function N(){switch(P[V]&&P[V].firstRun&&S(),U.type){case\"close\":P[V].closeRequestCallback?m(V,\"closeRequestCallback\",P[V].iframe):n(U.iframe);break;case\"message\":y(w(6));break;case\"scrollTo\":F(!1);break;case\"scrollToOffset\":F(!0);break;case\"pageInfo\":A(P[V]&&P[V].iframe,V),B();break;case\"pageInfoStop\":C();break;case\"inPageLink\":H(w(9));break;case\"reset\":r(U);break;case\"init\":d(),I(\"initCallback\",U.iframe);break;default:d()}}function O(a){var b=!0;return P[a]||(b=!1,j(U.type+\" No settings for \"+a+\". Message was: \"+T)),b}function Q(){for(var a in P)u(\"iFrame requested init\",v(a),document.getElementById(a),a)}function S(){P[V]&&(P[V].firstRun=!1)}var T=a.data,U={},V=null;\"[iFrameResizerChild]Ready\"===T?Q():k()?(U=e(),V=R=U.id,P[V]&&(P[V].loaded=!0),!l()&&O(V)&&(h(V,\"Received: \"+T),D()&&g()&&N())):i(V,\"Ignored: \"+T)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::m": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function m(a,b,c){var d=null,e=null;if(P[a]){if(d=P[a][b],\"function\"!=typeof d)throw new TypeError(b+\" on iFrame[\"+a+\"] is not a function\");e=d(c)}return e}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function n(a){var b=a.id;h(b,\"Removing iFrame: \"+b),a.parentNode&&a.parentNode.removeChild(a),m(b,\"closedCallback\",b),h(b,\"--\"),delete P[b]}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::o": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function o(b){null===M&&(M={x:window.pageXOffset!==a?window.pageXOffset:document.documentElement.scrollLeft,y:window.pageYOffset!==a?window.pageYOffset:document.documentElement.scrollTop},h(b,\"Get page position: \"+M.x+\",\"+M.y))}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::p": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function p(a){null!==M&&(window.scrollTo(M.x,M.y),h(a,\"Set page position: \"+M.x+\",\"+M.y),q())}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::q": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function q(){M=null}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function r(a){function b(){s(a),u(\"reset\",\"reset\",a.iframe,a.id)}h(a.id,\"Size reset requested by \"+(\"init\"===a.type?\"host page\":\"iFrame\")),o(a.id),t(b,a,\"reset\")}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function s(a){function b(b){a.iframe.style[b]=a[b]+\"px\",h(a.id,\"IFrame (\"+e+\") \"+b+\" set to \"+a[b]+\"px\")}function c(b){H||\"0\"!==a[b]||(H=!0,h(e,\"Hidden iFrame detected, creating visibility listener\"),y())}function d(a){b(a),c(a)}var e=a.iframe.id;P[e]&&(P[e].sizeHeight&&d(\"height\"),P[e].sizeWidth&&d(\"width\"))}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::t": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function t(a,b,c){c!==b.type&&N?(h(b.id,\"Requesting animation frame\"),N(a)):a()}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function u(a,b,c,d,e){function f(){var e=P[d]&&P[d].targetOrigin;h(d,\"[\"+a+\"] Sending msg to iframe[\"+d+\"] (\"+b+\") targetOrigin: \"+e),c.contentWindow.postMessage(K+b,e)}function g(){j(d,\"[\"+a+\"] IFrame(\"+d+\") not found\")}function i(){c&&\"contentWindow\"in c&&null!==c.contentWindow?f():g()}function k(){function a(){!P[d]||P[d].loaded||l||(l=!0,j(d,\"IFrame has not responded within \"+P[d].warningTimeout/1e3+\" seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ingored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning.\"))}e&&P[d]&&P[d].warningTimeout&&(P[d].msgTimeout=setTimeout(a,P[d].warningTimeout))}var l=!1;d=d||c.id,P[d]&&(i(),k())}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::v": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function v(a){return a+\":\"+P[a].bodyMarginV1+\":\"+P[a].sizeWidth+\":\"+P[a].log+\":\"+P[a].interval+\":\"+P[a].enablePublicMethods+\":\"+P[a].autoResize+\":\"+P[a].bodyMargin+\":\"+P[a].heightCalculationMethod+\":\"+P[a].bodyBackground+\":\"+P[a].bodyPadding+\":\"+P[a].tolerance+\":\"+P[a].inPageLinks+\":\"+P[a].resizeFrom+\":\"+P[a].widthCalculationMethod}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::w": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function w(a){return T.substr(T.indexOf(\":\")+J+a)}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::x": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function x(a,b){null===Q&&(Q=setTimeout(function(){Q=null,a()},b))}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function y(a){h(V,\"MessageCallback passed: {iframe: \"+U.iframe.id+\", message: \"+a+\"}\"),I(\"messageCallback\",{iframe:U.iframe,message:JSON.parse(a)}),h(V,\"--\")}",
            "score": -1.0
        },
        "scripts/iframeResizer.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "scripts/iframeResizer.min.js",
            "merged_function": "function z(){var a=document.body.getBoundingClientRect(),b=U.iframe.getBoundingClientRect();return JSON.stringify({iframeHeight:b.height,iframeWidth:b.width,clientHeight:Math.max(document.documentElement.clientHeight,window.innerHeight||0),clientWidth:Math.max(document.documentElement.clientWidth,window.innerWidth||0),offsetTop:parseInt(b.top-a.top,10),offsetLeft:parseInt(b.left-a.left,10),scrollTop:window.pageYOffset,scrollLeft:window.pageXOffset})}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::addClasses": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "addClasses = (elem, classes) => {\n    classes.split(',').forEach((v) => {\n      elem.classList.add(toClassName(v.trim()));\n    });\n  }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::buildBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::createOptimizedPicture": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 400px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::decorateBlock": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.setAttribute('data-block-name', shortBlockName);\n    block.setAttribute('data-block-status', 'initialized');\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::decorateBlockLocale": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlockLocale(block) {\n  const SUPPORTED_LOCALES = [\n    'en',\n    'jp',\n    'de',\n    'fr',\n    'ko',\n    'it',\n    'es',\n    'zh',\n  ];\n\n  // locale specific processing\n  const localesFound = [];\n  block.classList.forEach((blockClass) => {\n    if (blockClass.length !== 2) return; // optimisation\n    if (!SUPPORTED_LOCALES.includes(blockClass)) return;\n\n    localesFound.push(blockClass);\n    if (blockClass !== 'en') {\n      block.classList.add(`OneLinkShow_${blockClass}`);\n      block.parentElement.classList.add(`OneLinkShow_${blockClass}`);\n    } else {\n      block.classList.add('OneLinkHide');\n      block.parentElement.classList.add('OneLinkHide');\n    }\n  });\n\n  if (localesFound.length !== 0\n    && !localesFound.includes(document.documentElement.getAttribute('original-lang'))) {\n    // skip block decoration and remove content from blocks which are not displayed due to locale\n    block.setAttribute('data-block-status', 'loaded');\n    block.setAttribute('data-block-skip', true);\n    block.setAttribute('data-block-skip-reason', 'locale');\n    block.innerHTML = '';\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateButtons": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          up.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n          const btnBorder = document.createElement('span');\n          btnBorder.className = 'button-border';\n          a.append(btnBorder);\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateIcons": {
            "changes_after_merge": 3,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateIcons(element = document) {\n  element.querySelectorAll('span.icon').forEach(async (span) => {\n    if (span.classList.length < 2 || !span.classList[1].startsWith('icon-')) {\n      return;\n    }\n    const icon = span.classList[1].substring(5);\n    // eslint-disable-next-line no-use-before-define\n    const resp = await fetch(`${window.hlx.codeBasePath}/icons/${icon}.svg`);\n    if (resp.ok) {\n      const iconHTML = await resp.text();\n      if (iconHTML.match(/<style/i)) {\n        const img = document.createElement('img');\n        img.src = `data:image/svg+xml,${encodeURIComponent(iconHTML)}`;\n        span.appendChild(img);\n      } else {\n        span.innerHTML = iconHTML;\n      }\n    }\n  });\n}",
            "score": -0.8604651162790697
        },
        "scripts/lib-franklin.js::decorateSections": {
            "changes_after_merge": 5,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.setAttribute('data-section-status', 'initialized');\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}",
            "score": -0.7674418604651163
        },
        "scripts/lib-franklin.js::decorateTemplateAndTheme": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateTemplateAndTheme() {\n  const addClasses = (elem, classes) => {\n    classes.split(',').forEach((v) => {\n      elem.classList.add(toClassName(v.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::defer": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  }",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::fetchPlaceholders": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      try {\n        fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n          .then((resp) => resp.json())\n          .then((json) => {\n            const placeholders = {};\n            json.data.forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n            window.placeholders[prefix] = placeholders;\n            resolve();\n          });\n      } catch (error) {\n        // error loading placeholders\n        window.placeholders[prefix] = {};\n        reject();\n      }\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return window.placeholders[prefix];\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getAllMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getAllMetadata(scope) {\n  return [...document.head.querySelectorAll(`meta[property^=\"${scope}:\"],meta[name^=\"${scope}-\"]`)]\n    .reduce((res, meta) => {\n      const id = toClassName(meta.name\n        ? meta.name.substring(scope.length + 1)\n        : meta.getAttribute('property').split(':')[1]);\n      res[id] = meta.getAttribute('content');\n      return res;\n    }, {});\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getBlockConfig(block) {\n  const { blockName } = block.dataset;\n  const cssPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`;\n  const jsPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.js`;\n  const original = { blockName, cssPath, jsPath };\n  return (window.hlx.patchBlockConfig || [])\n    .filter((fn) => typeof fn === 'function')\n    .reduce((config, fn) => fn(config, original), { blockName, cssPath, jsPath });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getHref": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getHref() {\n  if (window.location.href !== 'about:srcdoc') return window.location.href;\n\n  const { location: parentLocation } = window.parent;\n  const urlParams = new URLSearchParams(parentLocation.search);\n  return `${parentLocation.origin}${urlParams.get('path')}`;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::hashCode": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0)",
            "score": -1.0
        },
        "scripts/lib-franklin.js::init": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function init() {\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadBlock": {
            "changes_after_merge": 3,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlock(block) {\n  const status = block.getAttribute('data-block-status');\n  if (status !== 'loading' && status !== 'loaded') {\n    block.setAttribute('data-block-status', 'loading');\n    const blockName = block.getAttribute('data-block-name');\n    try {\n      const cssLoaded = new Promise((resolve) => {\n        loadCSS(`${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`, resolve);\n      });\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(`../blocks/${blockName}/${blockName}.js`);\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.setAttribute('data-block-status', 'loaded');\n  }\n}",
            "score": -0.8604651162790697
        },
        "scripts/lib-franklin.js::loadBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadCSS": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadCSS(href, callback) {\n  if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n    const link = document.createElement('link');\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('href', href);\n    if (typeof callback === 'function') {\n      link.onload = (e) => callback(e.type);\n      link.onerror = (e) => callback(e.type);\n    }\n    document.head.appendChild(link);\n  } else if (typeof callback === 'function') {\n    callback('noop');\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::loadFooter": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadHeader": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::loadModule": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadModule(name, jsPath, cssPath, ...args) {\n  const cssLoaded = cssPath ? loadCSS(cssPath) : Promise.resolve();\n  const decorationComplete = jsPath\n    ? new Promise((resolve) => {\n      (async () => {\n        let mod;\n        try {\n          mod = await import(jsPath);\n          if (mod.default) {\n            await mod.default.apply(null, args);\n          }\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.log(`failed to load module for ${name}`, error);\n        }\n        resolve(mod);\n      })();\n    })\n    : Promise.resolve();\n  return Promise.all([cssLoaded, decorationComplete])\n    .then(([, api]) => api);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadScript(src, attrs) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > script[src=\"${src}\"]`)) {\n      const script = document.createElement('script');\n      script.src = src;\n      if (attrs) {\n        // eslint-disable-next-line no-restricted-syntax, guard-for-in\n        for (const attr in attrs) {\n          script.setAttribute(attr, attrs[attr]);\n        }\n      }\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.append(script);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::mapOnelinkClass": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function mapOnelinkClass(className) {\n  if (className.startsWith('onelinkshow-')) {\n    return `OneLinkShow_${className.substring(className.lastIndexOf('-') + 1)}`;\n  }\n  if (className.startsWith('onelinkhide')) {\n    if (className.indexOf('-') > -1) {\n      return `OneLinkHide_${className.substring(className.lastIndexOf('-') + 1)}`;\n    }\n    return 'OneLinkHide';\n  }\n\n  return className;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::normalizeHeadings": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::parsePluginParams": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function parsePluginParams(id, config) {\n  const pluginId = !config\n    ? id.split('/').splice(id.endsWith('/') ? -2 : -1, 1)[0].replace(/\\.js/, '')\n    : id;\n  const pluginConfig = {\n    load: 'eager',\n    ...(typeof config === 'string' || !config\n      ? { url: (config || id).replace(/\\/$/, '') }\n      : config),\n  };\n  pluginConfig.options ||= {};\n  return { id: pluginId, config: pluginConfig };\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::readBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope>div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::sampleRUM": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      // eslint-disable-next-line object-curly-newline\n      window.hlx.rum = { weight, id, random, isSelected, sampleRUM };\n    }\n    const { weight, id } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.location.href, generation: window.hlx.RUM_GENERATION, checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n  } catch (error) {\n    // something went wrong\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::sendPing": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.location.href, generation: window.hlx.RUM_GENERATION, checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      }",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::setup": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::toCamelCase": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::toClassName": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-').replace(/-+/g, '-').replace(/^-|-$/g, '')\n    : '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::updateSectionsStatus": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.getAttribute('data-section-status');\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.setAttribute('data-section-status', 'loading');\n        break;\n      } else {\n        section.setAttribute('data-section-status', 'loaded');\n      }\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/lib-franklin.js::waitForLCP": {
            "changes_after_merge": 1,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.getAttribute('data-block-name')));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.querySelector('body').classList.add('appear');\n  const lcpCandidate = document.querySelector('main img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::createDropdown": {
            "changes_after_merge": 2,
            "file_path": "scripts/list.js",
            "merged_function": "function createDropdown(options, selected, name, placeholder) {\n  const container = document.createElement('div');\n  container.classList.add(classFilterSelect);\n  if (name) {\n    container.setAttribute('name', name);\n  }\n  if (placeholder) {\n    const btn = document.createElement('div');\n    btn.classList.add(classDropdownToggle);\n    btn.innerText = selected || placeholder;\n    btn.value = '';\n    btn.setAttribute('type', 'button');\n    btn.addEventListener('click', toggleFilter, false);\n    container.append(btn);\n\n    options.unshift(placeholder);\n  }\n\n  const dropDown = document.createElement('div');\n  dropDown.classList.add(classDropdownMenu);\n\n  options.forEach((option) => {\n    const optionTag = document.createElement('p');\n    optionTag.classList.add(classFilterItem);\n    optionTag.innerText = option;\n    optionTag.name = toClassName(option);\n    if (option === placeholder) {\n      optionTag.classList.add('reset');\n    }\n    dropDown.append(optionTag);\n  });\n  container.append(dropDown);\n  return container;\n}",
            "score": -0.9069767441860466
        },
        "scripts/list.js::createList": {
            "changes_after_merge": 3,
            "file_path": "scripts/list.js",
            "merged_function": "async function createList(\n  createFilters,\n  options,\n  root,\n) {\n  const listCSSPromise = new Promise((resolve) => {\n    loadCSS('../styles/list.css', (e) => resolve(e));\n  });\n\n  if (options.data) {\n    const container = document.createElement('div');\n    container.className = classList;\n    const filterElements = renderFilters(options, createFilters);\n    container.append(filterElements);\n    const listItems = createListItems(options);\n    container.append(listItems);\n    renderPagination(container, options, false);\n    root.append(container);\n  }\n  await listCSSPromise;\n}",
            "score": -0.8604651162790697
        },
        "scripts/list.js::createListItems": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "function createListItems(options) {\n  const data = options.filteredData || options.data;\n  const start = (options.activeFilters.get('page') - 1) * options.limitPerPage;\n  const items = data.slice(start, start + options.limitPerPage);\n\n  const itemsContainer = document.createElement('div');\n  itemsContainer.classList.add(classListItems);\n  items.forEach((item, idx) => {\n    itemsContainer.appendChild(renderListItem(item, idx));\n  });\n  return itemsContainer;\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::createPaginationItem": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "function createPaginationItem(page, active, label, hide) {\n  const btn = document.createElement('button');\n  btn.classList.add(classPagerItem);\n  const isNavElem = (label);\n  if (isNavElem) {\n    btn.classList.add(classPagerNav);\n  }\n  if (hide) {\n    btn.classList.add(classHidden);\n  }\n  btn.setAttribute('name', page);\n  btn.innerText = label || page;\n  if (page === active && !hide && !isNavElem) {\n    btn.classList.add(classActive);\n  }\n  return btn;\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::filterData": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "function filterData(options) {\n  let { data } = options;\n  const filters = options.activeFilters;\n  filters.forEach((value, type) => {\n    if (type === 'year') {\n      const filterAttribute = toCamelCase(`filter_${type}`);\n      data = data\n        .filter((n) => toClassName(\n          n[filterAttribute].toString()).includes(options.activeFilters.get(type),\n        ));\n    }\n  });\n  return data;\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::getPaginationEnd": {
            "changes_after_merge": 0,
            "file_path": "scripts/list.js",
            "merged_function": "function getPaginationEnd(startIdx, options) {\n  let endIdx = options.maxPages;\n  if ((startIdx + options.limitForPagination) <= (options.maxPages)) {\n    endIdx = (startIdx + options.limitForPagination - 1);\n  }\n  return endIdx;\n}",
            "score": -1.0
        },
        "scripts/list.js::getPaginationStart": {
            "changes_after_merge": 0,
            "file_path": "scripts/list.js",
            "merged_function": "function getPaginationStart(options) {\n  const page = options.activeFilters.get('page');\n  let startIdx = Math.min(page, (options.maxPages - options.limitForPagination + 1));\n  if (startIdx === page) startIdx = page - 1;\n  if (startIdx < 1) startIdx = 1;\n  return startIdx;\n}",
            "score": -1.0
        },
        "scripts/list.js::hasImage": {
            "changes_after_merge": 0,
            "file_path": "scripts/list.js",
            "merged_function": "function hasImage(imgPath) {\n  return (!imgPath.startsWith('/default-meta-image.png'));\n}",
            "score": -1.0
        },
        "scripts/list.js::renderFilters": {
            "changes_after_merge": 2,
            "file_path": "scripts/list.js",
            "merged_function": "function renderFilters(options, createFilters) {\n  const filter = document.createElement('div');\n  filter.className = classFilter;\n\n  const filters = createFilters(options, createDropdown);\n  if (filters.length > 0) {\n    if (options.panelTitle) {\n      const header = document.createElement('p');\n      header.className = classPanelTitle;\n      header.innerHTML = options.panelTitle;\n      filter.append(header);\n    }\n\n    filter.append(\n      ...filters,\n    );\n\n    const menuItems = filter.querySelectorAll(`.${classFilterSelect} .${classDropdownMenu} .${classFilterItem}`);\n    menuItems.forEach((menuItem) => {\n      menuItem.addEventListener('click', (event) => {\n        switchFilter(event, options);\n      }, false);\n    }, false);\n\n    return filter;\n  }\n\n  return null;\n}",
            "score": -0.9069767441860466
        },
        "scripts/list.js::renderListItem": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "function renderListItem(item, idx) {\n  const listItemElement = document.createElement('article');\n  listItemElement.classList.add(classListItem);\n\n  const hasImage = (!item.image.startsWith(defaultImage));\n  if (hasImage) {\n    const imageElement = createOptimizedPicture(item.image, item.title, (idx === 0), [\n      { width: '500' },\n    ]);\n    listItemElement.innerHTML = `\n      <div class=\"image\">\n        <a href=\"${item.path}\" title=\"${item.title}\">\n          ${imageElement.outerHTML}\n        </a>\n      </div>`;\n  }\n  const dt = formatDate(unixDateToString(item.date));\n  const citation = (item.publisher && item.publisher !== '0') ? `${dt} | ${item.publisher}` : dt;\n  const viewMoreLnk = (item.viewMoreText) ? `<a class='view-more' title=\"${item.viewMoreText}\" href=\"${item.path}\">${item.viewMoreText}</a>` : '';\n  listItemElement.innerHTML += `\n    <div class=\"content\">\n      <p class=\"${classItemCite}\">${citation}</p>\n      <p><a class=\"${classItemTitle}\" title=\"${item.title}\" href=\"${item.path}\">${item.title}</a></p>\n      ${item.description} ${viewMoreLnk}\n    </div>\n  `;\n  return listItemElement;\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::renderPagination": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "async function renderPagination(container, options, ajaxCall) {\n  const data = options.filteredData || options.data;\n  options.maxPages = Math.ceil(data.length / options.limitPerPage);\n  const page = options.activeFilters.get('page');\n\n  const nav = document.createElement('nav');\n  nav.className = classPagination;\n\n  if (options.maxPages > 1) {\n    const startIdx = getPaginationStart(options);\n    const endIdx = getPaginationEnd(startIdx, options);\n\n    nav.append(createPaginationItem(1, page, '\u00ab', page === 1));\n    nav.append(createPaginationItem(page - 1, page, '\u2039', page === 1));\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = startIdx; i <= endIdx; i++) {\n      if (i > 0) {\n        nav.append(createPaginationItem(i, page, '', false));\n      }\n    }\n    // eslint-disable-next-line no-plusplus\n    for (let j = endIdx + 1; j <= options.maxPages; j++) {\n      if (j > 0) {\n        nav.append(createPaginationItem(j, page, '', true));\n      }\n    }\n    nav.append(createPaginationItem(page + 1, page, '\u203a', page === options.maxPages));\n    nav.append(createPaginationItem(options.maxPages, page, '\u00bb', page === options.maxPages));\n  }\n  if (ajaxCall) {\n    container.querySelector(`.${classPagination}`).remove();\n  }\n  container.append(nav);\n\n  const pagerItems = container.querySelectorAll(`.${classPagination} .${classPagerItem}`);\n  pagerItems.forEach((pagerItem) => {\n    pagerItem.addEventListener('click', (event) => {\n      switchPage(event, options);\n    }, false);\n  }, false);\n\n  return nav;\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::swapData": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "function swapData(options) {\n  const items = document.querySelector(`.${classListItems}`);\n  items.innerHTML = createListItems(options).innerHTML;\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::switchFilter": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "async function switchFilter(event, options) {\n  const elem = event.target;\n  const filter = elem.closest(`.${classFilterSelect}`);\n  const filterType = filter.getAttribute('name');\n  if (elem.classList.contains('reset')) {\n    options.activeFilters.set(filterType, '');\n  } else {\n    options.activeFilters.set(filterType, elem.innerHTML);\n  }\n  options.activeFilters.set('page', 1);\n  options.filteredData = filterData(options);\n\n  const selected = filter.querySelector(`.${classDropdownToggle}`);\n  selected.innerHTML = elem.innerText;\n\n  renderPagination(document.querySelector(`.${classList}`), options, true);\n  toggleFilter(event);\n  swapData(options);\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::switchPage": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "async function switchPage(event, options) {\n  const elem = event.target;\n\n  options.activeFilters.set('page', parseInt(elem.getAttribute('name'), 10));\n\n  const pagination = elem.closest(`.${classPagination}`);\n  const current = pagination.querySelector(`.${classPagerItem}.${classActive}`);\n  if (current) { current.classList.remove(`${classActive}`); }\n\n  const selected = options.activeFilters.get('page');\n  const { maxPages } = options;\n\n  const pagerItem = pagination.querySelectorAll(`.${classPagerItem}`);\n  const startIdx = getPaginationStart(options);\n  const endIdx = getPaginationEnd(startIdx, options);\n  pagerItem.forEach((item) => {\n    item.classList.remove(`${classHidden}`);\n    const pager = parseInt(item.getAttribute('name'), 10);\n    if (pager < startIdx || pager > endIdx) {\n      item.classList.add(`${classHidden}`);\n    }\n  });\n\n  const pagerNav = pagination.querySelectorAll(`.${classPagerNav}`);\n  pagerNav[1].setAttribute('name', Math.max(selected - 1, 1));\n  pagerNav[2].setAttribute('name', Math.min(selected + 1, maxPages));\n  pagerNav.forEach((item, idx) => {\n    item.classList.remove(`${classHidden}`);\n    if ((idx < 2 && selected < startIdx) || (idx > 1 && selected > endIdx)) {\n      item.classList.add(`${classHidden}`);\n    }\n  });\n\n  pagination.querySelector(`.${classPagerItem}[name=\"${selected}\"]:not(.${classPagerNav})`).classList.add(classActive);\n\n  swapData(options);\n  document.querySelector(`.${classList}`).scrollIntoView();\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::toggleFilter": {
            "changes_after_merge": 1,
            "file_path": "scripts/list.js",
            "merged_function": "function toggleFilter(event) {\n  const filterSelected = event.target.closest(`.${classFilterSelect}`);\n  const filterIsOpen = filterSelected.classList.contains(classFilterOpen);\n  const menu = filterSelected.querySelector(`.${classDropdownMenu}`);\n  if (filterIsOpen) {\n    filterSelected.classList.remove(classFilterOpen);\n    menu.classList.remove(classFilterOpen);\n  } else {\n    filterSelected.classList.add(classFilterOpen);\n    menu.classList.add(classFilterOpen);\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/list.js::unixDateToString": {
            "changes_after_merge": 0,
            "file_path": "scripts/list.js",
            "merged_function": "function unixDateToString(unixDateString) {\n  const date = new Date(unixDateString * 1000);\n  const day = (date.getDate()).toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear();\n  return `${month}/${day}/${year}`;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::addFavIcon": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function addFavIcon(href, rel = 'icon') {\n  const link = document.createElement('link');\n  link.rel = rel;\n  link.type = 'image/x-icon';\n  link.href = href;\n  const existingLink = document.querySelector(`head link[rel=\"${rel}\"]`);\n  if (existingLink) {\n    existingLink.parentElement.replaceChild(link, existingLink);\n  } else {\n    document.getElementsByTagName('head')[0].appendChild(link);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::addHreflangTags": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function addHreflangTags() {\n  if (document.querySelectorAll('head link[hreflang]').length > 0) return;\n\n  const includedTypes = ['homepage', 'Product', 'Application', 'Category', 'Technology', 'Customer Breakthrough', 'Video Gallery', 'contact', 'About Us'];\n  const type = getMetadata('template');\n  const spTypes = (type) ? type.split(',').map((k) => k.trim()) : [];\n\n  const includedPaths = ['/leadership', '/products', '/applications', '/customer-breakthroughs'];\n  const path = window.location.pathname;\n  if (!(includedTypes.some((r) => spTypes.indexOf(r) !== -1) || includedPaths.includes(path))) {\n    return;\n  }\n\n  const baseHreflangs = [\n    {\n      lang: 'x-default',\n      href: 'https://www.moleculardevices.com',\n    },\n    {\n      lang: 'de',\n      href: 'https://de.moleculardevices.com',\n    },\n    {\n      lang: 'es',\n      href: 'https://es.moleculardevices.com',\n    },\n    {\n      lang: 'fr',\n      href: 'https://fr.moleculardevices.com',\n    },\n    {\n      lang: 'it',\n      href: 'https://it.moleculardevices.com',\n    },\n    {\n      lang: 'ko',\n      href: 'https://ko.moleculardevices.com',\n    },\n    {\n      lang: 'zh',\n      href: 'https://www.moleculardevices.com.cn',\n    },\n  ];\n  baseHreflangs.forEach((hl) => {\n    const ln = document.createElement('link');\n    ln.setAttribute('rel', 'alternate');\n    ln.setAttribute('hreflang', hl.lang);\n    ln.setAttribute('href', hl.href + path);\n    document.querySelector('head').appendChild(ln);\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::addLinkIcon": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function addLinkIcon(elem) {\n  const linkIcon = document.createElement('i');\n  linkIcon.className = 'fa fa-chevron-circle-right';\n  linkIcon.ariaHidden = true;\n  elem.append(linkIcon);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::addPageSchema": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function addPageSchema() {\n  if (document.querySelector('head > script[type=\"application/ld+json\"]')) return;\n\n  const includedTypes = ['Product', 'Application', 'Category', 'homepage', 'Blog', 'Event', 'Application Note'];\n  const type = getMetadata('template');\n  const spTypes = (type) ? type.split(',').map((k) => k.trim()) : [];\n\n  const includedPaths = ['/products'];\n  const path = window.location.pathname;\n  if (!(includedTypes.some((r) => spTypes.indexOf(r) !== -1) || includedPaths.includes(path))) {\n    return;\n  }\n\n  try {\n    const moleculardevicesRootURL = 'https://www.moleculardevices.com/';\n    const moleculardevicesLogoURL = 'https://www.moleculardevices.com/images/header-menus/logo.svg';\n\n    const h1 = document.querySelector('main h1');\n    const schemaTitle = h1 ? h1.textContent : getMetadata('og:title');\n\n    const heroImage = document.querySelector('.hero img');\n    const schemaImage = heroImage\n      ? heroImage.src\n      : getMetadata('thumbnail') || getMetadata('og:image') || moleculardevicesLogoURL;\n    const schemaImageUrl = new URL(schemaImage, moleculardevicesRootURL);\n\n    const keywords = getMetadata('keywords');\n\n    const schema = document.createElement('script');\n    schema.setAttribute('type', 'application/ld+json');\n\n    const logo = {\n      '@type': 'ImageObject',\n      representativeOfPage: 'True',\n      url: moleculardevicesLogoURL,\n    };\n\n    const brandSameAs = [\n      'http://www.linkedin.com/company/molecular-devices',\n      'https://www.facebook.com/MolecularDevices',\n      'http://www.youtube.com/user/MolecularDevicesInc',\n      'https://twitter.com/moldev',\n    ];\n\n    const eventStart = getMetadata('event-start');\n    const eventEnd = getMetadata('event-end');\n    const eventAddress = getMetadata('event-address');\n\n    let schemaInfo = null;\n    if (type === 'homepage') {\n      const homepageName = getMetadata('title');\n      schemaInfo = {\n        '@context': 'https://schema.org',\n        '@graph': [\n          {\n            '@type': 'Organization',\n            additionalType: 'Organization',\n            description: getMetadata('description'),\n            name: homepageName,\n            sameAs: [\n              ...brandSameAs,\n              'https://en.wikipedia.org/wiki/Molecular_Devices',\n            ],\n            url: moleculardevicesRootURL,\n            telephone: '+1 877-589-2214',\n            logo: {\n              '@type': 'ImageObject',\n              url: moleculardevicesLogoURL,\n            },\n            openingHoursSpecification: {\n              '@type': 'OpeningHoursSpecification',\n              dayOfWeek: [\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n              ],\n              opens: '08:00',\n              closes: '17:00',\n            },\n          },\n          {\n            '@type': 'WebSite',\n            name: homepageName,\n            url: moleculardevicesRootURL,\n            potentialAction: {\n              '@type': 'SearchAction',\n              'query-input': 'required name=search_term_string',\n              target: {\n                '@type': 'EntryPoint',\n                urlTemplate: 'https://www.moleculardevices.com/search-results#q={search_term_string}',\n              },\n            },\n          },\n        ],\n      };\n    }\n\n    if (type === 'Application') {\n      schemaInfo = {\n        '@context': 'https://schema.org',\n        '@graph': [\n          {\n            '@type': 'TechArticle',\n            headline: schemaTitle,\n            name: schemaTitle,\n            description: getMetadata('description'),\n            about: keywords ? keywords.split(',').map((k) => k.trim()) : [],\n            url: document.querySelector(\"link[rel='canonical']\").href,\n            image: {\n              '@type': 'ImageObject',\n              representativeOfPage: 'True',\n              url: schemaImageUrl,\n            },\n            author: {\n              '@type': 'Organization',\n              name: 'Molecular Devices',\n              url: moleculardevicesRootURL,\n              sameAs: brandSameAs,\n              logo,\n            },\n            publisher: {\n              '@type': 'Organization',\n              name: 'Molecular Devices',\n              url: moleculardevicesRootURL,\n              sameAs: brandSameAs,\n              logo,\n            },\n          },\n          {\n            '@type': 'ImageObject',\n            name: schemaTitle,\n            url: schemaImageUrl,\n          },\n        ],\n      };\n    }\n\n    if (type === 'Product' || type.includes('Category') || path === '/products') {\n      schemaInfo = {\n        '@context': 'https://schema.org',\n        '@graph': [\n          {\n            '@type': 'WebPage',\n            name: schemaTitle,\n            description: getMetadata('description'),\n            url: document.querySelector(\"link[rel='canonical']\").href,\n            image: {\n              '@type': 'ImageObject',\n              representativeOfPage: 'True',\n              url: schemaImageUrl,\n            },\n            author: {\n              '@type': 'Organization',\n              name: 'Molecular Devices',\n              url: moleculardevicesRootURL,\n              sameAs: brandSameAs,\n              logo,\n            },\n          },\n        ],\n      };\n    }\n\n    if (type === 'Blog') {\n      schemaInfo = {\n        '@context': 'https://schema.org',\n        '@graph': [\n          {\n            '@type': 'BlogPosting',\n            headline: schemaTitle,\n            name: schemaTitle,\n            description: getMetadata('description'),\n            about: keywords ? keywords.split(',').map((k) => k.trim()) : [],\n            image: {\n              '@type': 'ImageObject',\n              representativeOfPage: 'True',\n              url: schemaImageUrl,\n            },\n            author: {\n              '@type': 'Organization',\n              name: 'Molecular Devices',\n              url: document.querySelector(\"link[rel='canonical']\").href,\n              sameAs: brandSameAs,\n              logo,\n            },\n          },\n        ],\n      };\n    }\n\n    if (type === 'Application Note') {\n      schemaInfo = {\n        '@context': 'https://schema.org',\n        '@graph': [\n          {\n            '@type': 'TechArticle',\n            headline: schemaTitle,\n            name: schemaTitle,\n            description: getMetadata('description'),\n            about: keywords ? keywords.split(',').map((k) => k.trim()) : [],\n            author: {\n              '@type': 'Organization',\n              name: 'Molecular Devices',\n              url: document.querySelector(\"link[rel='canonical']\").href,\n              sameAs: brandSameAs,\n              logo,\n            },\n          },\n        ],\n      };\n    }\n\n    if (type === 'Event') {\n      schemaInfo = {\n        '@context': 'https://schema.org',\n        '@graph': [\n          {\n            '@type': 'Event',\n            name: schemaTitle,\n            url: document.querySelector(\"link[rel='canonical']\").href,\n            description: getMetadata('description'),\n            eventAttendanceMode: getMetadata('event-type'),\n            startDate: (eventStart) ? eventStart.split(',')[0] : '',\n            endDate: (eventEnd) ? eventEnd.split(',')[0] : '',\n            image: {\n              '@type': 'ImageObject',\n              representativeOfPage: 'True',\n              url: schemaImageUrl,\n            },\n            location: {\n              '@type': 'City',\n              name: eventAddress ? eventAddress.split(',').map((k) => k.trim()) : [],\n            },\n          },\n        ],\n      };\n    }\n\n    if (schemaInfo) {\n      schema.appendChild(document.createTextNode(\n        JSON.stringify(schemaInfo, null, 2),\n      ));\n\n      document.querySelector('head').appendChild(schema);\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::buildAutoBlocks": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildAutoBlocks(main) {\n  try {\n    buildHeroBlock(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::buildHeroBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildHeroBlock(main) {\n  const h1 = main.querySelector('h1');\n  const picture = main.querySelector('picture');\n  // eslint-disable-next-line no-bitwise\n  if (h1 && picture && (h1.compareDocumentPosition(picture) & Node.DOCUMENT_POSITION_PRECEDING)) {\n    const section = document.createElement('div');\n    section.append(buildBlock('hero', { elems: [picture, h1] }));\n    main.prepend(section);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::createBreadcrumbsSpace": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function createBreadcrumbsSpace(main) {\n  if (getMetadata('breadcrumbs') === 'auto') {\n    const blockWrapper = document.createElement('div');\n    blockWrapper.classList.add('breadcrumbs-wrapper');\n    main.querySelector('.section').prepend(blockWrapper);\n  }\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::decorateEmbedLinks": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateEmbedLinks(main) {\n  main.querySelectorAll('a').forEach((link) => {\n    const url = new URL(link.href);\n    if (isVideo(url) && !link.closest('.block.hero-advanced')) {\n      const up = link.parentElement;\n      const isInlineBlock = (link.closest('.block.vidyard') && !link.closest('.block.vidyard').classList.contains('lightbox'));\n      const type = (up.tagName === 'EM' || isInlineBlock) ? 'inline' : 'lightbox';\n      const wrapper = div({ class: 'video-wrapper' }, div({ class: 'video-container' }, a({ href: link.href }, link.textContent)));\n      if (link.href !== link.textContent) wrapper.append(p({ class: 'video-title'}, link.textContent));\n      up.innerHTML = wrapper.outerHTML;\n      embedVideo(up.querySelector('a'), url, type);\n    }\n  });\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::decorateEmbeddedBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateEmbeddedBlocks(container) {\n  container\n    .querySelectorAll('div.section > div')\n    .forEach(decorateBlock);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateExternalLink": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateExternalLink(link) {\n  if (!link.href) return;\n\n  const url = new URL(link.href);\n\n  const internalLinks = [\n    'https://view.ceros.com',\n    'https://share.vidyard.com',\n    'https://main--moleculardevices--hlxsites.hlx.page',\n    'https://main--moleculardevices--hlxsites.hlx.live',\n    'http://molecular-devices.myshopify.com',\n    'http://moldev.com',\n    'http://go.pardot.com',\n    'http://pi.pardot.com',\n    'https://drift.me',\n  ];\n\n  if (url.origin === window.location.origin\n    || url.host.endsWith('moleculardevices.com')\n    || internalLinks.includes(url.origin)\n    || !url.protocol.startsWith('http')\n    || link.closest('.languages-dropdown')\n    || link.querySelector('.icon')) {\n    return;\n  }\n\n  const acceptedTags = ['STRONG', 'EM', 'SPAN', 'H2'];\n  const invalidChildren = Array.from(link.children)\n    .filter((child) => !acceptedTags.includes(child.tagName));\n\n  if (invalidChildren.length > 0) {\n    return;\n  }\n\n  link.setAttribute('target', '_blank');\n  link.setAttribute('rel', 'noopener noreferrer');\n\n  const heading = link.querySelector('h2');\n  const externalLinkIcon = domEl('i', { class: 'fa fa-external-link' });\n  if (!heading) {\n    link.appendChild(externalLinkIcon);\n  } else {\n    heading.appendChild(externalLinkIcon);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateLinkedPictures": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateLinkedPictures(container) {\n  [...container.querySelectorAll('picture + br + a, picture + a')].forEach((a) => {\n    const br = a.previousElementSibling;\n    let picture = br.previousElementSibling;\n    if (br.tagName === 'PICTURE') {\n      picture = br;\n    }\n    if (a.textContent.includes(a.getAttribute('href'))) {\n      a.innerHTML = '';\n      a.className = '';\n      a.appendChild(picture);\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::decorateLinks": {
            "changes_after_merge": 12,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateLinks(main) {\n  main.querySelectorAll('a').forEach((link) => {\n    const url = new URL(link.href);\n    // decorate video links\n    if (isVideo(url) && !link.closest('.block.hero-advanced') && !link.closest('.block.hero')) {\n      const up = link.parentElement;\n      const isInlineBlock = (link.closest('.block.vidyard') && !link.closest('.block.vidyard').classList.contains('lightbox'));\n      const type = (up.tagName === 'EM' || isInlineBlock) ? 'inline' : 'lightbox';\n      const wrapper = div({ class: 'video-wrapper' }, div({ class: 'video-container' }, a({ href: link.href }, link.textContent)));\n      if (link.href !== link.textContent) wrapper.append(p({ class: 'video-title' }, link.textContent));\n      up.innerHTML = wrapper.outerHTML;\n      embedVideo(up.querySelector('a'), url, type);\n    }\n\n    // decorate RFQ page links with pid parameter\n    if (url.pathname.startsWith('/quote-request') && !url.searchParams.has('pid') && getMetadata('family-id')) {\n      url.searchParams.append('pid', getMetadata('family-id'));\n      link.href = url.toString();\n    }\n  });\n}",
            "score": -0.4418604651162791
        },
        "scripts/scripts.js::decorateMain": {
            "changes_after_merge": 33,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n}",
            "score": 0.5348837209302326
        },
        "scripts/scripts.js::decoratePageNav": {
            "changes_after_merge": 6,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decoratePageNav(main) {\n  const sections = [...main.querySelectorAll('div.section')].slice(1);\n  const namedSections = sections.filter((section) => section.hasAttribute('data-name'));\n\n  if (namedSections) {\n    let index = 0;\n    sections.forEach((section) => {\n      if (index < namedSections.length) {\n        section.classList.add('tabs');\n        section.setAttribute('aria-labelledby', namedSections[index].getAttribute('data-name'));\n        if (section.hasAttribute('data-name')) {\n          index += 1;\n        }\n      }\n    });\n  }\n}",
            "score": -0.7209302325581395
        },
        "scripts/scripts.js::decorateParagraphs": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateParagraphs(main) {\n  [...main.querySelectorAll('p > picture')].forEach((picturePar) => {\n    picturePar.parentElement.classList.add('picture');\n  });\n  [...main.querySelectorAll('ol > li > em:only-child')].forEach((captionList) => {\n    captionList.parentElement.parentElement.classList.add('text-caption');\n  })\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::decorateTemplates": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function decorateTemplates(main) {\n  try {\n    const template = toClassName(getMetadata('template'));\n    const templates = TEMPLATE_LIST;\n    if (templates.includes(template)) {\n      const mod = await import(`../templates/${template}/${template}.js`);\n      loadCSS(`${window.hlx.codeBasePath}/templates/${template}/${template}.css`);\n      if (mod.default) {\n        await mod.default(main);\n      }\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateWaveSection": {
            "changes_after_merge": 6,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateWaveSection(main) {\n  const hasPageTabsBlock = main.querySelector('.page-tabs');\n  if (hasPageTabsBlock) return;\n\n  const lastSection = main.querySelector('div.section:last-of-type');\n  if (lastSection.classList.contains('wave')) return;\n  const hasWaveFragment = lastSection.firstElementChild && lastSection.firstElementChild.childElementCount === 1 && lastSection.querySelector('.fragment');\n  if (hasWaveFragment) return;\n\n  const waveSection = document.createElement('div');\n  waveSection.classList.add('section');\n  waveSection.classList.add('wave');\n  waveSection.setAttribute('data-section-status', 'initialized');\n  lastSection.after(waveSection);\n}",
            "score": -0.7209302325581395
        },
        "scripts/scripts.js::detectAnchor": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function detectAnchor(block) {\n  const activeHash = window.location.hash;\n  if (!activeHash) return;\n\n  const id = activeHash.substring(1, activeHash.length).toLocaleLowerCase();\n  const el = block.querySelector(`#${id}`);\n  if (el) {\n    const observer = new MutationObserver((mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes'\n          && mutation.attributeName === 'data-block-status'\n          && block.attributes.getNamedItem('data-block-status').value === 'loaded') {\n          observer.disconnect();\n          setTimeout(() => {\n            window.dispatchEvent(new Event('hashchange'));\n          },\n          3500,\n          );\n        }\n      });\n    });\n    observer.observe(block, { attributes: true });\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::detectSidebar": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function detectSidebar(main) {\n  const sidebar = main.querySelector('.section.sidebar');\n  if (sidebar) {\n    main.classList.add('sidebar');\n\n    // Create a CSS grid with the number of rows the number of children\n    // minus - 1 (the sidebar section)\n    const numSections = main.children.length - 1;\n    main.style = `grid-template-rows: repeat(${numSections}, auto);`;\n\n    // By default the sidebar will start with the first section,\n    // but can be configured in the document differently\n    const sidebarOffset = sidebar.getAttribute('data-start-sidebar-at-section');\n    if (sidebarOffset && Number.parseInt(sidebarOffset, 10)) {\n      const offset = Number.parseInt(sidebarOffset, 10);\n      sidebar.style = `grid-row: ${offset} / infinite;`;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::detectStore": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function detectStore() {\n  return getCookie('country_code') === 'US';\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::embedVideo": {
            "changes_after_merge": 13,
            "file_path": "scripts/scripts.js",
            "merged_function": "function embedVideo(link, url, type) {\n  const videoId = url.pathname.substring(url.pathname.lastIndexOf('/') + 1);\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      loadScript('https://play.vidyard.com/embed/v4.js');\n      link.parentElement.innerHTML = `<img style=\"width: 100%; margin: auto; display: block;\"\n      class=\"vidyard-player-embed\"\n      src=\"https://play.vidyard.com/${videoId}.jpg\"\n      data-uuid=\"${videoId}\"\n      data-v=\"4\"\n      data-width=\"${(type === 'lightbox') ? '700' : ''}\"\n      data-height=\"${(type === 'lightbox') ? '394' : ''}\"\n      data-autoplay=\"${(type === 'lightbox') ? '1' : '0'}\"\n      data-type=\"${(type === 'lightbox') ? 'lightbox' : 'inline'}\"/>`;\n    }\n  });\n  observer.observe(link.parentElement);\n}",
            "score": -0.39534883720930236
        },
        "scripts/scripts.js::enableStickyElements": {
            "changes_after_merge": 9,
            "file_path": "scripts/scripts.js",
            "merged_function": "function enableStickyElements() {\n  getStickyElements();\n  mobileDevice.addEventListener('change', getStickyElements);\n\n  const offsets = [];\n\n  STICKY_ELEMENTS.forEach((element, index) => {\n    offsets[index] = element.offsetTop;\n  });\n\n  window.addEventListener('scroll', () => {\n    const currentScrollPosition = window.pageYOffset;\n    let stackedHeight = 0;\n    STICKY_ELEMENTS.forEach((element, index) => {\n      if (currentScrollPosition > offsets[index] - stackedHeight) {\n        element.classList.add('sticky');\n        element.style.top = `${stackedHeight}px`;\n        stackedHeight += element.offsetHeight;\n      } else {\n        element.classList.remove('sticky');\n        element.style.top = '';\n      }\n\n      if (currentScrollPosition < LAST_SCROLL_POSITION && currentScrollPosition <= offsets[index]) {\n        element.style.top = `${Math.max(offsets[index] - currentScrollPosition, stackedHeight - element.offsetHeight)}px`;\n      } else {\n        element.style.top = `${stackedHeight - element.offsetHeight}px`;\n      }\n    });\n\n    LAST_SCROLL_POSITION = currentScrollPosition;\n  });\n}",
            "score": -0.5813953488372092
        },
        "scripts/scripts.js::fetchFragment": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function fetchFragment(path) {\n  const response = await fetch(`${path}.plain.html`);\n  if (!response.ok) {\n    // eslint-disable-next-line no-console\n    console.error('error loading fragment details', response);\n    return null;\n  }\n  const text = await response.text();\n  if (!text) {\n    // eslint-disable-next-line no-console\n    console.error('fragment details empty', path);\n    return null;\n  }\n  return text;\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::formatDate": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function formatDate(dateStr) {\n  const parts = dateStr.split('/');\n  const date = new Date(parts[2], parts[0] - 1, parts[1]);\n\n  if (date) {\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: '2-digit',\n      year: 'numeric',\n    });\n  }\n  return dateStr;\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::formatDateUTCSeconds": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function formatDateUTCSeconds(date, options = {}) {\n  const dateObj = new Date(0);\n  dateObj.setUTCSeconds(date);\n\n  return dateObj.toLocaleDateString('en-US', {\n    month: 'short',\n    day: '2-digit',\n    year: 'numeric',\n    ...options,\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getCartItemCount": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getCartItemCount() {\n  return getCookie('cart-item-count') || 0;\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::getCookie": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getCookie(cname) {\n  /* eslint-disable no-param-reassign */\n  cname += '=';\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const ca = decodedCookie.split(';');\n  /* eslint-disable-next-line no-plusplus */\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(cname) === 0) {\n      return c.substring(cname.length, c.length);\n    }\n  }\n  return '';\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::getQueryParameter": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getQueryParameter() {\n  const params = new Proxy(new URLSearchParams(window.location.search), {\n    get: (searchParams, prop) => searchParams.get(prop),\n  });\n  return params;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getStickyElements": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getStickyElements() {\n  if (mobileDevice.matches) {\n    STICKY_ELEMENTS = document.querySelectorAll('.sticky-element.sticky-mobile');\n  } else {\n    STICKY_ELEMENTS = document.querySelectorAll('.sticky-element.sticky-desktop');\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::isAuthorizedUser": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function isAuthorizedUser() {\n  const supportCookie = getCookie('STYXKEY_PortalUserRole');\n  return supportCookie && SUPPORT_CHANNELS.includes(supportCookie) && window.location.hostname.endsWith('moleculardevices.com');\n}",
            "score": -1.0
        },
        "scripts/scripts.js::isGatedResource": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function isGatedResource(item) {\n  const authorizedUser = isAuthorizedUser();\n  return item.gated === 'Yes' && item.gatedURL && item.gatedURL !== '0'\n    && (!authorizedUser || item.gatedURL.includes('https://chat.moleculardevices.com'));\n}",
            "score": -1.0
        },
        "scripts/scripts.js::isHomepage": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function isHomepage() {\n  return window.location.pathname === '/';\n}",
            "score": -1.0
        },
        "scripts/scripts.js::isVideo": {
            "changes_after_merge": 6,
            "file_path": "scripts/scripts.js",
            "merged_function": "function isVideo(url) {\n  let isV = false;\n  const hostnames = ['vids.moleculardevices.com', 'share.vidyard.com'];\n  [...hostnames].forEach((hostname) => {\n    if (url.hostname.includes(hostname)) {\n      isV = true;\n    }\n  });\n  return isV;\n}",
            "score": -0.7209302325581395
        },
        "scripts/scripts.js::lazyLoadHiddenPageNavTabs": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function lazyLoadHiddenPageNavTabs(sections, nameOfFirstSection) {\n  const activeHash = window.location.hash;\n  const active = activeHash ? activeHash.substring(1, activeHash.length) : nameOfFirstSection;\n\n  sections.forEach((section) => {\n    if (section.getAttribute('aria-labelledby') !== active) {\n      /*\n       It marks all the blocks inside the hidden sections as loaded,\n       so Franklin lib will skip them.\n       This means that the decorate functions of these blocks will not be executed\n       and the CSS will not be downloaded\n       */\n      section.querySelectorAll('.block').forEach((block) => {\n        // make the Franklin rendering skip this block\n        block.setAttribute('data-block-status', 'loaded');\n        // mark them as lazy load, so we can identify them later\n        block.setAttribute('data-block-lazy-load', true);\n        // hide them, to avoid CLS during lazy load\n        block.parentElement.style.display = 'none';\n      });\n\n      const loadLazyBlocks = (lazySection) => {\n        lazySection.querySelectorAll('.block[data-block-lazy-load]').forEach(async (block) => {\n          block.removeAttribute('data-block-lazy-load');\n          // Mark them back in the initialised status\n          block.setAttribute('data-block-status', 'initialized');\n          // Manually load each block: Download CSS, JS, execute the decorate\n          await loadBlock(block);\n          // Show the block only when everything is ready to avoid CLS\n          block.parentElement.style.display = '';\n        });\n      };\n\n      // In case the user clicks on the section, quickly render it on the spot,\n      // if it happens before the timeout bleow\n      const observer = new IntersectionObserver((entries) => {\n        if (entries.some((e) => e.isIntersecting)) {\n          observer.disconnect();\n          loadLazyBlocks(section);\n        }\n      });\n      observer.observe(section);\n\n      // Render the section with a delay\n      setTimeout(() => {\n        observer.disconnect();\n        loadLazyBlocks(section);\n      }, 3500);\n    }\n  });\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::loadBreadcrumbs": {
            "changes_after_merge": 5,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadBreadcrumbs(main) {\n  if (getMetadata('breadcrumbs') === 'auto') {\n    const block = buildBlock('breadcrumbs', '');\n    const blockWrapper = document.createElement('div');\n    blockWrapper.append(block);\n    decorateBlock(block);\n    await loadBlock(block);\n    main.querySelector('.section').prepend(blockWrapper);\n  }\n}",
            "score": -0.7674418604651163
        },
        "scripts/scripts.js::loadDelayed": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::loadEager": {
            "changes_after_merge": 16,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    await waitForLCP(LCP_BLOCKS);\n  }\n}",
            "score": -0.2558139534883721
        },
        "scripts/scripts.js::loadLazy": {
            "changes_after_merge": 33,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadBlocks(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  addFavIcon(`${window.hlx.codeBasePath}/styles/favicon.ico`, 'icon');\n  addFavIcon(`${window.hlx.codeBasePath}/styles/favicon.ico`, 'apple-touch-icon');\n  sampleRUM('lazy');\n  sampleRUM.observe(main.querySelectorAll('div[data-block-name]'));\n  sampleRUM.observe(main.querySelectorAll('picture > img'));\n}",
            "score": 0.5348837209302326
        },
        "scripts/scripts.js::loadLazyBlocks": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "loadLazyBlocks = (lazySection) => {\n        lazySection.querySelectorAll('.block[data-block-lazy-load]').forEach(async (block) => {\n          block.removeAttribute('data-block-lazy-load');\n          // Mark them back in the initialised status\n          block.setAttribute('data-block-status', 'initialized');\n          // Manually load each block: Download CSS, JS, execute the decorate\n          await loadBlock(block);\n          // Show the block only when everything is ready to avoid CLS\n          block.parentElement.style.display = '';\n        });\n      }",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::loadPage": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::loadScript": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadScript(url, callback, type, async) {\n  const head = document.querySelector('head');\n  const script = document.createElement('script');\n  script.src = url;\n  if (async) {\n    script.async = true;\n  }\n  if (type) {\n    script.setAttribute('type', type);\n  }\n  script.onload = callback;\n  head.append(script);\n  return script;\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::optimiseHeroBlock": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function optimiseHeroBlock(main) {\n  const heroBlock = main.querySelector('.hero');\n  if (!heroBlock) return;\n\n  const heroSection = document.createElement('div');\n  heroSection.appendChild(heroBlock);\n  main.prepend(heroSection);\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::processEmbedFragment": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function processEmbedFragment(element) {\n  const block = div({ class: 'embed-fragment' });\n  [...element.classList].forEach((className) => { block.classList.add(className); });\n  let found = false;\n  const link = element.querySelector('a');\n  if (link) {\n    const linkUrl = new URL(link.href);\n    let linkTextUrl;\n    try {\n      linkTextUrl = new URL(link.textContent);\n    } catch {\n      // not a url, ignore\n    }\n    if (linkTextUrl && linkTextUrl.pathname === linkUrl.pathname) {\n      const fragmentDomains = ['localhost', 'moleculardevices.com', 'moleculardevices--hlxsites.hlx.page', 'moleculardevices--hlxsites.hlx.live'];\n      found = fragmentDomains.find((domain) => linkUrl.hostname.endsWith(domain));\n      if (found) {\n        block.classList.remove('button-container');\n        const fragment = await fetchFragment(linkUrl);\n        block.innerHTML = fragment;\n        const sections = block.querySelectorAll('.embed-fragment > div');\n        [...sections].forEach((section) => {\n          section.classList.add('section');\n        });\n        decorateEmbeddedBlocks(block);\n        decorateSections(block);\n        loadBlocks(block);\n      }\n    }\n  }\n\n  if (!found) {\n    const elementInner = element.innerHTML;\n    block.append(div({ class: 'section' }));\n    block.querySelector('.section').innerHTML = elementInner;\n  }\n\n  decorateButtons(block);\n  decorateIcons(block);\n  decorateLinks(block);\n  decorateParagraphs(block);\n\n  return block;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::processSectionMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function processSectionMetadata(element) {\n  const sectionMeta = element.querySelector('.section-metadata');\n  if (sectionMeta) {\n    const meta = readBlockConfig(sectionMeta);\n    const keys = Object.keys(meta);\n    keys.forEach((key) => {\n      if (key === 'style') element.classList.add(toClassName(meta.style));\n      else element.dataset[toCamelCase(key)] = meta[key];\n    });\n    sectionMeta.remove();\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::setCookie": {
            "changes_after_merge": 9,
            "file_path": "scripts/scripts.js",
            "merged_function": "function setCookie(cname, cvalue, exdays) {\n  const date = new Date();\n  let hostName = '';\n  let domain = '';\n  let expires = '';\n  date.setTime(date.getTime() + (exdays * 24 * 60 * 60 * 1000));\n  if (exdays !== 0) {\n    expires = `expires=${date.toUTCString()}`;\n  }\n\n  domain = window.location.hostname.endsWith('.moleculardevices.com');\n  if (domain === true) {\n    hostName = 'domain=.moleculardevices.com;';\n  }\n  /* eslint-disable no-trailing-spaces */\n  document.cookie = `${cname}=${cvalue};secure;${hostName}${expires};path=/`;\n}",
            "score": -0.5813953488372092
        },
        "scripts/scripts.js::setCookieFromQueryParameters": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function setCookieFromQueryParameters(paramName, exdays) {\n  const readQuery = getQueryParameter();\n  if (readQuery[paramName]) {\n    setCookie(paramName, readQuery[paramName], exdays);\n  }\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::styleCaption": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function styleCaption(elems) {\n  elems.forEach((elem) => {\n    const checkEm = elem.parentElement.nextElementSibling.querySelector('p > em');\n    if (checkEm) {\n      const ems = checkEm.parentElement.children;\n      [...ems].forEach((em) => {\n        em.classList.add('text-caption');\n      });\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::summariseDescription": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function summariseDescription(description, charCount) {\n  let result = description;\n  if (result.length > charCount) {\n    result = result.substring(0, charCount);\n    const lastSpaceIndex = result.lastIndexOf(' ');\n    if (lastSpaceIndex !== -1) {\n      result = result.substring(0, lastSpaceIndex);\n    }\n  }\n  return `${result}\u2026`;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::unixDateToString": {
            "changes_after_merge": 5,
            "file_path": "scripts/scripts.js",
            "merged_function": "function unixDateToString(unixDateString) {\n  const date = new Date(unixDateString * 1000);\n  const day = (date.getDate()).toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear();\n  return `${month}/${day}/${year}`;\n}",
            "score": -0.7674418604651163
        },
        "scripts/scripts.js::videoButton": {
            "changes_after_merge": 9,
            "file_path": "scripts/scripts.js",
            "merged_function": "function videoButton(container, button, url) {\n  const videoId = url.pathname.split('/').at(-1).trim();\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((e) => e.isIntersecting)) {\n      observer.disconnect();\n      loadScript('https://play.vidyard.com/embed/v4.js');\n\n      const overlay = document.createElement('div');\n      overlay.id = 'sample';\n      overlay.innerHTML = `<div class=\"vidyard-player-embed\" data-uuid=\"${videoId}\" data-v=\"4\" data-type=\"lightbox\" data-autoplay=\"2\"></div>`;\n      container.prepend(overlay);\n\n      button.addEventListener('click', () => {\n        // eslint-disable-next-line no-undef\n        const players = VidyardV4.api.getPlayersByUUID(videoId);\n        const player = players[0];\n        player.showLightbox();\n      });\n    }\n  });\n  observer.observe(container);\n}",
            "score": -0.5813953488372092
        },
        "templates/about-us/about-us.js::buildAutoBlocks": {
            "changes_after_merge": 0,
            "file_path": "templates/about-us/about-us.js",
            "merged_function": "function buildAutoBlocks() {\n  // no-op\n}",
            "score": -1.0
        },
        "templates/application-note/application-note.js::buildAutoBlocks": {
            "changes_after_merge": 1,
            "file_path": "templates/application-note/application-note.js",
            "merged_function": "function buildAutoBlocks() {\n  const main = document.querySelector('.hero-container');\n  styleCaption(main.querySelectorAll('p > picture'));\n  styleCaption(main.querySelectorAll('div.table'));\n}",
            "score": -0.9534883720930233
        },
        "templates/application-note/application-note.js::styleCaption": {
            "changes_after_merge": 0,
            "file_path": "templates/application-note/application-note.js",
            "merged_function": "function styleCaption(elems) {\n  elems.forEach((elem) => {\n    const checkEm = elem.parentElement.nextElementSibling.querySelector('p > em');\n    if (checkEm) {\n      const ems = checkEm.parentElement.children;\n      [...ems].forEach((em) => {\n        em.classList.add('text-caption');\n      });\n    }\n  });\n}",
            "score": -1.0
        },
        "templates/blog/blog.js::buildAutoBlocks": {
            "changes_after_merge": 6,
            "file_path": "templates/blog/blog.js",
            "merged_function": "function buildAutoBlocks() {\n}",
            "score": -0.7209302325581395
        },
        "templates/blog/blog.js::renderBlogCard": {
            "changes_after_merge": 0,
            "file_path": "templates/blog/blog.js",
            "merged_function": "function renderBlogCard(item) {\n  const itemImage = item.thumbnail && item.thumbnail !== '0' ? item.thumbnail : item.image;\n  const buttonText = item.cardC2A && item.cardC2A !== '0' ? item.cardC2A : 'Read More';\n\n  return (\n    div({ class: 'blog-card' },\n      div({ class: 'blog-card-thumb' },\n        a({ href: item.path },\n          createOptimizedPicture(itemImage, item.title, 'lazy', [{ width: '800' }]),\n        ),\n      ),\n      div({ class: 'blog-card-caption' },\n        h3(\n          a({ href: item.path }, item.title),\n        ),\n        p({ class: 'blog-card-description' }, summariseDescription(item.description, 75)),\n        p({ class: 'button-container' },\n          a({ href: item.path, 'aria-label': buttonText, class: 'button primary' }, buttonText),\n        ),\n      ),\n    )\n  );\n}",
            "score": -1.0
        },
        "templates/compare-items/compare-banner.js::createCompareBannerInterface": {
            "changes_after_merge": 0,
            "file_path": "templates/compare-items/compare-banner.js",
            "merged_function": "async function createCompareBannerInterface(config) {\n  const banner = new CompareBanner(config);\n  await banner.loadCSSFiles();\n  return banner;\n}",
            "score": -1.0
        },
        "templates/compare-items/compare-modal.js::createCompareModalInterface": {
            "changes_after_merge": 0,
            "file_path": "templates/compare-items/compare-modal.js",
            "merged_function": "async function createCompareModalInterface(compareBanner, infos) {\n  const modalInterface = new CompareModal(compareBanner, {});\n  modalInterface.compareItemsMetadata = await modalInterface.createItems(infos);\n  await modalInterface.loadCSSFiles();\n  return modalInterface;\n}",
            "score": -1.0
        },
        "templates/event/event.js::buildAutoBlocks": {
            "changes_after_merge": 0,
            "file_path": "templates/event/event.js",
            "merged_function": "async function buildAutoBlocks() {\n  const title = document.getElementById('event-details');\n  if (title) title.classList.add('event-title');\n\n  const moreBtn = document.querySelector('main strong > a:last-of-type');\n  if (moreBtn) {\n    moreBtn.setAttribute('target', '_blank');\n    const par = moreBtn.closest('p');\n    par.classList.add('find-out-more');\n  }\n\n  renderDetails(title);\n}",
            "score": -1.0
        },
        "templates/event/event.js::renderDetails": {
            "changes_after_merge": 0,
            "file_path": "templates/event/event.js",
            "merged_function": "async function renderDetails(insertAfterElement) {\n  const summary = div({ class: 'event-summary' });\n  insertAfterElement.parentNode.insertBefore(summary, insertAfterElement.nextSibling);\n}",
            "score": -1.0
        },
        "templates/landing-page/landing-page.js::buildAutoBlocks": {
            "changes_after_merge": 4,
            "file_path": "templates/landing-page/landing-page.js",
            "merged_function": "function buildAutoBlocks() {\n  const pageParam = (new URLSearchParams(window.location.search)).get('page');\n  if (pageParam && pageParam === 'thankyou') {\n    document.body.classList.add('thankyou');\n    document.querySelector('.hero > div:nth-of-type(2)').replaceWith(div(\n      div(h1('Thank you.'), p(`Your ${getMetadata('download-title') || 'document'} is on its way.`)),\n      div(createOptimizedPicture('/images/thank-you-spectra.png', 'Thank you Spectra', false, [{ width: '750' }])),\n    ));\n    [...document.querySelectorAll('.columns')].forEach((column, i) => {\n      if (i % 2 > 0) column.classList.add('odd');\n    });\n  }\n}",
            "score": -0.813953488372093
        },
        "templates/landing-page/landing-page.js::handleEmbed": {
            "changes_after_merge": 1,
            "file_path": "templates/landing-page/landing-page.js",
            "merged_function": "function handleEmbed() {\n  const observer = new MutationObserver((mutations) => {\n    const embed = document.querySelector('main .embed.block.embed-is-loaded');\n    if (embed) {\n      iframeResizeHandler(embed);\n\n      // adjust parent div's height dynamically\n      mutations.forEach((record) => {\n        const grandGrandParent = record.target.parentElement.parentElement.parentElement;\n        if (record.target.tagName === 'IFRAME'\n            && grandGrandParent.classList.contains('embed')\n        ) {\n          const { height } = record.target.style;\n          if (height) {\n            const parent = record.target.parentElement;\n            parent.style.height = height;\n          }\n        }\n      });\n    }\n  });\n  observer.observe(document.querySelector('main'), {\n    childList: true,\n    subtree: true,\n    attributes: true,\n    attributeFilter: ['style'],\n  });\n}",
            "score": -0.9534883720930233
        },
        "templates/landing-page/landing-page.js::iframeResizeHandler": {
            "changes_after_merge": 0,
            "file_path": "templates/landing-page/landing-page.js",
            "merged_function": "async function iframeResizeHandler() {\n  await new Promise((resolve) => {\n    loadScript('/scripts/iframeResizer.min.js', () => { resolve(); });\n  });\n\n  /* global iFrameResize */\n  iFrameResize({ log: false });\n}",
            "score": -1.0
        },
        "templates/news/news.js::addSocialShare": {
            "changes_after_merge": 0,
            "file_path": "templates/news/news.js",
            "merged_function": "function addSocialShare(contentWrapper, content) {\n  const socialShare = buildBlock('social-share', content);\n  contentWrapper.append(socialShare);\n  decorateBlock(socialShare);\n  loadBlock(socialShare);\n}",
            "score": -1.0
        },
        "templates/news/news.js::buildAutoBlocks": {
            "changes_after_merge": 1,
            "file_path": "templates/news/news.js",
            "merged_function": "function buildAutoBlocks() {\n  const content = document.querySelector('main .section > .default-content-wrapper');\n  decorateAutoBlock(content);\n}",
            "score": -0.9534883720930233
        },
        "templates/news/news.js::decorateAutoBlock": {
            "changes_after_merge": 4,
            "file_path": "templates/news/news.js",
            "merged_function": "function decorateAutoBlock(content) {\n  if (!content) {\n    return;\n  }\n\n  decorateCite(content);\n\n  const contentWrapper = document.createElement('div');\n  contentWrapper.classList.add('content-wrapper');\n\n  const hasLeftCol = document.querySelector('main .section > .default-content-wrapper :nth-child(2) picture');\n  const pic = document.createElement('div');\n  if (hasLeftCol) {\n    pic.classList.add('left-col');\n    contentWrapper.append(pic);\n  }\n\n  const txt = document.createElement('div');\n  txt.classList.add('right-col');\n\n  let isInleftCol = hasLeftCol;\n  [...content.children].forEach((child) => {\n    if (isInleftCol && child.matches('p') && child.querySelector('picture')) {\n      pic.append(child);\n    } else if (!child.matches('h1') && !child.matches('cite')) {\n      isInleftCol = false;\n      txt.append(child);\n    }\n  });\n\n  content.append(contentWrapper);\n  contentWrapper.append(txt);\n\n  decorateStrong(content.querySelectorAll('.right-col p > strong'));\n  decorateCaption(content.querySelectorAll('.left-col p > picture'));\n  decorateCaption(content.querySelectorAll('.right-col p > picture'));\n\n  decorateReadMore(contentWrapper.querySelector('.button-container a'));\n\n  addSocialShare(content.querySelector('.content-wrapper'), '<p>Share this news</p>');\n}",
            "score": -0.813953488372093
        },
        "templates/news/news.js::decorateCaption": {
            "changes_after_merge": 0,
            "file_path": "templates/news/news.js",
            "merged_function": "function decorateCaption(elems) {\n  elems.forEach((elem) => {\n    const parent = elem.parentElement;\n    const next = parent.nextElementSibling;\n    if (parent && next && next.querySelector('p > em')) {\n      next.classList.add('text-caption');\n    }\n  });\n}",
            "score": -1.0
        },
        "templates/news/news.js::decorateCite": {
            "changes_after_merge": 3,
            "file_path": "templates/news/news.js",
            "merged_function": "function decorateCite(parentElem) {\n  const dt = getPublicationDateFromMetaData();\n  if (dt) {\n    const cite = document.createElement('cite');\n    cite.innerHTML = dt;\n    parentElem.append(cite);\n  }\n}",
            "score": -0.8604651162790697
        },
        "templates/news/news.js::decorateEmbed": {
            "changes_after_merge": 0,
            "file_path": "templates/news/news.js",
            "merged_function": "function decorateEmbed(elems) {\n  elems.forEach((elem) => {\n    const embedUrl = elem.querySelector('a');\n    loadEmbed(elem, embedUrl.href);\n    embedUrl.remove();\n  });\n}",
            "score": -1.0
        },
        "templates/news/news.js::decorateReadMore": {
            "changes_after_merge": 2,
            "file_path": "templates/news/news.js",
            "merged_function": "function decorateReadMore(linkElem) {\n  if (linkElem) {\n    linkElem.classList.add('ext');\n    linkElem.setAttribute('target', '_blank');\n    linkElem.setAttribute('rel', 'noopener noreferrer');\n\n    const extLinkBtn = document.createElement('i');\n    extLinkBtn.classList.add('fa', 'fa-external-link');\n    extLinkBtn.setAttribute('aria-hidden', 'true');\n\n    linkElem.append(extLinkBtn);\n  }\n}",
            "score": -0.9069767441860466
        },
        "templates/news/news.js::decorateStrong": {
            "changes_after_merge": 0,
            "file_path": "templates/news/news.js",
            "merged_function": "function decorateStrong(elems) {\n  elems.forEach((elem) => {\n    const parent = elem.parentElement;\n    if (parent.children.length === 1) {\n      parent.classList.add('text-strong');\n    }\n  });\n}",
            "score": -1.0
        },
        "templates/news/news.js::decorateTitle": {
            "changes_after_merge": 0,
            "file_path": "templates/news/news.js",
            "merged_function": "function decorateTitle(parentElem, titleElem) {\n  titleElem.classList.add('event-title');\n  if (titleElem) {\n    parentElem.append(titleElem);\n  }\n}",
            "score": -1.0
        },
        "templates/news/news.js::getPublicationDateFromMetaData": {
            "changes_after_merge": 0,
            "file_path": "templates/news/news.js",
            "merged_function": "function getPublicationDateFromMetaData() {\n  let dateStr = '';\n  const dtElem = document.querySelector('head meta[name=\"publication-date\"]');\n  if (dtElem) {\n    if (dtElem.getAttribute('content')) {\n      dateStr = formatDate(dtElem.getAttribute('content'));\n    }\n  }\n  return dateStr;\n}",
            "score": -1.0
        },
        "templates/publication/publication.js::buildAutoBlocks": {
            "changes_after_merge": 1,
            "file_path": "templates/publication/publication.js",
            "merged_function": "function buildAutoBlocks() {\n  const content = document.querySelector('.section > .default-content-wrapper');\n  decorateAutoBlock(content);\n}",
            "score": -0.9534883720930233
        },
        "test/blocks/carousel/carousel-cards-style.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/carousel/carousel-cards-style.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/carousel/carousel.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/carousel/carousel.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/embed/embed.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/embed/embed.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/footer/footer.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/footer/footer.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/header/header.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/header/header.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/hero-video/hero-video.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/hero-video/hero-video.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/news/news.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/news/news.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/social-share/social-share.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/social-share/social-share.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/table/table.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/table/table.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/blocks/vidyard/vidyard.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/blocks/vidyard/vidyard.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/scripts/block-utils.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/scripts/block-utils.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/templates/news/news.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/templates/news/news.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        },
        "test/templates/publication/publication.test.js::sleep": {
            "changes_after_merge": 0,
            "file_path": "test/templates/publication/publication.test.js",
            "merged_function": "sleep = async (time = 1000) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve(true);\n  }, time);\n})",
            "score": -1.0
        }
    },
    "theplayers": {
        "blocks/ads/ads.js::buildLeftPromoClockAd": {
            "changes_after_merge": 1,
            "file_path": "blocks/ads/ads.js",
            "merged_function": "function buildLeftPromoClockAd(position) {\n  const sectionBefore = document.querySelector('.leaderboard-container, .tee-times-container');\n  if (sectionBefore) {\n    // setup clock\n    window.rolexNCVHdBD = [{\n      city: 'Ponte Vedra Beach',\n      local: 'Your Time',\n      cdtext: 'Change countdown values',\n      startDate: '20170605',\n      endDate: '20240611',\n      cdyear: '2020',\n      cdmonth: '06',\n      cdday: '11',\n      cdhour: '08',\n      cdmin: '0',\n      offset: -4,\n      dst: '0',\n    }];\n    // build ad section\n    const adSection = document.createElement('div');\n    adSection.className = `section ad-container ad-container-${toClassName(position)}`;\n    adSection.innerHTML = `<div class=\"ad block\">\n        <div class=\"ad-columns\">\n          <div class=\"ad-column-left\"></div>\n          <div class=\"ad-column-right\">\n            <iframe\n              id=\"rolexFrameNCVHdBD\"\n              class=\"rolex-frame\"\n              data-src=\"/blocks/ads/rolex/rolex.frame.html?cities=rolexNCVHdBD\"\n              style=\"width:100%;height:90px;border:0;padding:0;overflow:hidden;scroll:none\"\n              scrolling=\"NO\"\n              frameborder=\"NO\"\n              transparency=\"true\"\n              src=\"/blocks/ads/rolex/rolex.frame.html?cities=rolexNCVHdBD\">\n            </iframe>\n          </div>\n        </div>\n      </div>`;\n    sectionBefore.parentNode.insertBefore(adSection, sectionBefore);\n    return adSection.querySelector('.ad-column-left');\n  }\n  return null;\n}",
            "score": -0.9534883720930233
        },
        "blocks/ads/ads.js::buildLeftPromoToggleAd": {
            "changes_after_merge": 2,
            "file_path": "blocks/ads/ads.js",
            "merged_function": "function buildLeftPromoToggleAd(position) {\n  const sectionBefore = document.querySelector('.leaderboard-container, .tee-times-container');\n  if (sectionBefore) {\n    // build ad section\n    const adSection = document.createElement('div');\n    adSection.className = `section ad-container ad-container-${toClassName(position)}`;\n    adSection.innerHTML = `<div class=\"ad block\">\n      <div class=\"ad-columns\">\n        <div class=\"ad-column-left\"></div>\n        <div class=\"ad-column-right\">\n          <iframe\n            id=\"rolexFrame1txbOyjg\"\n            class=\"rolex-frame rolex-frame-medium\"\n            data-src=\"/blocks/ads/rolex/rolex.frameToggle.html?eventcity=Ponte+Vedra+Beach&utc=-4&lang=en\"\n            style=\"width:450px;height:100px;border:0;margin:0;padding:0;overflow:hidden;scroll:none\"\n            scrolling=\"NO\"\n            frameborder=\"NO\"\n            transparency=\"true\"\n            src=\"/blocks/ads/rolex/rolex.frameToggle.html?eventcity=Ponte+Vedra+Beach&utc=-4&lang=en\">\n          </iframe>\n          <iframe\n            id=\"rolexFrame1txbOyjg\"\n            class=\"rolex-frame rolex-frame-small\"\n            data-src=\"/blocks/ads/rolex/rolex.frameToggleMobile.html?eventcity=Ponte+Vedra+Beach&utc=-4&lang=en\"\n            style=\"width:100%;height:58px;border:0px;margin:0px;padding:0px;overflow:hidden;background-color:rgb(0,96,57);\"\n            scrolling=\"NO\"\n            frameborder=\"NO\"\n            transparency=\"true\"\n            src=\"/blocks/ads/rolex/rolex.frameToggleMobile.html?eventcity=Ponte+Vedra+Beach&utc=-4&lang=en\">\n          </iframe>\n        </div>\n      </div>`;\n    sectionBefore.parentNode.insertBefore(adSection, sectionBefore);\n    return adSection.querySelector('.ad-column-left');\n  }\n  return null;\n}",
            "score": -0.9069767441860466
        },
        "blocks/ads/ads.js::buildRightAd": {
            "changes_after_merge": 0,
            "file_path": "blocks/ads/ads.js",
            "merged_function": "function buildRightAd(position) {\n  const firstNonFullWidthSection = findNonFullWidthSection(document.querySelector('main'));\n  if (firstNonFullWidthSection) {\n    // build ad section\n    const adSection = document.createElement('div');\n    adSection.className = `section ad-container ad-container-${toClassName(position)}`;\n    adSection.innerHTML = '<div class=\"ad block\"><div class=\"ad-sticky\"></div></div>';\n    firstNonFullWidthSection.classList.add('ad-cols');\n    firstNonFullWidthSection.append(adSection);\n    return adSection.querySelector('.ad-sticky');\n  }\n  return null;\n}",
            "score": -1.0
        },
        "blocks/ads/ads.js::buildTopAd": {
            "changes_after_merge": 0,
            "file_path": "blocks/ads/ads.js",
            "merged_function": "function buildTopAd(position) {\n  const heroSection = document.querySelector('.hero-container, .carousel-container');\n  if (heroSection) {\n    // build ad section\n    const adSection = document.createElement('div');\n    adSection.className = `section ad-container ad-container-${toClassName(position)}`;\n    adSection.innerHTML = '<div class=\"ad block\"><div></div></div>';\n    heroSection.after(adSection);\n    return adSection.querySelector('.ad > div');\n  }\n  return null;\n}",
            "score": -1.0
        },
        "blocks/ads/ads.js::debounce": {
            "changes_after_merge": 0,
            "file_path": "blocks/ads/ads.js",
            "merged_function": "function debounce(func, timeout = 500) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => { func.apply(this, args); }, timeout);\n  };\n}",
            "score": -1.0
        },
        "blocks/ads/ads.js::findNonFullWidthSection": {
            "changes_after_merge": 0,
            "file_path": "blocks/ads/ads.js",
            "merged_function": "function findNonFullWidthSection(main) {\n  const FULL_WIDTH_BLOCKS = ['ad', 'carousel', 'carousel course', 'hero', 'news', 'player-feature', 'teaser', 'weather'];\n  const sections = main.querySelectorAll('.section');\n  const nonFullWidthSection = [...sections]\n    .find((section) => ![...section.querySelectorAll('.block')] // check section\n      .find((child) => FULL_WIDTH_BLOCKS.includes(child.className.replace('block', '').trim()))); // check blocks in section\n  return nonFullWidthSection;\n}",
            "score": -1.0
        },
        "blocks/ads/ads.js::getDevice": {
            "changes_after_merge": 0,
            "file_path": "blocks/ads/ads.js",
            "merged_function": "function getDevice() {\n  const width = window.innerWidth;\n  if (width > 970) return 'desktop';\n  if (width > 728) return 'tablet';\n  return 'mobile';\n}",
            "score": -1.0
        },
        "blocks/ads/ads.js::isInViewport": {
            "changes_after_merge": 0,
            "file_path": "blocks/ads/ads.js",
            "merged_function": "function isInViewport(el) {\n  const rect = el.getBoundingClientRect();\n  return (\n    rect.top >= 0\n    && rect.left >= 0\n    && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)\n    && rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  if (config.source && config.type) {\n    block.innerHTML = '';\n    const pages = await lookupPages();\n    const items = pages.filter((e) => e.path.startsWith(config.source));\n    if (items) {\n      const type = config.type.toLowerCase();\n      if (type === 'champions') decorateChampionCardsFeed(items, block);\n    }\n  }\n\n  /* change to ul, li */\n  const ul = document.createElement('ul');\n  [...block.children].forEach((row) => {\n    const li = document.createElement('li');\n    li.innerHTML = row.innerHTML;\n    [...li.children].forEach((div) => {\n      if (div.children.length === 1 && div.querySelector('picture')) div.className = 'cards-card-image';\n      else {\n        div.className = 'cards-card-body';\n        const bubble = div.querySelector('u');\n        if (bubble) {\n          bubble.className = 'cards-card-bubble';\n          bubble.closest('p').className = 'cards-card-bubble-wrapper';\n        }\n        const country = div.querySelector('.icon[class*=icon-flag-]');\n        if (country) {\n          country.closest('p').classList.add('cards-card-country');\n          div.classList.add('cards-card-country-wrapper');\n        }\n        const list = div.querySelector('ul, ol');\n        if (list) {\n          const links = document.createElement('div');\n          links.className = 'cards-card-links';\n          links.append(list);\n          div.after(links);\n        }\n      }\n    });\n    ul.append(li);\n  });\n  ul.querySelectorAll('img').forEach((img) => img.closest('picture').replaceWith(createOptimizedPicture(img.src, img.alt, false, [{ width: '750' }])));\n  block.textContent = '';\n  block.append(ul);\n}",
            "score": -0.9534883720930233
        },
        "blocks/cards/cards.js::decorateChampionCardsFeed": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function decorateChampionCardsFeed(champions, block) {\n  block.classList.add('two-cols');\n  // eslint-disable-next-line no-param-reassign\n  champions = champions.sort((a, b) => {\n    const aYear = parseInt(a.title.split(' ').pop(), 10);\n    const bYear = parseInt(b.title.split(' ').pop(), 10);\n    return (aYear > bYear) ? -1 : 1;\n  });\n  champions.forEach((champion) => {\n    const year = champion.title.split(' ').pop();\n    const name = champion.title.replace('THE PLAYERS Championship:', '').replace(year, '').trim();\n    const card = document.createElement('div');\n    card.innerHTML = `<div>\n        <a href=\"${champion.path}\">${createOptimizedPicture(champion.image).outerHTML}</a>\n      </div>\n      <div>${year ? `<p class=\"cards-card-bubble-wrapper\"><u class=\"cards-card-bubble\">${year}</u></p>` : ''}<h3><a href=\"${champion.path}\">${name}</a></h3></div>`;\n    block.append(card);\n  });\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "async function decorate(block) {\n  const observer = new IntersectionObserver(async (entries) => {\n    if (entries.some((entry) => entry.isIntersecting)) {\n      observer.disconnect();\n\n      const blockClasses = [...block.classList];\n      const buttons = document.createElement('div');\n      buttons.className = 'carousel-buttons';\n      if (blockClasses.includes('course')) buttons.classList.add('course-buttons');\n      /* gallery carousel */\n      if (blockClasses.includes('gallery')) {\n        buttons.classList.add('gallery-buttons');\n        block.closest('.carousel-container').classList.add('gallery-container');\n        await insertGallerySlides(block);\n      }\n      /* course feed carousel */\n      if (blockClasses.includes('course-feed')) {\n        block.classList.add('course');\n        buttons.classList.add('course-buttons');\n        block.closest('.carousel-container').classList.add('course-container');\n        await insertCourseFeedSlides(block);\n      }\n\n      [...block.children].forEach((row, i) => {\n        const classes = ['image', 'text'];\n        classes.forEach((e, j) => {\n          if (row.children[j]) row.children[j].classList.add(`carousel-${e}`);\n        });\n        /* course carousel */\n        if (blockClasses.includes('course')) {\n          const text = row.querySelector('.carousel-text');\n          text.classList.add('course-text');\n          // setup overview (title, img, desc)\n          const overview = document.createElement('div');\n          overview.classList.add('course-overview');\n          overview.append(\n            text.querySelector('h2'), // title\n            text.querySelector('h2 + h3'), // par heading\n            text.querySelector('h2 + h3 + p'), // course img\n            text.querySelector('h2 + h3 + p + p'), // course desc\n          );\n          const holeImg = overview.querySelector('picture');\n          if (holeImg) holeImg.parentNode.classList.add('course-hole');\n          // setup stats\n          const statistics = document.createElement('div');\n          statistics.classList.add('course-statistics');\n          statistics.append(\n            text.querySelector('h3'), // statistics heading\n            text.querySelector('h3 + ul'), // statistics list\n          );\n          const statsTable = document.createElement('table');\n          const allStats = statistics.querySelector('ul');\n          let stats = [];\n          if (allStats) stats = allStats.querySelectorAll('li');\n          stats.forEach((s) => {\n            const stat = s.querySelector('strong').textContent;\n            // setup scoring average ring\n            if (stat.toUpperCase() === 'SCORING AVG') {\n              const avg = document.createElement('div');\n              avg.classList.add('course-avg');\n              avg.innerHTML = `<p>${s.innerHTML}</p>`;\n              allStats.parentNode.insertBefore(avg, allStats);\n              s.remove();\n            } else {\n              const tableRow = document.createElement('tr');\n              tableRow.classList.add(`course-${toClassName(stat)}`);\n              const val = parseInt(s.textContent.split(' ')[s.textContent.split(' ').length - 1], 10);\n\n              const bar = document.createElement('td');\n              bar.classList.add('course-stat-graph');\n              bar.innerHTML = `<div class=\"course-stat-bar\" style=\"width: ${val}%\"></div>`;\n\n              const percent = document.createElement('td');\n              percent.classList.add('course-stat-percent');\n              percent.innerHTML = `${val}%`;\n\n              const thisStat = document.createElement('td');\n              thisStat.classList.add('course-stat-title');\n              thisStat.innerHTML = s.querySelector('strong').textContent;\n\n              tableRow.append(bar, percent, thisStat);\n              statsTable.append(tableRow);\n            }\n          });\n          if (allStats && statsTable) allStats.replaceWith(statsTable);\n\n          text.prepend(overview, statistics);\n          // setup photo credits\n          const credits = text.querySelector('p > em');\n          if (credits) credits.parentNode.classList.add('course-credits');\n        }\n        /* buttons */\n        const button = document.createElement('button');\n        if (!i) {\n          button.classList.add('selected');\n          buttons.setAttribute('aria-hidden', true);\n        } else {\n          buttons.removeAttribute('aria-hidden');\n        }\n        button.addEventListener('click', () => {\n          block.scrollTo({ top: 0, left: row.offsetLeft - row.parentNode.offsetLeft, behavior: 'smooth' });\n          [...buttons.children].forEach((r) => r.classList.remove('selected'));\n          button.classList.add('selected');\n        });\n        buttons.append(button);\n      });\n      block.parentElement.prepend(buttons);\n      block.classList.add('appear');\n    }\n  }, { threshold: 0 });\n\n  observer.observe(block.parentElement);\n}",
            "score": -0.8604651162790697
        },
        "blocks/carousel/carousel.js::findStatPercent": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function findStatPercent(id, stats, divisor) {\n  const stat = stats.find((s) => s.id === id);\n  if (stat) {\n    const percent = parseInt(stat.eV2, 10) / divisor;\n    return Math.round(percent * 100);\n  }\n  return 0;\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::insertCourseFeedSlides": {
            "changes_after_merge": 3,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "async function insertCourseFeedSlides(block) {\n  const damPrefix = 'https://www.pgatour.com/pgatour/courses';\n  const cloudinaryPrefix = 'https://pga-tour-res.cloudinary.com/image/upload/f_auto,q_auto';\n  const config = readBlockConfig(block);\n  block.innerHTML = '';\n\n  const resp = await fetch('https://statdata.pgatour.com/r/011/coursestat.json');\n  const json = await resp.json();\n  if (json && json.courses && json.courses[0].holes) {\n    const code = json.tourCode;\n    const perm = json.permNum;\n    // eslint-disable-next-line no-restricted-syntax\n    for (const hole of json.courses[0].holes) {\n      const damSrc = `${damPrefix}/${code}${perm}/${perm}/holes/hole${hole.holeNum}.jpg`;\n      const holeJpg = `${cloudinaryPrefix},w_1290/v1/pgatour/courses/${code}${perm}/${perm}/holes/hole${hole.holeNum}.jpg`;\n      const holePng = `${cloudinaryPrefix},w_150/holes_${config.year}_${code}_${perm}_${perm}_overhead_full_${hole.holeNum}.png`;\n      // eslint-disable-next-line no-await-in-loop\n      const metaresp = await fetch(`${damSrc}/jcr:content/metadata.json`);\n      // eslint-disable-next-line no-await-in-loop\n      const meta = await metaresp.json();\n      const metaDesc = meta['dc:description'];\n      const metaCreator = meta['dc:creator'];\n      const metaRights = meta['dc:rights'];\n      const metaTitle = meta['dc:title'];\n      const avg = hole.stats.find((stat) => stat.id === '43108').eV2;\n      const stats = hole.stats.filter((stat) => stat.id !== '43108');\n      const statsDivisor = stats.reduce((a, b) => {\n        // eslint-disable-next-line no-param-reassign\n        if (a.eV2) a = a.eV2;\n        return parseInt(a, 10) + parseInt(b.eV2, 10);\n      });\n      const eagle = findStatPercent('43106', stats, statsDivisor);\n      const birdie = findStatPercent('43107', stats, statsDivisor);\n      const par = findStatPercent('43523', stats, statsDivisor);\n      const bogey = findStatPercent('41184', stats, statsDivisor);\n      const bogey2 = findStatPercent('43520', stats, statsDivisor);\n\n      const div = document.createElement('div');\n      div.innerHTML = `\n        <div class=\"carousel-image\">\n          <picture>\n            <img src=\"${holeJpg}\" alt=\"${metaTitle}\" />\n          </picture>\n        </div>\n        <div class=\"carousel-text course-text\">\n          <div class=\"course-overview\">\n            <h2>Hole #${hole.holeNum}</h2>\n            <h3>PAR ${hole.par}, ${hole.yards} Yards</h3>\n            <p class=\"course-hole\">\n              <picture>\n                <img src=\"${holePng}\" alt=\"${metaTitle}\" />\n              </picture>\n            </p>\n            <p>${metaDesc}</p>\n          </div>\n            <div class=\"course-statistics\">\n              <h3 id=\"statistics\">${config.year} Statistics</h3>\n              <div class=\"course-avg\">\n                  <p>${avg} <strong>SCORING AVG</strong>\n                  </p>\n              </div>\n              <table>\n                <tbody>\n                  <tr class=\"course-eagle\">\n                    <td class=\"course-stat-graph\">\n                      <div class=\"course-stat-bar\" style=\"width: ${eagle}%\"></div>\n                    </td>\n                    <td class=\"course-stat-percent\">${eagle}%</td>\n                    <td class=\"course-stat-title\">Eagle</td>\n                  </tr>\n                  <tr class=\"course-birdie\">\n                    <td class=\"course-stat-graph\">\n                      <div class=\"course-stat-bar\" style=\"width: ${birdie}%\"></div>\n                    </td>\n                    <td class=\"course-stat-percent\">${birdie}%</td>\n                    <td class=\"course-stat-title\">Birdie</td>\n                  </tr>\n                  <tr class=\"course-par\">\n                    <td class=\"course-stat-graph\">\n                      <div class=\"course-stat-bar\" style=\"width: ${par}%\"></div>\n                    </td>\n                    <td class=\"course-stat-percent\">${par}%</td>\n                    <td class=\"course-stat-title\">Par</td>\n                  </tr>\n                  <tr class=\"course-bogey\">\n                    <td class=\"course-stat-graph\">\n                        <div class=\"course-stat-bar\" style=\"width: ${bogey}%\"></div>\n                    </td>\n                    <td class=\"course-stat-percent\">${bogey}%</td>\n                    <td class=\"course-stat-title\">Bogey</td>\n                  </tr>\n                  <tr class=\"course-2--bogey\">\n                    <td class=\"course-stat-graph\">\n                      <div class=\"course-stat-bar\" style=\"width: ${bogey2}%\"></div>\n                    </td>\n                    <td class=\"course-stat-percent\">${bogey2}%</td>\n                    <td class=\"course-stat-title\">2+ Bogey</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <p class=\"course-credits\">PHOTO BY <strong>${metaCreator.join(', ')}</strong> / ${metaRights}</p>\n        </div>`;\n      block.append(div);\n    }\n  }\n}",
            "score": -0.8604651162790697
        },
        "blocks/carousel/carousel.js::insertGallerySlides": {
            "changes_after_merge": 4,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "async function insertGallerySlides(block) {\n  const damPrefix = 'https://www.pgatour.com';\n  const config = readBlockConfig(block);\n  const galleryURL = config.source;\n  const limit = config.limit || 24;\n  block.innerHTML = '';\n\n  const directURL = `${galleryURL}&size=${limit}`;\n  const resp = await fetch(`https://little-forest-58aa.david8603.workers.dev/?url=${encodeURIComponent(directURL)}`);\n  const json = await resp.json();\n\n  json.items.forEach((photo) => {\n    const div = document.createElement('div');\n    div.innerHTML = `\n      <div class=\"gallery-image\"><picture><img src=\"${damPrefix}${photo.image}\" alt=\"${photo.description}\"/ ></picture></div>\n      <div class=\"gallery-text\">\n        <p class=\"gallery-text-title\">Photo Gallery${config.title ? `: ${config.title}` : ''}</p>\n        ${photo.description ? `<p class=\"gallery-text-desc\">${photo.description}</p>` : ''}\n        ${photo.credit ? `<p class=\"gallery-text-credit\">Photo by <strong>${photo.credit}</strong></p>` : ''}\n      </div>\n    `;\n    block.append(div);\n  });\n}",
            "score": -0.813953488372093
        },
        "blocks/columns/columns.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/columns/columns.js",
            "merged_function": "function decorate(block) {\n  block.querySelectorAll('img').forEach((img) => {\n    img.closest('div').classList.add('columns-contains-image');\n  });\n  const subtitles = block.querySelectorAll('h2 + p strong');\n  if (subtitles) {\n    subtitles.forEach((subtitle) => {\n      if (subtitle && subtitle.parentNode.textContent === subtitle.textContent) {\n        const title = subtitle.parentNode.previousElementSibling;\n        const titleWrapper = document.createElement('div');\n        titleWrapper.className = 'columns-column-title';\n        titleWrapper.append(title.cloneNode(true), subtitle.parentNode);\n        title.replaceWith(titleWrapper);\n      }\n    });\n  }\n}",
            "score": -1.0
        },
        "blocks/course/course.js::buildStatRow": {
            "changes_after_merge": 0,
            "file_path": "blocks/course/course.js",
            "merged_function": "function buildStatRow(stat, value) {\n  const row = document.createElement('tr');\n  row.innerHTML = `<td>\n      <div class=\"course-hole-bar\" style=\"width: ${value}%\"></div>\n    </td>\n    <td>${value}%</td>\n    <td>${stat}</td>`;\n  return row;\n}",
            "score": -1.0
        },
        "blocks/course/course.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/course/course.js",
            "merged_function": "async function decorate(block) {\n  block.parentElement.style.visibility = 'hidden';\n  const hasStats = block.className.includes('stats');\n  const buttons = document.createElement('div');\n  buttons.className = 'course-buttons';\n  [...block.children].forEach((row, i) => {\n    if (!i) row.querySelector('img').setAttribute('loading', 'eager');\n    row.className = `course-hole course-hole-${i + 1}`;\n    const classes = ['image', 'text'];\n    classes.forEach((c, j) => {\n      if (row.children[j]) row.children[j].classList.add(`course-hole-${c}`);\n    });\n    const text = row.querySelector('.course-hole-text');\n    if (text) {\n      const credits = document.createElement('div');\n      credits.className = 'course-hole-credits';\n      credits.append(text.lastElementChild);\n      const data = document.createElement('div');\n      data.className = 'course-hole-data';\n      [...text.children].forEach((child) => data.append(child));\n      const title = data.querySelector('h2');\n      title.className = 'course-hole-title';\n      const subtitle = document.createElement('p');\n      subtitle.className = 'course-hole-subtitle';\n      subtitle.innerHTML = `<span class=\"course-hole-par\">&nbsp;</span> \n        <span class=\"course-hole-yards\">&nbsp;</span>`;\n      title.after(subtitle);\n      const overhead = data.querySelector('picture > img');\n      if (overhead) overhead.parentElement.parentElement.className = 'course-hole-overhead';\n      text.append(data, credits);\n      // prebuild stats in stats variant\n      if (hasStats) {\n        const stats = document.createElement('div');\n        stats.className = 'course-hole-stats';\n        stats.innerHTML = `<h3>&nbsp;</h3>\n          <div class=\"course-hole-avg\">\n            <p></p>\n          </div>\n          <table class=\"course-hole-chart\"><tbody></tbody></table>`;\n        text.append(stats);\n      }\n    }\n    // add button\n    const button = document.createElement('button');\n    if (!i) {\n      button.classList.add('selected');\n      buttons.setAttribute('aria-hidden', true);\n    } else {\n      buttons.removeAttribute('aria-hidden');\n    }\n    button.addEventListener('click', () => {\n      block.scrollTo({ top: 0, left: row.offsetLeft - row.parentNode.offsetLeft, behavior: 'smooth' });\n      [...buttons.children].forEach((r) => r.classList.remove('selected'));\n      button.classList.add('selected');\n    });\n    buttons.append(button);\n  });\n  if (buttons.hasChildNodes()) block.parentElement.prepend(buttons);\n  block.parentElement.removeAttribute('style');\n\n  const observer = new IntersectionObserver(async (entries) => {\n    if (entries.some((entry) => entry.isIntersecting)) {\n      // populate stats in stats variant\n      if (hasStats) loadStats(block);\n    }\n  }, { threshold: 0 });\n\n  observer.observe(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/course/course.js::findStatPercent": {
            "changes_after_merge": 0,
            "file_path": "blocks/course/course.js",
            "merged_function": "function findStatPercent(id, stats, divisor) {\n  const stat = stats.find((s) => s.id === id);\n  if (stat) {\n    const percent = parseInt(stat.eV2, 10) / divisor;\n    return Math.round(percent * 100);\n  }\n  return 0;\n}",
            "score": -1.0
        },
        "blocks/course/course.js::loadStats": {
            "changes_after_merge": 1,
            "file_path": "blocks/course/course.js",
            "merged_function": "async function loadStats(block) {\n  const placeholders = await fetchPlaceholders();\n  const code = placeholders.tourCode;\n  const id = placeholders.tournamentId;\n  const resp = await fetch(`https://little-forest-58aa.david8603.workers.dev/?url=${encodeURIComponent(`https://statdata.pgatour.com/${code}/${id}/coursestat.json`)}`);\n  const json = await resp.json();\n  if (json && json.courses && json.courses[0].holes) {\n    const holes = block.querySelectorAll('.course-hole');\n    const allStats = json.courses[0].holes;\n    holes.forEach((hole, i) => {\n      const stats = allStats[i];\n      const par = hole.querySelector('.course-hole-par');\n      if (par && stats.par) par.textContent = `Par ${stats.par},`;\n      const yards = hole.querySelector('.course-hole-yards');\n      if (yards && stats.yards) yards.textContent = `${stats.yards} Yards`;\n      const title = hole.querySelector('.course-hole-stats h3');\n      if (title) title.textContent = `${json.year || ''} Statistics`.trim();\n      const avgEl = hole.querySelector('.course-hole-avg');\n      const avg = stats.stats.find((stat) => stat.id === '43108').eV2;\n      if (avgEl && avg) avgEl.innerHTML = `<span>${avg}</span> Scoring Avg`;\n      const table = hole.querySelector('.course-hole-chart tbody');\n      if (table) {\n        const holeStats = stats.stats.filter((stat) => stat.id !== '43108');\n        const statsDivisor = holeStats.reduce((a, b) => {\n          // eslint-disable-next-line no-param-reassign\n          if (a.eV2) a = a.eV2;\n          return parseInt(a, 10) + parseInt(b.eV2, 10);\n        });\n        const tableStats = [\n          { stat: 'Eagle', value: findStatPercent('43106', holeStats, statsDivisor) },\n          { stat: 'Birdie', value: findStatPercent('43107', holeStats, statsDivisor) },\n          { stat: 'Par', value: findStatPercent('43523', holeStats, statsDivisor) },\n          { stat: 'Bogey', value: findStatPercent('41184', holeStats, statsDivisor) },\n          { stat: '2+ Bogey', value: findStatPercent('43520', holeStats, statsDivisor) },\n        ];\n        tableStats.forEach((s) => table.append(buildStatRow(s.stat, s.value)));\n      }\n    });\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/embed/embed.js::buildDefaultEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function buildDefaultEmbed(url) {\n  return `<div class=\"embed-iframe-wrapper\">\n    <iframe src='${url}' allow=\"encrypted-media\" allowfullscreen></iframe>\n  </div>`;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::buildFacebookEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function buildFacebookEmbed(url) {\n  return `<div class=\"embed-facebook-wrapper\">\n    <iframe\n      src=\"https://www.facebook.com/plugins/video.php?href=${encodeURIComponent(url)}&show_text=0&width=560\"\n      width=\"560\"\n      height=\"315\"\n      style=\"border:none;overflow:hidden\"\n      scrolling=\"no\"\n      frameborder=\"0\"\n      allowfullscreen=\"true\"\n      allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\"\n      allowFullScreen=\"true\">\n    </iframe>\n  </div>`;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::buildFormEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function buildFormEmbed(url) {\n  return `<div class=\"embed-form-wrapper\">\n    <iframe src='${url}' allow=\"encrypted-media\" allowfullscreen></iframe>\n  </div>`;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::buildInstagramEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function buildInstagramEmbed(url) {\n  const endingSlash = url.pathname.endsWith('/') ? '' : '/';\n  const location = window.location.href.endsWith('.html') ? window.location.href : `${window.location.href}.html`;\n  const src = `${url.origin}${url.pathname}${endingSlash}embed/?cr=1&amp;v=13&amp;wp=1316&amp;rd=${location}`;\n  return `<div class=\"embed-instagram-wrapper\">\n    <iframe src=\"${src}\" allowtransparency=\"true\" allowfullscreen=\"true\" frameborder=\"0\" loading=\"lazy\">\n    </iframe>\n  </div>`;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::buildSpotifyEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function buildSpotifyEmbed(url) {\n  const playlist = new URL(url).pathname.split('/').pop();\n  return `<div class=\"embed-spotify-wrapper\">\n    <iframe\n      src=\"https://open.spotify.com/embed?uri=spotify%3Aplaylist%3A${(playlist)}\"\n      height=\"380\"\n      frameborder=\"0\"\n      style=\"border-radius: 12px;\"\n      allowtransparency=\"true\"\n      allow=\"encrypted-media\">\n      </iframe>\n  </div>`;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::buildTwitterEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function buildTwitterEmbed(url) {\n  loadScript('https://platform.twitter.com/widgets.js');\n  return `<blockquote class=\"twitter-tweet embed-twitter-wrapper\"><a href=\"${url}\"></a></blockquote>`;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::buildYoutubeEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function buildYoutubeEmbed(url) {\n  const video = new URL(url).pathname.replaceAll('/', '');\n  return `<div class=\"embed-youtube-wrapper\">\n    <iframe\n    width=\"560\"\n    height=\"315\"\n    src=\"https://www.youtube.com/embed/${video}\"\n    title=\"YouTube video player\"\n    frameborder=\"0\"\n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n    allowfullscreen></iframe>\n  </div>`;\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function decorate(block) {\n  const observer = new IntersectionObserver(async (entries) => {\n    if (entries.some((entry) => entry.isIntersecting)) {\n      observer.disconnect();\n      loadEmbed(block);\n    }\n  }, { threshold: 0 });\n\n  observer.observe(block);\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::loadEmbed": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function loadEmbed(block) {\n  const a = block.querySelector('a');\n  if (a) {\n    const url = new URL(a.href);\n    const { hostname } = url;\n\n    if (hostname.includes('pages08')) {\n      a.outerHTML = buildFormEmbed(url);\n    } else if (hostname.includes('youtu')) {\n      a.outerHTML = buildYoutubeEmbed(url);\n    } else if (hostname.includes('twitter')) {\n      a.outerHTML = buildTwitterEmbed(url);\n    } else if (hostname.includes('instagram')) {\n      a.outerHTML = buildInstagramEmbed(url);\n    } else if (hostname.includes('facebook')) {\n      a.outerHTML = buildFacebookEmbed(url);\n    } else if (hostname.includes('spotify')) {\n      a.outerHTML = buildSpotifyEmbed(url);\n    } else {\n      a.outerHTML = buildDefaultEmbed(url);\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/embed/embed.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "blocks/embed/embed.js",
            "merged_function": "function loadScript(url, callback, type) {\n  const head = document.querySelector('head');\n  if (!head.querySelector(`script[src=\"${url}\"]`)) {\n    const script = document.createElement('script');\n    script.src = url;\n    if (type) script.setAttribute('type', type);\n    head.append(script);\n    script.onload = callback;\n    return script;\n  }\n  return head.querySelector(`script[src=\"${url}\"]`);\n}",
            "score": -1.0
        },
        "blocks/field/field.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/field/field.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  block.textContent = '';\n  const placeholders = await fetchPlaceholders();\n\n  const year = config.year || new Date().getFullYear();\n  const feedURL = `https://statdata-api-prod.pgatour.com/api/clientfile/Field?T_CODE=${placeholders.tourCode}&T_NUM=${placeholders.tournamentId}&YEAR=${year}&format=json`;\n\n  // setup controls\n  const controls = document.createElement('div');\n  controls.className = 'field-controls';\n  // setup toggle\n  const toggle = document.createElement('div');\n  toggle.className = 'button-container';\n  const buttons = ['table', 'list'];\n  buttons.forEach((b, i) => {\n    const button = document.createElement('button');\n    button.innerHTML = `<span class=\"icon icon-${b}\"></span>`;\n    button.setAttribute('aria-selected', !i); // first button is default view\n    button.setAttribute('role', 'tab');\n    button.setAttribute('data-toggle', b);\n    button.addEventListener('click', toggleView);\n    toggle.append(button);\n  });\n  decorateIcons(toggle);\n  // setup dropdown\n  const dropdown = document.createElement('select');\n  dropdown.innerHTML = '<option disabled selected>Select Player</option>';\n  dropdown.addEventListener('change', () => {\n    const { value } = dropdown;\n    const selected = document.getElementById(value);\n    if (selected) {\n      selected.scrollIntoView({ behavior: 'smooth' });\n      selected.classList.add('selected');\n      setTimeout(() => selected.classList.remove('selected'), 1000 * 3);\n    }\n  });\n  // setup wrapper\n  const wrapper = document.createElement('ul');\n  wrapper.classList.add('field-view-table');\n\n  // fetch field feed\n  const resp = await fetch(feedURL);\n  if (resp.ok) {\n    const json = await resp.json();\n    const tournament = json.Tournament;\n    if (tournament && tournament.Players) {\n      let latestInitial = '';\n      const players = tournament.Players.sort((a, b) => {\n        if (a.PlayerLastName.toUpperCase() < b.PlayerLastName.toUpperCase()) return -1;\n        if (a.PlayerLastName.toUpperCase() > b.PlayerLastName.toUpperCase()) return 1;\n        return 0;\n      });\n      players.forEach((player) => {\n        // setup option\n        const option = document.createElement('option');\n        option.value = player.TournamentPlayerId;\n        option.textContent = player.PlayerName;\n        dropdown.append(option);\n        // setup card\n        const card = document.createElement('li');\n        const lastInitial = player.PlayerLastName.charAt(0);\n        if (latestInitial !== lastInitial) card.setAttribute('data-last', lastInitial);\n        latestInitial = lastInitial;\n        card.id = player.TournamentPlayerId;\n        card.innerHTML = `<img src=\"https://pga-tour-res.cloudinary.com/image/upload/c_fill,dpr_2.0,f_auto,q_auto,r_max,g_face:center,d_headshots_default.png,h_190,w_190/headshots_${player.TournamentPlayerId}.png\" alt=\"${player.PlayerFirstName} ${player.PlayerLastName}\" />\n          <p>${player.PlayerName}</p>`;\n        wrapper.append(card);\n      });\n      controls.append(toggle, dropdown);\n      block.append(controls, wrapper);\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/field/field.js::toggleView": {
            "changes_after_merge": 0,
            "file_path": "blocks/field/field.js",
            "merged_function": "function toggleView(e) {\n  const button = e.target.closest('button');\n  const block = button.closest('.block');\n  const toggle = button.getAttribute('data-toggle');\n  // update button\n  const buttons = block.querySelectorAll('.button-container > button');\n  buttons.forEach((btn) => btn.setAttribute('aria-selected', false));\n  button.setAttribute('aria-selected', true);\n  // toggle view\n  const view = block.querySelector('ul');\n  if (toggle.includes('table')) {\n    view.classList.remove('field-view-list');\n    view.classList.add('field-view-table');\n  } else if (toggle.includes('list')) {\n    view.classList.remove('field-view-table');\n    view.classList.add('field-view-list');\n  }\n}",
            "score": -1.0
        },
        "blocks/footer/footer.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  block.textContent = '';\n\n  // fetch footer content\n  const footerPath = config.footer || '/footer';\n  const resp = await fetch(`${footerPath}.plain.html`);\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // decorate footer DOM\n    const footer = document.createElement('div');\n    footer.innerHTML = html;\n\n    const classes = ['partners', 'nav', 'links', 'social', 'copyright'];\n    classes.forEach((c, i) => {\n      const section = footer.children[i];\n      if (section) section.classList.add(`footer-${c}`);\n    });\n\n    // setup ribbon\n    const ribbon = document.createElement('div');\n    ribbon.classList.add('footer', 'footer-ribbon');\n    const wrapper = document.createElement('div');\n    wrapper.append(footer.querySelector('.footer-partners'), footer.querySelector('.footer-nav'));\n    ribbon.append(wrapper);\n\n    setupCookieChoices(footer.querySelector('.footer-links'));\n    setupSocialButtons(footer.querySelector('.footer-social'));\n\n    block.append(footer);\n    block.parentNode.prepend(ribbon);\n    wrapImgsInLinks(block);\n    decorateIcons(block);\n    decorateLinkedPictures(block);\n\n    await setupPartners(ribbon.querySelector('.footer-partners'));\n  }\n}",
            "score": -0.8604651162790697
        },
        "blocks/footer/footer.js::setupCookieChoices": {
            "changes_after_merge": 1,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function setupCookieChoices(section) {\n  const cookieLink = section.querySelector('a[href*=\"onetrust-link\"]');\n  if (cookieLink) {\n    cookieLink.removeAttribute('href');\n    cookieLink.className = 'ot-sdk-show-settings';\n    cookieLink.parentNode.className = 'onetrust-link';\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/footer/footer.js::setupPartners": {
            "changes_after_merge": 4,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function setupPartners(section) {\n  const pages = await lookupPages();\n  const sponsors = pages.filter((e) => e.path.startsWith('/sponsors/'));\n\n  const wrapper = document.createElement('div');\n  sponsors.forEach((sponsor) => {\n    const partner = document.createElement('div');\n    partner.className = 'footer-partner';\n    const link = document.createElement('a');\n    link.href = sponsor.link;\n    link.append(createOptimizedPicture(sponsor.image, sponsor.title, false, [{ width: '300' }]));\n    partner.append(link);\n    wrapper.append(partner);\n  });\n  section.append(wrapper);\n}",
            "score": -0.813953488372093
        },
        "blocks/footer/footer.js::setupSocialButtons": {
            "changes_after_merge": 0,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "function setupSocialButtons(section) {\n  section.querySelectorAll('p').forEach((button) => {\n    const icon = [...button.querySelector('.icon').classList][1].replace('icon-', '');\n    button.classList.add(`footer-social-${icon}`);\n  });\n}",
            "score": -1.0
        },
        "blocks/header/header.js::collapseAllNavSections": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function collapseAllNavSections(sections) {\n  sections.querySelectorAll('.nav-sections > ul > li').forEach((section) => {\n    section.setAttribute('aria-expanded', 'false');\n  });\n}",
            "score": -1.0
        },
        "blocks/header/header.js::decorate": {
            "changes_after_merge": 7,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  block.textContent = '';\n\n  // fetch nav content\n  const navPath = config.nav || '/nav';\n  const resp = await fetch(`${navPath}.plain.html`);\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // decorate nav DOM\n    const nav = document.createElement('nav');\n    nav.innerHTML = html;\n    makeLinksRelative(nav);\n\n    const classes = ['brand', 'sections', 'social', 'tour', 'user'];\n    classes.forEach((c, i) => {\n      const section = nav.children[i];\n      if (section) section.classList.add(`nav-${c}`);\n    });\n\n    const navSections = [...nav.children][1];\n    if (navSections) {\n      navSections.querySelectorAll(':scope > ul > li').forEach((navSection) => {\n        if (navSection.querySelector('ul')) {\n          navSection.classList.add('nav-drop');\n          const ul = navSection.querySelector('ul');\n          const title = navSection.innerHTML.split('<')[0].trim();\n          navSection.innerHTML = `<span>${title}</span>${ul.outerHTML}`;\n          navSection.setAttribute('aria-expanded', false);\n          navSection.addEventListener('click', () => {\n            const expanded = navSection.getAttribute('aria-expanded') === 'true';\n            collapseAllNavSections(navSections);\n            navSection.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n          });\n        }\n      });\n    }\n\n    // hamburger for mobile\n    const hamburger = document.createElement('div');\n    hamburger.classList.add('nav-hamburger');\n    hamburger.innerHTML = '<div class=\"nav-hamburger-icon\"></div>';\n    hamburger.addEventListener('click', () => {\n      const expanded = nav.getAttribute('aria-expanded') === 'true';\n      document.body.style.overflowY = expanded ? '' : 'hidden';\n      nav.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n    });\n    nav.prepend(hamburger);\n    nav.setAttribute('aria-expanded', 'false');\n\n    wrapImgsInLinks(nav);\n    setupUser(nav.querySelector('.nav-user'));\n\n    decorateIcons(nav);\n    decorateLinkedPictures(nav);\n    block.append(nav);\n\n    // build status bar\n    const statusBar = document.createElement('div');\n    statusBar.className = 'status-bar';\n    block.parentNode.append(statusBar);\n    const data = document.createElement('div');\n    data.className = 'status-bar-data';\n\n    try {\n      const placeholders = await fetchPlaceholders();\n      if (placeholders.course) data.insertAdjacentHTML('beforeend', `<div class=\"status-bar-course\"><p>${placeholders.course}</p></div>`);\n      if (placeholders.dates) data.insertAdjacentHTML('beforeend', `<div class=\"status-bar-dates\"><p>${placeholders.dates}</p></div>`);\n      // setup countdown\n      if (placeholders.countdown) {\n        window.placeholders.countdown = new Date(placeholders.countdown);\n        const countdownData = parseCountdown(findTimeBetween(window.placeholders.countdown));\n        const countdown = `<div class=\"status-bar-countdown\">\n          <p>\n            <span id=\"countdown-days\">${countdownData.days}</span> days : \n            <span id=\"countdown-hours\">${countdownData.hours}</span> hours : \n            <span id=\"countdown-minutes\">${countdownData.minutes}</span> minutes\n          </p>\n        </div>`;\n        data.insertAdjacentHTML('beforeend', countdown);\n        setInterval(updateCountdown, 60 * 1000); // update countdown every minute\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('failed to load placeholders', error);\n    }\n    if (data.hasChildNodes()) statusBar.append(data);\n\n    await setupPartners(nav.querySelector('.nav-brand'));\n    block.classList.add('appear');\n  }\n}",
            "score": -0.6744186046511628
        },
        "blocks/header/header.js::displayNextPartner": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function displayNextPartner(proud) {\n  const partners = [...proud.querySelectorAll('.nav-partner')];\n  const appeared = partners.findIndex((e) => e.classList.contains('nav-partner-appear'));\n  partners[appeared].classList.remove('nav-partner-appear');\n  partners[(appeared + 1) % partners.length].classList.add('nav-partner-appear');\n}",
            "score": -1.0
        },
        "blocks/header/header.js::findTimeBetween": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/header.js",
            "merged_function": "function findTimeBetween(date) {\n  return Math.abs(date - new Date());\n}",
            "score": -0.9534883720930233
        },
        "blocks/header/header.js::parseCountdown": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function parseCountdown(ms) {\n  const dayMs = 24 * 60 * 60 * 1000;\n  const hourMs = 60 * 60 * 1000;\n  let days = Math.floor(ms / dayMs);\n  let hours = Math.floor((ms - days * dayMs) / hourMs);\n  let minutes = Math.round((ms - days * dayMs - hours * hourMs) / 60000);\n  if (minutes === 60) {\n    hours += 1;\n    minutes = 0;\n  } else if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  if (hours === 24) {\n    days += 1;\n    hours = 0;\n  } else if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  return { days, hours, minutes };\n}",
            "score": -1.0
        },
        "blocks/header/header.js::setupPartners": {
            "changes_after_merge": 8,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function setupPartners(section) {\n  const pages = await lookupPages();\n  const sponsors = pages.filter((e) => e.path.startsWith('/sponsors/'));\n\n  const partners = document.createElement('div');\n  partners.className = 'nav-partners';\n  partners.innerHTML = '<div class=\"nav-partners-title\"><span>Proud Partners</span></div><div class=\"nav-partner-wrapper\"></div>';\n  sponsors.forEach((sponsor, i) => {\n    const partner = document.createElement('div');\n    partner.className = 'nav-partner';\n    if (!i) partner.classList.add('nav-partner-appear');\n    partner.append(createOptimizedPicture(sponsor.logoWhite, sponsor.title, false, [{ width: '300' }]));\n    partners.querySelector('.nav-partner-wrapper').append(partner);\n  });\n  setInterval(() => {\n    displayNextPartner(partners);\n  }, 5000);\n  section.append(partners);\n}",
            "score": -0.627906976744186
        },
        "blocks/header/header.js::setupUser": {
            "changes_after_merge": 2,
            "file_path": "blocks/header/header.js",
            "merged_function": "function setupUser(section) {\n  const isStored = sessionStorage.getItem('gigyaAccount');\n  const icon = section.querySelector('.icon');\n  const text = section.textContent.trim();\n  if (isStored) {\n    const user = JSON.parse(isStored);\n    section.innerHTML = `<button id=\"nav-user-button\" class=\"nav-user-button\" data-status=\"loading\">\n        <img src=\"${user.thumbnailURL}\" alt=\"User Profile Thumbnail\"/></span><span>${text}</span>\n      </button>`;\n  } else {\n    section.innerHTML = `<button id=\"nav-user-button\" class=\"nav-user-button\" data-status=\"loading\">\n        ${icon.outerHTML}<span class=\"icon icon-spinner\"></span><span>${text}</span>\n      </button>`;\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/header/header.js::updateCountdown": {
            "changes_after_merge": 1,
            "file_path": "blocks/header/header.js",
            "merged_function": "function updateCountdown() {\n  const days = document.getElementById('countdown-days');\n  const hours = document.getElementById('countdown-hours');\n  const minutes = document.getElementById('countdown-minutes');\n  const countdownData = parseCountdown(findTimeBetween(window.placeholders.countdown));\n  days.textContent = countdownData.days;\n  hours.textContent = countdownData.hours;\n  minutes.textContent = countdownData.minutes;\n}",
            "score": -0.9534883720930233
        },
        "blocks/hero/hero.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "async function decorate(block) {\n  addHeaderSizing(block);\n  const btns = block.querySelector('.button-container');\n  if (btns) block.classList.add('hero-buttons');\n  const video = block.querySelector('.video');\n  if (video) {\n    block.classList.add('hero-video');\n    video.classList.add(`${video.className}-hero`);\n    decorateBlock(video);\n    await loadBlock(video);\n  }\n  const em = block.querySelector('em');\n  if (em) {\n    const caption = document.createElement('div');\n    caption.className = 'section';\n    caption.innerHTML = `<p class=\"hero-caption\">\n      ${em.innerHTML}\n    </p>`;\n    em.remove();\n    block.parentNode.append(caption);\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/leaderboard/leaderboard.js::buildCell": {
            "changes_after_merge": 0,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "function buildCell() {\n  return document.createElement('td');\n}",
            "score": -1.0
        },
        "blocks/leaderboard/leaderboard.js::buildLeaderboardTable": {
            "changes_after_merge": 0,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "function buildLeaderboardTable() {\n  const table = document.createElement('table');\n  const head = document.createElement('thead');\n  const headRow = buildRow();\n  const cols = [' ', 'POS', 'TP', 'Country', 'Total', 'Thru'];\n  cols.forEach((col) => {\n    const cell = document.createElement('th');\n    if (col !== 'TP') {\n      cell.textContent = col;\n    } else {\n      cell.innerHTML = '<p><span class=\"icon icon-up\"></span><span class=\"icon icon-down\"></span></p>';\n    }\n    headRow.append(cell);\n  });\n  head.append(headRow);\n  table.append(head);\n  const body = document.createElement('tbody');\n  return [table, body];\n}",
            "score": -1.0
        },
        "blocks/leaderboard/leaderboard.js::buildRow": {
            "changes_after_merge": 0,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "function buildRow() {\n  return document.createElement('tr');\n}",
            "score": -1.0
        },
        "blocks/leaderboard/leaderboard.js::calculateTP": {
            "changes_after_merge": 2,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "function calculateTP(start, current) {\n  // eslint-disable-next-line no-param-reassign\n  start = parseInt(start.replace('T', ''), 10);\n  // eslint-disable-next-line no-param-reassign\n  current = parseInt(current.replace('T', ''), 10);\n  const tp = start - current;\n  return { tp: Math.abs(tp), posMove: tp > 0 };\n}",
            "score": -0.9069767441860466
        },
        "blocks/leaderboard/leaderboard.js::calculateThru": {
            "changes_after_merge": 0,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "function calculateThru(thru) {\n  if (thru) return thru < 18 ? thru : 'F';\n  return '--';\n}",
            "score": -1.0
        },
        "blocks/leaderboard/leaderboard.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  TRACKING_ID = config.id;\n  CONFIG = config;\n  BLOCK = block;\n  block.textContent = '';\n\n  const observer = new IntersectionObserver(intersectHandler, { threshold: 0 });\n  observer.observe(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/leaderboard/leaderboard.js::generateUserTrackingId": {
            "changes_after_merge": 1,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "function generateUserTrackingId() {\n  TRACKING_ID = window.pgatour.setTrackingUserId(`id${TRACKING_ID}`);\n}",
            "score": -0.9534883720930233
        },
        "blocks/leaderboard/leaderboard.js::intersectHandler": {
            "changes_after_merge": 0,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "function intersectHandler(entries) {\n  const entry = entries[0];\n  if (entry.isIntersecting) {\n    loadScript('https://microservice.pgatour.com/js', populateLeaderboard);\n  }\n}",
            "score": -1.0
        },
        "blocks/leaderboard/leaderboard.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "function loadScript(url, callback, type) {\n  const head = document.querySelector('head');\n  if (!head.querySelector(`script[src=\"${url}\"]`)) {\n    const script = document.createElement('script');\n    script.src = url;\n    if (type) script.setAttribute('type', type);\n    head.append(script);\n    script.onload = callback;\n    return script;\n  }\n  return head.querySelector(`script[src=\"${url}\"]`);\n}",
            "score": -1.0
        },
        "blocks/leaderboard/leaderboard.js::populateLeaderboard": {
            "changes_after_merge": 7,
            "file_path": "blocks/leaderboard/leaderboard.js",
            "merged_function": "async function populateLeaderboard() {\n  generateUserTrackingId();\n  // fetch leaderboard content\n  const resp = await fetch(`https://statdata.pgatour.com/r/011/leaderboard-top5.json?userTrackingId=${TRACKING_ID}`);\n  if (resp.ok) {\n    const json = await resp.json();\n    if (json.leaderboard && json.leaderboard.players) {\n      const { players } = json.leaderboard;\n      const [table, body] = buildLeaderboardTable();\n      const buttons = document.createElement('div');\n      buttons.className = 'button-container';\n      buttons.innerHTML = '<a href=\"/tee-times\" class=\"button secondary\">Tee Times</a>';\n      const leaderWrapper = document.createElement('div');\n      players.forEach((player, i) => {\n        const bio = player.player_bio;\n        const { tp, posMove } = calculateTP(player.start_position, player.current_position);\n        if (!i) { // setup leader info for leaderboard leader\n          const leader = document.createElement('div');\n          leader.className = 'leaderboard-leader';\n          leader.innerHTML = `\n          <div class=\"leaderboard-leader-img\">\n            <img\n              src=\"https://pga-tour-res.cloudinary.com/image/upload/f_auto,q_auto,c_fill,r_max,dpr_2.0,g_face:center,h_260,w_260,d_headshots_default.png/headshots_${player.player_id}.png\"\n              alt=\"${bio.first_name} ${bio.last_name}\"\n            />\n          </div>\n          <div class=\"leaderboard-leader-body\">\n            <p class=\"leaderboard-leader-body-title\">${bio.first_name} ${bio.last_name}</p>\n            <div class=\"leaderboard-leader-stats\">\n              <div>\n                <span class=\"icon icon-flag-${bio.country.toLowerCase()}\"></span>\n              </div>\n              <div>\n                <p class=\"leaderboard-leader-stats-title\">Total</p>\n                <p class=\"leaderboard-leader-stats-stat\">${player.total}</p>\n              </div>\n              <div>\n                <p class=\"leaderboard-leader-stats-title\">Thru</p>\n                <p class=\"leaderboard-leader-stats-stat\">${player.thru < 18 ? player.thru : 'F'}</p>\n              </div>\n            </div>\n          </div>`;\n          const scorecard = document.createElement('a');\n          scorecard.className = 'button primary';\n          scorecard.textContent = 'View full scorecard';\n          scorecard.href = `https://www.pgatour.com/players/player.${player.player_id}.${bio.first_name}-${bio.last_name}.html/scorecards/${json.leaderboard.tournament_id}`.toLowerCase();\n          buttons.prepend(scorecard);\n          decorateIcons(leader);\n          leader.append(buttons);\n          leaderWrapper.append(leader);\n          BLOCK.append(leaderWrapper);\n        }\n        const row = buildRow();\n        const favoriteButtonCell = buildCell();\n        favoriteButtonCell.className = 'leaderboard-favorite';\n        favoriteButtonCell.innerHTML = `<button data-tour=\"${json.leaderboard.tour_code}\" data-id=\"${player.player_id}\">\n          <span class=\"icon icon-plus\"></span>\n        </button>\n        <span class=\"tooltip\">Add to <br /><strong>Favorite Players</strong></span>`;\n        row.append(favoriteButtonCell);\n        const playerData = [\n          player.current_position,\n          `<p><span class=\"icon icon-${posMove ? 'up' : 'down'}\"></span> ${tp}</p>`,\n          `<p class=\"leaderboard-player\"><span class=\"icon icon-flag-${bio.country.toLowerCase()}\"></span> ${bio.first_name} ${bio.last_name}</p>`,\n          player.total,\n          player.thru < 18 ? player.thru : 'F',\n        ];\n        playerData.forEach((d) => {\n          const cell = buildCell();\n          cell.innerHTML = d;\n          if (typeof d === 'string' && d.includes('flag')) decorateIcons(cell);\n          row.append(cell);\n        });\n        body.append(row);\n      });\n      /* setup footer */\n      const footer = document.createElement('div');\n      footer.className = 'leaderboard-footer';\n      footer.innerHTML = `<div class=\"button-container\">\n        <a href=\"${CONFIG.leaderboard}\" class=\"button primary\">View full leaderboard</a>\n      </div>`;\n      /* setup sponsors */\n      const sponsors = document.createElement('div');\n      sponsors.className = 'leaderboard-sponsors';\n      footer.prepend(sponsors);\n      /* setup table column */\n      const tableWrapper = document.createElement('div');\n      table.append(body);\n      tableWrapper.append(table, footer);\n      BLOCK.append(tableWrapper);\n    }\n  }\n}",
            "score": -0.6744186046511628
        },
        "blocks/news/news.js::decorate": {
            "changes_after_merge": 21,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  block.textContent = '';\n  const observer = new IntersectionObserver(async (entries) => {\n    if (entries.some((entry) => entry.isIntersecting)) {\n      observer.disconnect();\n      const videoPrefix = 'https://pga-tour-res.cloudinary.com/image/upload/c_fill,f_auto,g_face,h_311,q_auto,w_425/v1/';\n      const damPrefix = 'https://www.pgatour.com';\n      const newsURL = config.source;\n      const limit = config.limit || 8;\n      block.textContent = '';\n      // populate news content\n      /* TODO: add CORS header, to be replaced with direct API */\n      let directURL;\n      if (config.tags) {\n        const tags = config.tags.replace(/ /g, '').split(',').join('+');\n        directURL = `${newsURL}/tags=${tags}&size=${limit}`;\n      } else {\n        directURL = `${newsURL}/path=/content&tags=PGATOUR:Tournaments/2018/r011+PGATOUR:Tournaments/2020/r011+PGATOUR:Tournaments/2019/r011+PGATOUR:Tournaments/2021/r011+PGATOUR:Tournaments/2022/r011&size=${limit}`;\n      }\n      const resp = await fetch(`https://little-forest-58aa.david8603.workers.dev/?url=${encodeURIComponent(directURL)}`);\n      const json = await resp.json();\n      const ul = document.createElement('ul');\n      json.items.forEach((item) => {\n        const prefix = item.image.startsWith('brightcove') ? videoPrefix : damPrefix;\n        const li = document.createElement('li');\n        li.classList.add('news-item', `news-item-${item.type}`);\n        const video = item.videoId ? '<div class=\"news-item-play\"></div>' : '';\n        const a = document.createElement('a');\n        a.href = item.link;\n        a.innerHTML = `\n          <div class=\"news-item-image\"><img src=\"${prefix}${item.image}\"></div>\n          <div class=\"news-item-body\"><a href=\"${item.link}\">${item.title}</a></div>\n          ${video}\n        `;\n        li.append(a);\n        ul.append(li);\n      });\n      block.append(ul);\n      // add filtering\n      if (config.filter) {\n        const filters = config.filter.split(',').map((f) => f.trim());\n        const container = document.createElement('div');\n        container.classList.add('button-container', 'news-filters');\n        filters.forEach((filter, i) => {\n          const button = document.createElement('button');\n          button.textContent = filter;\n          button.setAttribute('aria-selected', !i); // first filter is default view\n          button.setAttribute('role', 'tab');\n          button.setAttribute('data-filter', toClassName(filter));\n          button.addEventListener('click', filterNews);\n          container.append(button);\n        });\n        block.prepend(container);\n      }\n      // add show more/less buttons\n      if (limit > 8) {\n        const container = document.createElement('div');\n        container.classList.add('button-container', 'news-pagination');\n        const types = ['More', 'Less'];\n        types.forEach((type) => {\n          const button = document.createElement('button');\n          button.textContent = `Show ${type}`;\n          button.setAttribute('data-show', type.toLowerCase());\n          button.addEventListener('click', paginateNews);\n          container.append(button);\n        });\n        block.append(container);\n      }\n    }\n  }, { threshold: 0 });\n\n  observer.observe(block);\n}",
            "score": -0.023255813953488413
        },
        "blocks/news/news.js::filterHasItems": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "function filterHasItems(filter, block) {\n  let hasItems = true;\n  const items = [...block.querySelectorAll('.news .news-item')];\n  if (filter.toLowerCase().includes('article')) {\n    hasItems = items.some((item) => {\n      const itemType = [...item.classList][1];\n      return itemType.includes('article');\n    });\n  } else if (filter.toLowerCase().includes('video')) {\n    hasItems = items.some((item) => {\n      const itemType = [...item.classList][1];\n      return itemType.includes('video');\n    });\n  }\n  return hasItems;\n}",
            "score": -1.0
        },
        "blocks/news/news.js::filterNews": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "function filterNews(e) {\n  const button = e.target.closest('button');\n  const block = button.closest('.block');\n  const feed = block.querySelector('ul');\n  const filter = button.getAttribute('data-filter');\n  // update button\n  const buttons = block.querySelectorAll('.news .button-container > button');\n  buttons.forEach((btn) => btn.setAttribute('aria-selected', false));\n  button.setAttribute('aria-selected', true);\n  // reset feed height\n  feed.style.removeProperty('height');\n  // filter items\n  const items = block.querySelectorAll('.news .news-item');\n  items.forEach((item) => item.classList.remove('news-filtered'));\n  if (filter.includes('article')) {\n    items.forEach((item) => {\n      const itemType = [...item.classList][1];\n      if (!itemType.includes('article')) item.classList.add('news-filtered');\n    });\n  } else if (filter.includes('video')) {\n    items.forEach((item) => {\n      const itemType = [...item.classList][1];\n      if (!itemType.includes('video')) item.classList.add('news-filtered');\n    });\n  }\n}",
            "score": -1.0
        },
        "blocks/news/news.js::getArticles": {
            "changes_after_merge": 1,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function getArticles(limit, placeholders) {\n  try {\n    const resp = await fetchGraphQL(`query GetNewsArticles($tour: TourCode, $franchise: String, $franchises: [String!], $playerId: ID, $playerIds: [ID!], $limit: Int, $offset: Int, $tournamentNum: String) {\n      newsArticles(tour: $tour, franchise: $franchise, franchises: $franchises, playerId: $playerId, playerIds: $playerIds, limit: $limit, offset: $offset, tournamentNum: $tournamentNum) {\n          articles {\n              id\n              articleImage\n              headline\n              publishDate\n              teaserContent\n              teaserHeadline\n              updateDate\n              url\n          }\n      }\n  }`, {\n      tournamentNum: placeholders.tournamentId,\n      limit,\n    });\n    if (resp.ok) {\n      const json = await resp.json();\n      if (json.data && json.data.newsArticles && json.data.newsArticles.articles) {\n        const articles = json.data.newsArticles.articles.map((article) => ({\n          url: article.url,\n          type: 'article',\n          image: article.articleImage,\n          title: article.teaserHeadline,\n          date: article.updateDate,\n        }));\n        return articles;\n      }\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Could not load news', err);\n  }\n\n  // return an empty array if fail, so that local news can still be displayed\n  return [];\n}",
            "score": -0.9534883720930233
        },
        "blocks/news/news.js::getLocalArticles": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function getLocalArticles() {\n  const resp = await fetch('/query-index.json');\n  const json = await resp.json();\n  const newsItems = json.data.map((item) => {\n    if (item.date) {\n      const itemDate = new Date(Math.round((item.date - (25567 + 1)) * 86400 * 1000)).valueOf();\n      return {\n        date: itemDate,\n        url: item.path,\n        type: 'article',\n        image: item.image,\n        title: item.title,\n      };\n    }\n    return null;\n  }).filter((item) => item !== null);\n  return newsItems;\n}",
            "score": -1.0
        },
        "blocks/news/news.js::getNewsArticles": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function getNewsArticles(tags, limit, tourcode) {\n  try {\n    const resp = await fetchGraphQL(`query GetNewsArticles($tour: TourCode, $franchise: String, $franchises: [String!], $playerId: ID, $limit: Int, $offset: Int, $tags: [String!]) {\n    newsArticles(tour: $tour, franchise: $franchise, franchises: $franchises, playerId: $playerId, limit: $limit, offset: $offset, tags: $tags) {\n        articles {\n            id\n            articleImage\n            publishDate\n            teaserHeadline\n            updateDate\n            url\n        }\n    }\n  }`, {\n      limit,\n      tags,\n      tour: tourcode,\n    });\n    if (resp.ok) {\n      const json = await resp.json();\n      if (json.data && json.data.newsArticles && json.data.newsArticles.articles) {\n        return json.data.newsArticles.articles;\n      }\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Could not load news', err);\n  }\n\n  // return an ermpty array if fail, so that local news can still be displayed\n  return [];\n}",
            "score": -1.0
        },
        "blocks/news/news.js::getVideos": {
            "changes_after_merge": 1,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function getVideos(limit, placeholders) {\n  const resp = await fetchGraphQL(`query GetVideos($tournamentId: String, $playerId: String, $playerIds: [String!], $category: String, $franchise: String, $limit: Int, $season: String, $tour: String, $tourCode: TourCode) {\n    videos(tournamentId: $tournamentId, playerId: $playerId, playerIds: $playerIds, category: $category, franchise: $franchise, limit: $limit, season: $season, tour: $tour, tourCode: $tourCode) {\n      title \n      poster \n      pubdate\n      category\n      id\n      duration \n    }\n  }`, {\n    tour: placeholders.tourCode.toUpperCase(),\n    tournamentId: placeholders.tournamentId,\n    limit,\n  });\n  if (resp.ok) {\n    const json = await resp.json();\n    if (json.data && json.data.videos) {\n      const videoItems = json.data.videos.map((video) => ({\n        url: `https://www.pgatour.com/video/${video.category}/${video.id}`,\n        type: 'video',\n        // eslint-disable-next-line no-template-curly-in-string\n        image: video.poster.replace('${height}', '311').replace('${width}', '425'),\n        title: video.title,\n        date: video.pubdate,\n      }));\n      return videoItems;\n    }\n  }\n  return [];\n}",
            "score": -0.9534883720930233
        },
        "blocks/news/news.js::mergeAll": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "function mergeAll(limit, pinnedItems, videos, articles, localNews) {\n  const merged = [];\n  merged.push(...pinnedItems);\n\n  // merge and 2 sets of articles\n  articles.map((article) => {\n    const { url } = article;\n    const { host, pathname } = new URL(url);\n    if (host.includes('pgatour.com')) {\n      const splitPath = `/${pathname.split('/').slice(4).join('/')}`;\n      const match = localNews.find((m) => m.url.includes(splitPath));\n      if (match) article.url = match.url;\n    }\n    return article;\n  });\n\n  const allArticles = [...articles, ...localNews];\n\n  const dedupedArticles = [...new Map(allArticles.map((m) => [\n    new URL(m.url, window.location.href).pathname.split('.')[0],\n    m,\n  ])).values()];\n\n  const allFeeds = [];\n  allFeeds.push(...dedupedArticles);\n  allFeeds.push(...videos);\n\n  // sort everything by date\n  allFeeds.sort((a, b) => b.date - a.date);\n\n  // finally add it to merged and slice\n  merged.push(...allFeeds);\n\n  return merged.slice(0, limit);\n}",
            "score": -1.0
        },
        "blocks/news/news.js::mergeLocalNews": {
            "changes_after_merge": 2,
            "file_path": "blocks/news/news.js",
            "merged_function": "async function mergeLocalNews(feed, maxItems) {\n  const resp = await fetch('/query-index.json');\n  const json = await resp.json();\n  const newerThan = feed.items[feed.items.length - 1].created;\n  const matched = json.data.filter((item) => {\n    if (item.date) {\n      const itemDate = new Date(Math.round((item.date - (25567 + 1)) * 86400 * 1000)).valueOf();\n      item.created = itemDate;\n      item.link = item.path;\n      item.type = 'article';\n      return (itemDate > newerThan);\n    }\n    return false;\n  });\n  const merged = [...feed.items, ...matched];\n  const deduped = [...new Map(merged.map((m) => [\n    new URL(m.link, window.location.href).pathname.split('.')[0],\n    m,\n  ])).values()];\n  const sorted = deduped.sort((e1, e2) => e2.created - e1.created);\n  feed.items = sorted.slice(0, maxItems);\n}",
            "score": -0.9069767441860466
        },
        "blocks/news/news.js::paginateNews": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "function paginateNews(e) {\n  const button = e.target.closest('button');\n  const block = button.closest('.block');\n  const feed = block.querySelector('ul');\n  const type = button.getAttribute('data-show');\n  const feedHeight = feed.offsetHeight;\n  const rowHeight = 311; /* match .news-item height + gap */\n  if (type === 'more') {\n    feed.style.height = `${feedHeight + rowHeight}px`;\n  } else if (type === 'less' && (feedHeight > rowHeight)) {\n    feed.style.height = `${feedHeight - rowHeight}px`;\n  }\n  toggleShowLessButton(feed);\n}",
            "score": -1.0
        },
        "blocks/news/news.js::toggleShowLessButton": {
            "changes_after_merge": 0,
            "file_path": "blocks/news/news.js",
            "merged_function": "function toggleShowLessButton(feed) {\n  const block = feed.closest('.block');\n  const lessButton = block.querySelector('button[data-show=\"less\"]');\n  const feedHeight = feed.offsetHeight;\n  const rowHeight = 311; /* match .news-item height + gap */\n  if (feedHeight > rowHeight) {\n    lessButton.disabled = false;\n  } else {\n    lessButton.disabled = true;\n  }\n}",
            "score": -1.0
        },
        "blocks/past-results/past-results.js::buildReqUrl": {
            "changes_after_merge": 0,
            "file_path": "blocks/past-results/past-results.js",
            "merged_function": "async function buildReqUrl(param) {\n  const placeholders = await fetchPlaceholders();\n  return `${PGATOUR_URL}/tournaments/${placeholders.adsS3}/past-results/jcr:content/mainParsys/pastresults.selectedYear.${param}.html`;\n}",
            "score": -1.0
        },
        "blocks/past-results/past-results.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/past-results/past-results.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  block.innerHTML = '';\n  const placeholders = await fetchPlaceholders();\n  const year = config['current-year'] || new Date().getFullYear();\n  refreshResults(block, `${year}.${placeholders.tournamentId}`);\n}",
            "score": -0.9534883720930233
        },
        "blocks/past-results/past-results.js::fetchResults": {
            "changes_after_merge": 0,
            "file_path": "blocks/past-results/past-results.js",
            "merged_function": "async function fetchResults(year) {\n  const placeholders = await fetchPlaceholders();\n  const id = `${placeholders.tourCode.toUpperCase()}${placeholders.currentYear}${placeholders.tournamentId}`;\n  return fetchGraphQL(`query PastResults($id: ID!, $year: Int) {\n    tournamentPastResults(id: $id, year: $year) {\n      additionalDataHeaders\n      availableSeasons {\n        year\n        displaySeason\n      }\n      id\n      players {\n        id\n        additionalData\n        position\n        total\n        parRelativeScore\n        rounds {\n            score\n            parRelativeScore\n        }\n        player {\n          abbreviations\n          amateur\n          country\n          countryFlag\n          displayName\n          id\n        }\n      }\n      rounds \n      winner {\n          countryFlag\n          countryName\n          firstName\n          id\n          lastName\n          firstName\n          points\n          totalScore\n          totalStrokes\n      }\n    }\n  }`, {\n    id,\n    year,\n  });\n}",
            "score": -1.0
        },
        "blocks/past-results/past-results.js::getVal": {
            "changes_after_merge": 0,
            "file_path": "blocks/past-results/past-results.js",
            "merged_function": "getVal = (el) => parseInt(el.querySelector(`[data-sort-${sortBy}]`).textContent.replace(/\\$|,/g, ''), 10)",
            "score": -1.0
        },
        "blocks/past-results/past-results.js::refreshResults": {
            "changes_after_merge": 3,
            "file_path": "blocks/past-results/past-results.js",
            "merged_function": "async function refreshResults(block, param) {\n  const reqUrl = await buildReqUrl(param);\n  const resp = await fetch(`https://little-forest-58aa.david8603.workers.dev/?url=${encodeURIComponent(reqUrl)}`);\n  if (resp.ok) {\n    const html = await resp.text();\n    const temp = document.createElement('div');\n    temp.innerHTML = html;\n    const tempTable = temp.querySelector('table');\n    // setup accordions\n    temp.querySelectorAll('.print-hidden .note-item').forEach((note, i) => {\n      const button = note.querySelector('button');\n      button.id = `notetitle${i + 1}`;\n      button.setAttribute('aria-expanded', false);\n      button.setAttribute('aria-controls', `note${i + 1}`);\n      button.addEventListener('click', () => {\n        const expanded = button.getAttribute('aria-expanded') === 'true';\n        if (expanded) { // close\n          button.setAttribute('aria-expanded', false);\n          button.nextElementSibling.hidden = true;\n        } else { // open\n          button.setAttribute('aria-expanded', true);\n          button.nextElementSibling.hidden = false;\n        }\n      });\n      const content = note.querySelector('.note-content');\n      content.id = `note${i + 1}`;\n      content.hidden = true;\n      content.setAttribute('aria-labelledby', `notetitle${i + 1}`);\n    });\n    // setup year dropdown\n    const yearDropdown = temp.querySelector('select[name=\"year\"]');\n    if (yearDropdown) {\n      yearDropdown.addEventListener('change', (e) => {\n        refreshResults(block, e.target.value);\n      });\n    }\n    // setup rounds dropdown\n    const roundsDropdown = temp.querySelector('select[name=\"rounds\"]');\n    if (roundsDropdown) {\n      roundsDropdown.addEventListener('change', (e) => {\n        const table = block.querySelector('table');\n        table.setAttribute('data-display-rounds', e.target.value);\n      });\n    }\n    // setup score switch\n    const scoreSwitch = temp.querySelector('input.switch-input');\n    if (scoreSwitch && tempTable) {\n      tempTable.setAttribute('data-display-score', 'total-score');\n      scoreSwitch.addEventListener('change', (e) => {\n        const table = block.querySelector('table');\n        if (e.target.checked) {\n          table.setAttribute('data-display-score', 'total-score');\n        } else {\n          table.setAttribute('data-display-score', 'to-par');\n        }\n      });\n    }\n    // setup print button\n    const printButton = temp.querySelector('.button-print');\n    if (printButton) {\n      const text = printButton.textContent;\n      printButton.innerHTML = `<span>${text}</span><span class=\"icon icon-print\"></span>`;\n      decorateIcons(printButton);\n    }\n    // setup table sorting\n    if (tempTable) {\n      tempTable.querySelectorAll('.sortable').forEach((th) => {\n        const data = tempTable.querySelector('.table-data');\n        const rows = [...data.querySelectorAll('tr')];\n        th.addEventListener('click', () => {\n          let alreadySorted = 1;\n          const currentRound = block.querySelector('select[name=\"rounds\"]').value;\n          const thClasses = [...th.classList];\n          // selected field is already sorted\n          if (thClasses.includes('arrow')) {\n            if (thClasses.includes('down')) {\n              alreadySorted = -1;\n              th.classList.remove('down');\n              th.classList.add('up');\n            }\n            if (thClasses.includes('up')) {\n              th.classList.remove('up');\n              th.classList.add('down');\n            }\n          } else {\n            // clear other sorting arrows\n            const currentSort = tempTable.querySelector('.arrow');\n            if (currentSort) currentSort.classList.remove('arrow', 'down', 'up');\n            // set new sorting arrow\n            th.classList.add('arrow', 'down');\n          }\n          const sortBy = th.getAttribute('data-sort-by');\n          const sortableFields = data.querySelectorAll(`[data-sort-${sortBy}]`);\n          const sortableFieldsByRound = data.querySelectorAll(`[data-sort-${sortBy}-${currentRound}]`);\n          if (sortableFields.length) { // total score, official money, points\n            rows.sort((a, b) => {\n              const getVal = (el) => parseInt(el.querySelector(`[data-sort-${sortBy}]`).textContent.replace(/\\$|,/g, ''), 10);\n              // a is second, b is the one before\n              const aVal = getVal(a);\n              const bVal = getVal(b);\n              if (aVal > bVal) return (alreadySorted * -1);\n              if (bVal > aVal) return (alreadySorted * 1);\n              return 0;\n            });\n          } else if (sortableFieldsByRound.length) { // pos, to par\n            rows.sort((a, b) => {\n              const getVal = (el) => {\n                const text = el.querySelector(`[data-sort-${sortBy}-${currentRound}]`).textContent.replace('T', '');\n                if (text === 'E') return 0; // e is equal to par, 0\n                return parseInt(text, 10);\n              };\n              const aVal = getVal(a);\n              const bVal = getVal(b);\n              // console.log(aVal, bVal);\n              if (aVal > bVal) return (alreadySorted * 1);\n              if (bVal > aVal) return (alreadySorted * -1);\n              return 0;\n            });\n          } else { // rounds\n            const currentSwitch = block.querySelector('input.switch-input').checked === true ? 'total' : 'par';\n            rows.sort((a, b) => {\n              const getVal = (el) => {\n                const text = el.querySelector(`[data-sort-${sortBy}-${currentSwitch}] > [class*=${currentSwitch}]`).textContent;\n                if (text === 'E') return 0; // e is equal to par, 0\n                return parseInt(text, 10);\n              };\n              const aVal = getVal(a);\n              const bVal = getVal(b);\n              if (aVal > bVal) return (alreadySorted * 1);\n              if (bVal > aVal) return (alreadySorted * -1);\n              return 0;\n            });\n          }\n          data.innerHTML = '';\n          rows.forEach((row) => data.append(row));\n        });\n      });\n    }\n    // rewrite player links\n    temp.querySelectorAll('a.player-link').forEach((a) => {\n      a.href = `${PGATOUR_URL}${new URL(a.href).pathname}`;\n    });\n    block.innerHTML = '';\n    block.append(temp);\n  }\n}",
            "score": -0.8604651162790697
        },
        "blocks/past-results/past-results.js::updateResults": {
            "changes_after_merge": 0,
            "file_path": "blocks/past-results/past-results.js",
            "merged_function": "function updateResults(block, resultData) {\n  const tableWrapper = block.querySelector('.table-wrapper');\n  tableWrapper.innerHTML = '';\n\n  const headers = [\n    {\n      text: 'Player',\n      class: 'cell',\n      rowspan: 2,\n    },\n    {\n      text: 'Pos',\n      class: 'cell sortable',\n      rowspan: 2,\n      sortOn: 'data-sort-pos',\n    },\n    {\n      text: 'Rounds',\n      class: 'cell hidden-small',\n      colspan: 4,\n    },\n    {\n      text: 'To Par',\n      class: 'cell sortable to-par',\n      rowspan: 2,\n      sortOn: 'data-sort-to-par-roundNum',\n    },\n    {\n      text: 'Total Score',\n      class: 'cell sortable total-score',\n      rowspan: 2,\n      sortOn: 'data-sort-total-score-roundNum',\n    }];\n  resultData.additionalDataHeaders.forEach((additionalData) => {\n    headers.push({\n      text: additionalData,\n      class: 'cell',\n      rowspan: 2,\n    });\n  });\n\n  const table = document.createElement('table');\n  table.setAttribute('cellpadding', 0);\n  table.setAttribute('cellspacing', 0);\n  table.setAttribute('data-display-score', 'total-score');\n  table.setAttribute('data-display-rounds', resultData.rounds.length);\n  const thead = document.createElement('thead');\n  const theadRow = document.createElement('tr');\n  headers.forEach((header) => {\n    const th = document.createElement('th');\n    th.className = header.class;\n    th.innerText = header.text;\n    if (header.rowspan) th.rowSpan = header.rowspan;\n    if (header.colspan) th.colSpan = header.colspan;\n    if (header.sortOn) th.dataset.sortOn = header.sortOn;\n    theadRow.append(th);\n  });\n  thead.append(theadRow);\n\n  const theadRoundsRow = document.createElement('tr');\n  const roundSelect = block.querySelector('#pastResultsRoundSelector');\n  roundSelect.innerHTML = '';\n  resultData.rounds.forEach((round, idx) => {\n    // round select options\n    const option = document.createElement('option');\n    option.value = idx + 1;\n    option.innerText = round;\n    if (idx === (resultData.rounds.length - 1)) {\n      option.selected = 'selected';\n    }\n    roundSelect.append(option);\n\n    // round headers\n    const th = document.createElement('th');\n    th.innerText = round;\n    th.className = 'sortable hidden-small';\n    th.dataset.sortOn = `data-sort-round-${idx + 1}-scoreType`;\n    theadRoundsRow.append(th);\n  });\n  thead.append(theadRoundsRow);\n  table.append(thead);\n  const tbody = document.createElement('tbody');\n  tbody.className = 'table-data';\n  resultData.players.forEach((playerScore) => {\n    const tr = document.createElement('tr');\n\n    tr.innerHTML = `\n      <td class=\"cell\"><a class=\"player-link\" data-player-id=\"${playerScore.player.id}\" href=\"#\">${playerScore.player.displayName}</a></td>\n      <td><span class=\"position\" data-sort-pos=\"${playerScore.position.replace('T', '')}\">${playerScore.position}</span></td>\n    `;\n\n    let totalScore = 0;\n    const totalScoreByRound = [];\n    let toParTotal = 0;\n    const toParTotalByRound = [];\n    playerScore.rounds.forEach((round, idx) => {\n      const td = document.createElement('td');\n      td.className = `hidden-small round round-${idx + 1}`;\n      td.setAttribute(`data-sort-round-${idx + 1}-total-score`, round.score);\n      td.setAttribute(`data-sort-round-${idx + 1}-to-par`, round.parRelativeScore);\n      td.innerHTML = `<span class=\"to-par\">${round.parRelativeScore}</span><span class=\"total-score\">${round.score}</span>`;\n      tr.append(td);\n\n      const scoreAsNumber = Number(round.score);\n      const toParAsNumber = Number(round.parRelativeScore);\n      totalScore += Number.isNaN(scoreAsNumber) ? 0 : scoreAsNumber;\n      toParTotal += Number.isNaN(toParAsNumber) ? 0 : toParAsNumber;\n      totalScoreByRound.push(totalScore);\n      toParTotalByRound.push(toParTotal);\n    });\n\n    if (totalScoreByRound.length < resultData.rounds.length) {\n      // fewer rounds played for player, likely  cut...\n      for (let i = totalScoreByRound.length; i < resultData.rounds.length; i += 1) {\n        const td = document.createElement('td');\n        td.className = `hidden-small round round-${i + 1}`;\n        td.setAttribute(`data-sort-round-${i + 1}-total-score`, 'n/a');\n        td.setAttribute(`data-sort-round-${i + 1}-to-par`, 'n/a');\n        td.innerHTML = '<span class=\"to-par\">--</span><span class=\"total-score\">--</span>';\n        tr.append(td);\n\n        totalScoreByRound.push('--');\n        toParTotalByRound.push('--');\n      }\n    }\n\n    const toParTd = document.createElement('td');\n    toParTd.className = 'to-par';\n    toParTotalByRound.forEach((roundScore, idx) => {\n      const span = document.createElement('span');\n      span.className = `to-par-value round-${idx + 1}`;\n      span.setAttribute(`data-sort-to-par-${idx + 1}`, roundScore);\n      let roundScoreToShow = roundScore > 0 ? `+${roundScore}` : roundScore;\n      roundScoreToShow = roundScoreToShow === 0 ? 'E' : roundScoreToShow;\n      span.innerText = roundScoreToShow;\n      toParTd.append(span);\n    });\n    tr.append(toParTd);\n\n    const totalScoreTd = document.createElement('td');\n    totalScoreTd.className = 'total-score';\n    totalScoreByRound.forEach((roundScore, idx) => {\n      const span = document.createElement('span');\n      span.className = `total-score-value round round-${idx + 1}`;\n      span.setAttribute(`data-sort-total-score-${idx + 1}`, roundScore);\n      span.innerText = roundScore;\n      totalScoreTd.append(span);\n    });\n    tr.append(totalScoreTd);\n\n    playerScore.additionalData.forEach((datum) => {\n      const td = document.createElement('td');\n      td.className = 'additional-data';\n      td.innerText = datum;\n      tr.append(td);\n    });\n\n    tbody.append(tr);\n  });\n\n  const allPlayerIds = [...tbody.querySelectorAll('a[data-player-id]')].map((a) => a.dataset.playerId);\n  fetchGraphQL(`query GetPlayers($ids: [ID!]!) {\n    players(ids: $ids) {\n      id\n      bioLink\n    }\n  }`, {\n    ids: allPlayerIds,\n  }).then(async (playersResp) => {\n    // do this update on a promise so it doesn't delay finishing the block loading\n    if (playersResp.ok) {\n      const playersJson = await playersResp.json();\n      playersJson.data.players.forEach((playerJson) => {\n        const { bioLink, id } = playerJson;\n        tbody.querySelector(`a[data-player-id=\"${id}\"]`).href = bioLink;\n      });\n    }\n  });\n\n  table.append(tbody);\n\n  // init sorting\n  table.querySelectorAll('.sortable').forEach((th) => {\n    const data = table.querySelector('.table-data');\n    const rows = [...data.querySelectorAll('tr')];\n    th.addEventListener('click', () => {\n      th.classList.add('arrow');\n      if (th.classList.contains('down')) {\n        th.classList.remove('down');\n        th.classList.add('up');\n      } else if (th.classList.contains('up')) {\n        th.classList.remove('up');\n        th.classList.add('down');\n      } else {\n        th.classList.add('down');\n      }\n      // clear existing sorts\n      table.querySelectorAll('.arrow').forEach((arrowed) => {\n        if (arrowed !== th) arrowed.classList.remove('arrow', 'up', 'down');\n      });\n      const selectRound = table.dataset.displayRounds;\n      const selectedScoreType = table.dataset.displayScore;\n      let { sortOn } = th.dataset;\n      sortOn = sortOn.replace('scoreType', selectedScoreType);\n      sortOn = sortOn.replace('roundNum', selectRound);\n      const sortDir = th.classList.contains('down') ? '1' : -1;\n      rows.sort((rowA, rowB) => {\n        const elA = rowA.querySelector(`[${sortOn}]`);\n        const elB = rowB.querySelector(`[${sortOn}]`);\n        const valA = elA ? elA.getAttribute(sortOn) : 100000;\n        const valB = elB ? elB.getAttribute(sortOn) : 100000;\n\n        return (valA - valB) * sortDir;\n      });\n      data.innerHTML = '';\n      rows.forEach((row) => data.append(row));\n    });\n  });\n  tableWrapper.append(table);\n}",
            "score": -1.0
        },
        "blocks/player-feature/player-feature.js::buildVideoContent": {
            "changes_after_merge": 0,
            "file_path": "blocks/player-feature/player-feature.js",
            "merged_function": "function buildVideoContent(section) {\n  if (section) {\n    const id = section.textContent.trim();\n    if (id) return buildBlock('video', id);\n  }\n  return null;\n}",
            "score": -1.0
        },
        "blocks/player-feature/player-feature.js::decorate": {
            "changes_after_merge": 6,
            "file_path": "blocks/player-feature/player-feature.js",
            "merged_function": "async function decorate(block) {\n  const link = block.querySelector('a');\n  const source = link.getAttribute('href');\n  const resp = await fetch(`${source}.plain.html`);\n  if (resp.ok) {\n    const html = await resp.text();\n    const feature = document.createElement('div');\n    feature.innerHTML = html;\n    block.innerHTML = `<div>${feature.querySelector('div').outerHTML}</div>`;\n    const video = block.querySelector('.embed, .video');\n    decorateButtons(block);\n    if (video) {\n      decorateBlock(video);\n      await loadBlock(video);\n    }\n  }\n\n  const sections = ['background', 'status', 'name', 'credits'];\n  [...block.firstElementChild.firstElementChild.children].forEach((child, i) => {\n    if (sections[i]) child.classList.add(`player-feature-${sections[i]}`);\n  });\n\n  const background = block.querySelector('.player-feature-background');\n  const status = block.querySelector('.player-feature-status');\n  const name = block.querySelector('.player-feature-name');\n  const credits = block.querySelector('.player-feature-credits');\n  const hasBio = credits.nextElementSibling.className !== 'button-container';\n  const button = block.querySelector('.button-container');\n  let video = block.querySelector('.embed, .video');\n\n  // transform content\n  const backgroundImg = transformBackgroundImage(background);\n  const wrappedCredits = wrapCredits(credits);\n  if (!video) video = buildVideoContent(block.querySelector('p > em'));\n\n  // order content\n  const content = [status, name, wrappedCredits];\n  if (hasBio) content.push(credits.nextElementSibling);\n  content.push(button);\n  if (video) content.push(video);\n\n  // wrap content\n  const wrapper = document.createElement('div');\n  wrapper.classList.add('player-feature-content');\n  content.forEach((c) => wrapper.append(c));\n\n  block.innerHTML = '';\n  block.append(wrapper);\n  if (video) {\n    decorateBlock(video);\n    await loadBlock(video);\n  }\n  block.parentNode.prepend(backgroundImg);\n}",
            "score": -0.7209302325581395
        },
        "blocks/player-feature/player-feature.js::transformBackgroundImage": {
            "changes_after_merge": 0,
            "file_path": "blocks/player-feature/player-feature.js",
            "merged_function": "function transformBackgroundImage(section) {\n  const picture = section.querySelector('picture');\n  picture.classList.add('player-feature-background');\n  return picture;\n}",
            "score": -1.0
        },
        "blocks/player-feature/player-feature.js::wrapCredits": {
            "changes_after_merge": 0,
            "file_path": "blocks/player-feature/player-feature.js",
            "merged_function": "function wrapCredits(section) {\n  const wrapper = document.createElement('div');\n  wrapper.classList.add('player-feature-credits');\n  const credits = section.innerHTML.split('|').map((credit) => credit.trim());\n  credits.forEach((credit, i) => {\n    const p = document.createElement('p');\n    p.innerHTML = credit;\n    wrapper.append(p);\n    if (i > 0) wrapper.classList.add('player-feature-credits-multi');\n  });\n  return wrapper;\n}",
            "score": -1.0
        },
        "blocks/promotion/promotion.js::buildClock": {
            "changes_after_merge": 5,
            "file_path": "blocks/promotion/promotion.js",
            "merged_function": "async function buildClock(block) {\n  const placeholders = await fetchPlaceholders();\n  const countdown = getDateObj(placeholders.countdown);\n  const dates = getStartEndDates(countdown, placeholders.dates);\n  // setup clock\n  window[`rolex${placeholders.rolexId}`] = [{\n    city: placeholders.city,\n    local: 'Your Time',\n    cdtext: 'Change countdown values',\n    startDate: dates.start,\n    endDate: dates.end,\n    cdyear: countdown.year,\n    cdmonth: countdown.month,\n    cdday: countdown.day,\n    cdhour: countdown.hour,\n    cdmin: countdown.minutes,\n    offset: placeholders.eventOffset,\n    dst: '0',\n  }];\n  const clock = document.createElement('div');\n  clock.className = 'rolex-frame';\n  clock.innerHTML = `<iframe\n      id=\"rolexFrame${placeholders.rolexId}\"\n      data-src=\"/blocks/promotion/rolex/rolex.frame.html?cities=rolex${placeholders.rolexId}\"\n      style=\"width:100%;height:90px;border:0;padding:0;overflow:hidden;scroll:none\"\n      scrolling=\"NO\"\n      frameborder=\"NO\"\n      transparency=\"true\"\n      src=\"/blocks/promotion/rolex/rolex.frame.html?cities=rolex${placeholders.rolexId}\">\n    </iframe>`;\n  block.append(clock);\n}",
            "score": -0.7674418604651163
        },
        "blocks/promotion/promotion.js::buildToggle": {
            "changes_after_merge": 6,
            "file_path": "blocks/promotion/promotion.js",
            "merged_function": "async function buildToggle(block) {\n  const placeholders = await fetchPlaceholders();\n  const toggle = document.createElement('div');\n  toggle.className = 'rolex-frame';\n  toggle.innerHTML = `<iframe\n      id=\"rolexFrame1txbOyjg\"\n      class=\"rolex-frame-medium\"\n      data-src=\"/blocks/promotion/rolex/rolex.frameToggle.html?eventcity=${placeholders.city.split(' ').join('+')}&utc=${placeholders.eventOffset}&lang=en\"\n      style=\"width:450px;height:100px;border:0;margin:0;padding:0;overflow:hidden;scroll:none\"\n      scrolling=\"NO\"\n      frameborder=\"NO\"\n      transparency=\"true\"\n      src=\"/blocks/promotion/rolex/rolex.frameToggle.html?eventcity=${placeholders.city.split(' ').join('+')}&utc=${placeholders.eventOffset}&lang=en\">\n    </iframe>\n    <iframe\n      id=\"rolexFrame1txbOyjg\"\n      class=\"rolex-frame-small\"\n      data-src=\"/blocks/promotion/rolex/rolex.frameToggleMobile.html?eventcity=${placeholders.city.split(' ').join('+')}&utc=${placeholders.eventOffset}&lang=en\"\n      style=\"width:100%;height:58px;border:0px;margin:0px;padding:0px;overflow:hidden;background-color:rgb(0,96,57);\"\n      scrolling=\"NO\"\n      frameborder=\"NO\"\n      transparency=\"true\"\n      src=\"/blocks/promotion/rolex/rolex.frameToggleMobile.html?eventcity=${placeholders.city.split(' ').join('+')}&utc=${placeholders.eventOffset}&lang=en\">\n    </iframe>`;\n  block.append(toggle);\n  window.addEventListener('message', (e) => {\n    if (e.data && e.data.toString().includes('rolex')) {\n      const rolexData = JSON.parse(e.data);\n      if (rolexData.name === 'rolex-teetime-toggle') {\n        const inEventTime = rolexData.value === 'On';\n        const headerText = document.querySelector('.tee-times-header > p');\n        if (inEventTime) {\n          if (headerText) headerText.setAttribute('aria-hidden', false);\n          resetToggleTimes();\n        } else {\n          if (headerText) headerText.setAttribute('aria-hidden', true);\n          updateToggleTimes(placeholders.eventOffset);\n        }\n      }\n    }\n  });\n}",
            "score": -0.7209302325581395
        },
        "blocks/promotion/promotion.js::calculateLocalOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/promotion.js",
            "merged_function": "function calculateLocalOffset() {\n  const date = new Date();\n  const multiplier = (date.getTimezoneOffset() > 0) ? -1 : 1;\n  const offset = Math.abs(date.getTimezoneOffset());\n  const hours = Math.floor(offset / 60);\n  const minutes = (offset % 60) / 60;\n  return (hours + minutes) * multiplier;\n}",
            "score": -1.0
        },
        "blocks/promotion/promotion.js::decorate": {
            "changes_after_merge": 6,
            "file_path": "blocks/promotion/promotion.js",
            "merged_function": "function decorate(block) {\n  if (block.className.includes('clock')) {\n    buildClock(block);\n  } else if (block.className.includes('toggle')) {\n    buildToggle(block);\n  }\n}",
            "score": -0.7209302325581395
        },
        "blocks/promotion/promotion.js::getDateObj": {
            "changes_after_merge": 1,
            "file_path": "blocks/promotion/promotion.js",
            "merged_function": "function getDateObj(dateStr) {\n  const date = new Date(dateStr);\n  return {\n    year: date.getFullYear().toString(),\n    month: (date.getMonth() + 1).toString().padStart(2, '0'),\n    day: date.getDay().toString(),\n    hour: date.getHours().toString().padStart(2, '0'),\n    minutes: date.getMinutes.toString(),\n  };\n}",
            "score": -0.9534883720930233
        },
        "blocks/promotion/promotion.js::getStartEndDates": {
            "changes_after_merge": 1,
            "file_path": "blocks/promotion/promotion.js",
            "merged_function": "function getStartEndDates(countdown, spanStr) {\n  if (spanStr.includes('-')) {\n    const [start, end] = spanStr.split(' ').find((s) => s.includes('-')).replace(',', '').split('-');\n    return {\n      start: `${parseInt(countdown.year, 10) - 1}${countdown.month}${start.padStart(2, '0')}`,\n      end: `${parseInt(countdown.year, 10) + 1}${countdown.month}${end.padStart(2, '0')}`,\n    };\n  }\n  return {\n    start: `${parseInt(countdown.year, 10) - 1}${countdown.month}01`,\n    end: `${parseInt(countdown.year, 10) + 1}${countdown.month}28`,\n  };\n}",
            "score": -0.9534883720930233
        },
        "blocks/promotion/promotion.js::resetToggleTimes": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/promotion.js",
            "merged_function": "function resetToggleTimes() {\n  const times = document.querySelectorAll('.tee-times .tee-times-time');\n  times.forEach((time) => {\n    const defaultHour = parseInt(time.getAttribute('data-hours'), 10);\n    const defaultMinute = time.getAttribute('data-minutes');\n    const teeHour = time.querySelector('.tee-times-hour');\n    teeHour.textContent = defaultHour > 12 ? defaultHour - 12 : defaultHour;\n    const teeMinute = time.querySelector('.tee-times-minute');\n    teeMinute.textContent = defaultMinute.padStart(2, '0');\n    const teeSuffix = time.querySelector('.tee-times-suffix');\n    teeSuffix.textContent = defaultHour >= 12 ? 'pm' : 'am';\n  });\n}",
            "score": -1.0
        },
        "blocks/promotion/promotion.js::updateToggleTimes": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/promotion.js",
            "merged_function": "function updateToggleTimes(eventOffset) {\n  const offset = calculateLocalOffset() - eventOffset;\n  if (offset !== 0) { // only update if offset between event and local time\n    const offsetHours = Math.floor(offset);\n    const offsetMinutes = (offset % 1) * 60;\n    const times = document.querySelectorAll('.tee-times .tee-times-time');\n    times.forEach((time) => {\n      const defaultHour = parseInt(time.getAttribute('data-hours'), 10);\n      const defaultMinute = parseInt(time.getAttribute('data-minutes'), 10);\n      const teeHour = time.querySelector('.tee-times-hour');\n      const teeMinute = time.querySelector('.tee-times-minute');\n      const teeSuffix = time.querySelector('.tee-times-suffix');\n      let newHour = defaultHour + offsetHours;\n      let newMinute = defaultMinute + offsetMinutes;\n      if (offset < 0) { // subtracting time\n        if (newMinute < 0) {\n          newMinute = 60 - Math.abs(newMinute);\n          newHour -= 1;\n        }\n        if (newHour <= 0) {\n          newHour = 24 - Math.abs(newHour);\n        }\n      } else if (offset > 0) { // adding time\n        if (newMinute >= 60) {\n          newMinute -= 60;\n          newHour += 1;\n        }\n        if (newHour > 24) {\n          newHour -= 24;\n        }\n      }\n      teeHour.textContent = newHour > 12 ? newHour - 12 : newHour;\n      teeMinute.textContent = newMinute.toString().padStart(2, '0');\n      teeSuffix.textContent = newHour >= 12 ? 'pm' : 'am';\n    });\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::$": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function $(e, t, n, r) { let i; try { e && g(i = e.promise) ? i.call(e).done(t).fail(n) : e && g(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r)); } catch (e) { n.apply(void 0, [e]); } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::$e": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "$e = function (t) { let n = t.ownerDocument.defaultView; return n && n.opener || (n = e), n.getComputedStyle(t); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::C": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function C(e) {\n    const t = !!e && 'length' in e && e.length;\n    const n = x(e); return !g(e) && !y(e) && (n === 'array' || t === 0 || typeof t === 'number' && t > 0 && t - 1 in e);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Ce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Ce(e) {\n      for (var t, n, i, o = e.length, a = r.relative[e[0].type], s = a || r.relative[' '], u = a ? 1 : 0, c = me((e) => e === t, s, !0), f = me((e) => O(t, e) > -1, s, !0), p = [function (e, n, r) { const i = !a && (r || n !== l) || ((t = n).nodeType ? c(e, n, r) : f(e, n, r)); return t = null, i; }]; u < o; u++) {\n        if (n = r.relative[e[u].type]) p = [me(xe(p), n)];\n        else {\n          if ((n = r.filter[e[u].type].apply(null, e[u].matches))[b]) {\n            for (i = ++u; i < o; i++) if (r.relative[e[i].type]) break;\n            return Te(u > 1 && xe(p), u > 1 && ve(e.slice(0, u - 1).concat({ value: e[u - 2].type === ' ' ? '*' : '' })).replace(B, '$1'), n, u < i && Ce(e.slice(u, i)), i < o && Ce(e = e.slice(i)), i < o && ve(e));\n          }\n          p.push(n);\n        }\n      }\n      return xe(p);\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Countdown": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Countdown() {\n    this.regional = []; // Available regional settings, indexed by language code\n    this.regional[''] = { // Default regional settings\n      // The display texts for the counters\n      labels: ['Years', 'Months', 'Weeks', 'Days', 'Hours', 'Mins', 'Secs'],\n      // The display texts for the counters if only one\n      labels1: ['Year', 'Month', 'Week', 'Day', 'Hour', 'Min', 'Sec'],\n      compactLabels: ['y', 'm', 'w', 'd'], // The compact texts for the counters\n      timeSeparator: ':', // Separator for time periods\n      isRTL: false, // True for right-to-left languages, false for left-to-right\n    };\n    this._defaults = {\n      until: null, // new Date(year, mth - 1, day, hr, min, sec) - date/time to count down to\n      // or numeric for seconds offset, or string for unit offset(s):\n      // 'Y' years, 'O' months, 'W' weeks, 'D' days, 'H' hours, 'M' minutes, 'S' seconds\n      since: null, // new Date(year, mth - 1, day, hr, min, sec) - date/time to count up from\n      // or numeric for seconds offset, or string for unit offset(s):\n      // 'Y' years, 'O' months, 'W' weeks, 'D' days, 'H' hours, 'M' minutes, 'S' seconds\n      timezone: null, // The timezone (hours or minutes from GMT) for the target times,\n      // or null for client local\n      serverSync: null, // A function to retrieve the current server time for synchronisation\n      format: 'dHMS', // Format for display - upper case for always, lower case only if non-zero,\n      // 'Y' years, 'O' months, 'W' weeks, 'D' days, 'H' hours, 'M' minutes, 'S' seconds\n      layout: '', // Build your own layout for the countdown\n      compact: false, // True to display in a compact format, false for an expanded one\n      description: '', // The description displayed for the countdown\n      expiryUrl: '', // A URL to load upon expiry, replacing the current page\n      expiryText: '', // Text to display upon expiry, replacing the countdown\n      alwaysExpire: false, // True to trigger onExpiry even if never counted down\n      onExpiry: null, // Callback when the countdown expires -\n      // receives no parameters and 'this' is the containing division\n      onTick: null, // Callback when the countdown is updated -\n      // receives int[7] being the breakdown by period (based on format)\n      // and 'this' is the containing division\n    };\n    $.extend(this._defaults, this.regional['']);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::D": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "D = function (e, t) { return e === t && (f = !0), 0; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::De": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function De(e, t, n, r, i, o) {\n    let a; let\n      s; if (typeof t === 'object') { typeof n !== 'string' && (r = r || n, n = void 0); for (s in t) De(e, s, n, r, t[s], o); return e; } if (r == null && i == null ? (i = n, r = n = void 0) : i == null && (typeof n === 'string' ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = ke;\n    else if (!i) return e; return o === 1 && (a = i, (i = function (e) { return w().off(e), a.apply(this, arguments); }).guid = a.guid || (a.guid = w.guid++)), e.each(function () { w.event.add(this, t, i, r, n); });\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Ee": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Ee(e, t) {\n      const n = t.length > 0;\n      const i = e.length > 0;\n      const o = function (o, a, s, u, c) {\n        let f; let h; let y; let v = 0;\n        let m = '0';\n        const x = o && [];\n        let b = [];\n        const w = l;\n        const C = o || i && r.find.TAG('*', c);\n        const E = T += w == null ? 1 : Math.random() || 0.1;\n        const k = C.length; for (c && (l = a === d || a || c); m !== k && (f = C[m]) != null; m++) {\n          if (i && f) {\n            h = 0, a || f.ownerDocument === d || (p(f), s = !g); while (y = e[h++]) if (y(f, a || d, s)) { u.push(f); break; }\n            c && (T = E);\n          }\n          n && ((f = !y && f) && v--, o && x.push(f));\n        } if (v += m, n && m !== v) {\n          h = 0; while (y = t[h++]) y(x, b, a, s); if (o) {\n            if (v > 0) while (m--) x[m] || b[m] || (b[m] = j.call(u));\n            b = we(b);\n          }\n          L.apply(u, b), c && !o && b.length > 0 && v + t.length > 1 && oe.uniqueSort(u);\n        } return c && (T = E, l = w), x;\n      }; return n ? se(o) : o;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Fe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Fe(e, t, n) {\n    let r; let i; let o; let a; const\n      s = e.style; return (n = n || $e(e)) && ((a = n.getPropertyValue(t) || n[t]) !== '' || w.contains(e.ownerDocument, e) || (a = w.style(e, t)), !h.pixelBoxStyles() && We.test(a) && Be.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? `${a}` : a;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Ft": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Ft(e) {\n    return function (t, n) {\n      typeof t !== 'string' && (n = t, t = '*'); let r; let i = 0;\n      const o = t.toLowerCase().match(M) || []; if (g(n)) while (r = o[i++]) r[0] === '+' ? (r = r.slice(1) || '*', (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n);\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::G": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function G(e) { return e.replace(X, 'ms-').replace(U, V); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::He": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function He(e) { return e.type = `${e.getAttribute('type') !== null}/${e.type}`, e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::I": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function I(e) { return e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Ie": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Ie(e, t, n) { for (var r, i = t ? w.filter(t, e) : e, o = 0; (r = i[o]) != null; o++) n || r.nodeType !== 1 || w.cleanData(ye(r)), r.parentNode && (n && w.contains(r.ownerDocument, r) && ve(ye(r, 'script')), r.parentNode.removeChild(r)); return e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Je": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Je(e) { let t = w.cssProps[e]; return t || (t = w.cssProps[e] = Qe(e) || e), t; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Ke": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Ke(e, t, n) { const r = ie.exec(t); return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || 'px') : t; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Le": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Le(e, t) { return N(e, 'table') && N(t.nodeType !== 11 ? t : t.firstChild, 'tr') ? w(e).children('tbody')[0] || e : e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Me": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Me(e, t) { const n = t.nodeName.toLowerCase(); n === 'input' && pe.test(e.type) ? t.checked = e.checked : n !== 'input' && n !== 'textarea' || (t.defaultValue = e.defaultValue); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::N": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function N(e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::O": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "O = function (e, t) {\n      for (let n = 0, r = e.length; n < r; n++) if (e[n] === t) return n;\n      return -1;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Oe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Oe(e) { return (e.type || '').slice(0, 5) === 'true/' ? e.type = e.type.slice(5) : e.removeAttribute('type'), e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function P(e, t) { while ((e = e[t]) && e.nodeType !== 1); return e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Pe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Pe(e, t) {\n    let n; let r; let i; let o; let a; let s; let u; let\n      l; if (t.nodeType === 1) {\n      if (J.hasData(e) && (o = J.access(e), a = J.set(t, o), l = o.events)) {\n        delete a.handle, a.events = {}; for (i in l) for (n = 0, r = l[i].length; n < r; n++) w.event.add(t, i, l[i][n]);\n      }\n      K.hasData(e) && (s = K.access(e), u = w.extend({}, s), K.set(t, u));\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Q() { this.expando = w.expando + Q.uid++; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Qe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Qe(e) {\n    if (e in Ye) return e; const t = e[0].toUpperCase() + e.slice(1);\n    let n = Ge.length; while (n--) if ((e = Ge[n] + t) in Ye) return e;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function R(e) { const t = {}; return w.each(e.match(M) || [], (e, n) => { t[n] = !0; }), t; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Re": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Re(e, t, n, r) {\n    t = a.apply([], t); let i; let o; let s; let u; let l; let c; let f = 0;\n    const p = e.length;\n    const d = p - 1;\n    const y = t[0];\n    const v = g(y); if (v || p > 1 && typeof y === 'string' && !h.checkClone && je.test(y)) {\n      return e.each(function (i) {\n        const o = e.eq(i);\n        v && (t[0] = y.call(this, i, o.html())), Re(o, t, n, r);\n      });\n    } if (p && (i = xe(t, e[0].ownerDocument, !1, e, r), o = i.firstChild, i.childNodes.length === 1 && (i = o), o || r)) {\n      for (u = (s = w.map(ye(i, 'script'), He)).length; f < p; f++) l = i, f !== d && (l = w.clone(l, !0, !0), u && w.merge(s, ye(l, 'script'))), n.call(e[f], l, f); if (u) for (c = s[s.length - 1].ownerDocument, w.map(s, Oe), f = 0; f < u; f++) l = s[f], he.test(l.type || '') && !J.access(l, 'globalEval') && w.contains(c, l) && (l.src && (l.type || '').toLowerCase() !== 'module' ? w._evalUrl && w._evalUrl(l.src) : m(l.textContent.replace(qe, ''), c, l));\n    } return e;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "S = function (e, t) { for (var n = []; e; e = e.nextSibling) e.nodeType === 1 && e !== t && n.push(e); return n; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Se": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Se() { try { return r.activeElement; } catch (e) {} }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Te": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Te(e, t, n, r, i, o) {\n      return r && !r[b] && (r = Te(r)), i && !i[b] && (i = Te(i, o)), se((o, a, s, u) => {\n        let l; let c; let f; const p = [];\n        const d = [];\n        const h = a.length;\n        const g = o || be(t || '*', s.nodeType ? [s] : s, []);\n        const y = !e || !o && t ? g : we(g, p, e, s, u);\n        let v = n ? i || (o ? e : h || r) ? [] : a : y; if (n && n(y, v, s, u), r) { l = we(v, d), r(l, [], s, u), c = l.length; while (c--)(f = l[c]) && (v[d[c]] = !(y[d[c]] = f)); } if (o) {\n          if (i || e) {\n            if (i) {\n              l = [], c = v.length; while (c--)(f = v[c]) && l.push(y[c] = f);\n              i(null, v = [], l, u);\n            }\n            c = v.length; while (c--)(f = v[c]) && (l = i ? O(o, f) : p[c]) > -1 && (o[l] = !(a[l] = f));\n          }\n        } else v = we(v === a ? v.splice(h, v.length) : v), i ? i(null, a, v, u) : L.apply(a, v);\n      });\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::TimezoneUtil": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function TimezoneUtil() {}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Tt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "Tt = function (e) { e.stopPropagation(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Ut": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Ut(e, t, n, r) {\n    let i; let o; let a; let s; let u; const l = {};\n    const c = e.dataTypes.slice(); if (c[1]) for (a in e.converters) l[a.toLowerCase()] = e.converters[a];\n    o = c.shift(); while (o) {\n      if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) {\n        if (o === '*') o = u;\n        else if (u !== '*' && u !== o) {\n          if (!(a = l[`${u} ${o}`] || l[`* ${o}`])) for (i in l) if ((s = i.split(' '))[1] === o && (a = l[`${u} ${s[0]}`] || l[`* ${s[0]}`])) { !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1])); break; }\n          if (!0 !== a) {\n            if (a && e.throws) t = a(t);\n            else try { t = a(t); } catch (e) { return { state: 'parsererror', error: a ? e : `No conversion from ${u} to ${o}` }; }\n          }\n        }\n      }\n    } return { state: 'success', data: t };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::V": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function V(e, t) { return t.toUpperCase(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function W(e) { throw e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Xt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Xt(e, t, n) {\n    let r; let i; let o; let a; const s = e.contents;\n    const u = e.dataTypes; while (u[0] === '*') u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader('Content-Type')); if (r) for (i in s) if (s[i] && s[i].test(r)) { u.unshift(i); break; }\n    if (u[0] in n) o = u[0];\n    else {\n      for (i in n) {\n        if (!u[0] || e.converters[`${i} ${u[0]}`]) { o = i; break; }\n        a || (a = i);\n      }\n      o = o || a;\n    } if (o) return o !== u[0] && u.unshift(o), n[o];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "Y = function (e) { return e.nodeType === 1 || e.nodeType === 9 || !+e.nodeType; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::Ze": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function Ze(e, t, n, r, i, o) {\n    let a = t === 'width' ? 1 : 0;\n    let s = 0;\n    let u = 0; if (n === (r ? 'border' : 'content')) return 0; for (; a < 4; a += 2) n === 'margin' && (u += w.css(e, n + oe[a], !0, i)), r ? (n === 'content' && (u -= w.css(e, `padding${oe[a]}`, !0, i)), n !== 'margin' && (u -= w.css(e, `border${oe[a]}Width`, !0, i))) : (u += w.css(e, `padding${oe[a]}`, !0, i), n !== 'padding' ? u += w.css(e, `border${oe[a]}Width`, !0, i) : s += w.css(e, `border${oe[a]}Width`, !0, i)); return !r && o >= 0 && (u += Math.max(0, Math.ceil(e[`offset${t[0].toUpperCase()}${t.slice(1)}`] - o - u - s - 0.5))), u;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::_": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function _() { r.removeEventListener('DOMContentLoaded', _), e.removeEventListener('load', _), w.ready(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::_e": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function _e(e, t) {\n    return {\n      get() {\n        if (!e()) return (this.get = t).apply(this, arguments);\n        delete this.get;\n      },\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::_t": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function _t(e, t, n, r) {\n    const i = {};\n    const o = e === Wt;\n\n    function a(s) { let u; return i[s] = !0, w.each(e[s] || [], (e, s) => { const l = s(t, n, r); return typeof l !== 'string' || o || i[l] ? o ? !(u = l) : void 0 : (t.dataTypes.unshift(l), a(l), !1); }), u; } return a(t.dataTypes[0]) || !i['*'] && a('*');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::a": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function a(t, n, r, i) {\n            return function () {\n              let s = this;\n              let u = arguments;\n              const l = function () {\n                let e; let\n                  l; if (!(t < o)) {\n                  if ((e = r.apply(s, u)) === n.promise()) throw new TypeError('Thenable self-resolution');\n                  l = e && (typeof e === 'object' || typeof e === 'function') && e.then, g(l) ? i ? l.call(e, a(o, n, I, i), a(o, n, W, i)) : (o++, l.call(e, a(o, n, I, i), a(o, n, W, i), a(o, n, I, n.notifyWith))) : (r !== I && (s = void 0, u = [e]), (i || n.resolveWith)(s, u));\n                }\n              };\n              var c = i ? l : function () { try { l(); } catch (e) { w.Deferred.exceptionHook && w.Deferred.exceptionHook(e, c.stackTrace), t + 1 >= o && (r !== W && (s = void 0, u = [e]), n.rejectWith(s, u)); } };\n              t ? c() : (w.Deferred.getStackHook && (c.stackTrace = w.Deferred.getStackHook()), e.setTimeout(c));\n            };\n          }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::activateCompetition": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function activateCompetition(flag) {\n      flag = (typeof flag === 'boolean') ? flag : false;\n      _competition.isAnimationActive = flag;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::adjustDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "adjustDate = function (date, offset, last) {\n          const wasLastDay = (date.getDate() == last);\n          const lastDay = $.countdown._getDaysInMonth(\n            date.getFullYear() + offset * periods[Y],\n            date.getMonth() + offset * periods[O],\n          );\n          if (date.getDate() > lastDay) {\n            date.setDate(lastDay);\n          }\n          date.setFullYear(date.getFullYear() + offset * periods[Y]);\n          date.setMonth(date.getMonth() + offset * periods[O]);\n          if (wasLastDay) {\n            date.setDate(lastDay);\n          }\n          return date;\n        }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ae": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ae() {\n      const e = [];\n\n      function t(n, i) { return e.push(`${n} `) > r.cacheLength && delete t[e.shift()], t[`${n} `] = i; } return t;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::at": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function at() { rt && (!1 === r.hidden && e.requestAnimationFrame ? e.requestAnimationFrame(at) : e.setTimeout(at, w.fx.interval), w.fx.tick()); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::be": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function be(e, t, n) { for (let r = 0, i = t.length; r < i; r++) oe(e, t[r], n); return n; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::buildClock": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function buildClock() {\n      $('body').addClass(params.LANG);\n\n      $('.image-fallback').attr('src', `img/${params.fallback}`);\n\n      const container = document.getElementById('rolexClockWim-container');\n\n      if (Modernizr.retina == true) {\n        //                global_watch_p[\"xscale\"] = params.retinaXscale;\n        //                global_watch_p[\"yscale\"] = params.retinaYscale;\n      }\n\n      const blockLocal = document.getElementById('local');\n      const blockCity = document.getElementById('city');\n\n      // render view\n      function changeBg(bg) {\n        if (params.isCountdownClock) {\n          if (bg == 'full') {\n            // When Countdown is present\n            // document.getElementById(\"rolexClockWim-container\").style.background = \"#fff url(''\" + imgFolder + \"/bg.jpg') no-repeat\";\n            global_watch_p.xcenter = params.globalXcenter;\n            global_watch_p.ycenter = params.globalYcenter;\n            //                        blockCity.style.display = \"block\";\n            if (Modernizr.retina == true) {\n              // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // document.getElementById(\"rolexClockWim-container\").style.backgroundSize = \"auto 100%\";\n            }\n          } else {\n            // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n            global_watch_p.xcenter = params.globalXcenter;\n            global_watch_p.ycenter = params.globalYcenter;\n            //                        blockCity.style.display = \"block\";\n            if (Modernizr.retina == true) {\n              // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // document.getElementById(\"rolexClockWim-container\").style.backgroundSize = \"auto 100%\";\n\n            }\n          }\n        } else {\n          global_watch_p.xscale = params.globalXscale;\n          global_watch_p.yscale = params.globalYscale;\n          global_watch_p.xcenter = params.globalXcenter;\n          global_watch_p.ycenter = params.globalYcenter;\n          if (bg == 'full') {\n            // document.getElementById(\"rolexClockWim-container\").style.background = \"#fff url(''\" + imgFolder + \"/bg.jpg') no-repeat\";\n            //                        blockCity.style.display = \"block\";\n            //                        blockLocal.style.display = \"block\";\n            if (Modernizr.retina == true) {\n              // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // document.getElementById(\"rolexClockWim-container\").style.backgroundSize = \"auto 100%\";\n            }\n          } else {\n            // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n            blockLocal.style.display = 'none';\n            blockCity.style.display = 'none';\n            if (Modernizr.retina == true) {\n              // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // document.getElementById(\"rolexClockWim-container\").style.backgroundSize = \"auto 100%\";\n\n            }\n          }\n        }\n      }\n\n      if (!params.forceFallback && !params.forceFlash && Modernizr.canvas == true && document.compatMode != 'Quirks' && oldIE != true) {\n        // Canvas can be used\n        $('.fallback').remove();\n        $('.tracker').attr('href', params.trackingurl);\n\n        if (!params.showText) {\n          $(blockCity).hide();\n          $(blockLocal).hide();\n          changeBg('full');\n        } else {\n          const e = loadListofdates();\n          //                    console.log(e);\n          //                    console.log(_competition);\n          const { names } = e;\n          const { timezones } = e;\n          const { timezone_dst } = e;\n          const { timeText } = e;\n          const { cdYear } = e;\n          const { cdMonth } = e;\n          const { cdDay } = e;\n          const { cdHour } = e;\n          const { cdMin } = e;\n          const { ClockRacetext } = e;\n\n          if (names.length > 0) {\n            if (params.isCountdownClock) {\n              rolexClockRacetext = ClockRacetext[0];\n              $('#racetext').html(rolexClockRacetext);\n            }\n            changeBg('full');\n\n            // Sets all string to text for each block\n            if (params.isCompetitionWithCarousel) {\n              // compet.\n              if (names.length > 1) {\n                updateCompetition();\n              } else {\n                // fallback\n                $('.ui-loader').hide();\n                $('.fallback').show();\n                return;\n              }\n            } else {\n              params.theLocalText = timeText[0];\n              params.theCityText = names[0];\n              params.customOffset = getOffsetBase10(timezones[0]);\n              params.theCity = (names[0].toLowerCase()).trim();\n              params.customDST = timezone_dst[0];\n            }\n\n            updateAllTextBlock();\n          } else {\n            // si aucun actif\n            if (params.isCompetitionWithCarousel) {\n              // compet.\n              competitionBlock.style.display = 'none';\n            } else if (params.isCountdownClock) {\n              document.getElementById('cityText').innerHTML = '&nbsp;';\n              document.getElementById('localtext').innerHTML = '&nbsp;';\n              document.getElementById('city-link').title = '&nbsp;';\n              document.getElementById('local-link').title = '&nbsp;';\n              document.getElementById('city-link').href = '#';\n              document.getElementById('local-link').href = '#';\n            } else {\n              changeBg();\n              if (params.showTime == true) {\n                document.getElementById('block-control').removeChild(blockCity);\n                document.getElementById('block-control').removeChild(blockLocal);\n              } else {\n                document.getElementById('cityText').innerHTML = params.theCityText;\n                document.getElementById('localtext').innerHTML = params.theLocalText;\n                document.getElementById('city-link').title = params.theCityText.replace('\"', '&quot;');\n                document.getElementById('local-link').title = params.theLocalText.replace('\"', '&quot;');\n                document.getElementById('city-link').href = `#${params.theCityText.replace('\"', '&quot;').replace(' ', '_')}`;\n                document.getElementById('local-link').href = `#${params.theLocalText.replace('\"', '&quot;').replace(' ', '_')}`;\n              }\n            }\n          }\n\n          let thenewOffset;\n          let customOffset;\n          let elem;\n\n          blockLocal.onclick = function () {\n            $(`.${params.blockClass}.${params.activeClass}`).removeClass(params.activeClass);\n            $(this).addClass(params.activeClass);\n\n            showCurrentTime();\n\n            // callback\n            return params.onclickYourtime();\n          };\n          blockCity.onclick = function () {\n            $(`.${params.blockClass}.${params.activeClass}`).removeClass(params.activeClass);\n            $(this).addClass(params.activeClass);\n\n            showTimeIn('city', params.theCity, params.customOffset, params.customDST, cdYear, cdMonth, cdDay, cdHour, cdMin);\n\n            // callback\n            return params.onclickCity();\n          };\n\n          function updateShownTimeInHTMLComponentOvertime() {\n            updateShownTimeInHTMLComponent();\n            // timeoutID = window.setTimeout(\"updateShownTimeInHTMLComponentOvertime()\", 100)\n            requestAnimFrame(updateShownTimeInHTMLComponentOvertime());\n          }\n\n          function showCurrentTime() {\n            setMinutesOffset(0);\n          }\n\n          function updateShownTimeInHTMLComponent() {\n            tempString = getCurrentShownTime();\n          }\n          if (params.theCity != '') {\n            if (params.isCountdownClock) {\n              // cdYear, cdMonth, cdDay, cdHour, cdMin are Arrays! There's still a default datetime, which is always the last index.\n              showTimeIn('city', params.theCity, params.customOffset, params.customDST, cdYear[0], cdMonth[0], cdDay[0], cdHour[0], cdMin[0]);\n              // start countdown\n              startCountdownPlugin(rolexClockLanguage, rolexClockCountdownCalc);\n            } else {\n              showTimeIn('city', params.theCity, params.customOffset, params.customDST);\n            }\n          }\n\n          if (params.showLocalOnly) {\n            showCurrentTime();\n          }\n          roundTime();\n        }\n\n        startWatchEngine();\n\n        showClock();\n      } else {\n        // fallback\n        $('.ui-loader').hide();\n        $('.tracker').attr('href', params.trackingurl);\n        $('.content').remove();\n        $('.fallback').show();\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ce(e, t) {\n      let n = t && e;\n      const r = n && e.nodeType === 1 && t.nodeType === 1 && e.sourceIndex - t.sourceIndex; if (r) return r; if (n) while (n = n.nextSibling) if (n === t) return -1;\n      return e ? 1 : -1;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::changeBg": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function changeBg(bg) {\n        if (params.isCountdownClock) {\n          if (bg == 'full') {\n            // When Countdown is present\n            // document.getElementById(\"rolexClockWim-container\").style.background = \"#fff url(''\" + imgFolder + \"/bg.jpg') no-repeat\";\n            global_watch_p.xcenter = params.globalXcenter;\n            global_watch_p.ycenter = params.globalYcenter;\n            //                        blockCity.style.display = \"block\";\n            if (Modernizr.retina == true) {\n              // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // document.getElementById(\"rolexClockWim-container\").style.backgroundSize = \"auto 100%\";\n            }\n          } else {\n            // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n            global_watch_p.xcenter = params.globalXcenter;\n            global_watch_p.ycenter = params.globalYcenter;\n            //                        blockCity.style.display = \"block\";\n            if (Modernizr.retina == true) {\n              // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // document.getElementById(\"rolexClockWim-container\").style.backgroundSize = \"auto 100%\";\n\n            }\n          }\n        } else {\n          global_watch_p.xscale = params.globalXscale;\n          global_watch_p.yscale = params.globalYscale;\n          global_watch_p.xcenter = params.globalXcenter;\n          global_watch_p.ycenter = params.globalYcenter;\n          if (bg == 'full') {\n            // document.getElementById(\"rolexClockWim-container\").style.background = \"#fff url(''\" + imgFolder + \"/bg.jpg') no-repeat\";\n            //                        blockCity.style.display = \"block\";\n            //                        blockLocal.style.display = \"block\";\n            if (Modernizr.retina == true) {\n              // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // document.getElementById(\"rolexClockWim-container\").style.backgroundSize = \"auto 100%\";\n            }\n          } else {\n            // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n            blockLocal.style.display = 'none';\n            blockCity.style.display = 'none';\n            if (Modernizr.retina == true) {\n              // document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // document.getElementById(\"rolexClockWim-container\").style.backgroundSize = \"auto 100%\";\n\n            }\n          }\n        }\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::cityTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function cityTime() {\n      const cityTime = new Date();\n      //            console.log(_cityParam.cityOffset , _cityParam.tempOffset)\n      cityTime.setHours(cityTime.getHours());\n      cityTime.setMinutes(cityTime.getMinutes() + _cityParam.tempOffset);\n      cityTime.setSeconds(cityTime.getSeconds());\n      const cityTime_millisecondes = cityTime.getMilliseconds();\n      const cityTime_seconds = cityTime.getSeconds();\n      let cityTime_minutes = cityTime.getMinutes();\n      let cityTime_hours = cityTime.getHours();\n      const cityTime_day = cityTime.getDay();\n      if (params.LANG === 'en') {\n        if (cityTime_day == 0) {\n          var f = 'Sun';\n        } else if (cityTime_day == 1) {\n          var f = 'Mon';\n        } else if (cityTime_day == 2) {\n          var f = 'Tue';\n        } else if (cityTime_day == 3) {\n          var f = 'Wed';\n        } else if (cityTime_day == 4) {\n          var f = 'Thu';\n        } else if (cityTime_day == 5) {\n          var f = 'Fri';\n        } else if (cityTime_day == 6) {\n          var f = 'Sat';\n        }\n      } else if (params.LANG === 'fr') {\n        if (cityTime_day == 0) {\n          var f = 'Dim';\n        } else if (cityTime_day == 1) {\n          var f = 'Lun';\n        } else if (cityTime_day == 2) {\n          var f = 'Mar';\n        } else if (cityTime_day == 3) {\n          var f = 'Mer';\n        } else if (cityTime_day == 4) {\n          var f = 'Jeu';\n        } else if (cityTime_day == 5) {\n          var f = 'Ven';\n        } else if (cityTime_day == 6) {\n          var f = 'Sam';\n        }\n      }\n      // console.log(cityTime_hours)\n      if (params.amPm == true) {\n        var g = ' ';\n        if (cityTime_hours >= 12) {\n          g = ' PM';\n        } else {\n          g = ' AM';\n        }\n      } else {\n        g = '';\n      }\n      if (params.time24hours == true) {\n        g = '';\n      } else if (cityTime_hours >= 13) {\n        cityTime_hours -= 12;\n      } else if (cityTime_hours == 0) {\n        cityTime_hours = 12;\n      }\n      if (params.leadingZeros == true) {\n        if (cityTime_hours < 10) {\n          cityTime_hours = `0${cityTime_hours}`;\n        }\n      }\n\n      if (cityTime_minutes < 10) cityTime_minutes = `0${cityTime_minutes}`;\n\n      if (params.showText == true) {\n        if (params.showDay == true) {\n          f = f;\n        } else {\n          f = '';\n        }\n      }\n\n      if (cityTime_seconds >= 0 && cityTime_seconds < 1) {\n        update = document.getElementById('rolexClockCityTime').innerHTML = `${f} ${cityTime_hours}:${cityTime_minutes}${g}`;\n      } else if (checked === undefined && params.showTime == false) {\n        update = document.getElementById('rolexClockCityTime').innerHTML = `${f} ${cityTime_hours}:${cityTime_minutes}${g}`;\n        var checked = 1;\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::countProperties": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function countProperties(a) {\n      let b = 0;\n      for (const c in a) {\n        if (a.hasOwnProperty(c)) ++b;\n      }\n      return b;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ct": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ct(e, t, n) {\n    let r; let i; let o; let a; let s; let u; let l; let c; const f = 'width' in t || 'height' in t;\n    const p = this;\n    const d = {};\n    const h = e.style;\n    let g = e.nodeType && ae(e);\n    let y = J.get(e, 'fxshow');\n    n.queue || ((a = w._queueHooks(e, 'fx')).unqueued == null && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function () { a.unqueued || s(); }), a.unqueued++, p.always(() => { p.always(() => { a.unqueued--, w.queue(e, 'fx').length || a.empty.fire(); }); })); for (r in t) {\n      if (i = t[r], it.test(i)) {\n        if (delete t[r], o = o || i === 'toggle', i === (g ? 'hide' : 'show')) {\n          if (i !== 'show' || !y || void 0 === y[r]) continue;\n          g = !0;\n        }\n        d[r] = y && y[r] || w.style(e, r);\n      }\n    }\n    if ((u = !w.isEmptyObject(t)) || !w.isEmptyObject(d)) { f && e.nodeType === 1 && (n.overflow = [h.overflow, h.overflowX, h.overflowY], (l = y && y.display) == null && (l = J.get(e, 'display')), (c = w.css(e, 'display')) === 'none' && (l ? c = l : (fe([e], !0), l = e.style.display || l, c = w.css(e, 'display'), fe([e]))), (c === 'inline' || c === 'inline-block' && l != null) && w.css(e, 'float') === 'none' && (u || (p.done(() => { h.display = l; }), l == null && (c = h.display, l = c === 'none' ? '' : c)), h.display = 'inline-block')), n.overflow && (h.overflow = 'hidden', p.always(() => { h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2]; })), u = !1; for (r in d) u || (y ? 'hidden' in y && (g = y.hidden) : y = J.access(e, 'fxshow', { display: l }), o && (y.hidden = !g), g && fe([e], !0), p.done(() => { g || fe([e]), J.remove(e, 'fxshow'); for (r in d) w.style(e, r, d[r]); })), u = lt(g ? y[r] : 0, r, p), r in y || (y[r] = u.start, g && (u.end = u.start, u.start = 0)); }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::de": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function de(e) { return function (t) { return 'form' in t ? t.parentNode && !1 === t.disabled ? 'label' in t ? 'label' in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && ie(t) === e : t.disabled === e : 'label' in t && t.disabled === e; }; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::digit": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "digit = function (value, position) {\n        return Math.floor(value / position) % 10;\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::drawTimepiece": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function drawTimepiece(a, b) {\n      magnify_x_offset = 0;\n      magnify_y_offset = 0;\n      magnify_x_scale = 1;\n      magnify_y_scale = 1;\n      if (b == true) {\n        magnify_x_offset = cyclop_mask_p.xcenteroffset;\n        magnify_y_offset = cyclop_mask_p.ycenteroffset;\n        magnify_x_scale = cyclop_mask_p.xscale;\n        magnify_y_scale = cyclop_mask_p.yscale;\n      }\n      a.globalCompositeOperation = 'source-over';\n      for (let i = 0; i < all_parts.length; i++) {\n        const c = all_p[i];\n        a.save();\n        if (all_p[i].update_mode != null) {\n          if (all_p[i].update_mode == 'monthdate') {\n            if (all_p[i].url == null) {\n              document.getElementById(`${all_parts[i]}_div`).innerHTML = monthdate;\n            } else {\n              document.getElementById(`${all_parts[i]}_div`).style.background = `url('${image_folder}num_${monthdate}.${all_p[i].fileformat}')`;\n            }\n          } else if (all_p[i].update_mode == 'weekday') {\n            document.getElementById(`${all_parts[i]}_div`).style.background = `url('${image_folder}weekday_${weekday_num}.${all_p[i].fileformat}')`;\n          } else {\n            a.translate(c.xcenteroffset, c.ycenteroffset);\n            a.translate(magnify_x_offset, magnify_y_offset);\n            a.translate(c.offset_alternate_x_center, c.offset_alternate_y_center);\n            a.scale(global_watch_p.xscale * magnify_x_scale, global_watch_p.yscale * magnify_y_scale);\n            a.rotate(display_calculation[c.update_mode]);\n            a.translate(-c.xrotation, -c.yrotation);\n\n            //                        var img = c[\"image\"];\n            //                        console.log(img, c[\"width\"],c[\"height\"])\n            const img = document.getElementById(`p_${all_parts[i]}`);\n            //                        console.log(\"p_\" + all_parts[i]);\n            //                        canvas = document.getElementById(canvasId)\n            //                        ctx = canvas.getContext('2d')\n            //                        ctx.drawImage(img, 0, 0, c[\"width\"], c[\"height\"]);\n            a.drawImage(img, 0, 0, c.width, c.height);\n            for (const d in all_p[i].__lightEffects) {\n              if (all_p[i].__lightEffects[d].height > 0) {\n                a.globalAlpha = getAlphaForRotation(d, display_calculation[c.update_mode], 'normal');\n                a.drawImage(c.__lightEffects[d], 0, 0, c.width, c.height);\n              }\n            }\n          }\n        } else {\n          a.translate(all_p[i].xcenteroffset, all_p[i].ycenteroffset);\n          a.translate(-all_p[i].xcenter, -all_p[i].ycenter);\n          a.drawImage(all_p[i].image, 0, 0, all_p[i].width, all_p[i].height);\n        }\n        a.restore();\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::dstToComponents": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function dstToComponents(dst_type) {\n  let dst_obj = {\n    hour: 0,\n    minute: 0,\n    minutes: 0,\n  };\n\n  if (dst_type !== null) {\n    let dst_hour = Math.floor(Math.abs(dst_type) / 100);\n    if (dst_type < 0) {\n      dst_hour = -dst_hour;\n    }\n    const dst_minute = dst_type % 100;\n    const dst_minutes = dst_hour * 60 + dst_minute;\n\n    dst_obj = {\n      hour: dst_hour,\n      minute: dst_minute,\n      minutes: dst_minutes,\n    };\n  }\n\n  return dst_obj;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::easeInOutQuad": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function easeInOutQuad(a, b, c, d) {\n      if (a < d / 2) return 2 * c * a * a / (d * d) + b;\n      ts = a - d / 2;\n      return -2 * c * ts * ts / (d * d) + 2 * c * ts / d + c / 2 + b;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ee": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "ee = function (e, t, n) { const r = `0x${t}` - 65536; return r !== r || n ? t : r < 0 ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::et": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function et(e, t, n) {\n    const r = $e(e);\n    let i = Fe(e, t, r);\n    const o = w.css(e, 'boxSizing', !1, r) === 'border-box';\n    let a = o; if (We.test(i)) {\n      if (!n) return i;\n      i = 'auto';\n    } return a = a && (h.boxSizingReliable() || i === e.style[t]), (i === 'auto' || !parseFloat(i) && w.css(e, 'display', !1, r) === 'inline') && (i = e[`offset${t[0].toUpperCase()}${t.slice(1)}`], a = !0), `${(i = parseFloat(i) || 0) + Ze(e, t, n || (o ? 'border' : 'content'), a, r, i)}px`;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::expiration": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function expiration() {\n      // add class for triggering styles without CD\n      $('.container').addClass('end-countdown');\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::extendRemove": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function extendRemove(target, props) {\n    $.extend(target, props);\n    for (const name in props) {\n      if (props[name] == null) {\n        target[name] = null;\n      }\n    }\n    return target;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::extractPeriod": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "extractPeriod = function (period, numSecs) {\n        periods[period] = (show[period] ? Math.floor(diff / numSecs) : 0);\n        diff -= periods[period] * numSecs;\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::f_calculate_additional_vars": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function f_calculate_additional_vars() {\n      if (GLOBAL_LIGHT_SOURCE != undefined) {\n        TOP_LIGHT_START = GLOBAL_LIGHT_SOURCE - 90;\n        TOP_LIGHT_END = GLOBAL_LIGHT_SOURCE + 90;\n        BOTTOM_LIGHT_START = GLOBAL_LIGHT_SOURCE - 90;\n        BOTTOM_LIGHT_END = GLOBAL_LIGHT_SOURCE + 90;\n        TOP_SHADE_START = GLOBAL_LIGHT_SOURCE + 90;\n        TOP_SHADE_END = GLOBAL_LIGHT_SOURCE - 90;\n        BOTTOM_SHADE_START = GLOBAL_LIGHT_SOURCE + 90;\n        BOTTOM_SHADE_END = GLOBAL_LIGHT_SOURCE - 90;\n        LEFT_LIGHT_START = GLOBAL_LIGHT_SOURCE;\n        LEFT_LIGHT_END = GLOBAL_LIGHT_SOURCE + 180;\n        RIGHT_LIGHT_START = GLOBAL_LIGHT_SOURCE + 180;\n        RIGHT_LIGHT_END = GLOBAL_LIGHT_SOURCE;\n        LEFT_SHADE_START = GLOBAL_LIGHT_SOURCE + 180;\n        LEFT_SHADE_END = GLOBAL_LIGHT_SOURCE;\n        RIGHT_SHADE_START = GLOBAL_LIGHT_SOURCE;\n        RIGHT_SHADE_END = GLOBAL_LIGHT_SOURCE + 180;\n      }\n      if (GLOBAL_MIN_ALPHA != undefined) {\n        TOP_LIGHT_MIN = BOTTOM_LIGHT_MIN = TOP_SHADE_MIN = BOTTOM_SHADE_MIN = LEFT_LIGHT_MIN = RIGHT_LIGHT_MIN = LEFT_SHADE_MIN = RIGHT_SHADE_MIN = GLOBAL_MIN_ALPHA;\n      }\n      if (GLOBAL_MAX_ALPHA != undefined) {\n        TOP_LIGHT_MAX = BOTTOM_LIGHT_MAX = TOP_SHADE_MAX = BOTTOM_SHADE_MAX = LEFT_LIGHT_MAX = RIGHT_LIGHT_MAX = LEFT_SHADE_MAX = RIGHT_SHADE_MAX = GLOBAL_MAX_ALPHA;\n      }\n      while (TOP_LIGHT_START > TOP_LIGHT_END) {\n        TOP_LIGHT_END += 360;\n      }\n      while (BOTTOM_LIGHT_START > BOTTOM_LIGHT_END) {\n        BOTTOM_LIGHT_END += 360;\n      }\n      while (TOP_SHADE_START > TOP_SHADE_END) {\n        TOP_SHADE_END += 360;\n      }\n      while (BOTTOM_SHADE_START > BOTTOM_SHADE_END) {\n        BOTTOM_SHADE_END += 360;\n      }\n      while (LEFT_LIGHT_START > LEFT_LIGHT_END) {\n        LEFT_LIGHT_END += 360;\n      }\n      while (RIGHT_LIGHT_START > RIGHT_LIGHT_END) {\n        RIGHT_LIGHT_END += 360;\n      }\n      while (LEFT_SHADE_START > LEFT_SHADE_END) {\n        LEFT_SHADE_END += 360;\n      }\n      while (RIGHT_SHADE_START > RIGHT_SHADE_END) {\n        RIGHT_SHADE_END += 360;\n      }\n      while (TOP_LIGHT_END > 360) {\n        TOP_LIGHT_START -= 360;\n        TOP_LIGHT_END -= 360;\n      }\n      while (BOTTOM_LIGHT_END > 360) {\n        BOTTOM_LIGHT_START -= 360;\n        BOTTOM_LIGHT_END -= 360;\n      }\n      while (TOP_SHADE_END > 360) {\n        TOP_SHADE_START -= 360;\n        TOP_SHADE_END -= 360;\n      }\n      while (BOTTOM_SHADE_END > 360) {\n        BOTTOM_SHADE_START -= 360;\n        BOTTOM_SHADE_END -= 360;\n      }\n      while (LEFT_LIGHT_END > 360) {\n        LEFT_LIGHT_START -= 360;\n        LEFT_LIGHT_END -= 360;\n      }\n      while (RIGHT_LIGHT_END > 360) {\n        RIGHT_LIGHT_START -= 360;\n        RIGHT_LIGHT_END -= 360;\n      }\n      while (LEFT_SHADE_END > 360) {\n        LEFT_SHADE_START -= 360;\n        LEFT_SHADE_END -= 360;\n      }\n      while (RIGHT_SHADE_END > 360) {\n        RIGHT_SHADE_START -= 360;\n        RIGHT_SHADE_END -= 360;\n      }\n      if (TOP_LIGHT_START < TOP_LIGHT_END) {\n        top_light_max_point = (TOP_LIGHT_START + TOP_LIGHT_END) / 2 % 360;\n        top_light_range = TOP_LIGHT_END - TOP_LIGHT_START;\n      } else {\n        top_light_max_point = (TOP_LIGHT_START + TOP_LIGHT_END) % 360 / 2;\n        top_light_range = 360 + TOP_LIGHT_END - TOP_LIGHT_START;\n      }\n      top_light_mid_range = top_light_range / 2;\n      if (BOTTOM_LIGHT_START < BOTTOM_LIGHT_END) {\n        bottom_light_max_point = (BOTTOM_LIGHT_START + BOTTOM_LIGHT_END) / 2 % 360;\n        bottom_light_range = BOTTOM_LIGHT_END - BOTTOM_LIGHT_START;\n      } else {\n        bottom_light_max_point = (BOTTOM_LIGHT_START + BOTTOM_LIGHT_END) % 360 / 2;\n        bottom_light_range = 360 + BOTTOM_LIGHT_END - BOTTOM_LIGHT_START;\n      }\n      bottom_light_mid_range = bottom_light_range / 2;\n      if (TOP_SHADE_START < TOP_SHADE_END) {\n        top_shade_max_point = (TOP_SHADE_START + TOP_SHADE_END) / 2 % 360;\n        top_shade_range = TOP_SHADE_END - TOP_SHADE_START;\n      } else {\n        top_shade_max_point = (TOP_SHADE_START + TOP_SHADE_END) % 360 / 2;\n        top_shade_range = 360 + TOP_SHADE_END - TOP_SHADE_START;\n      }\n      top_shade_mid_range = top_shade_range / 2;\n      if (BOTTOM_SHADE_START < BOTTOM_SHADE_END) {\n        bottom_shade_max_point = (BOTTOM_SHADE_START + BOTTOM_SHADE_END) / 2 % 360;\n        bottom_shade_range = BOTTOM_SHADE_END - BOTTOM_SHADE_START;\n      } else {\n        bottom_shade_max_point = (BOTTOM_SHADE_START + BOTTOM_SHADE_END) % 360 / 2;\n        bottom_shade_range = 360 + BOTTOM_SHADE_END - BOTTOM_SHADE_START;\n      }\n      bottom_shade_mid_range = bottom_shade_range / 2;\n      if (LEFT_LIGHT_START < LEFT_LIGHT_END) {\n        left_light_max_point = (LEFT_LIGHT_START + LEFT_LIGHT_END) / 2 % 360;\n        left_light_range = LEFT_LIGHT_END - LEFT_LIGHT_START;\n      } else {\n        left_light_max_point = (LEFT_LIGHT_START + LEFT_LIGHT_END) % 360 / 2;\n        left_light_range = 360 + LEFT_LIGHT_END - LEFT_LIGHT_START;\n      }\n      left_light_mid_range = left_light_range / 2;\n      if (RIGHT_LIGHT_START < RIGHT_LIGHT_END) {\n        right_light_max_point = (RIGHT_LIGHT_START + RIGHT_LIGHT_END) / 2 % 360;\n        right_light_range = RIGHT_LIGHT_END - RIGHT_LIGHT_START;\n      } else {\n        right_light_max_point = (RIGHT_LIGHT_START + RIGHT_LIGHT_END) % 360 / 2;\n        right_light_range = 360 + RIGHT_LIGHT_END - RIGHT_LIGHT_START;\n      }\n      right_light_mid_range = right_light_range / 2;\n      if (LEFT_SHADE_START < LEFT_SHADE_END) {\n        left_shade_max_point = (LEFT_SHADE_START + LEFT_SHADE_END) / 2 % 360;\n        left_shade_range = LEFT_SHADE_END - LEFT_SHADE_START;\n      } else {\n        left_shade_max_point = (LEFT_SHADE_START + LEFT_SHADE_END) % 360 / 2;\n        left_shade_range = 360 + LEFT_SHADE_END - LEFT_SHADE_START;\n      }\n      left_shade_mid_range = left_shade_range / 2;\n      if (RIGHT_SHADE_START < RIGHT_SHADE_END) {\n        right_shade_max_point = (RIGHT_SHADE_START + RIGHT_SHADE_END) / 2 % 360;\n        right_shade_range = RIGHT_SHADE_END - RIGHT_SHADE_START;\n      } else {\n        right_shade_max_point = (RIGHT_SHADE_START + RIGHT_SHADE_END) % 360 / 2;\n        right_shade_range = 360 + RIGHT_SHADE_END - RIGHT_SHADE_START;\n      }\n      right_shade_mid_range = right_shade_range / 2;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::fe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function fe(e) { return function (t) { return t.nodeName.toLowerCase() === 'input' && t.type === e; }; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::firstWeekday": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function firstWeekday(weekday, reference_date) {\n  let first_weekday = null;\n\n  if ((reference_date !== null) && (weekday !== null) && (weekday >= 0)) {\n    weekday %= 7;\n\n    // create a Date for the first day of current month\n    const test_date = new Date(reference_date.getFullYear(), reference_date.getMonth(), 1);\n\n    let test_weekday = test_date.getDay();\n    first_weekday = test_date.getDate();\n\n    if (test_weekday !== weekday) {\n      if (test_weekday > weekday) {\n        test_weekday -= 7;\n      }\n      first_weekday -= (test_weekday - weekday);\n    }\n  }\n\n  return first_weekday;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::foreignToLocal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function foreignToLocal(base_date, zone_offset, dst_type) {\n  const ofs_obj = dstToComponents(zone_offset + getDST(base_date, dst_type));\n  // console.log(new Date(base_date.getTime() - ((base_date.getTimezoneOffset() + ofs_obj.minutes) * 60000)))\n  return new Date(base_date.getTime() - ((base_date.getTimezoneOffset() + ofs_obj.minutes) * 60000));\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ft": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ft(e, t) {\n    let n; let r; let i; let o; let\n      a; for (n in e) if (r = G(n), i = t[r], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = w.cssHooks[r]) && 'expand' in a) { o = a.expand(o), delete e[r]; for (n in o) n in e || (e[n] = o[n], t[n] = i); } else t[r] = i;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "g = function e(t) { return typeof t === 'function' && typeof t.nodeType !== 'number'; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ge": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ge(e) { return e && typeof e.getElementsByTagName !== 'undefined' && e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::getAlphaForRotation": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function getAlphaForRotation(a, b, c) {\n      b = 180 * b / Math.PI + 90;\n      subf_find_distance_to_max_point = function (a) {\n        let c = Math.abs(a - b);\n        if (c > 180) {\n          c = Math.abs(180 - (c - 180));\n        }\n        return c;\n      };\n      let d;\n      if (a == 'top_light') {\n        if (c == 'reverse') {\n          this_hand_distance_to_top_light_point = subf_find_distance_to_max_point(-top_light_max_point);\n        } else {\n          this_hand_distance_to_top_light_point = subf_find_distance_to_max_point(top_light_max_point);\n        }\n        if (this_hand_distance_to_top_light_point <= top_light_mid_range) {\n          d = TOP_LIGHT_MIN + (1 - this_hand_distance_to_top_light_point / top_light_mid_range) * (TOP_LIGHT_MAX - TOP_LIGHT_MIN);\n        } else {\n          d = TOP_LIGHT_MIN;\n        }\n      } else if (a == 'bottom_light') {\n        if (c == 'reverse') {\n          this_hand_distance_to_bottom_light_point = subf_find_distance_to_max_point(-bottom_light_max_point);\n        } else {\n          this_hand_distance_to_bottom_light_point = subf_find_distance_to_max_point(bottom_light_max_point);\n        }\n        if (180 - this_hand_distance_to_bottom_light_point <= bottom_light_mid_range) {\n          d = BOTTOM_LIGHT_MIN + (1 - (180 - this_hand_distance_to_bottom_light_point) / bottom_light_mid_range) * (BOTTOM_LIGHT_MAX - BOTTOM_LIGHT_MIN);\n        } else {\n          d = BOTTOM_LIGHT_MIN;\n        }\n      } else if (a == 'top_shade') {\n        if (c == 'reverse') {\n          this_hand_distance_to_top_shade_point = subf_find_distance_to_max_point(-top_shade_max_point);\n        } else {\n          this_hand_distance_to_top_shade_point = subf_find_distance_to_max_point(top_shade_max_point);\n        }\n        if (this_hand_distance_to_top_shade_point <= top_shade_mid_range) {\n          d = TOP_SHADE_MIN + (1 - this_hand_distance_to_top_shade_point / top_shade_mid_range) * (TOP_SHADE_MAX - TOP_SHADE_MIN);\n        } else {\n          d = TOP_SHADE_MIN;\n        }\n      } else if (a == 'bottom_shade') {\n        if (c == 'reverse') {\n          this_hand_distance_to_bottom_shade_point = subf_find_distance_to_max_point(-bottom_shade_max_point);\n        } else {\n          this_hand_distance_to_bottom_shade_point = subf_find_distance_to_max_point(bottom_shade_max_point);\n        }\n        if (180 - this_hand_distance_to_bottom_shade_point <= bottom_shade_mid_range) {\n          d = BOTTOM_SHADE_MIN + (1 - (180 - this_hand_distance_to_bottom_shade_point) / bottom_shade_mid_range) * (BOTTOM_SHADE_MAX - BOTTOM_SHADE_MIN);\n        } else {\n          d = BOTTOM_SHADE_MIN;\n        }\n      }\n      if (c == 'reverse') {\n        if (a == 'left_light') {\n          this_hand_distance_to_left_light_point = subf_find_distance_to_max_point(-left_light_max_point);\n          if (this_hand_distance_to_left_light_point <= left_light_mid_range) {\n            d = LEFT_LIGHT_MIN + (1 - this_hand_distance_to_left_light_point / left_light_mid_range) * (LEFT_LIGHT_MAX - LEFT_LIGHT_MIN);\n          } else {\n            d = LEFT_LIGHT_MIN;\n          }\n        } else if (a == 'right_light') {\n          if (this_hand_distance_to_right_light_point <= right_light_mid_range) {\n            d = RIGHT_LIGHT_MIN + (1 - this_hand_distance_to_right_light_point / right_light_mid_range) * (RIGHT_LIGHT_MAX - RIGHT_LIGHT_MIN);\n          } else {\n            d = RIGHT_LIGHT_MIN;\n          }\n        } else if (a == 'left_shade') {\n          this_hand_distance_to_left_shade_point = subf_find_distance_to_max_point(-left_shade_max_point);\n          if (this_hand_distance_to_left_shade_point <= left_shade_mid_range) {\n            d = (1 - this_hand_distance_to_left_shade_point / left_shade_mid_range) * (LEFT_SHADE_MAX - LEFT_SHADE_MIN);\n          } else {\n            d = LEFT_SHADE_MIN;\n          }\n        } else if (a == 'right_shade') {\n          this_hand_distance_to_right_shade_point = subf_find_distance_to_max_point(-right_shade_max_point);\n          if (this_hand_distance_to_right_shade_point <= right_shade_mid_range) {\n            d = (1 - this_hand_distance_to_right_shade_point / right_shade_mid_range) * (RIGHT_SHADE_MAX - RIGHT_SHADE_MIN);\n          } else {\n            d = RIGHT_SHADE_MIN;\n          }\n        }\n      } else if (a == 'left_light') {\n        this_hand_distance_to_left_light_point = subf_find_distance_to_max_point(left_light_max_point);\n        if (this_hand_distance_to_left_light_point <= left_light_mid_range) {\n          d = LEFT_LIGHT_MIN + (1 - this_hand_distance_to_left_light_point / left_light_mid_range) * (LEFT_LIGHT_MAX - LEFT_LIGHT_MIN);\n        } else {\n          d = LEFT_LIGHT_MIN;\n        }\n      } else if (a == 'right_light') {\n        this_hand_distance_to_right_light_point = subf_find_distance_to_max_point(-right_light_max_point);\n        this_hand_distance_to_right_light_point = subf_find_distance_to_max_point(right_light_max_point);\n        if (this_hand_distance_to_right_light_point <= right_light_mid_range) {\n          d = RIGHT_LIGHT_MIN + (1 - this_hand_distance_to_right_light_point / right_light_mid_range) * (RIGHT_LIGHT_MAX - RIGHT_LIGHT_MIN);\n        } else {\n          d = RIGHT_LIGHT_MIN;\n        }\n      } else if (a == 'left_shade') {\n        this_hand_distance_to_left_shade_point = subf_find_distance_to_max_point(left_shade_max_point);\n        if (this_hand_distance_to_left_shade_point <= left_shade_mid_range) {\n          d = LEFT_SHADE_MIN + (1 - this_hand_distance_to_left_shade_point / left_shade_mid_range) * (LEFT_SHADE_MAX - LEFT_SHADE_MIN);\n        } else {\n          d = LEFT_SHADE_MIN;\n        }\n      } else if (a == 'right_shade') {\n        this_hand_distance_to_right_shade_point = subf_find_distance_to_max_point(right_shade_max_point);\n        if (this_hand_distance_to_right_shade_point <= right_shade_mid_range) {\n          d = RIGHT_SHADE_MIN + (1 - this_hand_distance_to_right_shade_point / right_shade_mid_range) * (RIGHT_SHADE_MAX - RIGHT_SHADE_MIN);\n        } else {\n          d = RIGHT_SHADE_MIN;\n        }\n      }\n      return d / 100;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::getCurrentShownTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function getCurrentShownTime() {\n      let a = '';\n      if (current_hours < 10) {\n        a += '0';\n      }\n      a += current_hours;\n      a += ':';\n      if (current_minutes < 10) {\n        a += '0';\n      }\n      a += current_minutes;\n      return a;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::getDST": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function getDST(reference_date, dst_type) {\n  let dst = 0;\n  const month = reference_date.getUTCMonth() + 1;\n  const mday = reference_date.getUTCDate();\n  switch (dst_type) {\n    case 'EUROPE':\n      // Europe, Greenland, Russia, Canary Islands, Tunisia\n      // start: last Sunday in March\n      // end: last Sunday in October\n      // time: 1 am (01:00) Greenwich Mean Time (GMT) (ignored)\n      // Russia time: 2 am local time (ignored)\n      if ((month > 3) && (month < 10)) {\n        dst = +100;\n      } else if ((month === 3) && (mday >= lastWeekday(SUN, reference_date))) {\n        dst = +100;\n      } else if ((month === 10) && (mday < lastWeekday(SUN, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'USA':\n      // USA, Canada\n      // start: second Sunday in March at 02:00:00\n      // end: first Sunday in November at 02:00:00\n      // * not observed in U.S.: Arizona, Hawaii\n      // * not observed in U.S territories: American Samoa, Guam, Puerto Rico, the U.S. Virgin Islands\n      // * not observed in Canada: Saskatchewan, northeastern British Columbia and Southampton Island in Nunavut\n      if ((month > 3) && (month < 11)) {\n        dst = +100;\n      } else if ((month === 3) && (mday >= firstWeekday(SUN, reference_date) + 7)) {\n        dst = +100;\n      } else if ((month === 11) && (mday < firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'MEXICO':\n      // Mexico (old USA rules)\n      // start: first Sunday in April at 02:00:00\n      // end: last Sunday in October at 02:00:00\n      // * not observed in: Sonora\n      if ((month > 4) && (month < 10)) {\n        dst = +100;\n      } else if ((month === 4) && (mday >= firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      } else if ((month === 10) && (mday < lastWeekday(SUN, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'GUATEMALA':\n      // Guatemala\n      // no DST in 2007, 2008, 2010\n      break;\n    case 'CUBA':\n      // Cuba\n      // start: second Sunday in March\n      // end: last Sunday in October\n      // time: 1 am local time (ignored)\n      if ((month > 3) && (month < 10)) {\n        dst = +100;\n      } else if ((month === 3) && (mday >= firstWeekday(SUN, reference_date) + 7)) {\n        dst = +100;\n      } else if ((month === 10) && (mday < lastWeekday(SUN, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'BRAZIL':\n      // Brazil\n      // NOTE: starting and ending dates are variable - this is just an approximation!\n      // start: third Saturday in October at 23:59:59\n      // end: third Saturday in February at 23:59:59\n      // * not observed in: Acre, Alagoas, Amap\u00e1, Amazonas, Bahia, Cear\u00e1, Maranh\u00e3o, Par\u00e1, Para\u00edba, Pernambuco,\n      //   Piau\u00ed, Rio Grande do Norte, Rond\u00f4nia, Roraima, Sergipe, Tocantins\n      if ((month > 10) || (month < 2)) {\n        dst = +100;\n      } else if ((month === 10) && (mday >= firstWeekday(SUN, reference_date) + 14)) {\n        dst = +100;\n      } else if ((month === 2) && (mday < firstWeekday(SUN, reference_date) + 14)) {\n        dst = +100;\n      }\n\n      break;\n    case 'CHILE':\n      // Chile\n      // NOTE: in specific years the starting and ending dates have been modified for political or climatic reasons\n      // start: second Sunday in October\n      // end: first Sunday in April\n      // time: midnight local time\n      if ((month > 10) || (month < 4)) {\n        dst = +100;\n      } else if ((month === 10) && (mday >= firstWeekday(SUN, reference_date) + 7)) {\n        dst = +100;\n      } else if ((month === 4) && (mday < firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'PARAGUAY':\n      // Paraguay\n      // start: first Sunday in October at 00:00:00\n      // end: second Sunday in April at 00:00:00\n      if ((month > 10) || (month < 4)) {\n        dst = +100;\n      } else if ((month === 10) && (mday >= firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      } else if ((month === 4) && (mday < firstWeekday(SUN, reference_date) + 7)) {\n        dst = +100;\n      }\n\n      break;\n    case 'URUGUAY':\n      // Uruguay\n      // start: first Sunday in October\n      // end: second Sunday in March\n      if ((month > 10) || (month < 3)) {\n        dst = +100;\n      } else if ((month === 10) && (mday >= firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      } else if ((month === 3) && (mday < firstWeekday(SUN, reference_date) + 7)) {\n        dst = +100;\n      }\n\n      break;\n    case 'ARGENTINA':\n      // Argentina\n      // no DST in 2010\n      break;\n    case 'EGYPT':\n      // Egypt\n      // start: last Friday in April at 00:00:00\n      // end: first Friday in August at 00:00:00\n      // NOTE! STARTING 2011... end: last Friday in September at 00:00:00\n      if ((month > 4) && (month < 8)) {\n        dst = +100;\n      } else if ((month === 4) && (mday >= lastWeekday(FRI, reference_date))) {\n        dst = +100;\n      } else if ((month === 8) && (mday < firstWeekday(FRI, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'NAMIBIA':\n      // Namibia\n      // start: first Sunday in September\n      // end: first Sunday in April\n      if ((month > 9) || (month < 4)) {\n        dst = +100;\n      } else if ((month === 9) && (mday >= firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      } else if ((month === 4) && (mday < firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'MOROCCO':\n      // no DST in 2009, 2010\n      break;\n    case 'JORDAN':\n      // Jordan\n      // start: last Friday in March at 00:00:00\n      // end: last Friday in October at 01:00:00\n      if ((month > 3) && (month < 10)) {\n        dst = +100;\n      } else if ((month === 3) && (mday >= lastWeekday(FRI, reference_date))) {\n        dst = +100;\n      } else if ((month === 10) && (mday < lastWeekday(FRI, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'SYRIA':\n      // Syria\n      // start: first Friday in April at 00:00:00\n      // end: last Friday in October at 00:00:00\n      if ((month > 4) && (month < 10)) {\n        dst = +100;\n      } else if ((month === 4) && (mday >= firstWeekday(FRI, reference_date))) {\n        dst = +100;\n      } else if ((month === 10) && (mday < lastWeekday(FRI, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'IRAQ':\n      // Iraq\n      // no DST in 2010\n      break;\n    case 'ISRAEL':\n      // Israel\n      // NOTE: ONLY GOOD FOR 2010 because too complex to make general calculation\n      // start: last Friday before April 2 at 02:00:00\n      // end: the Sunday between Rosh Hashanah and Yom Kippur at 02:00:00\n      // 2010: starts 26 March, ends 12 September\n      // 2011: starts 1 April, ends 2 October\n      // 2012: starts 30 March, ends 23 September\n      // 2013: starts 29 March, ends 8 September\n      // 2014: starts 28 March, ends 28 September\n      // 2015: starts 27 March, ends 20 September\n      switch (reference_date.getUTCFullYear()) {\n        // 2010: starts 26 March, ends 12 September\n        case 2010:\n          if ((month > 3) && (month < 9)) {\n            dst = +100;\n          } else if ((month === 3) && (mday >= 26)) {\n            dst = +100;\n          } else if ((month === 9) && (mday < 12)) {\n            dst = +100;\n          }\n          break;\n          // 2011: starts 1 April, ends 2 October\n        case 2011:\n          if ((month > 4) && (month < 10)) {\n            dst = +100;\n          } else if ((month === 4) && (mday >= 1)) {\n            dst = +100;\n          } else if ((month === 10) && (mday < 2)) {\n            dst = +100;\n          }\n          break;\n          // 2012: starts 30 March, ends 23 September\n        case 2012:\n          if ((month > 3) && (month < 9)) {\n            dst = +100;\n          } else if ((month === 3) && (mday >= 30)) {\n            dst = +100;\n          } else if ((month === 9) && (mday < 23)) {\n            dst = +100;\n          }\n          break;\n          // 2013: starts 29 March, ends 8 September\n        case 2013:\n          if ((month > 3) && (month < 9)) {\n            dst = +100;\n          } else if ((month === 3) && (mday >= 29)) {\n            dst = +100;\n          } else if ((month === 9) && (mday < 8)) {\n            dst = +100;\n          }\n          break;\n          // 2014: starts 28 March, ends 28 September\n        case 2014:\n          if ((month > 3) && (month < 9)) {\n            dst = +100;\n          } else if ((month === 3) && (mday >= 28)) {\n            dst = +100;\n          } else if ((month === 9) && (mday < 28)) {\n            dst = +100;\n          }\n          break;\n          // 2015: starts 27 March, ends 20 September\n        case 2015:\n          if ((month > 3) && (month < 9)) {\n            dst = +100;\n          } else if ((month === 3) && (mday >= 27)) {\n            dst = +100;\n          } else if ((month === 9) && (mday < 20)) {\n            dst = +100;\n          }\n          break;\n          // less-than-ideal fallback: starts last Friday in March, ends 20 September\n        default:\n          if ((month > 3) && (month < 9)) {\n            dst = +100;\n          } else if ((month === 3) && (mday >= lastWeekday(FRI, reference_date))) {\n            dst = +100;\n          } else if ((month === 9) && (mday < 20)) {\n            dst = +100;\n          }\n          break;\n      }\n\n      break;\n    case 'PAKISTAN':\n      // start: third Thursday in April at 00:00:00\n      // end: first Monday in November at 00:00:00\n      if ((month > 4) && (month < 11)) {\n        dst = +100;\n      } else if ((month === 4) && (mday >= firstWeekday(THU, reference_date) + 14)) {\n        dst = +100;\n      } else if ((month === 11) && (mday < firstWeekday(MON, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'AUSTRALIA':\n      // Australia: New South Wales (Sydney), Victoria (Melbourne), South Australia (Adelaide), Tasmania (Hobart), Australian Capital Territory (Canberra)\n      // start: first Sunday in October at 02:00:00\n      // end: first Sunday in April at 03:00:00\n      // * not observed in: Northern Territory, Queensland\n      if ((month > 10) || (month < 4)) {\n        dst = +100;\n      } else if ((month === 10) && (mday >= firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      } else if ((month === 4) && (mday < firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n    case 'AUSTRALIA_WESTERN':\n      // Australia: Western Australia (Perth)\n      // no DST in 2010 (DST was only used for a trial period during the summers of 2006, 2007, 2008, 2009)\n      break;\n    case 'NEW_ZEALAND':\n      // New Zealand\n      // start: last Sunday in September\n      // end: first Sunday in April\n      // time: 2 am local time (ignored)\n      if ((month > 9) || (month < 4)) {\n        dst = +100;\n      } else if ((month === 9) && (mday >= lastWeekday(SUN, reference_date))) {\n        dst = +100;\n      } else if ((month === 4) && (mday < firstWeekday(SUN, reference_date))) {\n        dst = +100;\n      }\n\n      break;\n  }\n\n  return dst;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::getHiddenProp": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function getHiddenProp() {\n      const prefixes = ['webkit', 'moz', 'ms', 'o'];\n\n      // if 'hidden' is natively supported just return it\n      if ('hidden' in document) return 'hidden';\n\n      // otherwise loop over all the known prefixes until we find one\n      for (let i = 0; i < prefixes.length; i++) {\n        if ((`${prefixes[i]}Hidden`) in document) return `${prefixes[i]}Hidden`;\n      }\n\n      // otherwise it's not supported\n      return null;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::getOffsetBase10": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function getOffsetBase10(offset) {\n      //            console.log(typeof offset)\n      const hours = parseInt(offset); // +/- N\n      const decimal = offset - hours; // 0.xx\n      const newDecimal = decimal / 0.60;\n      //            console.log(hours, decimal, newDecimal, hours + newDecimal);\n      return hours + newDecimal;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::getSeconds": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function getSeconds() {\n      const now = new Date();\n      const theSeconds = now.getSeconds();\n      if (theSeconds === 0) {\n        requestAnimFrame(roundTime);\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::getSecs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "getSecs = function (date) {\n          return (date.getHours() * 60 + date.getMinutes()) * 60 + date.getSeconds();\n        }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::he": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function he(e) {\n      return se((t) => (t = +t, se((n, r) => {\n        let i; const o = e([], n.length, t);\n        let a = o.length; while (a--) n[i = o[a]] && (n[i] = !(r[i] = n[i]));\n      })));\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function i(e, t) { return r(prefixes.join(`${e};`) + (t || '')); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::init": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function init() {\n      // init default event\n      let defaultEvent;\n      if (params.isCountdownClock) {\n        defaultEvent = {\n          city: 'GMT', // {string} city name\n          local: 'Your Time', // {string} local text\n          startDate: '19700101', // {string} start date yyyymmdd\n          endDate: '99990101',\n          offset: 0, // {float} Difference to Greenwich time (GMT) in hours. Ex: -4 for NYC, 5.3 for NewDelhi, 5.45 for Katmandu\n          dst: 0, // {string} Daylight saving time zone\n          cdtext: 'ROLEX COUNTDOWN', // CD text\n          cdyear: '1970', // CD year\n          cdmonth: '11', // CD month\n          cdday: '29', // CD day\n          cdhour: '09', // CD hour\n          cdmin: '00', // CD min\n        };\n      } else {\n        defaultEvent = {\n          city: 'GMT', // {string} city name\n          local: 'Your Time', // {string} local text\n          startDate: '19700101', // {string} start date yyyymmdd\n          endDate: '99990101', // {string} end date yyyymmdd\n          offset: 0, // {float} Difference to Greenwich time (GMT) in hours. Ex: -4 for NYC, 5.3 for NewDelhi, 5.45 for Katmandu\n          dst: 0, // {string} Daylight saving time zone\n        };\n      }\n\n      // si compet, add new property\n      if (params.isCompetitionWithCarousel) {\n        defaultEvent.competition = {};\n      }\n\n      // Add default event.\n      if (params.dateList === undefined) {\n        params.dateList = [\n          defaultEvent,\n        ];\n      } else {\n        // push a default city\n        params.dateList.push(defaultEvent);\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::isHidden": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function isHidden() {\n      const prop = getHiddenProp();\n      if (!prop) return false;\n\n      return document[prop];\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::j": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function j(e, t, n) { return g(t) ? w.grep(e, (e, r) => !!t.call(e, r, e) !== n) : t.nodeType ? w.grep(e, (e) => e === t !== n) : typeof t !== 'string' ? w.grep(e, (e) => u.call(t, e) > -1 !== n) : w.filter(t, e, n); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::jt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function jt(e, t, n, r) {\n    let i; if (Array.isArray(t)) w.each(t, (t, i) => { n || St.test(e) ? r(e, i) : jt(`${e}[${typeof i === 'object' && i != null ? t : ''}]`, i, n, r); });\n    else if (n || x(t) !== 'object') r(e, t);\n    else for (i in t) jt(`${e}[${i}]`, t[i], n, r);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "k = function (e, t, n) {\n    const r = [];\n    const i = void 0 !== n; while ((e = e[t]) && e.nodeType !== 9) {\n      if (e.nodeType === 1) {\n        if (i && w(e).is(n)) break;\n        r.push(e);\n      }\n    }\n    return r;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ke": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ke() { return !1; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::l": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "l = function () {\n                let e; let\n                  l; if (!(t < o)) {\n                  if ((e = r.apply(s, u)) === n.promise()) throw new TypeError('Thenable self-resolution');\n                  l = e && (typeof e === 'object' || typeof e === 'function') && e.then, g(l) ? i ? l.call(e, a(o, n, I, i), a(o, n, W, i)) : (o++, l.call(e, a(o, n, I, i), a(o, n, W, i), a(o, n, I, n.notifyWith))) : (r !== I && (s = void 0, u = [e]), (i || n.resolveWith)(s, u));\n                }\n              }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::labelFor": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "labelFor = function (index) {\n        return ($.countdown._get(\n          inst,\n          (compact ? 'compactLabels' : 'labels') + inst._periods[index],\n        )\n          || labels)[index];\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::lastWeekday": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function lastWeekday(weekday, reference_date) {\n  let last_weekday = null;\n\n  if ((reference_date !== null) && (weekday !== null) && (weekday >= 0)) {\n    weekday %= 7;\n\n    // create a Date for the last day of current month\n    // (next month minus one day)\n    const test_date = new Date(reference_date.getFullYear(), reference_date.getMonth() + 1, 0);\n\n    let test_weekday = test_date.getDay();\n    last_weekday = test_date.getDate();\n\n    if (test_weekday !== weekday) {\n      if (test_weekday < weekday) {\n        test_weekday += 7;\n      }\n      last_weekday -= (test_weekday - weekday);\n    }\n  }\n\n  return last_weekday;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::le": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function le(e, t) {\n      const n = e.split('|');\n      let i = n.length; while (i--) r.attrHandle[n[i]] = t;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::loadListofdates": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function loadListofdates() {\n      var language = params.LANG;\n      var language = language.toLowerCase();\n      const now_date = new Date();\n\n      const year = now_date.getFullYear();\n      let month = now_date.getMonth() + 1;\n      let day = now_date.getDate();\n      if (month < 10) {\n        month = `0${month}`;\n      }\n      if (day < 10) {\n        day = `0${day}`;\n      }\n\n      const names = [];\n      const timezones = [];\n      const timezone_dst = [];\n      const timeText = [];\n\n      const cdYear = [];\n      const cdMonth = [];\n      const cdDay = [];\n      const cdHour = [];\n      const cdMin = [];\n      const ClockRacetext = [];\n\n      const todayfull = Number(`${year}${month}${day}`);\n      let index = null;\n      for (let i = 0; i < params.dateList.length; i++) {\n        if (todayfull >= params.dateList[i].startDate && todayfull <= params.dateList[i].endDate) {\n          index = i;\n          if (language == '' || i == params.dateList.length - 1) {\n            names.push(params.dateList[index].city);\n            timeText.push(params.dateList[index].local);\n          } else {\n            names.push(params.dateList[index].city);\n            timeText.push(params.dateList[index].local);\n          }\n          timezones.push(params.dateList[index].offset);\n          timezone_dst.push(params.dateList[index].dst);\n\n          if (params.isCountdownClock) {\n            cdYear.push(params.dateList[index].cdyear);\n            cdMonth.push(params.dateList[index].cdmonth);\n            cdDay.push(params.dateList[index].cdday);\n            cdHour.push(params.dateList[index].cdhour);\n            cdMin.push(params.dateList[index].cdmin);\n\n            ClockRacetext.push(params.dateList[index].cdtext);\n          }\n\n          if (params.isCompetitionWithCarousel) {\n            _competition.data.push(params.dateList[index]);\n          }\n        }\n      }\n\n      return {\n        names,\n        timezones,\n        timezone_dst,\n        timeText,\n        cdYear,\n        cdMonth,\n        cdDay,\n        cdHour,\n        cdMin,\n        ClockRacetext,\n      };\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::loadSprite": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function loadSprite(i, src) {\n      //            console.log(\"i=\" + i + \"; src=\" + src);\n      const deferred = $.Deferred();\n      all_p[i].image = document.createElement('img');\n      all_p[i].image.id = `p_${all_parts[i]}`;\n      all_p[i].image.onload = function () {\n        deferred.resolve();\n      };\n      all_p[i].image.onerror = function () {\n        loadSpriteErrors.push(src);\n        $('.content').hide();\n        $('.fallback').show();\n      };\n      partsContainer.appendChild(all_p[i].image);\n      all_p[i].image.src = src;\n      return deferred.promise();\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::localToForeign": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function localToForeign(base_date, zone_offset, dst_type) {\n  const ofs_obj = dstToComponents(zone_offset + getDST(base_date, dst_type));\n\n  return new Date(base_date.getTime() + ((base_date.getTimezoneOffset() + ofs_obj.minutes) * 60000));\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::lt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function lt(e, t, n) {\n    for (var r, i = (pt.tweeners[t] || []).concat(pt.tweeners['*']), o = 0, a = i.length; o < a; o++) if (r = i[o].call(n, t, e)) return r;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::m": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function m(e, t, n) {\n    let i; const\n      o = (t = t || r).createElement('script'); if (o.text = e, n) for (i in v) n[i] && (o[i] = n[i]);\n    t.head.appendChild(o).parentNode.removeChild(o);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::me": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function me(e, t, n) {\n      const r = t.dir;\n      const i = t.next;\n      const o = i || r;\n      const a = n && o === 'parentNode';\n      const s = C++; return t.first ? function (t, n, i) {\n        while (t = t[r]) if (t.nodeType === 1 || a) return e(t, n, i);\n        return !1;\n      } : function (t, n, u) {\n        let l; let c; let f; const\n          p = [T, s]; if (u) {\n          while (t = t[r]) if ((t.nodeType === 1 || a) && e(t, n, u)) return !0;\n        } else {\n          while (t = t[r]) {\n            if (t.nodeType === 1 || a) {\n              if (f = t[b] || (t[b] = {}), c = f[t.uniqueID] || (f[t.uniqueID] = {}), i && i === t.nodeName.toLowerCase()) t = t[r] || t;\n              else { if ((l = c[o]) && l[0] === T && l[1] === s) return p[2] = l[2]; if (c[o] = p, p[2] = e(t, n, u)) return !0; }\n            }\n          }\n        } return !1;\n      };\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::mt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function mt(e) { return e.getAttribute && e.getAttribute('class') || ''; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function n(e) { return Math.round(parseFloat(e)); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ne": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "ne = function (e, t) { return t ? e === '\\0' ? '\\ufffd' : `${e.slice(0, -1)}\\\\${e.charCodeAt(e.length - 1).toString(16)} ` : `\\\\${e}`; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::o": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function o(e, t) { return !!~(`${e}`).indexOf(t); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::oe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function oe(e, t, r, i) {\n      let o; let s; let l; let c; let f; let h; let v; let m = t && t.ownerDocument;\n      const T = t ? t.nodeType : 9; if (r = r || [], typeof e !== 'string' || !e || T !== 1 && T !== 9 && T !== 11) return r; if (!i && ((t ? t.ownerDocument || t : w) !== d && p(t), t = t || d, g)) {\n        if (T !== 11 && (f = J.exec(e))) if (o = f[1]) { if (T === 9) { if (!(l = t.getElementById(o))) return r; if (l.id === o) return r.push(l), r; } else if (m && (l = m.getElementById(o)) && x(t, l) && l.id === o) return r.push(l), r; } else { if (f[2]) return L.apply(r, t.getElementsByTagName(e)), r; if ((o = f[3]) && n.getElementsByClassName && t.getElementsByClassName) return L.apply(r, t.getElementsByClassName(o)), r; }\n        if (n.qsa && !S[`${e} `] && (!y || !y.test(e))) {\n          if (T !== 1) m = t, v = e;\n          else if (t.nodeName.toLowerCase() !== 'object') {\n            (c = t.getAttribute('id')) ? c = c.replace(te, ne) : t.setAttribute('id', c = b), s = (h = a(e)).length; while (s--) h[s] = `#${c} ${ve(h[s])}`;\n            v = h.join(','), m = K.test(e) && ge(t.parentNode) || t;\n          } if (v) try { return L.apply(r, m.querySelectorAll(v)), r; } catch (e) {} finally { c === b && t.removeAttribute('id'); }\n        }\n      } return u(e.replace(B, '$1'), t, r, i);\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::offsetNumeric": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "offsetNumeric = function (offset) { // e.g. +300, -2\n        const time = new Date();\n        time.setTime(time.getTime() + offset * 1000);\n        return time;\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::offsetString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "offsetString = function (offset) { // e.g. '+2d', '-4w', '+3h +30m'\n        offset = offset.toLowerCase();\n        const time = new Date();\n        let year = time.getFullYear();\n        let month = time.getMonth();\n        let day = time.getDate();\n        let hour = time.getHours();\n        let minute = time.getMinutes();\n        let second = time.getSeconds();\n        const pattern = /([+-]?[0-9]+)\\s*(s|m|h|d|w|o|y)?/g;\n        let matches = pattern.exec(offset);\n        while (matches) {\n          switch (matches[2] || 's') {\n            case 's':\n              second += parseInt(matches[1], 10);\n              break;\n            case 'm':\n              minute += parseInt(matches[1], 10);\n              break;\n            case 'h':\n              hour += parseInt(matches[1], 10);\n              break;\n            case 'd':\n              day += parseInt(matches[1], 10);\n              break;\n            case 'w':\n              day += parseInt(matches[1], 10) * 7;\n              break;\n            case 'o':\n              month += parseInt(matches[1], 10);\n              day = Math.min(day, $.countdown._getDaysInMonth(year, month));\n              break;\n            case 'y':\n              year += parseInt(matches[1], 10);\n              day = Math.min(day, $.countdown._getDaysInMonth(year, month));\n              break;\n          }\n          matches = pattern.exec(offset);\n        }\n        return new Date(year, month, day, hour, minute, second, 0);\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::pe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function pe(e) { return function (t) { const n = t.nodeName.toLowerCase(); return (n === 'input' || n === 'button') && t.type === e; }; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::placeCanvas": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function placeCanvas(a, b, c) {\n      a.clearRect(-global_watch_p.width, -global_watch_p.height, global_watch_p.width * 2, global_watch_p.height * 2);\n      if (b == false) {} else {\n        a.save();\n        if (c) {\n          a.translate(global_watch_p[c.watch_x_center], global_watch_p[c.watch_y_center]);\n        } else {\n          a.translate(global_watch_p.xcenter, global_watch_p.ycenter);\n        }\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::prepareTimepieceElements": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function prepareTimepieceElements() {\n      if (prepareTimepieceElementsIsDone == false) {\n        for (i = 0; i < all_parts.length; i++) {\n          if (all_p[i].update_mode == 'monthdate' || all_p[i].update_mode == 'weekday') {\n            if (all_p[i].url == null) {\n              var a = document.createElement('DIV');\n            } else {\n              var a = document.createElement('CANVAS');\n            }\n            document.getElementById(watchContainer).appendChild(a);\n            if (typeof G_vmlCanvasManager !== 'undefined') {\n              a = G_vmlCanvasManager.initElement(a);\n            }\n            a.setAttribute('id', `${all_parts[i]}_div`);\n            a.style.position = 'absolute';\n            a.style.width = `${all_p[i].width}px`;\n            a.style.height = `${all_p[i].height}px`;\n            a.style.left = `${all_p[i].xoriginoffset}px`;\n            a.style.top = `${all_p[i].yoriginoffset}px`;\n            if (all_p[i].url == null) {\n              a.style.color = `#${all_p[i].txt_color}`;\n              a.style.fontSize = all_p[i].txt_fontSize;\n              a.style.fontFamily = 'Arial';\n              a.style.textAlign = 'center';\n            }\n            parts_starting_z_index += i;\n            a.style.zIndex = parts_starting_z_index;\n          }\n        }\n        var b = document.createElement('CANVAS');\n        document.getElementById(watchContainer).appendChild(b);\n        if (typeof G_vmlCanvasManager !== 'undefined') {\n          b = G_vmlCanvasManager.initElement(b);\n        }\n        b.setAttribute('id', 'regular_timepiece_canvas');\n        b.style.position = 'absolute';\n        b.setAttribute('width', global_watch_p.width);\n        b.setAttribute('height', global_watch_p.height);\n        b.style.zIndex = parts_starting_z_index;\n        if (cyclop_mask_p.url) {\n          var b = document.createElement('CANVAS');\n          document.getElementById(watchContainer).appendChild(b);\n          if (typeof G_vmlCanvasManager !== 'undefined') {\n            b = G_vmlCanvasManager.initElement(b);\n          }\n          b.setAttribute('id', 'magnified_timepiece_canvas');\n          b.style.position = 'absolute';\n          b.setAttribute('width', global_watch_p.width);\n          b.setAttribute('height', global_watch_p.height);\n          b.style.zIndex = parts_starting_z_index + 1;\n        }\n        prepareTimepieceElementsIsDone = true;\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::pt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function pt(e, t, n) {\n    let r; let i; let o = 0;\n    const a = pt.prefilters.length;\n    const s = w.Deferred().always(() => { delete u.elem; });\n    var u = function () { if (i) return !1; for (var t = nt || st(), n = Math.max(0, l.startTime + l.duration - t), r = 1 - (n / l.duration || 0), o = 0, a = l.tweens.length; o < a; o++) l.tweens[o].run(r); return s.notifyWith(e, [l, r, n]), r < 1 && a ? n : (a || s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l]), !1); };\n    var l = s.promise({\n      elem: e,\n      props: w.extend({}, t),\n      opts: w.extend(!0, { specialEasing: {}, easing: w.easing._default }, n),\n      originalProperties: t,\n      originalOptions: n,\n      startTime: nt || st(),\n      duration: n.duration,\n      tweens: [],\n      createTween(t, n) { const r = w.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing); return l.tweens.push(r), r; },\n      stop(t) {\n        let n = 0;\n        const r = t ? l.tweens.length : 0; if (i) return this; for (i = !0; n < r; n++) l.tweens[n].run(1); return t ? (s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l, t])) : s.rejectWith(e, [l, t]), this;\n      },\n    });\n    const c = l.props; for (ft(c, l.opts.specialEasing); o < a; o++) if (r = pt.prefilters[o].call(l, e, c, l.opts)) return g(r.stop) && (w._queueHooks(l.elem, l.opts.queue).stop = r.stop.bind(r)), r;\n    return w.map(c, lt, l), g(l.opts.start) && l.opts.start.call(e, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), w.fx.timer(w.extend(u, { elem: e, anim: l, queue: l.opts.queue })), l;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function r(e) { d.cssText = e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::re": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "re = function () { p(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::removeElement": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function removeElement(id) {\n      const element = document.getElementById(id);\n      element.parentNode.removeChild(element);\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::roundTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function roundTime() {\n      cityTime();\n      yourTime();\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function s(e, t) { return typeof e === t; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::se": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function se(e) { return e[b] = !0, e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::setHoursOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function setHoursOffset(a) {\n      hoursOffset = a;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::setMinutesOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function setMinutesOffset(a) {\n      minutesOffset = a;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::setSecondsOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function setSecondsOffset(a) {\n      secondsOffset = a;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::setTimeToDefaultTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function setTimeToDefaultTime() {\n      currentTime = new Date();\n      currentTime.setHours(10);\n      currentTime.setMinutes(11);\n      currentTime.setSeconds(31);\n      monthdate = currentTime.getDate();\n      weekday_num = currentTime.getDay();\n      current_seconds = currentTime.getSeconds();\n      current_minutes = currentTime.getMinutes();\n      current_hours = currentTime.getHours();\n      current_milliseconds = currentTime.getMilliseconds();\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::showClock": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function showClock() {\n      $('.ui-loader').hide();\n      $('#fallback').hide();\n      $('.content').show();\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::showCompact": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "showCompact = function (period) {\n        const labelsNum = $.countdown._get(inst, `compactLabels${periods[period]}`);\n        return (show[period] ? `${periods[period]\n          + (labelsNum ? labelsNum[period] : labels[period])} ` : '');\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::showCurrentTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function showCurrentTime() {\n            setMinutesOffset(0);\n          }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::showFull": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "showFull = function (period) {\n        const labelsNum = $.countdown._get(inst, `labels${periods[period]}`);\n        return (show[period]\n          ? `<span class=\"countdown_section\"><span class=\"countdown_amount\">${\n            periods[period]}</span><br/>${\n            labelsNum ? labelsNum[period] : labels[period]}</span>` : '');\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::showStaticWatchOnTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function showStaticWatchOnTime() {\n      if (all_p_to_be_loaded < 1) {\n        prepareTimepieceElements();\n        setTimeToDefaultTime();\n        updateOnTimeDisplayOnce();\n      } else {\n        timeoutID = window.setTimeout(showStaticWatchOnTime, tickDelay);\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::showTimeIn": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function showTimeIn(selectorID, cityname, offset, timezone, cdYear, cdMonth, cdDay, cdHour, cdMin) {\n      if (params.isCountdownClock) {\n        if (cityname !== '') {\n          var now = new Date();\n          var tempOffset = now.getTimezoneOffset();\n          tempOffset += 60 * offset;\n          var gettimezoneDST = getDST(new Date(), timezone);\n          if (gettimezoneDST == 100) {\n            // Si heure\n            tempOffset += 60; // on ajoute 1h du DST\n          }\n\n          if (params.clocktimeAtEvent) {\n            // si fuseau horaire local est en DST, on ajoute 1h\n            var dstMinutes = now.dst() ? 60 : 0;\n            rolexClockCountdown = new Date(cdYear, parseInt(cdMonth) - 1, cdDay, parseInt(cdHour), parseInt(cdMin) + dstMinutes);\n            _cityParam.tempOffset = tempOffset;\n            _cityParam.cityOffset = offset;\n            cityTime();\n            rolexClockCountdownCalc = foreignToLocal(rolexClockCountdown, offset * 100, timezone);\n            setMinutesOffset(_cityParam.tempOffset); // Correct to time at event location\n          } else {\n            // on test la date de l'event du visiteur\n            const event = foreignToLocal(new Date(cdYear, parseInt(cdMonth) - 1, cdDay, parseInt(cdHour), parseInt(cdMin)), offset * 100, timezone);\n            // on retient la difference entre l'offset courant et le std offset \u00e0 la date de l'event\n            var dstMinutes = now.dst() && !event.dst() ? -60\n              : !now.dst() && event.dst() ? -60 : 0;\n            _cityParam.tempOffset = tempOffset;\n            _cityParam.cityOffset = offset;\n            cityTime();\n            // on recupere le bon countdown\n            rolexClockCountdownCalc = foreignToLocal(new Date(cdYear, parseInt(cdMonth) - 1, cdDay, parseInt(cdHour), parseInt(cdMin) + dstMinutes), offset * 100, timezone);\n            // setMinutesOffset(tempOffset);\n            setMinutesOffset(_cityParam.tempOffset);\n          }\n        }\n      } else {\n        // Autres...\n        var now = new Date();\n        var tempOffset = now.getTimezoneOffset();\n        //                var today = b.getFullYear() + \"-\" + b.getMonth() + \"-\" + b.getDate() + \"-\" + b.getHours();\n        if (params.theCityText !== '') {\n          if (cityname) {\n            tempOffset += 60 * offset;\n            var gettimezoneDST = getDST(new Date(), timezone);\n            if (gettimezoneDST == 100) {\n              tempOffset += 60;\n            }\n            setMinutesOffset(tempOffset);\n            _cityParam.tempOffset = tempOffset;\n            _cityParam.cityOffset = offset;\n            cityTime();\n          }\n        }\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::spinToCurrentTimeAfterDelay": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function spinToCurrentTimeAfterDelay(a) {}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::st": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function st() { return e.setTimeout(() => { nt = void 0; }), nt = Date.now(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::startCountdownPlugin": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function startCountdownPlugin(lang, expirationTime) {\n      if (params.LANG == 'fr') {\n        $.countdown.regional.fr = {\n          labels: ['Ann\u00e9es', 'Mois', 'Semaines', 'Jours', 'Heures', 'Mins', 'Secs'],\n          labels1: ['Ann\u00e9e', 'Mois', 'Semaine', 'Jour', 'Heure', 'Min', 'Sec'],\n          compactLabels: ['a', 'm', 's', 'j'],\n          whichLabels(amount) {\n            return (amount > 1 ? 0 : 1);\n          },\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.fr);\n      } else if (params.LANG == 'zhs') {\n        $.countdown.regional.zhs = {\n          labels: ['\u5e74', '\u6708', '\u5468', '\u5929', '\u65f6', '\u5206', '\u79d2'],\n          labels1: ['\u5e74', '\u6708', '\u5468', '\u5929', '\u65f6', '\u5206', '\u79d2'],\n          compactLabels: ['\u5e74', '\u6708', '\u5468', '\u5929'],\n          compactLabels1: ['\u5e74', '\u6708', '\u5468', '\u5929'],\n          whichLabels: null,\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.zhs);\n      } else if (params.LANG == 'ja') {\n        $.countdown.regional.ja = {\n          labels: ['\u5e74', '\u6708', '\u9031', '\u65e5', '\u6642', '\u5206', '\u79d2'],\n          labels1: ['\u5e74', '\u6708', '\u9031', '\u65e5', '\u6642', '\u5206', '\u79d2'],\n          compactLabels: ['\u5e74', '\u6708', '\u9031', '\u65e5'],\n          whichLabels: null,\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.ja);\n      } else if (params.LANG == 'de') {\n        $.countdown.regional.de = {\n          labels: ['Jahre', 'Monate', 'Wochen', 'Tage', 'Stunden', 'Min', 'Sek'],\n          labels1: ['Jahr', 'Monat', 'Woche', 'Tag', 'Stunde', 'Min', 'Sek'],\n          compactLabels: ['J', 'M', 'W', 'T'],\n          whichLabels: null,\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.de);\n      } else if (params.LANG == 'br') {\n        $.countdown.regional.br = {\n          labels: ['Anos', 'Meses', 'Semanas', 'Dias', 'Horas', 'Mins', 'Segs'],\n          labels1: ['Ano', 'M\u00eas', 'Semana', 'Dia', 'Hora', 'Min', 'Seg'],\n          compactLabels: ['a', 'm', 's', 'd'],\n          whichLabels: null,\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.bra);\n      } else if (params.LANG == 'es') {\n        $.countdown.regional.es = {\n          labels: ['A\u00f1os', 'Meses', 'Semanas', 'D\u00edas', 'Horas', 'Mins', 'Segs'],\n          labels1: ['A\u00f1o', 'Mes', 'Semana', 'D\u00eda', 'Hora', 'Min', 'Seg'],\n          compactLabels: ['a', 'm', 's', 'd'],\n          whichLabels: null,\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.es);\n      } else if (params.LANG == 'it') {\n        $.countdown.regional.it = {\n          labels: ['Anni', 'Mesi', 'Settimane', 'Giorni', 'Ore', 'Min', 'Sec'],\n          labels1: ['Anno', 'Mese', 'Settimana', 'Giorno', 'Ora', 'Min', 'Sec'],\n          compactLabels: ['a', 'm', 's', 'g'],\n          whichLabels: null,\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.it);\n      } else if (params.LANG == 'ru') {\n        $.countdown.regional.ru = {\n          labels: ['\u041b\u0435\u0442', '\u041c\u0435\u0441\u044f\u0446\u0435\u0432', '\u041d\u0435\u0434\u0435\u043b\u044c', '\u0414\u043d\u0435\u0439', '\u0427\u0430\u0441\u043e\u0432', '\u041c\u0438\u043d\u0443\u0442', '\u0421\u0435\u043a\u0443\u043d\u0434'],\n          labels1: ['\u0413\u043e\u0434', '\u041c\u0435\u0441\u044f\u0446', '\u041d\u0435\u0434\u0435\u043b\u044f', '\u0414\u0435\u043d\u044c', '\u0427\u0430\u0441', '\u041c\u0438\u043d\u0443\u0442\u0430', '\u0421\u0435\u043a\u0443\u043d\u0434\u0430'],\n          labels2: ['\u0413\u043e\u0434\u0430', '\u041c\u0435\u0441\u044f\u0446\u0430', '\u041d\u0435\u0434\u0435\u043b\u0438', '\u0414\u043d\u044f', '\u0427\u0430\u0441\u0430', '\u041c\u0438\u043d\u0443\u0442\u044b', '\u0421\u0435\u043a\u0443\u043d\u0434\u044b'],\n          compactLabels: ['\u043b', '\u043c', '\u043d', '\u0434'],\n          compactLabels1: ['\u0433', '\u043c', '\u043d', '\u0434'],\n          whichLabels(amount) {\n            const units = amount % 10;\n            const tens = Math.floor((amount % 100) / 10);\n            return (amount === 1 ? 1 : (units >= 2 && units <= 4 && tens !== 1 ? 2\n              : (units === 1 && tens !== 1 ? 1 : 0)));\n          },\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.ru);\n      } else if (params.LANG == 'sv') {\n        $.countdown.regional.sv = {\n          labels: ['\u00c5r', 'M\u00e5nader', 'Veckor', 'Dagar', 'Timmar', 'Min', 'Sek'],\n          labels1: ['\u00c5r', 'M\u00e5nad', 'Vecka', 'Dag', 'Timme', 'Min', 'Sek'],\n          compactLabels: ['\u00c5', 'M', 'V', 'D'],\n          whichLabels: null,\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional.sv);\n      } else if (params.LANG == 'zh-TW') {\n        $.countdown.regional['zh-TW'] = {\n          labels: ['\u5e74', '\u6708', '\u5468', '\u5929', '\u6642', '\u5206', '\u79d2'],\n          labels1: ['\u5e74', '\u6708', '\u5468', '\u5929', '\u6642', '\u5206', '\u79d2'],\n          compactLabels: ['\u5e74', '\u6708', '\u5468', '\u5929'],\n          compactLabels1: ['\u5e74', '\u6708', '\u5468', '\u5929'],\n          whichLabels: null,\n          digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n          timeSeparator: ':',\n          isRTL: false,\n        };\n        $.countdown.setDefaults($.countdown.regional['zh-TW']);\n      } else if (params.LANG == 'ar') {\n        $.countdown.regional.ar = {\n          labels: ['\u0633\u0646\u0648\u0627\u062a', '\u0623\u0634\u0647\u0631', '\u0623\u0633\u0627\u0628\u064a\u0639', '\u0623\u064a\u0627\u0645', '\u0633\u0627\u0639\u0627\u062a', '\u062f\u0642\u0627\u0626\u0642', '\u062b\u0648\u0627\u0646\u064a'],\n          labels1: ['\u0633\u0646\u0629', '\u0634\u0647\u0631', '\u0623\u0633\u0628\u0648\u0639', '\u064a\u0648\u0645', '\u0633\u0627\u0639\u0629', '\u062f\u0642\u064a\u0642\u0629', '\u062b\u0627\u0646\u064a\u0629'],\n          compactLabels: ['\u0633', '\u0634', '\u0623', '\u064a'],\n          whichLabels: null,\n          digits: ['\u0660', '\u0661', '\u0662', '\u0663', '\u0664', '\u0665', '\u0666', '\u0667', '\u0668', '\u0669'],\n          timeSeparator: ':',\n          isRTL: true,\n        };\n        $.countdown.setDefaults($.countdown.regional.ar);\n      } else {\n\n      }\n      // console.log(expirationTime)\n      if (expirationTime !== undefined) {\n        $('.container').addClass('has-countdown').removeClass('no-countdown');\n        let ctdays = '';\n        let cthours = '';\n        let ctmins = '';\n        let ctsecs = '';\n        let tpl = '';\n        let tpl2 = '';\n        // $('.days').countdown({\n        //     until: expirationTime,\n        //     significant: 0,\n        //     format: 'DHMS',\n        //     alwaysExpire: true,\n        //     layout: ctdays});\n        // $('.hours').countdown({\n        //     until: expirationTime,\n        //     significant: 0,\n        //     format: 'DHMS',\n        //     alwaysExpire: true,\n        //     layout: cthours});\n        // $('.mins').countdown({\n        //     until: expirationTime,\n        //     significant: 0,\n        //     format: 'DHMS',\n        //     alwaysExpire: true,\n        //     layout: ctmins});\n        // $('.secs').countdown({\n        //     until: expirationTime,\n        //     significant: 0,\n        //     format: 'DHMS',\n        //     alwaysExpire: true,\n        //     layout: ctsecs});\n        if (!params.countdownNumbersOnly && $('.container').hasClass('ctdwn-twolines-horizontal')) {\n          tpl = '<ul class=\"cd-listview\">'\n            + '<li class=\"cd-days\">{dnn}</li><span></span><li class=\"cd-hours\">{hnn}</li><span></span>'\n            + '<li class=\"cd-minutes\">{mnn}</li><span></span><li class=\"cd-seconds\">{snn}</li></ul>';\n          tpl2 = '<ul class=\"cd-listview\">'\n            + '{d<}<li class=\"days\">{dl}</li>{d>}{h<}<li class=\"hours\">{hl}</li>{h>}'\n            + '{m<}<li class=\"minutes\">{ml}</li>{m>}{s<}<li class=\"seconds\">{sl}</li>{s>}</ul>';\n\n          $('#watch_countdown_text').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl2,\n          });\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n        } else if (!params.countdownNumbersOnly && $('.container').hasClass('ctdwn-oneline-horizontal')) {\n          ctdays = '{d<}{dl}{d>}';\n          cthours = '{d<}{hl}{d>}';\n          ctmins = '{d<}{ml}{d>}';\n          ctsecs = '{d<}{sl}{d>}';\n          tpl = '<ul class=\"cd-listview\">{y<}<li class=\"cd-years\"><span></span>{yn} {yl}</li>{y>}{o<}<li class=\"cd-month\"><span></span>{on} {ol}</li>{o>}'\n            + '{d<}<li class=\"cd-days\"><span></span>{dnn} {dl}</li>{d>}{h<}<li class=\"cd-hours\"><span></span>{hnn} {hl}</li>{h>}'\n            + '{m<}<li class=\"cd-minutes\"><span></span>{mnn} {ml}</li>{m>}{s<}<li class=\"cd-seconds\"><span></span>{snn} {sl}</li>{s>}</ul>';\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n        } else if (params.countdownNumbersOnly && $('.container').hasClass('ctdwn-oneline-horizontal')) {\n          // console.log(\"here\")\n          ctdays = '{d<}{dl}{d>}';\n          cthours = '{d<}{hl}{d>}';\n          ctmins = '{d<}{ml}{d>}';\n          ctsecs = '{d<}{sl}{d>}';\n          tpl = '<ul class=\"cd-listview\">{y<}<li class=\"cd-years\"><span></span>{yn} </li>{y>}{o<}<li class=\"cd-months\"><span></span>{on} </li>{o>}'\n            + '{d<}<li class=\"cd-days\"><span></span>{dnn} </li>{d>}{h<}<li class=\"cd-hours\"><span></span>{hnn} </li>{h>}'\n            + '{m<}<li class=\"cd-minutes\"><span></span>{mnn} </li>{m>}{s<}<li class=\"cd-seconds\"><span></span>{snn} </li>{s>}</ul>';\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n        } else if (!params.countdownNumbersOnly && $('.container').hasClass('ctdwn-twolinesText-horizontal')) {\n          ctdays = '{d<}{dl}{d>}';\n          cthours = '{d<}{hl}{d>}';\n          ctmins = '{d<}{ml}{d>}';\n          ctsecs = '{d<}{sl}{d>}';\n          tpl = '<ul class=\"cd-listview\">{y<}<li class=\"cd-years\"><span></span>{yn} {yl}</li>{y>}{o<}<li class=\"cd-month\"><span></span>{on} {ol}</li>{o>}'\n            + '{d<}<li class=\"cd-days\"><span></span>{dnn} {dl}</li>{d>}{h<}<li class=\"cd-hours\"><span></span>{hnn} {hl}</li>{h>}'\n            + '{m<}<li class=\"cd-minutes\"><span></span>{mnn} {ml}</li>{m>}{s<}<li class=\"cd-seconds\"><span></span>{snn} {sl}</li>{s>}</ul>';\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n          $('.has-countdown #logo').css({ display: 'block' });\n        } else if (!params.countdownNumbersOnly && $('.container').hasClass('ctdwn-threelines-horizontal')) {\n          // console.log(\"ctdwn-twolinesNew-horizontal\")\n          tpl = '<ul class=\"cd-listview\">'\n            + '<li class=\"cd-days\">{dnn}</li><span></span><li class=\"cd-hours\">{hnn}</li><span></span>'\n            + '<li class=\"cd-minutes\">{mnn}</li><span></span><li class=\"cd-seconds\">{snn}</li></ul>';\n          tpl2 = '<ul class=\"cd-listview\">'\n            + '{d<}<li class=\"days\">{dl}</li>{d>}{h<}<li class=\"hours\">{hl}</li>{h>}'\n            + '{m<}<li class=\"minutes\">{ml}</li>{m>}{s<}<li class=\"seconds\">{sl}</li>{s>}</ul>';\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n          $('#watch_countdown_text').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl2,\n          });\n        } else if (!params.countdownNumbersOnly && $('.container').hasClass('ctdwn-twolinesNew-horizontal')) {\n          // console.log(\"ctdwn-twolinesNew-horizontal\")\n          tpl = '<ul class=\"cd-listview\">'\n            + '<li class=\"cd-days\">{dnn}</li><span>:</span><li class=\"cd-hours\">{hnn}</li><span>:</span>'\n            + '<li class=\"cd-minutes\">{mnn}</li><span>:</span><li class=\"cd-seconds\">{snn}</li></ul>';\n          tpl2 = '<ul class=\"cd-listview\">'\n            + '{d<}<li class=\"days\">{dl}</li>{d>}{h<}<li class=\"hours\">{hl}</li>{h>}'\n            + '{m<}<li class=\"minutes\">{ml}</li>{m>}{s<}<li class=\"seconds\">{sl}</li>{s>}</ul>';\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n          $('#watch_countdown_text').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl2,\n          });\n        } else if (!params.countdownNumbersOnly && $('.container').hasClass('ctdwn-threelinesNew-horizontal')) {\n          // console.log(\"ctdwn-twolinesNew-horizontal\")\n          tpl = '<ul class=\"cd-listview\">'\n            + '<li class=\"cd-days\">{dnn}</li><span>:</span><li class=\"cd-hours\">{hnn}</li><span>:</span>'\n            + '<li class=\"cd-minutes\">{mnn}</li><span>:</span><li class=\"cd-seconds\">{snn}</li></ul>';\n          tpl2 = '<ul class=\"cd-listview\">'\n            + '{d<}<li class=\"days\">{dl}</li>{d>}{h<}<li class=\"hours\">{hl}</li>{h>}'\n            + '{m<}<li class=\"minutes\">{ml}</li>{m>}{s<}<li class=\"seconds\">{sl}</li>{s>}</ul>';\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n          $('#watch_countdown_text').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl2,\n          });\n        } else if (params.countdownNumbersOnly && $('.container').hasClass('ctdwn-twolinesNew-horizontal')) {\n          // console.log(\"ctdwn-twolinesNew-horizontal\")\n          tpl = '<ul class=\"cd-listview\">{y<}<li class=\"cd-years\"><span></span>{yn} </li>{y>}{o<}<li class=\"cd-months\"><span></span>{on} </li>{o>}'\n            + '{d<}<li class=\"cd-days\"><span></span>{dnn} </li>{d>}{h<}<li class=\"cd-hours\"><span></span>{hnn} </li>{h>}'\n            + '{m<}<li class=\"cd-minutes\"><span></span>{mnn} </li>{m>}{s<}<li class=\"cd-seconds\"><span></span>{snn} </li>{s>}</ul>';\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n        } else {\n          tpl = '<ul class=\"cd-listview\">{y<}<li class=\"cd-years\"><span></span>{yn} {yl}</li>{y>}{o<}<li class=\"cd-month\"><span></span>{on} {ol}</li>{o>}'\n            + '{d<}<li class=\"cd-days\"><span></span>{dnn} {dl}</li>{d>}{h<}<li class=\"cd-hours\"><span></span>{hnn} {hl}</li>{h>}'\n            + '{m<}<li class=\"cd-minutes\"><span></span>{mnn} {ml}</li>{m>}{s<}<li class=\"cd-seconds\"><span></span>{snn} {sl}</li>{s>}</ul>';\n          $('#watch_countdown').countdown({\n            until: expirationTime,\n            significant: 0,\n            format: 'DHMS',\n            alwaysExpire: true,\n            layout: tpl,\n            onExpiry: expiration,\n          });\n        }\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::startWatchEngine": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function startWatchEngine() {\n      //            if (window.addEventListener) {\n      //                window.addEventListener(\"load\", function() {\n      startWatchEngineWhenReady();\n      //                }, false)\n      //            } else if (window.attachEvent) {\n      //                window.attachEvent(\"onload\", function() {\n      //                    startWatchEngineWhenReady()\n      //                })\n      //            }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::startWatchEngineWhenReady": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function startWatchEngineWhenReady() {\n      if (all_p_to_be_loaded < 1) {\n        prepareTimepieceElements();\n        //                updateOnTimeDisplayOvertime();\n        window.setTimeout(updateOnTimeDisplayOvertime, 0);\n      } else {\n        requestAnimFrame(startWatchEngineWhenReady);\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::t": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function t(n, i) { return e.push(`${n} `) > r.cacheLength && delete t[e.shift()], t[`${n} `] = i; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::te": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function te(e) { return e === 'true' || e !== 'false' && (e === 'null' ? null : e === `${+e}` ? +e : Z.test(e) ? JSON.parse(e) : e); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::tokenize": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "tokenize = function (str, delimiter) {\n  delimiter = delimiter || '&';\n  const pairs = str.split(delimiter);\n  const tokens = {};\n  for (let i = 0, ii = pairs.length; i < ii; i++) {\n    const pair = pairs[i].split('=');\n    tokens[pair[0]] = pair[1];\n  }\n  return tokens;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::tt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function tt(e, t, n, r, i) { return new tt.prototype.init(e, t, n, r, i); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function u(e, t, r) { for (const i in e) { const o = t[e[i]]; if (o !== n) return r === !1 ? e[i] : s(o, 'function') ? o.bind(r || t) : o; } return !1; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ue": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ue(e) { let t = d.createElement('fieldset'); try { return !!e(t); } catch (e) { return !1; } finally { t.parentNode && t.parentNode.removeChild(t), t = null; } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateAllTextBlock": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateAllTextBlock() {\n      // update all text block\n      // text.split('.')[0]);\n      citytext = params.theCityText.split(',')[0];\n      letterCount = citytext.replace(/\\s+/g, '').length;\n      if (letterCount >= 10) {\n        $('#block-control').css({ left: '215px' });\n        $('.block .city, .block .time').css({ 'font-size': '8px' });\n      }\n      if (letterCount >= 14) {\n        $('#block-control').css({ left: '205px' });\n        $('#clock').css({ left: '150px' });\n        $('.block .city, .block .time').css({ 'font-size': '7px' });\n      }\n      document.getElementById('cityText').innerHTML = params.theCityText.split(',')[0];\n      document.getElementById('localtext').innerHTML = params.theLocalText;\n      document.getElementById('city-link').title = params.theCityText.replace('\"', '&quot;');\n      document.getElementById('local-link').title = params.theLocalText.replace('\"', '&quot;');\n      document.getElementById('city-link').href = `#${params.theCityText.replace('\"', '&quot;').replace(' ', '_')}`;\n      document.getElementById('local-link').href = `#${params.theLocalText.replace('\"', '&quot;').replace(' ', '_')}`;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateClock": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateClock(data) {\n      params.theLocalText = data.timeText[params.LANG];\n      params.theCityText = data.city[params.LANG];\n      params.customOffset = data.timezone;\n      params.theCity = ((data.city[params.LANG]).toLowerCase()).trim();\n      params.customDST = data.dst;\n      if ($(blockCity).hasClass(params.activeClass)) showTimeIn('city', params.theCity, params.customOffset, params.customDST);\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateCompetition": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateCompetition() {\n      if (_competition.isAnimationActive) { // si animation toujours active, on rappel\n        const index = _competition.index >= (_competition.data.length - 2) ? 0 : _competition.index + 1; // -2 because of default element GMT.\n        // pour chaque propriete, on update cr\u00e9e les \u00e9l\u00e9ments\n        const cur = _competition.data[index]; // si le suivant existe\n        if (cur) {\n          _competition.index = index;\n          // removing any child nodes\n          while (competitionBlock.lastChild) {\n            competitionBlock.removeChild(competitionBlock.lastChild);\n          }\n          // update texts\n          //                    console.log(cur);\n          const c = cur.competition;\n          for (const n in c) {\n            const e = document.createElement(params.competitionParams.tag);\n            e.className = `competition-${n}`;\n            e.innerHTML = c[n];\n            competitionBlock.appendChild(e);\n          }\n\n          updateClock(cur);\n          updateAllTextBlock();\n\n          _competition.timer = window.setTimeout(updateCompetition, params.competitionParams.interval);\n        }\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateDisplay": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateDisplay() {\n      if (cyclop_mask_p.url) {\n        var a = document.getElementById(canvasId);\n        var b = a.getContext('2d');\n        placeCanvas(b, true);\n        drawTimepiece(b, true);\n        b.save();\n        b.translate(-global_watch_p.xcenter, -global_watch_p.ycenter);\n        b.globalCompositeOperation = 'destination-in';\n        b.drawImage(cyclop_mask_p.image, 0, 0, cyclop_mask_p.width, cyclop_mask_p.height);\n        b.restore();\n        b.restore();\n      }\n      var a = document.getElementById(canvasId);\n      if (a.getContext) {\n        var b = a.getContext('2d');\n        placeCanvas(b, true);\n        drawTimepiece(b, false);\n        if (cyclop_mask_p.url) {\n          b.save();\n          b.translate(-global_watch_p.xcenter, -global_watch_p.ycenter);\n          b.globalCompositeOperation = 'destination-out';\n          b.drawImage(cyclop_mask_p.image, 0, 0, cyclop_mask_p.width, cyclop_mask_p.height);\n          b.restore();\n        }\n        b.restore();\n      } else {\n        alert('no context');\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateOnTimeDisplayOnce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateOnTimeDisplayOnce() {\n      updateTimeCalculations();\n      updateDisplay();\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateOnTimeDisplayOvertime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateOnTimeDisplayOvertime() {\n      updateTime();\n      updateOnTimeDisplayOnce();\n      timeoutID = window.setTimeout(updateOnTimeDisplayOvertime, tickDelay);\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateShownTimeInHTMLComponent": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateShownTimeInHTMLComponent() {\n            tempString = getCurrentShownTime();\n          }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateShownTimeInHTMLComponentOvertime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateShownTimeInHTMLComponentOvertime() {\n            updateShownTimeInHTMLComponent();\n            // timeoutID = window.setTimeout(\"updateShownTimeInHTMLComponentOvertime()\", 100)\n            requestAnimFrame(updateShownTimeInHTMLComponentOvertime());\n          }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateTime() {\n      if (params.isCountdownClock) {\n        if (updated == true) {\n          current_seconds += 1000 / 10;\n\n          if (current_seconds >= 60) {\n            // console.log(current_seconds)\n            currentTime = new Date();\n            currentTime.setHours(currentTime.getHours() + hoursOffset);\n            currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n            currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n            current_hours = currentTime.getHours();\n            current_minutes = currentTime.getMinutes();\n            current_seconds = currentTime.getSeconds();\n            current_milliseconds = currentTime.getMilliseconds();\n          }\n          // console.log(currentTime)\n        } else {\n          currentTime = new Date();\n          // console.log(current_seconds)\n          currentTime.setHours(currentTime.getHours() + hoursOffset);\n          currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n          currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n          monthdate = currentTime.getDate(); // n\u00ac\u00a8\u00ac\u00ae\u00ac\u00a8\u00ac\u00c6\u00ac\u00a8\u00ac\u00ae\u00ac\u00a8\u221a\u00dc\u201a\u00c4\u00f6\u221a\u00d1\u221a\u2202\u201a\u00e0\u00f6\u221a\u00eb\u201a\u00e0\u00f6\u201a\u00e0\u00c7\u201a\u00c4\u00f6\u221a\u2020\u221a\u2202\u201a\u00c4\u00f6\u221a\u00d1\u201a\u00c4\u2020\u201a\u00c4\u00f6\u221a\u2020\u221a\u2202\u00ac\u00a8\u201a\u00d1\u00a2 du jour local: 0..31\n          weekday_num = currentTime.getDay(); // jour de la semaine local: 0=> sun, ..., 6=> sat\n          current_hours = currentTime.getHours();\n          current_minutes = currentTime.getMinutes();\n          current_seconds = currentTime.getSeconds();\n          current_milliseconds = currentTime.getMilliseconds();\n          // console.log(current_seconds,currentTime.getMilliseconds())\n          // console.log(monthdate,weekday_num,current_hours,current_minutes,current_seconds)\n          updated = true;\n        }\n      } else {\n        currentTime = new Date();\n        currentTime.setHours(currentTime.getHours() + hoursOffset);\n        currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n        currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n        monthdate = currentTime.getDate();\n        weekday_num = currentTime.getDay();\n        current_seconds = currentTime.getSeconds();\n        current_minutes = currentTime.getMinutes();\n        current_hours = currentTime.getHours();\n        current_milliseconds = currentTime.getMilliseconds();\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::updateTimeCalculations": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function updateTimeCalculations() {\n      let a = current_hours;\n      weekday_num++;\n      if (a > 12) {\n        a -= 12;\n      }\n      display_calculation.seconds_base_60 = current_seconds * timeSlice;\n      display_calculation.seconds_base_60 += current_milliseconds * timeSlice / 1e3;\n      display_calculation.seconds_base_60 += rotCorrect;\n      display_calculation.minutes_base_60 = current_minutes * timeSlice;\n      display_calculation.minutes_base_60 += current_seconds * timeSlice / 60;\n      display_calculation.minutes_base_60 += rotCorrect;\n      display_calculation.minutes_base_30 = current_minutes * timeSlice * 2;\n      display_calculation.minutes_base_30 += current_seconds * timeSlice * 2 / 60;\n      display_calculation.minutes_base_30 += rotCorrect;\n      display_calculation.hours_base_12 = a * timeSlice * 5;\n      display_calculation.hours_base_12 += current_minutes * timeSlice / 12;\n      display_calculation.hours_base_12 += rotCorrect;\n      display_calculation.monthdate_base_31 = monthdate * (timeSlice / 6) * (360 / 31);\n      display_calculation.monthdate_base_31 += rotCorrect;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ut": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ut(e, t) {\n    let n; let r = 0;\n    const i = { height: e }; for (t = t ? 1 : 0; r < 4; r += 2 - t) i[`margin${n = oe[r]}`] = i[`padding${n}`] = e; return t && (i.opacity = i.width = e), i;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ve": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ve(e) { for (var t = 0, n = e.length, r = ''; t < n; t++) r += e[t].value; return r; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::visChange": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function visChange() {\n      if (isHidden()) updated = false;\n      else updateTime();\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::vt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function vt(e) { return (e.match(M) || []).join(' '); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::w": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "w = function (e, t) { return new w.fn.init(e, t); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::we": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function we(e, t, n, r, i) { for (var o, a = [], s = 0, u = e.length, l = t != null; s < u; s++)(o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s))); return a; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::x": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function x(e) { return e == null ? `${e}` : typeof e === 'object' || typeof e === 'function' ? l[c.call(e)] || 'object' : typeof e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::xe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function xe(e) {\n      return e.length > 1 ? function (t, n, r) {\n        let i = e.length; while (i--) if (!e[i](t, n, r)) return !1;\n        return !0;\n      } : e[0];\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::xt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function xt(e) { return Array.isArray(e) ? e : typeof e === 'string' ? e.match(M) || [] : []; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "y = function e(t) { return t != null && t === t.window; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::ye": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function ye() {}",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::yourTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function yourTime() {\n      const a = new Date();\n      a.setHours(a.getHours());\n      a.setMinutes(a.getMinutes());\n      a.setSeconds(a.getSeconds());\n      const b = a.getSeconds();\n      let c = a.getMinutes();\n      let d = a.getHours();\n      const e = a.getDay();\n      if (params.LANG === 'en') {\n        if (e == 0) {\n          var f = 'Sun';\n        } else if (e == 1) {\n          var f = 'Mon';\n        } else if (e == 2) {\n          var f = 'Tue';\n        } else if (e == 3) {\n          var f = 'Wed';\n        } else if (e == 4) {\n          var f = 'Thu';\n        } else if (e == 5) {\n          var f = 'Fri';\n        } else if (e == 6) {\n          var f = 'Sat';\n        }\n      } else if (params.LANG === 'fr') {\n        if (e == 0) {\n          var f = 'Dim';\n        } else if (e == 1) {\n          var f = 'Lun';\n        } else if (e == 2) {\n          var f = 'Mar';\n        } else if (e == 3) {\n          var f = 'Mer';\n        } else if (e == 4) {\n          var f = 'Jeu';\n        } else if (e == 5) {\n          var f = 'Ven';\n        } else if (e == 6) {\n          var f = 'Sam';\n        }\n      }\n\n      if (params.amPm == true) {\n        var g = ' ';\n        if (d >= 12) {\n          g = ' PM';\n        } else {\n          g = ' AM';\n        }\n      } else {\n        g = '';\n      }\n      if (params.time24hours == true) {\n        g = '';\n      } else if (d >= 13) {\n        d -= 12;\n      } else if (d == 0) {\n        d = 12;\n      }\n      if (params.leadingZeros == true) {\n        if (d < 10) {\n          d = `0${d}`;\n        }\n      }\n      if (params.leadingZeros == false && params.time24hours == true) {\n        if (d < 10) {\n          d = `0${d}`;\n        }\n      }\n      if (c < 10) c = `0${c}`;\n\n      if (params.showText == true) {\n        if (params.showDay == true) {\n          f = f;\n        } else {\n          f = '';\n        }\n        if (!params.showTime) {\n          update = document.getElementById('rolexClockYourTime').innerHTML = `${f} ${d}:${c}${g}`;\n        }\n      }\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "z = function (e, t, n, r, i, o, a) {\n    let s = 0;\n    const u = e.length;\n    let l = n == null; if (x(n) === 'object') { i = !0; for (s in n) z(e, t, s, n[s], !0, o, a); } else if (void 0 !== r && (i = !0, g(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function (e, t, n) { return l.call(w(e), n); })), t)) for (; s < u; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n))); return i ? e : l ? t.call(e) : u ? t(e[0], n) : o;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/rolex.min.js::zt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/rolex.min.js",
            "merged_function": "function zt(e, t) {\n    let n; let r; const\n      i = w.ajaxSettings.flatOptions || {}; for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]); return r && w.extend(!0, e, r), e;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::$": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function $(e, t, n, r) { var i; try { e && g(i = e.promise) ? i.call(e).done(t).fail(n) : e && g(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r)) } catch (e) { n.apply(void 0, [e]) } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::$e": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "$e = function(t) { var n = t.ownerDocument.defaultView; return n && n.opener || (n = e), n.getComputedStyle(t) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::C": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function C(e) { var t = !!e && \"length\" in e && e.length,\n      n = x(e); return !g(e) && !y(e) && (\"array\" === n || 0 === t || \"number\" == typeof t && t > 0 && t - 1 in e) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Ce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Ce(e) { for (var t, n, i, o = e.length, a = r.relative[e[0].type], s = a || r.relative[\" \"], u = a ? 1 : 0, c = me(function(e) { return e === t }, s, !0), f = me(function(e) { return O(t, e) > -1 }, s, !0), p = [function(e, n, r) { var i = !a && (r || n !== l) || ((t = n).nodeType ? c(e, n, r) : f(e, n, r)); return t = null, i }]; u < o; u++)\n        if (n = r.relative[e[u].type]) p = [me(xe(p), n)];\n        else { if ((n = r.filter[e[u].type].apply(null, e[u].matches))[b]) { for (i = ++u; i < o; i++)\n              if (r.relative[e[i].type]) break;\n            return Te(u > 1 && xe(p), u > 1 && ve(e.slice(0, u - 1).concat({ value: \" \" === e[u - 2].type ? \"*\" : \"\" })).replace(B, \"$1\"), n, u < i && Ce(e.slice(u, i)), i < o && Ce(e = e.slice(i)), i < o && ve(e)) }\n          p.push(n) }\n      return xe(p) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::D": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "D = function(e, t) { return e === t && (f = !0), 0 }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::De": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function De(e, t, n, r, i, o) { var a, s; if (\"object\" == typeof t) { \"string\" != typeof n && (r = r || n, n = void 0); for (s in t) De(e, s, n, r, t[s], o); return e } if (null == r && null == i ? (i = n, r = n = void 0) : null == i && (\"string\" == typeof n ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = ke;\n    else if (!i) return e; return 1 === o && (a = i, (i = function(e) { return w().off(e), a.apply(this, arguments) }).guid = a.guid || (a.guid = w.guid++)), e.each(function() { w.event.add(this, t, i, r, n) }) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Duration": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n      years = normalizedInput.year || 0,\n      quarters = normalizedInput.quarter || 0,\n      months = normalizedInput.month || 0,\n      weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n      days = normalizedInput.day || 0,\n      hours = normalizedInput.hour || 0,\n      minutes = normalizedInput.minute || 0,\n      seconds = normalizedInput.second || 0,\n      milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n      seconds * 1e3 + // 1000\n      minutes * 6e4 + // 1000 * 60\n      hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n      weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n      quarters * 3 +\n      years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Ee": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Ee(e, t) { var n = t.length > 0,\n        i = e.length > 0,\n        o = function(o, a, s, u, c) { var f, h, y, v = 0,\n            m = \"0\",\n            x = o && [],\n            b = [],\n            w = l,\n            C = o || i && r.find.TAG(\"*\", c),\n            E = T += null == w ? 1 : Math.random() || .1,\n            k = C.length; for (c && (l = a === d || a || c); m !== k && null != (f = C[m]); m++) { if (i && f) { h = 0, a || f.ownerDocument === d || (p(f), s = !g); while (y = e[h++])\n                if (y(f, a || d, s)) { u.push(f); break }\n              c && (T = E) }\n            n && ((f = !y && f) && v--, o && x.push(f)) } if (v += m, n && m !== v) { h = 0; while (y = t[h++]) y(x, b, a, s); if (o) { if (v > 0)\n                while (m--) x[m] || b[m] || (b[m] = j.call(u));\n              b = we(b) }\n            L.apply(u, b), c && !o && b.length > 0 && v + t.length > 1 && oe.uniqueSort(u) } return c && (T = E, l = w), x }; return n ? se(o) : o }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Fe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Fe(e, t, n) { var r, i, o, a, s = e.style; return (n = n || $e(e)) && (\"\" !== (a = n.getPropertyValue(t) || n[t]) || w.contains(e.ownerDocument, e) || (a = w.style(e, t)), !h.pixelBoxStyles() && We.test(a) && Be.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? a + \"\" : a }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Ft": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Ft(e) { return function(t, n) { \"string\" != typeof t && (n = t, t = \"*\"); var r, i = 0,\n        o = t.toLowerCase().match(M) || []; if (g(n))\n        while (r = o[i++]) \"+\" === r[0] ? (r = r.slice(1) || \"*\", (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n) } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::G": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function G(e) { return e.replace(X, \"ms-\").replace(U, V) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::He": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function He(e) { return e.type = (null !== e.getAttribute(\"type\")) + \"/\" + e.type, e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::I": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function I(e) { return e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Ie": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Ie(e, t, n) { for (var r, i = t ? w.filter(t, e) : e, o = 0; null != (r = i[o]); o++) n || 1 !== r.nodeType || w.cleanData(ye(r)), r.parentNode && (n && w.contains(r.ownerDocument, r) && ve(ye(r, \"script\")), r.parentNode.removeChild(r)); return e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Je": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Je(e) { var t = w.cssProps[e]; return t || (t = w.cssProps[e] = Qe(e) || e), t }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Ke": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Ke(e, t, n) { var r = ie.exec(t); return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || \"px\") : t }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Le": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Le(e, t) { return N(e, \"table\") && N(11 !== t.nodeType ? t : t.firstChild, \"tr\") ? w(e).children(\"tbody\")[0] || e : e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Locale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Me": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Me(e, t) { var n = t.nodeName.toLowerCase(); \"input\" === n && pe.test(e.type) ? t.checked = e.checked : \"input\" !== n && \"textarea\" !== n || (t.defaultValue = e.defaultValue) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Moment": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::N": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function N(e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase() }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::O": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "O = function(e, t) { for (var n = 0, r = e.length; n < r; n++)\n          if (e[n] === t) return n;\n        return -1 }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Oe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Oe(e) { return \"true/\" === (e.type || \"\").slice(0, 5) ? e.type = e.type.slice(5) : e.removeAttribute(\"type\"), e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function P(e, t) { while ((e = e[t]) && 1 !== e.nodeType); return e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Pe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Pe(e, t) { var n, r, i, o, a, s, u, l; if (1 === t.nodeType) { if (J.hasData(e) && (o = J.access(e), a = J.set(t, o), l = o.events)) { delete a.handle, a.events = {}; for (i in l)\n          for (n = 0, r = l[i].length; n < r; n++) w.event.add(t, i, l[i][n]) }\n      K.hasData(e) && (s = K.access(e), u = w.extend({}, s), K.set(t, u)) } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Q() { this.expando = w.expando + Q.uid++ }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Qe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Qe(e) { if (e in Ye) return e; var t = e[0].toUpperCase() + e.slice(1),\n      n = Ge.length; while (n--)\n      if ((e = Ge[n] + t) in Ye) return e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function R(e) { var t = {}; return w.each(e.match(M) || [], function(e, n) { t[n] = !0 }), t }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Re": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Re(e, t, n, r) { t = a.apply([], t); var i, o, s, u, l, c, f = 0,\n      p = e.length,\n      d = p - 1,\n      y = t[0],\n      v = g(y); if (v || p > 1 && \"string\" == typeof y && !h.checkClone && je.test(y)) return e.each(function(i) { var o = e.eq(i);\n      v && (t[0] = y.call(this, i, o.html())), Re(o, t, n, r) }); if (p && (i = xe(t, e[0].ownerDocument, !1, e, r), o = i.firstChild, 1 === i.childNodes.length && (i = o), o || r)) { for (u = (s = w.map(ye(i, \"script\"), He)).length; f < p; f++) l = i, f !== d && (l = w.clone(l, !0, !0), u && w.merge(s, ye(l, \"script\"))), n.call(e[f], l, f); if (u)\n        for (c = s[s.length - 1].ownerDocument, w.map(s, Oe), f = 0; f < u; f++) l = s[f], he.test(l.type || \"\") && !J.access(l, \"globalEval\") && w.contains(c, l) && (l.src && \"module\" !== (l.type || \"\").toLowerCase() ? w._evalUrl && w._evalUrl(l.src) : m(l.textContent.replace(qe, \"\"), c, l)) } return e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "S = function(e, t) { for (var n = []; e; e = e.nextSibling) 1 === e.nodeType && e !== t && n.push(e); return n }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Se": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Se() { try { return r.activeElement } catch (e) {} }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Te": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Te(e, t, n, r, i, o) { return r && !r[b] && (r = Te(r)), i && !i[b] && (i = Te(i, o)), se(function(o, a, s, u) { var l, c, f, p = [],\n          d = [],\n          h = a.length,\n          g = o || be(t || \"*\", s.nodeType ? [s] : s, []),\n          y = !e || !o && t ? g : we(g, p, e, s, u),\n          v = n ? i || (o ? e : h || r) ? [] : a : y; if (n && n(y, v, s, u), r) { l = we(v, d), r(l, [], s, u), c = l.length; while (c--)(f = l[c]) && (v[d[c]] = !(y[d[c]] = f)) } if (o) { if (i || e) { if (i) { l = [], c = v.length; while (c--)(f = v[c]) && l.push(y[c] = f);\n              i(null, v = [], l, u) }\n            c = v.length; while (c--)(f = v[c]) && (l = i ? O(o, f) : p[c]) > -1 && (o[l] = !(a[l] = f)) } } else v = we(v === a ? v.splice(h, v.length) : v), i ? i(null, a, v, u) : L.apply(a, v) }) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Tt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "Tt = function(e) { e.stopPropagation() }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Ut": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Ut(e, t, n, r) { var i, o, a, s, u, l = {},\n      c = e.dataTypes.slice(); if (c[1])\n      for (a in e.converters) l[a.toLowerCase()] = e.converters[a];\n    o = c.shift(); while (o)\n      if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift())\n        if (\"*\" === o) o = u;\n        else if (\"*\" !== u && u !== o) { if (!(a = l[u + \" \" + o] || l[\"* \" + o]))\n        for (i in l)\n          if ((s = i.split(\" \"))[1] === o && (a = l[u + \" \" + s[0]] || l[\"* \" + s[0]])) {!0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1])); break }\n      if (!0 !== a)\n        if (a && e[\"throws\"]) t = a(t);\n        else try { t = a(t) } catch (e) { return { state: \"parsererror\", error: a ? e : \"No conversion from \" + u + \" to \" + o } } } return { state: \"success\", data: t } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::V": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function V(e, t) { return t.toUpperCase() }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function W(e) { throw e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Xt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Xt(e, t, n) { var r, i, o, a, s = e.contents,\n      u = e.dataTypes; while (\"*\" === u[0]) u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader(\"Content-Type\")); if (r)\n      for (i in s)\n        if (s[i] && s[i].test(r)) { u.unshift(i); break }\n    if (u[0] in n) o = u[0];\n    else { for (i in n) { if (!u[0] || e.converters[i + \" \" + u[0]]) { o = i; break }\n        a || (a = i) }\n      o = o || a } if (o) return o !== u[0] && u.unshift(o), n[o] }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "Y = function(e) { return 1 === e.nodeType || 9 === e.nodeType || !+e.nodeType }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::Ze": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function Ze(e, t, n, r, i, o) { var a = \"width\" === t ? 1 : 0,\n      s = 0,\n      u = 0; if (n === (r ? \"border\" : \"content\")) return 0; for (; a < 4; a += 2) \"margin\" === n && (u += w.css(e, n + oe[a], !0, i)), r ? (\"content\" === n && (u -= w.css(e, \"padding\" + oe[a], !0, i)), \"margin\" !== n && (u -= w.css(e, \"border\" + oe[a] + \"Width\", !0, i))) : (u += w.css(e, \"padding\" + oe[a], !0, i), \"padding\" !== n ? u += w.css(e, \"border\" + oe[a] + \"Width\", !0, i) : s += w.css(e, \"border\" + oe[a] + \"Width\", !0, i)); return !r && o >= 0 && (u += Math.max(0, Math.ceil(e[\"offset\" + t[0].toUpperCase() + t.slice(1)] - o - u - s - .5))), u }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::_": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function _() { r.removeEventListener(\"DOMContentLoaded\", _), e.removeEventListener(\"load\", _), w.ready() }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::_e": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function _e(e, t) { return { get: function() { if (!e()) return (this.get = t).apply(this, arguments);\n        delete this.get } } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::_t": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function _t(e, t, n, r) { var i = {},\n      o = e === Wt;\n\n    function a(s) { var u; return i[s] = !0, w.each(e[s] || [], function(e, s) { var l = s(t, n, r); return \"string\" != typeof l || o || i[l] ? o ? !(u = l) : void 0 : (t.dataTypes.unshift(l), a(l), !1) }), u } return a(t.dataTypes[0]) || !i[\"*\"] && a(\"*\") }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::a": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function a(t, n, r, i) { return function() { var s = this,\n                  u = arguments,\n                  l = function() { var e, l; if (!(t < o)) { if ((e = r.apply(s, u)) === n.promise()) throw new TypeError(\"Thenable self-resolution\");\n                      l = e && (\"object\" == typeof e || \"function\" == typeof e) && e.then, g(l) ? i ? l.call(e, a(o, n, I, i), a(o, n, W, i)) : (o++, l.call(e, a(o, n, I, i), a(o, n, W, i), a(o, n, I, n.notifyWith))) : (r !== I && (s = void 0, u = [e]), (i || n.resolveWith)(s, u)) } },\n                  c = i ? l : function() { try { l() } catch (e) { w.Deferred.exceptionHook && w.Deferred.exceptionHook(e, c.stackTrace), t + 1 >= o && (r !== W && (s = void 0, u = [e]), n.rejectWith(s, u)) } };\n                t ? c() : (w.Deferred.getStackHook && (c.stackTrace = w.Deferred.getStackHook()), e.setTimeout(c)) } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::abs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function abs() {\n    var data = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::absCeil": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::absFloor": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::absRound": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::add$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addFormatToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n      func = function() {\n        return this[callback]();\n      };\n    }\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function() {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function() {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addParseToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addParseToken(token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n      token = [token];\n    }\n    if (isNumber(callback)) {\n      func = function(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addRegexToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function(isStrict, localeData) {\n      return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addSubtract": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n      days = absRound(duration._days),\n      months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addSubtract$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n\n    return duration._bubble();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addTimeToArrayFromToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addUnitAlias": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addUnitPriority": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addWeekParseToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addWeekParseToken(token, callback) {\n    addParseToken(token, function(input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::addWeekYearFormatToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ae": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ae() { var e = [];\n\n      function t(n, i) { return e.push(n + \" \") > r.cacheLength && delete t[e.shift()], t[n + \" \"] = i } return t }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::as": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      switch (units) {\n        case 'month':\n          return months;\n        case 'quarter':\n          return months / 3;\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n        case 'day':\n          return days + milliseconds / 864e5;\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n          // Math.floor prevents floating point math errors here\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::at": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function at() { rt && (!1 === r.hidden && e.requestAnimationFrame ? e.requestAnimationFrame(at) : e.setTimeout(at, w.fx.interval), w.fx.tick()) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::be": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function be(e, t, n) { for (var r = 0, i = t.length; r < i; r++) oe(e, t[r], n); return n }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::bubble": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n        (milliseconds <= 0 && days <= 0 && months <= 0))) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days = days;\n    data.months = months;\n    data.years = years;\n\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::buildClock": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function buildClock(clockSettings) {\n  document.querySelector('html').classList.add(getAllUrlclockSettings().lang);\n  if (typeof clockSettings.blockClass == 'undefined')\n    clockSettings.blockClass = 'block';\n  if (typeof clockSettings.activeClass == 'undefined')\n    clockSettings.activeClass = 'active';\n\n  document.getElementById(\"rolexClockWim-container\").style.width = clockSettings.contentWidth + \"px\";\n  document.getElementById(\"rolexClockWim-container\").style.height = clockSettings.contentHeight + \"px\";\n  // document.getElementById(\"col-1\").style.height = clockSettings.contentHeight + \"px\";\n  // var col2 = document.getElementById(\"col-2\");\n  // // col2.style.height = clockSettings.contentHeight + \"px\";\n  // for (var i in col2.childNodes) {\n  //     var child = col2.childNodes[i];\n  //     if (child.nodeType == 1)\n  //         child.style.height = clockSettings.contentHeight + \"px\";\n  // }\n  // document.getElementById(\"col-3\").style.height = clockSettings.contentHeight + \"px\";\n  // document.getElementById(\"tracker\").style.height = clockSettings.contentHeight + \"px\";\n  var trcking = document.querySelectorAll('.tracker')\n  for (var i = 0; i < trcking.length; i++) {\n    trcking[i].href = clockSettings.trackingurl;\n  }\n\n  //document.getElementById(\"rolexClockWim-backToRolex\").style.width = clockSettings.clockWidth + \"px\";\n  //document.getElementById(\"rolexClockWim-backToRolex\").style.height = clockSettings.clockHeight + \"px\";\n  // document.getElementById(\"tracker\").href = clockSettings.trackingurl;\n\n  global_watch_p[\"xscale\"] = clockSettings.retinaXscale;\n  global_watch_p[\"yscale\"] = clockSettings.retinaYscale;\n\n  //else {\n  //  document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/\" + clockSettings.bgFileName + \"') 00% 50% no-repeat\"\n  //}\n  if (!clockSettings.forceFallback && !clockSettings.forceFlash) {\n    // document.getElementById(\"trackUrl\").href = clockSettings.trackingurl;\n    if (clockSettings.showText == false) {\n      document.getElementById(\"rolexClockWim-container\").removeChild(document.getElementById(\"timezone\"));\n      document.getElementById(\"rolexClockWim-container\").removeChild(document.getElementById(\"yourtime\"))\n    } else {\n      var yourtime = document.getElementById(\"yourTime\");\n      var timeTimezon = document.getElementById(\"timezone\");\n\n      var language = getAllUrlclockSettings().lang;\n      var language = language.toLowerCase();\n      var now_date = new Date();\n\n\n      var year = now_date.getFullYear();\n      var month = now_date.getMonth() + 1;\n      var day = now_date.getDate();\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      if (day < 10) {\n        day = \"0\" + day;\n      }\n      var names = [];\n      var timezones = [];\n      var timezone_dst = [];\n      var myTimeText = [];\n      var teeTimeText = [];\n      var eventText = [];\n      var teeTimeAccessibiltyTextEvent = [];\n      var teeTimeAccessibiltyTextMyTime = [];\n      var teeTimeGotoRolex = [];\n      var todayfull = Number(year + \"\" + month + \"\" + day);\n      String.prototype.trim = function() {\n        return this.replace(/\\s/g, \"\");\n      }\n      var index = null;\n      for (var i = 0; i < cityArray.length; i++) {\n        if (todayfull >= cityArray[i].startDate && todayfull <= cityArray[i].endDate) {\n          index = i;\n\n          function changeBg(bg) {\n            global_watch_p[\"xscale\"] = clockSettings.globalXscale;\n            global_watch_p[\"yscale\"] = clockSettings.globalYscale;\n            global_watch_p[\"xcenter\"] = clockSettings.globalXcenter;\n            global_watch_p[\"ycenter\"] = clockSettings.globalYcenter;\n            //yourtime.style.top = clockSettings.yourtTop;\n            //yourtime.style.left = clockSettings.yourtLeft;\n            //timeTimezon.style.top = clockSettings.timeZTop;\n            //timeTimezon.style.left = clockSettings.timeZLeft;\n            if (bg == 'full') {\n              document.getElementById(\"rolexClockWim-container\").style.background = \"#fff url(''\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // timeTimezon.style.display = \"block\";\n              // yourtime.style.display = \"block\";\n              //trackUrl.style.left = clockSettings.trackUrlL + 'px';\n              //trackUrl.style.height = clockSettings.trackUrlH + 'px';\n              //trackUrl.style.width = clockSettings.trackUrlW + 'px';\n\n            } else {\n              document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // yourtime.style.display = \"none\";\n              // timeTimezon.style.display = \"none\";\n              //trackUrl.style.left = clockSettings.trackUrlL + 'px';\n              //trackUrl.style.height = clockSettings.trackUrlH + 'px';\n              //trackUrl.style.width = clockSettings.trackUrlW + 'px';\n\n            }\n\n          }\n          if (language == '') {\n            names.push(cityArray[index].city['en']);\n          } else {\n            names.push(cityArray[index].city['en']);\n            myTimeText.push(cityArray[index].myTimeText[language]);\n            teeTimeText.push(cityArray[index].teeTimeText[language]);\n            eventText.push(cityArray[index].eventText[language]);\n            teeTimeAccessibiltyTextEvent.push(cityArray[index].teeTimeAccessibiltyTextEvent[language]);\n            teeTimeAccessibiltyTextMyTime.push(cityArray[index].teeTimeAccessibiltyTextMyTime[language]);\n            teeTimeGotoRolex.push(cityArray[index].teeTimeGotoRolex[language]);\n          }\n          timezones.push(cityArray[index].timezone);\n          timezone_dst.push(cityArray[index].dst);\n          clockSettings.theLocalText = myTimeText[0];\n          clockSettings.eventText = eventText[0];\n          clockSettings.teeTimeText = teeTimeText[0];\n          clockSettings.teeTimeAccessibiltyTextEvent = teeTimeAccessibiltyTextEvent[0];\n          clockSettings.teeTimeAccessibiltyTextMyTime = teeTimeAccessibiltyTextMyTime[0];\n          clockSettings.teeTimeGotoRolex = teeTimeGotoRolex[0]\n\n          if (names.length == 1) {\n            changeBg('full');\n            clockSettings.theCityText = (names[0]).replace(/\\+\\b/gi, ' ');\n            clockSettings.eventText = (eventText[0]).replace(/\\+\\b/gi, ' ');\n            clockSettings.theLocalText = (myTimeText[0]).replace(/\\+\\b/gi, ' ');\n            clockSettings.teeTimeText = (teeTimeText[0]).replace(/\\+\\b/gi, ' ');\n            clockSettings.customOffset = timezones[0],\n              clockSettings.theCity = (names[0].toLowerCase()).trim();\n\n            clockSettings.customDST = timezone_dst[0];\n\n\n          } else if (names.length == 0 || names.length == '') {\n            changeBg();\n          }\n\n\n        }\n\n\n      }\n\n\n      var Arrow = document.getElementById(\"arrow\");\n      var Arrow0 = document.getElementById(\"arrow0\");\n\n      var thenewOffset,\n        customOffset,\n        elem;\n\n      //                 yourtime.onclick = function() {\n      //                     // console.log(this)\n      //                     document.querySelector('.block-city1').classList.remove(clockSettings.activeClass);\n      //                     this.classList.add(clockSettings.activeClass);\n      //                     Arrow.style.display = \"block\";\n      //                     Arrow0.style.display = \"none\";\n\n      //                     showCurrentTime();\n\n      //                 };\n      //                 timeTimezon.onclick = function() {\n      // // console.log(this)\n      //                 document.querySelector('.block-local').classList.remove(clockSettings.activeClass);\n      //                 this.classList.add(clockSettings.activeClass);\n      //                 Arrow.style.display = \"none\";\n      //                 Arrow0.style.display = \"block\";\n\n      //                 showTimeIn(clockSettings.theCity, clockSettings.customOffset, \"\", clockSettings.customDST);\n\n      //             };\n      $('.switch').on('click', function(event) {\n        event.preventDefault()\n        var origin = document.location.origin\n\n        if ($('#teetime').attr('aria-checked') === \"true\") {\n          //console.log($('#teetime').attr('aria-label'))\n          $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextEvent + $(\"#rolexClockCityTime\").text())\n          $('#teetime').attr('aria-checked', \"false\");\n          $('.label').html(clockSettings.eventText)\n          $(this).removeClass('active');\n          //console.log($('#teetime').att('checked'))\n          $('.mytime').css({ \"color\": 'rgba(255, 255, 255, .75)' })\n          $('.event').css({ \"color\": 'rgba(255, 255, 255, 1)' })\n          var data = { \"name\": \"rolex-teetime-toggle\", \"value\": \"On\", \"offset\": getAllUrlclockSettings().utc, \"lang\": getAllUrlclockSettings().lang }\n            //console.log(data)\n          $(\"#regular_timepiece_canvas\").attr('aria-label', $(\"#rolexClockCityTime\").text())\n          showTimeIn(clockSettings.theCity, clockSettings.customOffset, \"\");\n          window.top.postMessage(JSON.stringify(data), origin)\n        } else\n\n        if ($('#teetime').attr('aria-checked') === \"false\") {\n          //console.log($('#teetime').attr('aria-label'))\n          $(this).addClass('active');\n          $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextMyTime + $(\"#rolexClockYourTime\").text())\n          $('#teetime').attr('aria-checked', \"true\");\n          $('.label').html(clockSettings.theLocalText)\n          $('.mytime').css({ \"color\": \"rgba(255, 255, 255, 1)\" })\n          $('.event').css({ \"color\": 'rgba(255, 255, 255, .75)' })\n          showCurrentTime()\n          $(\"#regular_timepiece_canvas\").attr('aria-label', $(\"#rolexClockYourTime\").text())\n          var data = { \"name\": \"rolex-teetime-toggle\", \"value\": \"Off\", \"offset\": getAllUrlclockSettings().utc, \"lang\": getAllUrlclockSettings().lang }\n          window.top.postMessage(JSON.stringify(data), origin)\n        }\n      })\n      $('.switch').on('keypress', function(event) {\n        event.preventDefault()\n        var origin = document.location.origin\n\n        if (event.which === 13) {\n\n          if ($('#teetime').attr('aria-checked') === \"true\") {\n            //console.log($('#teetime').attr('aria-label'))\n            $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextEvent + $(\"#rolexClockCityTime\").text())\n            $('#teetime').attr('aria-checked', \"false\");\n            $('.label').html(clockSettings.eventText)\n            $(this).removeClass('active');\n            //console.log($('#teetime').att('checked'))\n            $('.mytime').css({ \"color\": 'rgba(255, 255, 255, .75)' })\n            $('.event').css({ \"color\": 'rgba(255, 255, 255, 1)' })\n            var data = { \"name\": \"rolex-teetime-toggle\", \"value\": \"On\", \"offset\": getAllUrlclockSettings().utc, \"lang\": getAllUrlclockSettings().lang }\n              //console.log(data)\n            $(\"#regular_timepiece_canvas\").attr('aria-label', $(\"#rolexClockCityTime\").text())\n            showTimeIn(clockSettings.theCity, clockSettings.customOffset, \"\");\n            window.top.postMessage(JSON.stringify(data), origin)\n          } else\n\n          if ($('#teetime').attr('aria-checked') === \"false\") {\n            //console.log($('#teetime').attr('aria-label'))\n            $(this).addClass('active');\n            $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextMyTime + $(\"#rolexClockYourTime\").text())\n            $('#teetime').attr('aria-checked', \"true\");\n            $('.label').html(clockSettings.theLocalText)\n            $('.mytime').css({ \"color\": \"rgba(255, 255, 255, 1)\" })\n            $('.event').css({ \"color\": 'rgba(255, 255, 255, .75)' })\n            showCurrentTime()\n            $(\"#regular_timepiece_canvas\").attr('aria-label', $(\"#rolexClockYourTime\").text())\n            var data = { \"name\": \"rolex-teetime-toggle\", \"value\": \"Off\", \"offset\": getAllUrlclockSettings().utc, \"lang\": getAllUrlclockSettings().lang }\n            window.top.postMessage(JSON.stringify(data), origin)\n          }\n        }\n      })\n\n\n      if (clockSettings.showTime == true) {\n        document.getElementById(\"timezone\").removeChild(document.getElementById(\"textContainer1\"));\n        document.getElementById(\"yourtime\").removeChild(document.getElementById(\"textContainer\"))\n      } else {\n        document.getElementById(\"cityText\").innerHTML = clockSettings.theCityText;\n        document.getElementById(\"event\").innerHTML = clockSettings.eventText;\n        document.getElementById(\"teeTimeText\").innerHTML = clockSettings.teeTimeText;\n        document.getElementById(\"title\").innerHTML = clockSettings.teeTimeText;\n        document.getElementById(\"mytime\").innerHTML = clockSettings.theLocalText;\n        document.getElementById(\"textContainer1\").title = clockSettings.theCityText.replace('\"', '&quot;');\n        document.getElementById(\"textContainer\").title = clockSettings.theLocalText.replace('\"', '&quot;');\n        $('#teetime').attr('aria-label', clockSettings.eventText)\n        $('.label').html(clockSettings.eventText)\n        if (clockSettings.upperCase == true) {\n          document.getElementById(\"cityText\").style.textTransform = \"uppercase\";\n          document.getElementById(\"localtext\").style.textTransform = \"uppercase\";\n        }\n      }\n\n\n\n      function updateShownTimeInHTMLComponentOvertime() {\n        updateShownTimeInHTMLComponent();\n        requestAnimFrame(updateShownTimeInHTMLComponentOvertime());\n      }\n\n      function showTimeIn(a, offset, elem, DST_TiMEZONE) {\n\n        var b = new Date;\n        var tempOffset = b.getTimezoneOffset();\n        // console.log(b.getTimezoneOffset())\n        today = b.getFullYear() + \"-\" + b.getMonth() + \"-\" + b.getDate() + \"-\" + b.getHours();\n        if (clockSettings.theCityText !== '' && elem == \"\") {\n          if (a) {\n            if ((names[0]).replace(/\\+\\b/gi, ' ') == clockSettings.theCityText) {\n              tempOffset += 60 * timezones[0];\n              // gettimezoneDST = getDST(new Date(), clockSettings.customDST);\n              // if (gettimezoneDST == 100) {\n              //     tempOffset += 60;\n              // }\n              cityTime(tempOffset, timezones[0], '');\n              // console.log((getAllUrlclockSettings().dst*60) + b.getTimezoneOffset())\n              tOffset = getAllUrlclockSettings().utc * 60;\n              t2Offset = tOffset + b.getTimezoneOffset()\n                // console.log(tOffset)\n              setMinutesOffset(t2Offset);\n            }\n          }\n        }\n      }\n      /* timezone text clock */\n\n      function cityTime(thenewOffset, customOffset, elem) {\n        // console.log(thenewOffset)\n        var localTime = new Date();\n        var localOffset = localTime.getTimezoneOffset() / 60\n        var cityTime = new Date(moment().utc().add(thenewOffset, 'hours'));\n        // console.log(localOffset)\n        // console.log(moment.utc().add(5.5, 'hours').format('MMM DD h:mm A'))\n        // console.log(moment().utc().add(5.5, 'hours').toDate())\n        cityTime.setHours(cityTime.getHours() + localOffset);\n        cityTime.setMinutes(cityTime.getMinutes());\n        cityTime.setSeconds(cityTime.getSeconds());\n        var cityTime_millisecondes = cityTime.getMilliseconds();\n        var cityTime_seconds = cityTime.getSeconds();\n        var cityTime_minutes = cityTime.getMinutes();\n        var cityTime_hours = cityTime.getHours();\n        var cityTime_day = cityTime.getDay();\n        if (cityTime_day == 0) {\n          var f = \"Sun\"\n        } else if (cityTime_day == 1) {\n          var f = \"Mon\"\n        } else if (cityTime_day == 2) {\n          var f = \"Tue\"\n        } else if (cityTime_day == 3) {\n          var f = \"Wed\"\n        } else if (cityTime_day == 4) {\n          var f = \"Thu\"\n        } else if (cityTime_day == 5) {\n          var f = \"Fri\"\n        } else if (cityTime_day == 6) {\n          var f = \"Sat\"\n        }\n        if (language === \"en\" || language === \"kr\") clockSettings.amPm = true;\n        clockSettings.time24hours = false\n          // console.log(cityTime_hours)\n        if (clockSettings.amPm == true) {\n          var g = \" \";\n          if (cityTime_hours >= 12) {\n            g = \" PM\"\n          } else {\n            g = \" AM\"\n          }\n        } else {\n          g = \"\"\n        }\n        if (clockSettings.time24hours == true) {\n          g = \"\"\n        } else {\n          if (cityTime_hours >= 13) {\n            cityTime_hours -= 12\n          } else if (cityTime_hours == 0) {\n            cityTime_hours = 12\n          }\n        }\n        if (clockSettings.trailingZero == true) {\n          if (cityTime_hours < 10) {\n            cityTime_hours = \"0\" + cityTime_hours\n          }\n        }\n\n        if (cityTime_minutes < 10)\n          cityTime_minutes = \"0\" + cityTime_minutes;\n\n        if (clockSettings.showText == true) {\n          if (clockSettings.showDay == true) {\n            f = f;\n          } else {\n            f = \"\";\n          }\n        }\n\n\n        function updateText(updated) {\n\n          if (cityTime_seconds >= 0 && cityTime_seconds < 1) {\n            update = document.getElementById(\"rolexClockCityTime\" + elem + \"\").innerHTML = f + \" \" + cityTime_hours + \":\" + cityTime_minutes + \"\" + g;\n            updateTime(thenewOffset, customOffset, elem);\n\n          } else {\n            if (checked === undefined) {\n              update = document.getElementById(\"rolexClockCityTime\" + elem + \"\").innerHTML = f + \" \" + cityTime_hours + \":\" + cityTime_minutes + \"\" + g;\n              var checked = 1;\n\n              updateTime(thenewOffset, customOffset, elem);\n\n            }\n\n          }\n        };\n        requestAnimFrame(updateText);\n      }\n\n      function updateTime(thenewOffset, customOffset, elem) {\n        cityTime(getAllUrlclockSettings().utc, customOffset, elem);\n      }\n      /* yourtime text clock */\n      function yourTime() {\n        var a = new Date;\n        a.setHours(a.getHours());\n        a.setMinutes(a.getMinutes());\n        a.setSeconds(a.getSeconds());\n        var b = a.getSeconds();\n        var c = a.getMinutes();\n        var d = a.getHours();\n        var e = a.getDay();\n        if (e == 0) {\n          var f = \"Sun\"\n        } else if (e == 1) {\n          var f = \"Mon\"\n        } else if (e == 2) {\n          var f = \"Tue\"\n        } else if (e == 3) {\n          var f = \"Wed\"\n        } else if (e == 4) {\n          var f = \"Thu\"\n        } else if (e == 5) {\n          var f = \"Fri\"\n        } else if (e == 6) {\n          var f = \"Sat\"\n        }\n        if (language === \"en\" || language === \"kr\") clockSettings.amPm = true;\n        clockSettings.time24hours = false\n        if (clockSettings.amPm == true) {\n          var g = \" \";\n          if (d >= 12) {\n            g = \" PM\"\n          } else {\n            g = \" AM\"\n          }\n        } else {\n          g = \"\"\n        }\n        if (clockSettings.time24hours == true) {\n          g = \"\"\n        } else {\n          if (d >= 13) {\n            d -= 12\n          }\n        }\n        if (clockSettings.trailingZero == true) {\n          if (d < 10) {\n            d = \"0\" + d\n          }\n        }\n        if (c < 10)\n          c = \"0\" + c;\n\n        if (clockSettings.showText == true) {\n          if (clockSettings.showDay == true) {\n            f = f;\n          } else {\n            f = \"\";\n          }\n          update = document.getElementById(\"rolexClockYourTime\").innerHTML = f + \" \" + d + \":\" + c + \"\" + g;\n        }\n        if (clockSettings.upperCase == true) {\n          document.getElementById(\"rolexClockYourTime\").style.textTransform = \"uppercase\"\n        }\n\n        setTimeout(function() {\n          document.getElementById(canvasId).setAttribute('tabindex', \"0\");\n          document.getElementById(canvasId).setAttribute('role', \"img\");\n          // if (lang == )\n        }, 1000)\n        requestAnimFrame(yourTime);\n      }\n\n      function showCurrentTime() {\n        setMinutesOffset(0)\n      }\n\n      function updateShownTimeInHTMLComponent() {\n        tempString = getCurrentShownTime()\n      }\n      // cityTime();\n\n      if (clockSettings.theCity != '') {\n        showTimeIn(clockSettings.theCity, clockSettings.customOffset, \"\");\n      }\n\n      yourTime();\n\n\n      var data = { \"name\": \"rolex-teetime-toggle\", \"value\": \"On\", \"offset\": getAllUrlclockSettings().utc, \"lang\": getAllUrlclockSettings().lang }\n\n\n      showTimeIn(clockSettings.theCity, clockSettings.customOffset, \"\");\n      setTimeout(function() {\n        $(\"#regular_timepiece_canvas\").attr('aria-label', $(\"#rolexClockCityTime\").text())\n        $(\".sr-only\").attr('aria-label', clockSettings.teeTimeGotoRolex)\n        $(\".rolexClockWim-backToRolex\").attr('aria-label', clockSettings.teeTimeGotoRolex)\n        $(\"#teetime\").attr('aria-label', clockSettings.teeTimeAccessibiltyTextEvent + $(\"#rolexClockCityTime\").text())\n      }, 1000)\n    }\n\n    startWatchEngine();\n\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::calculateOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n        h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::calendar": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::calendar$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n      sod = cloneWithOffset(now, this).startOf('day'),\n      format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ce(e, t) { var n = t && e,\n        r = n && 1 === e.nodeType && 1 === t.nodeType && e.sourceIndex - t.sourceIndex; if (r) return r; if (n)\n        while (n = n.nextSibling)\n          if (n === t) return -1;\n      return e ? 1 : -1 }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::changeBg": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function changeBg(bg) {\n            global_watch_p[\"xscale\"] = clockSettings.globalXscale;\n            global_watch_p[\"yscale\"] = clockSettings.globalYscale;\n            global_watch_p[\"xcenter\"] = clockSettings.globalXcenter;\n            global_watch_p[\"ycenter\"] = clockSettings.globalYcenter;\n            //yourtime.style.top = clockSettings.yourtTop;\n            //yourtime.style.left = clockSettings.yourtLeft;\n            //timeTimezon.style.top = clockSettings.timeZTop;\n            //timeTimezon.style.left = clockSettings.timeZLeft;\n            if (bg == 'full') {\n              document.getElementById(\"rolexClockWim-container\").style.background = \"#fff url(''\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // timeTimezon.style.display = \"block\";\n              // yourtime.style.display = \"block\";\n              //trackUrl.style.left = clockSettings.trackUrlL + 'px';\n              //trackUrl.style.height = clockSettings.trackUrlH + 'px';\n              //trackUrl.style.width = clockSettings.trackUrlW + 'px';\n\n            } else {\n              document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/bg.jpg') no-repeat\";\n              // yourtime.style.display = \"none\";\n              // timeTimezon.style.display = \"none\";\n              //trackUrl.style.left = clockSettings.trackUrlL + 'px';\n              //trackUrl.style.height = clockSettings.trackUrlH + 'px';\n              //trackUrl.style.width = clockSettings.trackUrlW + 'px';\n\n            }\n\n          }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::checkOverflow": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow =\n        a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n        a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n        a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n        a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n        a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n        a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n        -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::checkWeekday": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n        weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n    return true;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::chooseLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function chooseLocale(names) {\n    var i = 0,\n      j, next, locale, split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n        if (locale) {\n          return locale;\n        }\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n        j--;\n      }\n      i++;\n    }\n    return globalLocale;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::cityTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function cityTime(thenewOffset, customOffset, elem) {\n        // console.log(thenewOffset)\n        var localTime = new Date();\n        var localOffset = localTime.getTimezoneOffset() / 60\n        var cityTime = new Date(moment().utc().add(thenewOffset, 'hours'));\n        // console.log(localOffset)\n        // console.log(moment.utc().add(5.5, 'hours').format('MMM DD h:mm A'))\n        // console.log(moment().utc().add(5.5, 'hours').toDate())\n        cityTime.setHours(cityTime.getHours() + localOffset);\n        cityTime.setMinutes(cityTime.getMinutes());\n        cityTime.setSeconds(cityTime.getSeconds());\n        var cityTime_millisecondes = cityTime.getMilliseconds();\n        var cityTime_seconds = cityTime.getSeconds();\n        var cityTime_minutes = cityTime.getMinutes();\n        var cityTime_hours = cityTime.getHours();\n        var cityTime_day = cityTime.getDay();\n        if (cityTime_day == 0) {\n          var f = \"Sun\"\n        } else if (cityTime_day == 1) {\n          var f = \"Mon\"\n        } else if (cityTime_day == 2) {\n          var f = \"Tue\"\n        } else if (cityTime_day == 3) {\n          var f = \"Wed\"\n        } else if (cityTime_day == 4) {\n          var f = \"Thu\"\n        } else if (cityTime_day == 5) {\n          var f = \"Fri\"\n        } else if (cityTime_day == 6) {\n          var f = \"Sat\"\n        }\n        if (language === \"en\" || language === \"kr\") clockSettings.amPm = true;\n        clockSettings.time24hours = false\n          // console.log(cityTime_hours)\n        if (clockSettings.amPm == true) {\n          var g = \" \";\n          if (cityTime_hours >= 12) {\n            g = \" PM\"\n          } else {\n            g = \" AM\"\n          }\n        } else {\n          g = \"\"\n        }\n        if (clockSettings.time24hours == true) {\n          g = \"\"\n        } else {\n          if (cityTime_hours >= 13) {\n            cityTime_hours -= 12\n          } else if (cityTime_hours == 0) {\n            cityTime_hours = 12\n          }\n        }\n        if (clockSettings.trailingZero == true) {\n          if (cityTime_hours < 10) {\n            cityTime_hours = \"0\" + cityTime_hours\n          }\n        }\n\n        if (cityTime_minutes < 10)\n          cityTime_minutes = \"0\" + cityTime_minutes;\n\n        if (clockSettings.showText == true) {\n          if (clockSettings.showDay == true) {\n            f = f;\n          } else {\n            f = \"\";\n          }\n        }\n\n\n        function updateText(updated) {\n\n          if (cityTime_seconds >= 0 && cityTime_seconds < 1) {\n            update = document.getElementById(\"rolexClockCityTime\" + elem + \"\").innerHTML = f + \" \" + cityTime_hours + \":\" + cityTime_minutes + \"\" + g;\n            updateTime(thenewOffset, customOffset, elem);\n\n          } else {\n            if (checked === undefined) {\n              update = document.getElementById(\"rolexClockCityTime\" + elem + \"\").innerHTML = f + \" \" + cityTime_hours + \":\" + cityTime_minutes + \"\" + g;\n              var checked = 1;\n\n              updateTime(thenewOffset, customOffset, elem);\n\n            }\n\n          }\n        };\n        requestAnimFrame(updateText);\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::clone": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function clone() {\n    return new Moment(this);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::clone$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function clone$1() {\n    return createDuration(this);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::cloneWithOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n      // Use low-level api, because this fn is low-level api.\n      res._d.setTime(res._d.valueOf() + diff);\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::cmpLenRev": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::compareArrays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n      lengthDiff = Math.abs(array1.length - array2.length),\n      diffs = 0,\n      i;\n    for (i = 0; i < len; i++) {\n      if ((dontConvert && array1[i] !== array2[i]) ||\n        (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n        diffs++;\n      }\n    }\n    return diffs + lengthDiff;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::computeMonthsParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i, mom;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::computeWeekdaysParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n      shortPieces = [],\n      longPieces = [],\n      mixedPieces = [],\n      i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::configFromArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function configFromArray(config) {\n    var i, date, input = [],\n      currentDate, expectedWeekday, yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n      config._a[MINUTE] === 0 &&\n      config._a[SECOND] === 0 &&\n      config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::configFromISO": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function configFromISO(config) {\n    var i, l,\n      string = config._i,\n      match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n      allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::configFromInput": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function(obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::configFromObject": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function(obj) {\n      return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::configFromRFC2822": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n      config._d = createUTCDate.apply(null, config._a);\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::configFromString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::configFromStringAndArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function configFromStringAndArray(config) {\n    var tempConfig,\n      bestMoment,\n\n      scoreToBeat,\n      i,\n      currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      }\n\n      // if there is any input that was not parsed add a penalty for that format\n      currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n      //or tokens\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::configFromStringAndFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n      i, parsedInput, tokens, token, skipped,\n      stringLength = string.length,\n      totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n      // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      }\n      // don't parse if it's not a known token\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n      getParsingFlags(config).bigHour === true &&\n      config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::copyConfig": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::countProperties": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function countProperties(a) {\n  var b = 0;\n  for (var c in a) {\n    if (a.hasOwnProperty(c))\n      ++b\n  }\n  return b\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createAdder": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createAdder(direction, name) {\n    return function(val, period) {\n      var dur, tmp;\n      //invert the arguments, but complain about it\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n          'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date;\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createDuration": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createDuration(input, key) {\n    var duration = input,\n      // matching against regexp is expensive, do it on demand\n      match = null,\n      sign,\n      ret,\n      diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = (match[1] === '-') ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = (match[1] === '-') ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) { // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createFromConfig": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createInZone": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createInvalid": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createInvalid(flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createInvalid$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createInvalid$1() {\n    return createDuration(NaN);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createLocal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createLocalOrUTC": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n      (isArray(input) && input.length === 0)) {\n      input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createUTC": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createUTCDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createUTCDate(y) {\n    var date;\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments);\n      // preserve leap years using a full 400 year cycle, then reset\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::createUnix": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function createUnix(input) {\n    return createLocal(input * 1000);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::creationData": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ct": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ct(e, t, n) { var r, i, o, a, s, u, l, c, f = \"width\" in t || \"height\" in t,\n      p = this,\n      d = {},\n      h = e.style,\n      g = e.nodeType && ae(e),\n      y = J.get(e, \"fxshow\");\n    n.queue || (null == (a = w._queueHooks(e, \"fx\")).unqueued && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function() { a.unqueued || s() }), a.unqueued++, p.always(function() { p.always(function() { a.unqueued--, w.queue(e, \"fx\").length || a.empty.fire() }) })); for (r in t)\n      if (i = t[r], it.test(i)) { if (delete t[r], o = o || \"toggle\" === i, i === (g ? \"hide\" : \"show\")) { if (\"show\" !== i || !y || void 0 === y[r]) continue;\n          g = !0 }\n        d[r] = y && y[r] || w.style(e, r) }\n    if ((u = !w.isEmptyObject(t)) || !w.isEmptyObject(d)) { f && 1 === e.nodeType && (n.overflow = [h.overflow, h.overflowX, h.overflowY], null == (l = y && y.display) && (l = J.get(e, \"display\")), \"none\" === (c = w.css(e, \"display\")) && (l ? c = l : (fe([e], !0), l = e.style.display || l, c = w.css(e, \"display\"), fe([e]))), (\"inline\" === c || \"inline-block\" === c && null != l) && \"none\" === w.css(e, \"float\") && (u || (p.done(function() { h.display = l }), null == l && (c = h.display, l = \"none\" === c ? \"\" : c)), h.display = \"inline-block\")), n.overflow && (h.overflow = \"hidden\", p.always(function() { h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2] })), u = !1; for (r in d) u || (y ? \"hidden\" in y && (g = y.hidden) : y = J.access(e, \"fxshow\", { display: l }), o && (y.hidden = !g), g && fe([e], !0), p.done(function() { g || fe([e]), J.remove(e, \"fxshow\"); for (r in d) w.style(e, r, d[r]) })), u = lt(g ? y[r] : 0, r, p), r in y || (y[r] = u.start, g && (u.end = u.start, u.start = 0)) } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::currentDateArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::dayOfYearFromWeekInfo": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4;\n\n      // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n      // Default to current week.\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::dayOfYearFromWeeks": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n      weekOffset = firstWeekOffset(year, dow, doy),\n      dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n      resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::daysInMonth": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::daysInYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::daysToMonths": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::de": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function de(e) { return function(t) { return \"form\" in t ? t.parentNode && !1 === t.disabled ? \"label\" in t ? \"label\" in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && ie(t) === e : t.disabled === e : \"label\" in t && t.disabled === e } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::defaultParsingFlags": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::defaults": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n    if (b != null) {\n      return b;\n    }\n    return c;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::defineLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function defineLocale(name, config) {\n    if (config !== null) {\n      var locale, parentConfig = baseConfig;\n      config.abbr = name;\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride',\n          'use moment.updateLocale(localeName, config) to change ' +\n          'an existing locale. moment.defineLocale(localeName, ' +\n          'config) should only be used for creating a new locale ' +\n          'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function(x) {\n          defineLocale(x.name, x.config);\n        });\n      }\n\n      // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n      getSetGlobalLocale(name);\n\n\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::deprecate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function() {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n      if (firstTime) {\n        var args = [];\n        var arg;\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n          args.push(arg);\n        }\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n        firstTime = false;\n      }\n      return fn.apply(this, arguments);\n    }, fn);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::deprecateSimple": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::diff": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function diff(input, units, asFloat) {\n    var that,\n      zoneDelta,\n      output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n      case 'second':\n        output = (this - that) / 1e3;\n        break; // 1000\n      case 'minute':\n        output = (this - that) / 6e4;\n        break; // 1000 * 60\n      case 'hour':\n        output = (this - that) / 36e5;\n        break; // 1000 * 60 * 60\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break; // 1000 * 60 * 60 * 24, negate dst\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break; // 1000 * 60 * 60 * 24 * 7, negate dst\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::drawTimepiece": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function drawTimepiece(a, b) {\n  magnify_x_offset = 0;\n  magnify_y_offset = 0;\n  magnify_x_scale = 1;\n  magnify_y_scale = 1;\n  if (b == true) {\n    magnify_x_offset = cyclop_mask_p[\"xcenteroffset\"];\n    magnify_y_offset = cyclop_mask_p[\"ycenteroffset\"];\n    magnify_x_scale = cyclop_mask_p[\"xscale\"];\n    magnify_y_scale = cyclop_mask_p[\"yscale\"];\n  }\n  a.globalCompositeOperation = \"source-over\";\n  for (var i = 0; i < all_parts.length; i++) {\n    var c = all_p[i];\n    a.save();\n    if (all_p[i][\"update_mode\"] != null) {\n      if (all_p[i][\"update_mode\"] == \"monthdate\") {\n        if (all_p[i][\"url\"] == null) {\n          document.getElementById(all_parts[i] + \"_div\").innerHTML = monthdate\n        } else {\n          document.getElementById(all_parts[i] + \"_div\").style.background = \"url('\" + image_folder + \"num_\" + monthdate + \".\" + all_p[i][\"fileformat\"] + \"')\"\n        }\n      } else if (all_p[i][\"update_mode\"] == \"weekday\") {\n        document.getElementById(all_parts[i] + \"_div\").style.background = \"url('\" + image_folder + \"weekday_\" + weekday_num + \".\" + all_p[i][\"fileformat\"] + \"')\"\n      } else {\n        a.translate(c[\"xcenteroffset\"], c[\"ycenteroffset\"]);\n        a.translate(magnify_x_offset, magnify_y_offset);\n        a.translate(c[\"offset_alternate_x_center\"], c[\"offset_alternate_y_center\"]);\n        a.scale(global_watch_p[\"xscale\"] * magnify_x_scale, global_watch_p[\"yscale\"] * magnify_y_scale);\n        a.rotate(display_calculation[c[\"update_mode\"]]);\n        a.translate(-c[\"xrotation\"], -c[\"yrotation\"]);\n\n        //                        var img = c[\"image\"];\n        //                        console.log(img, c[\"width\"],c[\"height\"])\n        var img = document.getElementById(\"p_\" + all_parts[i]);\n        //                        console.log(\"p_\" + all_parts[i]);\n        //                        canvas = document.getElementById(canvasId)\n        //                        ctx = canvas.getContext('2d')\n        //                        ctx.drawImage(img, 0, 0, c[\"width\"], c[\"height\"]);\n        a.drawImage(img, 0, 0, c[\"width\"], c[\"height\"]);\n        for (var d in all_p[i][\"__lightEffects\"]) {\n          if (all_p[i][\"__lightEffects\"][d].height > 0) {\n            a.globalAlpha = getAlphaForRotation(d, display_calculation[c[\"update_mode\"]], \"normal\");\n            a.drawImage(c[\"__lightEffects\"][d], 0, 0, c[\"width\"], c[\"height\"])\n          }\n        }\n      }\n    } else {\n      a.translate(all_p[i][\"xcenteroffset\"], all_p[i][\"ycenteroffset\"]);\n      a.translate(-all_p[i][\"xcenter\"], -all_p[i][\"ycenter\"]);\n      a.drawImage(all_p[i][\"image\"], 0, 0, all_p[i][\"width\"], all_p[i][\"height\"])\n    }\n    a.restore()\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::easeInOutQuad": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function easeInOutQuad(a, b, c, d) {\n  if (a < d / 2)\n    return 2 * c * a * a / (d * d) + b;\n  ts = a - d / 2;\n  return -2 * c * ts * ts / (d * d) + 2 * c * ts / d + c / 2 + b\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ee": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "ee = function(e, t, n) { var r = \"0x\" + t - 65536; return r !== r || n ? t : r < 0 ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::endOf": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::et": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function et(e, t, n) { var r = $e(e),\n      i = Fe(e, t, r),\n      o = \"border-box\" === w.css(e, \"boxSizing\", !1, r),\n      a = o; if (We.test(i)) { if (!n) return i;\n      i = \"auto\" } return a = a && (h.boxSizingReliable() || i === e.style[t]), (\"auto\" === i || !parseFloat(i) && \"inline\" === w.css(e, \"display\", !1, r)) && (i = e[\"offset\" + t[0].toUpperCase() + t.slice(1)], a = !0), (i = parseFloat(i) || 0) + Ze(e, t, n || (o ? \"border\" : \"content\"), a, r, i) + \"px\" }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::expandFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::extend": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::extractFromRFC2822Strings": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [\n      untruncateYear(yearStr),\n      defaultLocaleMonthsShort.indexOf(monthStr),\n      parseInt(dayStr, 10),\n      parseInt(hourStr, 10),\n      parseInt(minuteStr, 10)\n    ];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::f_calculate_additional_vars": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function f_calculate_additional_vars() {\n  if (GLOBAL_LIGHT_SOURCE != undefined) {\n    TOP_LIGHT_START = GLOBAL_LIGHT_SOURCE - 90;\n    TOP_LIGHT_END = GLOBAL_LIGHT_SOURCE + 90;\n    BOTTOM_LIGHT_START = GLOBAL_LIGHT_SOURCE - 90;\n    BOTTOM_LIGHT_END = GLOBAL_LIGHT_SOURCE + 90;\n    TOP_SHADE_START = GLOBAL_LIGHT_SOURCE + 90;\n    TOP_SHADE_END = GLOBAL_LIGHT_SOURCE - 90;\n    BOTTOM_SHADE_START = GLOBAL_LIGHT_SOURCE + 90;\n    BOTTOM_SHADE_END = GLOBAL_LIGHT_SOURCE - 90;\n    LEFT_LIGHT_START = GLOBAL_LIGHT_SOURCE;\n    LEFT_LIGHT_END = GLOBAL_LIGHT_SOURCE + 180;\n    RIGHT_LIGHT_START = GLOBAL_LIGHT_SOURCE + 180;\n    RIGHT_LIGHT_END = GLOBAL_LIGHT_SOURCE;\n    LEFT_SHADE_START = GLOBAL_LIGHT_SOURCE + 180;\n    LEFT_SHADE_END = GLOBAL_LIGHT_SOURCE;\n    RIGHT_SHADE_START = GLOBAL_LIGHT_SOURCE;\n    RIGHT_SHADE_END = GLOBAL_LIGHT_SOURCE + 180\n  }\n  if (GLOBAL_MIN_ALPHA != undefined) {\n    TOP_LIGHT_MIN = BOTTOM_LIGHT_MIN = TOP_SHADE_MIN = BOTTOM_SHADE_MIN = LEFT_LIGHT_MIN = RIGHT_LIGHT_MIN = LEFT_SHADE_MIN = RIGHT_SHADE_MIN = GLOBAL_MIN_ALPHA\n  }\n  if (GLOBAL_MAX_ALPHA != undefined) {\n    TOP_LIGHT_MAX = BOTTOM_LIGHT_MAX = TOP_SHADE_MAX = BOTTOM_SHADE_MAX = LEFT_LIGHT_MAX = RIGHT_LIGHT_MAX = LEFT_SHADE_MAX = RIGHT_SHADE_MAX = GLOBAL_MAX_ALPHA\n  }\n  while (TOP_LIGHT_START > TOP_LIGHT_END) {\n    TOP_LIGHT_END += 360\n  }\n  while (BOTTOM_LIGHT_START > BOTTOM_LIGHT_END) {\n    BOTTOM_LIGHT_END += 360\n  }\n  while (TOP_SHADE_START > TOP_SHADE_END) {\n    TOP_SHADE_END += 360\n  }\n  while (BOTTOM_SHADE_START > BOTTOM_SHADE_END) {\n    BOTTOM_SHADE_END += 360\n  }\n  while (LEFT_LIGHT_START > LEFT_LIGHT_END) {\n    LEFT_LIGHT_END += 360\n  }\n  while (RIGHT_LIGHT_START > RIGHT_LIGHT_END) {\n    RIGHT_LIGHT_END += 360\n  }\n  while (LEFT_SHADE_START > LEFT_SHADE_END) {\n    LEFT_SHADE_END += 360\n  }\n  while (RIGHT_SHADE_START > RIGHT_SHADE_END) {\n    RIGHT_SHADE_END += 360\n  }\n  while (TOP_LIGHT_END > 360) {\n    TOP_LIGHT_START -= 360;\n    TOP_LIGHT_END -= 360\n  }\n  while (BOTTOM_LIGHT_END > 360) {\n    BOTTOM_LIGHT_START -= 360;\n    BOTTOM_LIGHT_END -= 360\n  }\n  while (TOP_SHADE_END > 360) {\n    TOP_SHADE_START -= 360;\n    TOP_SHADE_END -= 360\n  }\n  while (BOTTOM_SHADE_END > 360) {\n    BOTTOM_SHADE_START -= 360;\n    BOTTOM_SHADE_END -= 360\n  }\n  while (LEFT_LIGHT_END > 360) {\n    LEFT_LIGHT_START -= 360;\n    LEFT_LIGHT_END -= 360\n  }\n  while (RIGHT_LIGHT_END > 360) {\n    RIGHT_LIGHT_START -= 360;\n    RIGHT_LIGHT_END -= 360\n  }\n  while (LEFT_SHADE_END > 360) {\n    LEFT_SHADE_START -= 360;\n    LEFT_SHADE_END -= 360\n  }\n  while (RIGHT_SHADE_END > 360) {\n    RIGHT_SHADE_START -= 360;\n    RIGHT_SHADE_END -= 360\n  }\n  if (TOP_LIGHT_START < TOP_LIGHT_END) {\n    top_light_max_point = (TOP_LIGHT_START + TOP_LIGHT_END) / 2 % 360;\n    top_light_range = TOP_LIGHT_END - TOP_LIGHT_START\n  } else {\n    top_light_max_point = (TOP_LIGHT_START + TOP_LIGHT_END) % 360 / 2;\n    top_light_range = 360 + TOP_LIGHT_END - TOP_LIGHT_START\n  }\n  top_light_mid_range = top_light_range / 2;\n  if (BOTTOM_LIGHT_START < BOTTOM_LIGHT_END) {\n    bottom_light_max_point = (BOTTOM_LIGHT_START + BOTTOM_LIGHT_END) / 2 % 360;\n    bottom_light_range = BOTTOM_LIGHT_END - BOTTOM_LIGHT_START\n  } else {\n    bottom_light_max_point = (BOTTOM_LIGHT_START + BOTTOM_LIGHT_END) % 360 / 2;\n    bottom_light_range = 360 + BOTTOM_LIGHT_END - BOTTOM_LIGHT_START\n  }\n  bottom_light_mid_range = bottom_light_range / 2;\n  if (TOP_SHADE_START < TOP_SHADE_END) {\n    top_shade_max_point = (TOP_SHADE_START + TOP_SHADE_END) / 2 % 360;\n    top_shade_range = TOP_SHADE_END - TOP_SHADE_START\n  } else {\n    top_shade_max_point = (TOP_SHADE_START + TOP_SHADE_END) % 360 / 2;\n    top_shade_range = 360 + TOP_SHADE_END - TOP_SHADE_START\n  }\n  top_shade_mid_range = top_shade_range / 2;\n  if (BOTTOM_SHADE_START < BOTTOM_SHADE_END) {\n    bottom_shade_max_point = (BOTTOM_SHADE_START + BOTTOM_SHADE_END) / 2 % 360;\n    bottom_shade_range = BOTTOM_SHADE_END - BOTTOM_SHADE_START\n  } else {\n    bottom_shade_max_point = (BOTTOM_SHADE_START + BOTTOM_SHADE_END) % 360 / 2;\n    bottom_shade_range = 360 + BOTTOM_SHADE_END - BOTTOM_SHADE_START\n  }\n  bottom_shade_mid_range = bottom_shade_range / 2;\n  if (LEFT_LIGHT_START < LEFT_LIGHT_END) {\n    left_light_max_point = (LEFT_LIGHT_START + LEFT_LIGHT_END) / 2 % 360;\n    left_light_range = LEFT_LIGHT_END - LEFT_LIGHT_START\n  } else {\n    left_light_max_point = (LEFT_LIGHT_START + LEFT_LIGHT_END) % 360 / 2;\n    left_light_range = 360 + LEFT_LIGHT_END - LEFT_LIGHT_START\n  }\n  left_light_mid_range = left_light_range / 2;\n  if (RIGHT_LIGHT_START < RIGHT_LIGHT_END) {\n    right_light_max_point = (RIGHT_LIGHT_START + RIGHT_LIGHT_END) / 2 % 360;\n    right_light_range = RIGHT_LIGHT_END - RIGHT_LIGHT_START\n  } else {\n    right_light_max_point = (RIGHT_LIGHT_START + RIGHT_LIGHT_END) % 360 / 2;\n    right_light_range = 360 + RIGHT_LIGHT_END - RIGHT_LIGHT_START\n  }\n  right_light_mid_range = right_light_range / 2;\n  if (LEFT_SHADE_START < LEFT_SHADE_END) {\n    left_shade_max_point = (LEFT_SHADE_START + LEFT_SHADE_END) / 2 % 360;\n    left_shade_range = LEFT_SHADE_END - LEFT_SHADE_START\n  } else {\n    left_shade_max_point = (LEFT_SHADE_START + LEFT_SHADE_END) % 360 / 2;\n    left_shade_range = 360 + LEFT_SHADE_END - LEFT_SHADE_START\n  }\n  left_shade_mid_range = left_shade_range / 2;\n  if (RIGHT_SHADE_START < RIGHT_SHADE_END) {\n    right_shade_max_point = (RIGHT_SHADE_START + RIGHT_SHADE_END) / 2 % 360;\n    right_shade_range = RIGHT_SHADE_END - RIGHT_SHADE_START\n  } else {\n    right_shade_max_point = (RIGHT_SHADE_START + RIGHT_SHADE_END) % 360 / 2;\n    right_shade_range = 360 + RIGHT_SHADE_END - RIGHT_SHADE_START\n  }\n  right_shade_mid_range = right_shade_range / 2\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::fe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function fe(e) { return function(t) { return \"input\" === t.nodeName.toLowerCase() && t.type === e } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::firstWeekOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n      fwd = 7 + dow - doy,\n      // first-week day local weekday -- which local weekday is fwd\n      fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::format": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::formatMoment": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::from": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function from(time, withoutSuffix) {\n    if (this.isValid() &&\n      ((isMoment(time) && time.isValid()) ||\n        createLocal(time).isValid())) {\n      return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::fromNow": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ft": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ft(e, t) { var n, r, i, o, a; for (n in e)\n      if (r = G(n), i = t[r], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = w.cssHooks[r]) && \"expand\" in a) { o = a.expand(o), delete e[r]; for (n in o) n in e || (e[n] = o[n], t[n] = i) } else t[r] = i }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "g = function e(t) { return \"function\" == typeof t && \"number\" != typeof t.nodeType }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ge": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ge(e) { return e && \"undefined\" != typeof e.getElementsByTagName && e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::get": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function get(mom, unit) {\n    return mom.isValid() ?\n      mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::get$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::get$2": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getAllUrlclockSettings": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getAllUrlclockSettings(url) {\n\n  // get query string from url (optional) or window\n  var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n\n  // we'll store the parameters here\n  var obj = {};\n\n  // if query string exists\n  if (queryString) {\n\n    // stuff after # is not part of query string, so get rid of it\n    queryString = queryString.split('#')[0];\n\n    // split our query string into its component parts\n    var arr = queryString.split('&');\n\n    for (var i = 0; i < arr.length; i++) {\n      // separate the keys and the values\n      var a = arr[i].split('=');\n\n      // set parameter name and value (use 'true' if empty)\n      var paramName = a[0];\n      var paramValue = typeof(a[1]) === 'undefined' ? true : a[1];\n\n      // (optional) keep case consistent\n      paramName = paramName.toLowerCase();\n      if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n\n      // if the paramName ends with square brackets, e.g. colors[] or colors[2]\n      if (paramName.match(/\\[(\\d+)?\\]$/)) {\n\n        // create key if it doesn't exist\n        var key = paramName.replace(/\\[(\\d+)?\\]/, '');\n        if (!obj[key]) obj[key] = [];\n\n        // if it's an indexed array e.g. colors[2]\n        if (paramName.match(/\\[\\d+\\]$/)) {\n          // get the index value and add the entry at the appropriate position\n          var index = /\\[(\\d+)\\]/.exec(paramName)[1];\n          obj[key][index] = paramValue;\n        } else {\n          // otherwise add the value to the end of the array\n          obj[key].push(paramValue);\n        }\n      } else {\n        // we're dealing with a string\n        if (!obj[paramName]) {\n          // if it doesn't exist, create property\n          obj[paramName] = paramValue;\n        } else if (obj[paramName] && typeof obj[paramName] === 'string') {\n          // if property does exist and it's a string, convert it to an array\n          obj[paramName] = [obj[paramName]];\n          obj[paramName].push(paramValue);\n        } else {\n          // otherwise add the property\n          obj[paramName].push(paramValue);\n        }\n      }\n    }\n  }\n\n  return obj;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getAlphaForRotation": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getAlphaForRotation(a, b, c) {\n  b = 180 * b / Math.PI + 90;\n  subf_find_distance_to_max_point = function(a) {\n    var c = Math.abs(a - b);\n    if (c > 180) {\n      c = Math.abs(180 - (c - 180))\n    }\n    return c\n  };\n  var d;\n  if (a == \"top_light\") {\n    if (c == \"reverse\") {\n      this_hand_distance_to_top_light_point = subf_find_distance_to_max_point(-top_light_max_point)\n    } else {\n      this_hand_distance_to_top_light_point = subf_find_distance_to_max_point(top_light_max_point)\n    }\n    if (this_hand_distance_to_top_light_point <= top_light_mid_range) {\n      d = TOP_LIGHT_MIN + (1 - this_hand_distance_to_top_light_point / top_light_mid_range) * (TOP_LIGHT_MAX - TOP_LIGHT_MIN)\n    } else {\n      d = TOP_LIGHT_MIN\n    }\n  } else if (a == \"bottom_light\") {\n    if (c == \"reverse\") {\n      this_hand_distance_to_bottom_light_point = subf_find_distance_to_max_point(-bottom_light_max_point)\n    } else {\n      this_hand_distance_to_bottom_light_point = subf_find_distance_to_max_point(bottom_light_max_point)\n    }\n    if (180 - this_hand_distance_to_bottom_light_point <= bottom_light_mid_range) {\n      d = BOTTOM_LIGHT_MIN + (1 - (180 - this_hand_distance_to_bottom_light_point) / bottom_light_mid_range) * (BOTTOM_LIGHT_MAX - BOTTOM_LIGHT_MIN)\n    } else {\n      d = BOTTOM_LIGHT_MIN\n    }\n  } else if (a == \"top_shade\") {\n    if (c == \"reverse\") {\n      this_hand_distance_to_top_shade_point = subf_find_distance_to_max_point(-top_shade_max_point)\n    } else {\n      this_hand_distance_to_top_shade_point = subf_find_distance_to_max_point(top_shade_max_point)\n    }\n    if (this_hand_distance_to_top_shade_point <= top_shade_mid_range) {\n      d = TOP_SHADE_MIN + (1 - this_hand_distance_to_top_shade_point / top_shade_mid_range) * (TOP_SHADE_MAX - TOP_SHADE_MIN)\n    } else {\n      d = TOP_SHADE_MIN\n    }\n  } else if (a == \"bottom_shade\") {\n    if (c == \"reverse\") {\n      this_hand_distance_to_bottom_shade_point = subf_find_distance_to_max_point(-bottom_shade_max_point)\n    } else {\n      this_hand_distance_to_bottom_shade_point = subf_find_distance_to_max_point(bottom_shade_max_point)\n    }\n    if (180 - this_hand_distance_to_bottom_shade_point <= bottom_shade_mid_range) {\n      d = BOTTOM_SHADE_MIN + (1 - (180 - this_hand_distance_to_bottom_shade_point) / bottom_shade_mid_range) * (BOTTOM_SHADE_MAX - BOTTOM_SHADE_MIN)\n    } else {\n      d = BOTTOM_SHADE_MIN\n    }\n  }\n  if (c == \"reverse\") {\n    if (a == \"left_light\") {\n      this_hand_distance_to_left_light_point = subf_find_distance_to_max_point(-left_light_max_point);\n      if (this_hand_distance_to_left_light_point <= left_light_mid_range) {\n        d = LEFT_LIGHT_MIN + (1 - this_hand_distance_to_left_light_point / left_light_mid_range) * (LEFT_LIGHT_MAX - LEFT_LIGHT_MIN)\n      } else {\n        d = LEFT_LIGHT_MIN\n      }\n    } else if (a == \"right_light\") {\n      if (this_hand_distance_to_right_light_point <= right_light_mid_range) {\n        d = RIGHT_LIGHT_MIN + (1 - this_hand_distance_to_right_light_point / right_light_mid_range) * (RIGHT_LIGHT_MAX - RIGHT_LIGHT_MIN)\n      } else {\n        d = RIGHT_LIGHT_MIN\n      }\n    } else if (a == \"left_shade\") {\n      this_hand_distance_to_left_shade_point = subf_find_distance_to_max_point(-left_shade_max_point);\n      if (this_hand_distance_to_left_shade_point <= left_shade_mid_range) {\n        d = (1 - this_hand_distance_to_left_shade_point / left_shade_mid_range) * (LEFT_SHADE_MAX - LEFT_SHADE_MIN)\n      } else {\n        d = LEFT_SHADE_MIN\n      }\n    } else if (a == \"right_shade\") {\n      this_hand_distance_to_right_shade_point = subf_find_distance_to_max_point(-right_shade_max_point);\n      if (this_hand_distance_to_right_shade_point <= right_shade_mid_range) {\n        d = (1 - this_hand_distance_to_right_shade_point / right_shade_mid_range) * (RIGHT_SHADE_MAX - RIGHT_SHADE_MIN)\n      } else {\n        d = RIGHT_SHADE_MIN\n      }\n    }\n  } else {\n    if (a == \"left_light\") {\n      this_hand_distance_to_left_light_point = subf_find_distance_to_max_point(left_light_max_point);\n      if (this_hand_distance_to_left_light_point <= left_light_mid_range) {\n        d = LEFT_LIGHT_MIN + (1 - this_hand_distance_to_left_light_point / left_light_mid_range) * (LEFT_LIGHT_MAX - LEFT_LIGHT_MIN)\n      } else {\n        d = LEFT_LIGHT_MIN\n      }\n    } else if (a == \"right_light\") {\n      this_hand_distance_to_right_light_point = subf_find_distance_to_max_point(-right_light_max_point);\n      this_hand_distance_to_right_light_point = subf_find_distance_to_max_point(right_light_max_point);\n      if (this_hand_distance_to_right_light_point <= right_light_mid_range) {\n        d = RIGHT_LIGHT_MIN + (1 - this_hand_distance_to_right_light_point / right_light_mid_range) * (RIGHT_LIGHT_MAX - RIGHT_LIGHT_MIN)\n      } else {\n        d = RIGHT_LIGHT_MIN\n      }\n    } else if (a == \"left_shade\") {\n      this_hand_distance_to_left_shade_point = subf_find_distance_to_max_point(left_shade_max_point);\n      if (this_hand_distance_to_left_shade_point <= left_shade_mid_range) {\n        d = LEFT_SHADE_MIN + (1 - this_hand_distance_to_left_shade_point / left_shade_mid_range) * (LEFT_SHADE_MAX - LEFT_SHADE_MIN)\n      } else {\n        d = LEFT_SHADE_MIN\n      }\n    } else if (a == \"right_shade\") {\n      this_hand_distance_to_right_shade_point = subf_find_distance_to_max_point(right_shade_max_point);\n      if (this_hand_distance_to_right_shade_point <= right_shade_mid_range) {\n        d = RIGHT_SHADE_MIN + (1 - this_hand_distance_to_right_shade_point / right_shade_mid_range) * (RIGHT_SHADE_MAX - RIGHT_SHADE_MIN)\n      } else {\n        d = RIGHT_SHADE_MIN\n      }\n    }\n  }\n  return d / 100\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getCalendarFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n      diff < -1 ? 'lastWeek' :\n      diff < 0 ? 'lastDay' :\n      diff < 1 ? 'sameDay' :\n      diff < 2 ? 'nextDay' :\n      diff < 7 ? 'nextWeek' : 'sameElse';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getCurrentShownTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getCurrentShownTime() {\n  var a = \"\";\n  if (current_hours < 10) {\n    a += \"0\"\n  }\n  a += current_hours;\n  a += \":\";\n  if (current_minutes < 10) {\n    a += \"0\"\n  }\n  a += current_minutes;\n  return a\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getDateOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getDaysInMonth": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getHiddenProp": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getHiddenProp() {\n  var prefixes = ['webkit', 'moz', 'ms', 'o'];\n\n  // if 'hidden' is natively supported just return it\n  if ('hidden' in document)\n    return 'hidden';\n\n  // otherwise loop over all the known prefixes until we find one\n  for (var i = 0; i < prefixes.length; i++) {\n    if ((prefixes[i] + 'Hidden') in document)\n      return prefixes[i] + 'Hidden';\n  }\n\n  // otherwise it's not supported\n  return null;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getISOWeeksInYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getIsLeapYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n      if (locale) {\n        return locale;\n      }\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getParseRegexForToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getParsingFlags": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getPrioritizedUnits": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n      units.push({ unit: u, priority: priorities[u] });\n    }\n    units.sort(function(a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetDayOfWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetDayOfYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetGlobalLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetGlobalLocale(key, values) {\n    var data;\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if ((typeof console !== 'undefined') && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetISODayOfWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetISOWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetISOWeekYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this,\n      input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetLocaleDayOfWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetMonth": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n      localAdjust;\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n      this._offset = input;\n      this._isUTC = true;\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetQuarter": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetRelativeTimeRounding": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n    return false;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetRelativeTimeThreshold": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n    return true;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetWeekYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this,\n      input,\n      this.week(),\n      this.weekday(),\n      this.localeData()._week.dow,\n      this.localeData()._week.doy);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetWeekYearHelper": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getSetZone": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getWeeksInYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getZoneAbbr": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::getZoneName": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::hFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function hFormat() {\n    return this.hours() % 12 || 12;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::handleStrictParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::handleStrictParse$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._weekdaysParse, llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::hasAlignedHourOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::hasOwnProp": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::he": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function he(e) { return se(function(t) { return t = +t, se(function(n, r) { var i, o = e([], n.length, t),\n            a = o.length; while (a--) n[i = o[a]] && (n[i] = !(r[i] = n[i])) }) }) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::hooks": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function hooks() {\n    return hookCallback.apply(null, arguments);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::humanize": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "i = function(e, t) { var n = g(t) ? t() : t;\n        r[r.length] = encodeURIComponent(e) + \"=\" + encodeURIComponent(null == n ? \"\" : n) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::inspect": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::invalidAt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::invalidDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function invalidDate() {\n    return this._invalidDate;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isAfter": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isBefore": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isBetween": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n      localTo = isMoment(to) ? to : createLocal(to);\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n      (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isDaylightSavingTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isDaylightSavingTime() {\n    return (\n      this.utcOffset() > this.clone().month(0).utcOffset() ||\n      this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isDaylightSavingTimeShifted": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() &&\n        compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isDuration": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isDuration(obj) {\n    return obj instanceof Duration;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isDurationValid": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isFunction": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isHidden": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isHidden() {\n  var prop = getHiddenProp();\n  if (!prop)\n    return false;\n\n  return document[prop];\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isLeapYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isLocal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isMoment": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isMoment(obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isNumber": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isObject": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isObjectEmpty": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return (Object.getOwnPropertyNames(obj).length === 0);\n    } else {\n      var k;\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isSame": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n      inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isSameOrAfter": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isSameOrBefore": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isUndefined": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isUndefined(input) {\n    return input === void 0;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isUtc": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isUtcOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isValid": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function(i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) &&\n        flags.overflow < 0 &&\n        !flags.empty &&\n        !flags.invalidMonth &&\n        !flags.invalidWeekday &&\n        !flags.weekdayMismatch &&\n        !flags.nullInput &&\n        !flags.invalidFormat &&\n        !flags.userInvalidated &&\n        (!flags.meridiem || (flags.meridiem && parsedParts));\n\n      if (m._strict) {\n        isNowValid = isNowValid &&\n          flags.charsLeftOver === 0 &&\n          flags.unusedTokens.length === 0 &&\n          flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n    return m._isValid;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isValid$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isValid$1() {\n    return this._isValid;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::isValid$2": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function isValid$2() {\n    return isValid(this);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::j": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function j(e, t, n) { return g(t) ? w.grep(e, function(e, r) { return !!t.call(e, r, e) !== n }) : t.nodeType ? w.grep(e, function(e) { return e === t !== n }) : \"string\" != typeof t ? w.grep(e, function(e) { return u.call(t, e) > -1 !== n }) : w.filter(t, e, n) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::jt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function jt(e, t, n, r) { var i; if (Array.isArray(t)) w.each(t, function(t, i) { n || St.test(e) ? r(e, i) : jt(e + \"[\" + (\"object\" == typeof i && null != i ? t : \"\") + \"]\", i, n, r) });\n    else if (n || \"object\" !== x(t)) r(e, t);\n    else\n      for (i in t) jt(e + \"[\" + i + \"]\", t[i], n, r) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "k = function(e, t, n) { var r = [],\n        i = void 0 !== n; while ((e = e[t]) && 9 !== e.nodeType)\n        if (1 === e.nodeType) { if (i && w(e).is(n)) break;\n          r.push(e) }\n      return r }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::kFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function kFormat() {\n    return this.hours() || 24;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ke": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ke() { return !1 }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::l": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "l = function() { var e, l; if (!(t < o)) { if ((e = r.apply(s, u)) === n.promise()) throw new TypeError(\"Thenable self-resolution\");\n                      l = e && (\"object\" == typeof e || \"function\" == typeof e) && e.then, g(l) ? i ? l.call(e, a(o, n, I, i), a(o, n, W, i)) : (o++, l.call(e, a(o, n, I, i), a(o, n, W, i), a(o, n, I, n.notifyWith))) : (r !== I && (s = void 0, u = [e]), (i || n.resolveWith)(s, u)) } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::le": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function le(e, t) { var n = e.split(\"|\"),\n        i = n.length; while (i--) r.attrHandle[n[i]] = t }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::listLocales": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function listLocales() {\n    return keys(locales);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::listMonths": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::listMonthsImpl": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::listMonthsShort": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::listWeekdays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::listWeekdaysImpl": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n      shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::listWeekdaysMin": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::listWeekdaysShort": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::loadLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n      module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n    return locales[name];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::loadSprite": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function loadSprite(i, src) {\n  //            console.log(\"i=\" + i + \"; src=\" + src);\n  var deferred = $.Deferred();\n  all_p[i][\"image\"] = document.createElement('img');\n  all_p[i][\"image\"].id = \"p_\" + all_parts[i];\n  all_p[i][\"image\"].onload = function() {\n    deferred.resolve();\n  };\n  all_p[i][\"image\"].onerror = function() {\n    loadSpriteErrors.push(src);\n    $('.content').hide();\n    $('.fallback').show();\n  }\n  partsContainer.appendChild(all_p[i][\"image\"]);\n  all_p[i][\"image\"].src = src;\n  return deferred.promise();\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localStartOfDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::locale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n      return this;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeData": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeData() {\n    return this._locale;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeFirstDayOfWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeFirstDayOfYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeFirstDayOfYear() {\n    return this._week.doy;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeIsPM": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeMeridiem": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeMonths": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months :\n        this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n      this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeMonthsParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeMonthsShort": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort :\n        this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n      this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeWeekdays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays :\n      this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n    return (m === true) ? shiftWeekdays(weekdays, this._week.dow) :\n      (m) ? weekdays[m.day()] : weekdays;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeWeekdaysMin": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeWeekdaysMin(m) {\n    return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow) :\n      (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeWeekdaysParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n\n      mom = createUTC([2000, 1]).day(i);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::localeWeekdaysShort": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function localeWeekdaysShort(m) {\n    return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow) :\n      (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::longDateFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n      formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function(val) {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::lt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function lt(e, t, n) { for (var r, i = (pt.tweeners[t] || []).concat(pt.tweeners[\"*\"]), o = 0, a = i.length; o < a; o++)\n      if (r = i[o].call(n, t, e)) return r }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::m": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function m(e, t, n) { var i, o = (t = t || r).createElement(\"script\"); if (o.text = e, n)\n      for (i in v) n[i] && (o[i] = n[i]);\n    t.head.appendChild(o).parentNode.removeChild(o) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::makeAs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function makeAs(alias) {\n    return function() {\n      return this.as(alias);\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::makeFormatFunction": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n      i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function(mom) {\n      var output = '',\n        i;\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n      return output;\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::makeGetSet": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function makeGetSet(unit, keepTime) {\n    return function(value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::makeGetter": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function makeGetter(name) {\n    return function() {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::map": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function map(arr, fn) {\n    var res = [],\n      i;\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::matchMeridiem": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::max": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function max() {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::me": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function me(e, t, n) { var r = t.dir,\n        i = t.next,\n        o = i || r,\n        a = n && \"parentNode\" === o,\n        s = C++; return t.first ? function(t, n, i) { while (t = t[r])\n          if (1 === t.nodeType || a) return e(t, n, i);\n        return !1 } : function(t, n, u) { var l, c, f, p = [T, s]; if (u) { while (t = t[r])\n            if ((1 === t.nodeType || a) && e(t, n, u)) return !0 } else\n          while (t = t[r])\n            if (1 === t.nodeType || a)\n              if (f = t[b] || (t[b] = {}), c = f[t.uniqueID] || (f[t.uniqueID] = {}), i && i === t.nodeName.toLowerCase()) t = t[r] || t;\n              else { if ((l = c[o]) && l[0] === T && l[1] === s) return p[2] = l[2]; if (c[o] = p, p[2] = e(t, n, u)) return !0 } return !1 } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::mergeConfigs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n      prop;\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) &&\n        !hasOwnProp(childConfig, prop) &&\n        isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::meridiem": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function() {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::meridiemFixWrap": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::min": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function min() {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::mod": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function mod(n, x) {\n    return ((n % x) + x) % x;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::mod$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::momentsDifference": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n      return { milliseconds: 0, months: 0 };\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::monthDiff": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n      // b is in (anchor - 1 month, anchor + 1 month)\n      anchor = a.clone().add(wholeMonthDiff, 'months'),\n      anchor2, adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::monthsRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n      return this._monthsStrictRegex && isStrict ?\n        this._monthsStrictRegex : this._monthsRegex;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::monthsShortRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n      return this._monthsShortStrictRegex && isStrict ?\n        this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::monthsToDays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::mt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function mt(e) { return e.getAttribute && e.getAttribute(\"class\") || \"\" }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function n(e) { return Math.round(parseFloat(e)) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ne": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "ne = function(e, t) { return t ? \"\\0\" === e ? \"\\ufffd\" : e.slice(0, -1) + \"\\\\\" + e.charCodeAt(e.length - 1).toString(16) + \" \" : \"\\\\\" + e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::normalizeLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::normalizeObjectUnits": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n      normalizedProp,\n      prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::normalizeUnits": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::now": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "now = function() {\n    return Date.now ? Date.now() : +(new Date());\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::o": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "o = function(o, a, s, u, c) { var f, h, y, v = 0,\n            m = \"0\",\n            x = o && [],\n            b = [],\n            w = l,\n            C = o || i && r.find.TAG(\"*\", c),\n            E = T += null == w ? 1 : Math.random() || .1,\n            k = C.length; for (c && (l = a === d || a || c); m !== k && null != (f = C[m]); m++) { if (i && f) { h = 0, a || f.ownerDocument === d || (p(f), s = !g); while (y = e[h++])\n                if (y(f, a || d, s)) { u.push(f); break }\n              c && (T = E) }\n            n && ((f = !y && f) && v--, o && x.push(f)) } if (v += m, n && m !== v) { h = 0; while (y = t[h++]) y(x, b, a, s); if (o) { if (v > 0)\n                while (m--) x[m] || b[m] || (b[m] = j.call(u));\n              b = we(b) }\n            L.apply(u, b), c && !o && b.length > 0 && v + t.length > 1 && oe.uniqueSort(u) } return c && (T = E, l = w), x }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::oe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function oe(e, t, r, i) { var o, s, l, c, f, h, v, m = t && t.ownerDocument,\n        T = t ? t.nodeType : 9; if (r = r || [], \"string\" != typeof e || !e || 1 !== T && 9 !== T && 11 !== T) return r; if (!i && ((t ? t.ownerDocument || t : w) !== d && p(t), t = t || d, g)) { if (11 !== T && (f = J.exec(e)))\n          if (o = f[1]) { if (9 === T) { if (!(l = t.getElementById(o))) return r; if (l.id === o) return r.push(l), r } else if (m && (l = m.getElementById(o)) && x(t, l) && l.id === o) return r.push(l), r } else { if (f[2]) return L.apply(r, t.getElementsByTagName(e)), r; if ((o = f[3]) && n.getElementsByClassName && t.getElementsByClassName) return L.apply(r, t.getElementsByClassName(o)), r }\n        if (n.qsa && !S[e + \" \"] && (!y || !y.test(e))) { if (1 !== T) m = t, v = e;\n          else if (\"object\" !== t.nodeName.toLowerCase()) {\n            (c = t.getAttribute(\"id\")) ? c = c.replace(te, ne): t.setAttribute(\"id\", c = b), s = (h = a(e)).length; while (s--) h[s] = \"#\" + c + \" \" + ve(h[s]);\n            v = h.join(\",\"), m = K.test(e) && ge(t.parentNode) || t } if (v) try { return L.apply(r, m.querySelectorAll(v)), r } catch (e) {} finally { c === b && t.removeAttribute(\"id\") } } } return u(e.replace(B, \"$1\"), t, r, i) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::offset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function offset(token, separator) {\n    addFormatToken(token, 0, 0, function() {\n      var offset = this.utcOffset();\n      var sign = '+';\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::offsetFromString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ordinal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::parseIso": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::parseIsoWeekday": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::parseMs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::parseWeekday": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::parsingFlags": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::pastFuture": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::pe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function pe(e) { return function(t) { var n = t.nodeName.toLowerCase(); return (\"input\" === n || \"button\" === n) && t.type === e } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::pickBy": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n    if (!moments.length) {\n      return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::placeCanvas": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function placeCanvas(a, b, c) {\n  a.clearRect(-global_watch_p[\"width\"], -global_watch_p[\"height\"], global_watch_p[\"width\"] * 2, global_watch_p[\"height\"] * 2);\n  if (b == false) {} else {\n    a.save();\n    if (c) {\n      a.translate(global_watch_p[c[\"watch_x_center\"]], global_watch_p[c[\"watch_y_center\"]])\n    } else {\n      a.translate(global_watch_p[\"xcenter\"], global_watch_p[\"ycenter\"])\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::positiveMomentsDifference": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function positiveMomentsDifference(base, other) {\n    var res = {};\n\n    res.months = other.month() - base.month() +\n      (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::preParsePostFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function preParsePostFormat(string) {\n    return string;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::prepareConfig": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function prepareConfig(config) {\n    var input = config._i,\n      format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n      return createInvalid({ nullInput: true });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::prepareTimepieceElements": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function prepareTimepieceElements() {\n  if (prepareTimepieceElementsIsDone == false) {\n    for (i = 0; i < all_parts.length; i++) {\n      if (all_p[i][\"update_mode\"] == \"monthdate\" || all_p[i][\"update_mode\"] == \"weekday\") {\n        if (all_p[i][\"url\"] == null) {\n          var a = document.createElement(\"DIV\")\n        } else {\n          var a = document.createElement(\"CANVAS\")\n        }\n        document.getElementById(watchContainer).appendChild(a);\n        if (typeof G_vmlCanvasManager != \"undefined\") {\n          a = G_vmlCanvasManager.initElement(a)\n        }\n        a.setAttribute(\"id\", all_parts[i] + \"_div\");\n        a.style.position = \"absolute\";\n        a.style.width = all_p[i][\"width\"] + \"px\";\n        a.style.height = all_p[i][\"height\"] + \"px\";\n        a.style.left = all_p[i][\"xoriginoffset\"] + \"px\";\n        a.style.top = all_p[i][\"yoriginoffset\"] + \"px\";\n        if (all_p[i][\"url\"] == null) {\n          a.style.color = \"#\" + all_p[i][\"txt_color\"];\n          a.style.fontSize = all_p[i][\"txt_fontSize\"];\n          a.style.fontFamily = \"Arial\";\n          a.style.textAlign = \"center\"\n        }\n        parts_starting_z_index += i;\n        a.style.zIndex = parts_starting_z_index\n      }\n    }\n    var b = document.createElement(\"CANVAS\");\n    document.getElementById(watchContainer).appendChild(b);\n    if (typeof G_vmlCanvasManager != \"undefined\") {\n      b = G_vmlCanvasManager.initElement(b)\n    }\n    b.setAttribute(\"id\", \"regular_timepiece_canvas\");\n    b.style.position = \"absolute\";\n    b.setAttribute(\"width\", global_watch_p[\"width\"]);\n    b.setAttribute(\"height\", global_watch_p[\"height\"]);\n    b.style.zIndex = parts_starting_z_index;\n    if (cyclop_mask_p[\"url\"]) {\n      var b = document.createElement(\"CANVAS\");\n      document.getElementById(watchContainer).appendChild(b);\n      if (typeof G_vmlCanvasManager != \"undefined\") {\n        b = G_vmlCanvasManager.initElement(b)\n      }\n      b.setAttribute(\"id\", \"magnified_timepiece_canvas\");\n      b.style.position = \"absolute\";\n      b.setAttribute(\"width\", global_watch_p[\"width\"]);\n      b.setAttribute(\"height\", global_watch_p[\"height\"]);\n      b.style.zIndex = parts_starting_z_index + 1\n    }\n    prepareTimepieceElementsIsDone = true\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::preprocessRFC2822": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::pt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function pt(e, t, n) { var r, i, o = 0,\n      a = pt.prefilters.length,\n      s = w.Deferred().always(function() { delete u.elem }),\n      u = function() { if (i) return !1; for (var t = nt || st(), n = Math.max(0, l.startTime + l.duration - t), r = 1 - (n / l.duration || 0), o = 0, a = l.tweens.length; o < a; o++) l.tweens[o].run(r); return s.notifyWith(e, [l, r, n]), r < 1 && a ? n : (a || s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l]), !1) },\n      l = s.promise({ elem: e, props: w.extend({}, t), opts: w.extend(!0, { specialEasing: {}, easing: w.easing._default }, n), originalProperties: t, originalOptions: n, startTime: nt || st(), duration: n.duration, tweens: [], createTween: function(t, n) { var r = w.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing); return l.tweens.push(r), r }, stop: function(t) { var n = 0,\n            r = t ? l.tweens.length : 0; if (i) return this; for (i = !0; n < r; n++) l.tweens[n].run(1); return t ? (s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l, t])) : s.rejectWith(e, [l, t]), this } }),\n      c = l.props; for (ft(c, l.opts.specialEasing); o < a; o++)\n      if (r = pt.prefilters[o].call(l, e, c, l.opts)) return g(r.stop) && (w._queueHooks(l.elem, l.opts.queue).stop = r.stop.bind(r)), r;\n    return w.map(c, lt, l), g(l.opts.start) && l.opts.start.call(e, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), w.fx.timer(w.extend(u, { elem: e, anim: l, queue: l.opts.queue })), l }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "r = function(e) { var t = e.stop;\n          delete e.stop, t(n) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::re": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "re = function() { p() }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::regexEscape": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::relativeTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n      output(number, withoutSuffix, string, isFuture) :\n      output.replace(/%d/i, number);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::relativeTime$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds] ||\n      seconds < thresholds.s && ['ss', seconds] ||\n      minutes <= 1 && ['m'] ||\n      minutes < thresholds.m && ['mm', minutes] ||\n      hours <= 1 && ['h'] ||\n      hours < thresholds.h && ['hh', hours] ||\n      days <= 1 && ['d'] ||\n      days < thresholds.d && ['dd', days] ||\n      months <= 1 && ['M'] ||\n      months < thresholds.M && ['MM', months] ||\n      years <= 1 && ['y'] || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::removeElement": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function removeElement(id) {\n  var element = document.getElementById(id);\n  element.parentNode.removeChild(element);\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::removeFormattingTokens": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::replaceLongDateFormatTokens": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "s = function(e) { return function(n) { r[e] = this, i[e] = arguments.length > 1 ? o.call(arguments) : n, --t || a.resolveWith(r, i) } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::se": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function se(e) { return e[b] = !0, e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::set": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function set(config) {\n    var prop, i;\n    for (i in config) {\n      prop = config[i];\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n      (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n      '|' + (/\\d{1,2}/).source);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::set$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setHookCallback": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setHookCallback(callback) {\n    hookCallback = callback;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setHoursOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setHoursOffset(a) {\n  hoursOffset = a\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setMinutesOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setMinutesOffset(a) {\n  minutesOffset = a\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setMonth": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value);\n        // TODO: Another silent failure?\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setOffsetToLocal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setOffsetToParsedOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setOffsetToUTC": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setSecondsOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setSecondsOffset(a) {\n  secondsOffset = a\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setTimeToDefaultTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setTimeToDefaultTime() {\n  currentTime = new Date;\n  currentTime.setHours(10);\n  currentTime.setMinutes(11);\n  currentTime.setSeconds(31);\n  monthdate = currentTime.getDate();\n  weekday_num = currentTime.getDay();\n  current_seconds = currentTime.getSeconds();\n  current_minutes = currentTime.getMinutes();\n  current_hours = currentTime.getHours();\n  current_milliseconds = currentTime.getMilliseconds()\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::setWeekAll": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n      date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::shiftWeekdays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::showCurrentTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function showCurrentTime() {\n        setMinutesOffset(0)\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::showStaticWatchOnTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function showStaticWatchOnTime() {\n  if (all_p_to_be_loaded < 1) {\n    prepareTimepieceElements();\n    setTimeToDefaultTime();\n    updateOnTimeDisplayOnce()\n  } else {\n    timeoutID = window.setTimeout(\"showStaticWatchOnTime()\", tickDelay)\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::showTimeIn": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function showTimeIn(a, offset, elem, DST_TiMEZONE) {\n\n        var b = new Date;\n        var tempOffset = b.getTimezoneOffset();\n        // console.log(b.getTimezoneOffset())\n        today = b.getFullYear() + \"-\" + b.getMonth() + \"-\" + b.getDate() + \"-\" + b.getHours();\n        if (clockSettings.theCityText !== '' && elem == \"\") {\n          if (a) {\n            if ((names[0]).replace(/\\+\\b/gi, ' ') == clockSettings.theCityText) {\n              tempOffset += 60 * timezones[0];\n              // gettimezoneDST = getDST(new Date(), clockSettings.customDST);\n              // if (gettimezoneDST == 100) {\n              //     tempOffset += 60;\n              // }\n              cityTime(tempOffset, timezones[0], '');\n              // console.log((getAllUrlclockSettings().dst*60) + b.getTimezoneOffset())\n              tOffset = getAllUrlclockSettings().utc * 60;\n              t2Offset = tOffset + b.getTimezoneOffset()\n                // console.log(tOffset)\n              setMinutesOffset(t2Offset);\n            }\n          }\n        }\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::sign": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function sign(x) {\n    return ((x > 0) - (x < 0)) || +x;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::spinToCurrentTimeAfterDelay": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function spinToCurrentTimeAfterDelay(a) {}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::st": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function st() { return e.setTimeout(function() { nt = void 0 }), nt = Date.now() }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::startOf": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::startWatchEngine": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function startWatchEngine() {\n  //            if (window.addEventListener) {\n  //                window.addEventListener(\"load\", function() {\n  startWatchEngineWhenReady()\n    //                }, false)\n    //            } else if (window.attachEvent) {\n    //                window.attachEvent(\"onload\", function() {\n    //                    startWatchEngineWhenReady()\n    //                })\n    //            }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::startWatchEngineWhenReady": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function startWatchEngineWhenReady() {\n  if (all_p_to_be_loaded < 1) {\n    prepareTimepieceElements();\n    //                updateOnTimeDisplayOvertime();\n    window.setTimeout(updateOnTimeDisplayOvertime, 0);\n  } else {\n    requestAnimFrame(startWatchEngineWhenReady);\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::stringGet": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function stringGet(units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::stringSet": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::substituteTimeAgo": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::subtract$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::t": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function t(n, i) { return e.push(n + \" \") > r.cacheLength && delete t[e.shift()], t[n + \" \"] = i }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::te": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function te(e) { return \"true\" === e || \"false\" !== e && (\"null\" === e ? null : e === +e + \"\" ? +e : Z.test(e) ? JSON.parse(e) : e) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::to": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function to(time, withoutSuffix) {\n    if (this.isValid() &&\n      ((isMoment(time) && time.isValid()) ||\n        createLocal(time).isValid())) {\n      return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toDate() {\n    return new Date(this.valueOf());\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toISOString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toISOString$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n    return totalSign + 'P' +\n      (Y ? ymSign + Y + 'Y' : '') +\n      (M ? ymSign + M + 'M' : '') +\n      (D ? daysSign + D + 'D' : '') +\n      ((h || m || s) ? 'T' : '') +\n      (h ? hmsSign + h + 'H' : '') +\n      (m ? hmsSign + m + 'M' : '') +\n      (s ? hmsSign + s + 'S' : '');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toInt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n      value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toJSON": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toNow": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toObject": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::toString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::tt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function tt(e, t, n, r, i) { return new tt.prototype.init(e, t, n, r, i) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "u = function() { for (i = i || e.once, r = t = !0; a.length; s = -1) { n = a.shift(); while (++s < o.length) !1 === o[s].apply(n[0], n[1]) && e.stopOnFalse && (s = o.length, n = !1) }\n        e.memory || (n = !1), t = !1, i && (o = n ? [] : \"\") }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ue": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ue(e) { var t = d.createElement(\"fieldset\"); try { return !!e(t) } catch (e) { return !1 } finally { t.parentNode && t.parentNode.removeChild(t), t = null } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::unescapeFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function(matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::unix": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::untruncateYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n    return year;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateDisplay": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateDisplay() {\n  if (cyclop_mask_p[\"url\"]) {\n    var a = document.getElementById(canvasId);\n    var b = a.getContext(\"2d\");\n    placeCanvas(b, true);\n    drawTimepiece(b, true);\n    b.save();\n    b.translate(-global_watch_p[\"xcenter\"], -global_watch_p[\"ycenter\"]);\n    b.globalCompositeOperation = \"destination-in\";\n    b.drawImage(cyclop_mask_p[\"image\"], 0, 0, cyclop_mask_p[\"width\"], cyclop_mask_p[\"height\"]);\n    b.restore();\n    b.restore()\n  }\n  var a = document.getElementById(canvasId);\n  if (a.getContext) {\n    var b = a.getContext(\"2d\");\n    placeCanvas(b, true);\n    drawTimepiece(b, false);\n    if (cyclop_mask_p[\"url\"]) {\n      b.save();\n      b.translate(-global_watch_p[\"xcenter\"], -global_watch_p[\"ycenter\"]);\n      b.globalCompositeOperation = \"destination-out\";\n      b.drawImage(cyclop_mask_p[\"image\"], 0, 0, cyclop_mask_p[\"width\"], cyclop_mask_p[\"height\"]);\n      b.restore()\n    }\n    b.restore();\n  } else {\n    alert('no context')\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateLocale(name, config) {\n    if (config != null) {\n      var locale, tmpLocale, parentConfig = baseConfig;\n      // MERGE\n      tmpLocale = loadLocale(name);\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale;\n\n      // backwards compat for now: also set the locale\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n    return locales[name];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateOnTimeDisplayOnce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateOnTimeDisplayOnce() {\n  updateTimeCalculations();\n  updateDisplay()\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateOnTimeDisplayOvertime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateOnTimeDisplayOvertime() {\n  updateTime();\n  updateOnTimeDisplayOnce();\n  timeoutID = window.setTimeout(updateOnTimeDisplayOvertime, tickDelay)\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateShownTimeInHTMLComponent": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateShownTimeInHTMLComponent() {\n        tempString = getCurrentShownTime()\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateShownTimeInHTMLComponentOvertime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateShownTimeInHTMLComponentOvertime() {\n        updateShownTimeInHTMLComponent();\n        requestAnimFrame(updateShownTimeInHTMLComponentOvertime());\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateText": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateText(updated) {\n\n          if (cityTime_seconds >= 0 && cityTime_seconds < 1) {\n            update = document.getElementById(\"rolexClockCityTime\" + elem + \"\").innerHTML = f + \" \" + cityTime_hours + \":\" + cityTime_minutes + \"\" + g;\n            updateTime(thenewOffset, customOffset, elem);\n\n          } else {\n            if (checked === undefined) {\n              update = document.getElementById(\"rolexClockCityTime\" + elem + \"\").innerHTML = f + \" \" + cityTime_hours + \":\" + cityTime_minutes + \"\" + g;\n              var checked = 1;\n\n              updateTime(thenewOffset, customOffset, elem);\n\n            }\n\n          }\n        }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateTime() {\n  if (clockSettings.isCountdownClock) {\n    if (updated == true) {\n      current_seconds += 1000 / 10;\n\n      if (current_seconds >= 60) {\n        //console.log(current_seconds)\n        currentTime = new Date;\n        currentTime.setHours(currentTime.getHours() + hoursOffset);\n        currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n        currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n        current_hours = currentTime.getHours();\n        current_minutes = currentTime.getMinutes();\n        current_seconds = currentTime.getSeconds();\n        current_milliseconds = currentTime.getMilliseconds();\n      }\n      //console.log(currentTime)\n    } else {\n      currentTime = new Date;\n      // console.log(current_seconds)\n      currentTime.setHours(currentTime.getHours() + hoursOffset);\n      currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n      currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n      monthdate = currentTime.getDate(); // n\u00ac\u00a8\u00ac\u00ae\u00ac\u00a8\u00ac\u00c6\u00ac\u00a8\u00ac\u00ae\u00ac\u00a8\u221a\u00dc\u201a\u00c4\u00f6\u221a\u00d1\u221a\u2202\u201a\u00e0\u00f6\u221a\u00eb\u201a\u00e0\u00f6\u201a\u00e0\u00c7\u201a\u00c4\u00f6\u221a\u2020\u221a\u2202\u201a\u00c4\u00f6\u221a\u00d1\u201a\u00c4\u2020\u201a\u00c4\u00f6\u221a\u2020\u221a\u2202\u00ac\u00a8\u201a\u00d1\u00a2 du jour local: 0..31\n      weekday_num = currentTime.getDay(); // jour de la semaine local: 0=> sun, ..., 6=> sat\n      current_hours = currentTime.getHours();\n      current_minutes = currentTime.getMinutes();\n      current_seconds = currentTime.getSeconds();\n      current_milliseconds = currentTime.getMilliseconds();\n      // console.log(current_seconds,currentTime.getMilliseconds())\n      // console.log(monthdate,weekday_num,current_hours,current_minutes,current_seconds)\n      updated = true;\n    }\n  } else {\n    currentTime = new Date;\n    currentTime.setHours(currentTime.getHours() + hoursOffset);\n    currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n    currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n    monthdate = currentTime.getDate();\n    weekday_num = currentTime.getDay();\n    current_seconds = currentTime.getSeconds();\n    current_minutes = currentTime.getMinutes();\n    current_hours = currentTime.getHours();\n    current_milliseconds = currentTime.getMilliseconds();\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::updateTimeCalculations": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function updateTimeCalculations() {\n  var a = current_hours;\n  weekday_num++;\n  if (a > 12) {\n    a -= 12\n  }\n  display_calculation[\"seconds_base_60\"] = current_seconds * timeSlice;\n  display_calculation[\"seconds_base_60\"] += current_milliseconds * timeSlice / 1e3;\n  display_calculation[\"seconds_base_60\"] += rotCorrect;\n  display_calculation[\"minutes_base_60\"] = current_minutes * timeSlice;\n  display_calculation[\"minutes_base_60\"] += current_seconds * timeSlice / 60;\n  display_calculation[\"minutes_base_60\"] += rotCorrect;\n  display_calculation[\"minutes_base_30\"] = current_minutes * timeSlice * 2;\n  display_calculation[\"minutes_base_30\"] += current_seconds * timeSlice * 2 / 60;\n  display_calculation[\"minutes_base_30\"] += rotCorrect;\n  display_calculation[\"hours_base_12\"] = a * timeSlice * 5;\n  display_calculation[\"hours_base_12\"] += current_minutes * timeSlice / 12;\n  display_calculation[\"hours_base_12\"] += rotCorrect;\n  display_calculation[\"monthdate_base_31\"] = monthdate * (timeSlice / 6) * (360 / 31);\n  display_calculation[\"monthdate_base_31\"] += rotCorrect\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ut": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ut(e, t) { var n, r = 0,\n      i = { height: e }; for (t = t ? 1 : 0; r < 4; r += 2 - t) i[\"margin\" + (n = oe[r])] = i[\"padding\" + n] = e; return t && (i.opacity = i.width = e), i }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::utcStartOfDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::valueOf": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function valueOf() {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::valueOf$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    return (\n      this._milliseconds +\n      this._days * 864e5 +\n      (this._months % 12) * 2592e6 +\n      toInt(this._months / 12) * 31536e6\n    );\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ve": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ve(e) { for (var t = 0, n = e.length, r = \"\"; t < n; t++) r += e[t].value; return r }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::visChange": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function visChange() {\n  if (isHidden())\n    updated = false;\n  else\n    updateTime();\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::vt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function vt(e) { return (e.match(M) || []).join(\" \") }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::w": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "w = function(e, t) { return new w.fn.init(e, t) }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::warn": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n      (typeof console !== 'undefined') && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::we": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function we(e, t, n, r, i) { for (var o, a = [], s = 0, u = e.length, l = null != t; s < u; s++)(o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s))); return a }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::weekOfYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n      week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n      resWeek, resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::weekdaysMinRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n      return this._weekdaysMinStrictRegex && isStrict ?\n        this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::weekdaysRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n      return this._weekdaysStrictRegex && isStrict ?\n        this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::weekdaysShortRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n      return this._weekdaysShortStrictRegex && isStrict ?\n        this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::weeks": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function weeks() {\n    return absFloor(this.days() / 7);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::weeksInYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n      weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::x": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function x(e) { return null == e ? e + \"\" : \"object\" == typeof e || \"function\" == typeof e ? l[c.call(e)] || \"object\" : typeof e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::xe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function xe(e) { return e.length > 1 ? function(t, n, r) { var i = e.length; while (i--)\n          if (!e[i](t, n, r)) return !1;\n        return !0 } : e[0] }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::xt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function xt(e) { return Array.isArray(e) ? e : \"string\" == typeof e ? e.match(M) || [] : [] }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "y = function e(t) { return null != t && t === t.window }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::ye": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function ye() {}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::yourTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function yourTime() {\n        var a = new Date;\n        a.setHours(a.getHours());\n        a.setMinutes(a.getMinutes());\n        a.setSeconds(a.getSeconds());\n        var b = a.getSeconds();\n        var c = a.getMinutes();\n        var d = a.getHours();\n        var e = a.getDay();\n        if (e == 0) {\n          var f = \"Sun\"\n        } else if (e == 1) {\n          var f = \"Mon\"\n        } else if (e == 2) {\n          var f = \"Tue\"\n        } else if (e == 3) {\n          var f = \"Wed\"\n        } else if (e == 4) {\n          var f = \"Thu\"\n        } else if (e == 5) {\n          var f = \"Fri\"\n        } else if (e == 6) {\n          var f = \"Sat\"\n        }\n        if (language === \"en\" || language === \"kr\") clockSettings.amPm = true;\n        clockSettings.time24hours = false\n        if (clockSettings.amPm == true) {\n          var g = \" \";\n          if (d >= 12) {\n            g = \" PM\"\n          } else {\n            g = \" AM\"\n          }\n        } else {\n          g = \"\"\n        }\n        if (clockSettings.time24hours == true) {\n          g = \"\"\n        } else {\n          if (d >= 13) {\n            d -= 12\n          }\n        }\n        if (clockSettings.trailingZero == true) {\n          if (d < 10) {\n            d = \"0\" + d\n          }\n        }\n        if (c < 10)\n          c = \"0\" + c;\n\n        if (clockSettings.showText == true) {\n          if (clockSettings.showDay == true) {\n            f = f;\n          } else {\n            f = \"\";\n          }\n          update = document.getElementById(\"rolexClockYourTime\").innerHTML = f + \" \" + d + \":\" + c + \"\" + g;\n        }\n        if (clockSettings.upperCase == true) {\n          document.getElementById(\"rolexClockYourTime\").style.textTransform = \"uppercase\"\n        }\n\n        setTimeout(function() {\n          document.getElementById(canvasId).setAttribute('tabindex', \"0\");\n          document.getElementById(canvasId).setAttribute('role', \"img\");\n          // if (lang == )\n        }, 1000)\n        requestAnimFrame(yourTime);\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "z = function(e, t, n, r, i, o, a) { var s = 0,\n        u = e.length,\n        l = null == n; if (\"object\" === x(n)) { i = !0; for (s in n) z(e, t, s, n[s], !0, o, a) } else if (void 0 !== r && (i = !0, g(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function(e, t, n) { return l.call(w(e), n) })), t))\n        for (; s < u; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n))); return i ? e : l ? t.call(e) : u ? t(e[0], n) : o }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::zeroFill": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n      zerosToFill = targetLength - absNumber.length,\n      sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n      Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle-mobile.min.js::zt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle-mobile.min.js",
            "merged_function": "function zt(e, t) { var n, r, i = w.ajaxSettings.flatOptions || {}; for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]); return r && w.extend(!0, e, r), e }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::$": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function $(e, t, n, r) { let i; try { e && g(i = e.promise) ? i.call(e).done(t).fail(n) : e && g(i = e.then) ? i.call(e, t, n) : t.apply(void 0, [e].slice(r)); } catch (e) { n.apply(void 0, [e]); } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::$e": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "$e = function (t) { let n = t.ownerDocument.defaultView; return n && n.opener || (n = e), n.getComputedStyle(t); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::C": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function C(e) {\n    const t = !!e && 'length' in e && e.length;\n    const n = x(e); return !g(e) && !y(e) && (n === 'array' || t === 0 || typeof t === 'number' && t > 0 && t - 1 in e);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Ce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Ce(e) {\n      for (var t, n, i, o = e.length, a = r.relative[e[0].type], s = a || r.relative[' '], u = a ? 1 : 0, c = me((e) => e === t, s, !0), f = me((e) => O(t, e) > -1, s, !0), p = [function (e, n, r) { const i = !a && (r || n !== l) || ((t = n).nodeType ? c(e, n, r) : f(e, n, r)); return t = null, i; }]; u < o; u++) {\n        if (n = r.relative[e[u].type]) p = [me(xe(p), n)];\n        else {\n          if ((n = r.filter[e[u].type].apply(null, e[u].matches))[b]) {\n            for (i = ++u; i < o; i++) if (r.relative[e[i].type]) break;\n            return Te(u > 1 && xe(p), u > 1 && ve(e.slice(0, u - 1).concat({ value: e[u - 2].type === ' ' ? '*' : '' })).replace(B, '$1'), n, u < i && Ce(e.slice(u, i)), i < o && Ce(e = e.slice(i)), i < o && ve(e));\n          }\n          p.push(n);\n        }\n      }\n      return xe(p);\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::D": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "D = function (e, t) { return e === t && (f = !0), 0; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::De": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function De(e, t, n, r, i, o) {\n    let a; let\n      s; if (typeof t === 'object') { typeof n !== 'string' && (r = r || n, n = void 0); for (s in t) De(e, s, n, r, t[s], o); return e; } if (r == null && i == null ? (i = n, r = n = void 0) : i == null && (typeof n === 'string' ? (i = r, r = void 0) : (i = r, r = n, n = void 0)), !1 === i) i = ke;\n    else if (!i) return e; return o === 1 && (a = i, (i = function (e) { return w().off(e), a.apply(this, arguments); }).guid = a.guid || (a.guid = w.guid++)), e.each(function () { w.event.add(this, t, i, r, n); });\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Duration": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Duration(duration) {\n    const normalizedInput = normalizeObjectUnits(duration);\n    const years = normalizedInput.year || 0;\n    const quarters = normalizedInput.quarter || 0;\n    const months = normalizedInput.month || 0;\n    const weeks = normalizedInput.week || normalizedInput.isoWeek || 0;\n    const days = normalizedInput.day || 0;\n    const hours = normalizedInput.hour || 0;\n    const minutes = normalizedInput.minute || 0;\n    const seconds = normalizedInput.second || 0;\n    const milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds\n      + seconds * 1e3 // 1000\n      + minutes * 6e4 // 1000 * 60\n      + hours * 1000 * 60 * 60; // using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days\n      + weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months\n      + quarters * 3\n      + years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Ee": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Ee(e, t) {\n      const n = t.length > 0;\n      const i = e.length > 0;\n      const o = function (o, a, s, u, c) {\n        let f; let h; let y; let v = 0;\n        let m = '0';\n        const x = o && [];\n        let b = [];\n        const w = l;\n        const C = o || i && r.find.TAG('*', c);\n        const E = T += w == null ? 1 : Math.random() || 0.1;\n        const k = C.length; for (c && (l = a === d || a || c); m !== k && (f = C[m]) != null; m++) {\n          if (i && f) {\n            h = 0, a || f.ownerDocument === d || (p(f), s = !g); while (y = e[h++]) if (y(f, a || d, s)) { u.push(f); break; }\n            c && (T = E);\n          }\n          n && ((f = !y && f) && v--, o && x.push(f));\n        } if (v += m, n && m !== v) {\n          h = 0; while (y = t[h++]) y(x, b, a, s); if (o) {\n            if (v > 0) while (m--) x[m] || b[m] || (b[m] = j.call(u));\n            b = we(b);\n          }\n          L.apply(u, b), c && !o && b.length > 0 && v + t.length > 1 && oe.uniqueSort(u);\n        } return c && (T = E, l = w), x;\n      }; return n ? se(o) : o;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Fe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Fe(e, t, n) {\n    let r; let i; let o; let a; const\n      s = e.style; return (n = n || $e(e)) && ((a = n.getPropertyValue(t) || n[t]) !== '' || w.contains(e.ownerDocument, e) || (a = w.style(e, t)), !h.pixelBoxStyles() && We.test(a) && Be.test(t) && (r = s.width, i = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = n.width, s.width = r, s.minWidth = i, s.maxWidth = o)), void 0 !== a ? `${a}` : a;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Ft": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Ft(e) {\n    return function (t, n) {\n      typeof t !== 'string' && (n = t, t = '*'); let r; let i = 0;\n      const o = t.toLowerCase().match(M) || []; if (g(n)) while (r = o[i++]) r[0] === '+' ? (r = r.slice(1) || '*', (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n);\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::G": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function G(e) { return e.replace(X, 'ms-').replace(U, V); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::He": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function He(e) { return e.type = `${e.getAttribute('type') !== null}/${e.type}`, e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::I": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function I(e) { return e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Ie": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Ie(e, t, n) { for (var r, i = t ? w.filter(t, e) : e, o = 0; (r = i[o]) != null; o++) n || r.nodeType !== 1 || w.cleanData(ye(r)), r.parentNode && (n && w.contains(r.ownerDocument, r) && ve(ye(r, 'script')), r.parentNode.removeChild(r)); return e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Je": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Je(e) { let t = w.cssProps[e]; return t || (t = w.cssProps[e] = Qe(e) || e), t; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Ke": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Ke(e, t, n) { const r = ie.exec(t); return r ? Math.max(0, r[2] - (n || 0)) + (r[3] || 'px') : t; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Le": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Le(e, t) { return N(e, 'table') && N(t.nodeType !== 11 ? t : t.firstChild, 'tr') ? w(e).children('tbody')[0] || e : e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Locale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Me": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Me(e, t) { const n = t.nodeName.toLowerCase(); n === 'input' && pe.test(e.type) ? t.checked = e.checked : n !== 'input' && n !== 'textarea' || (t.defaultValue = e.defaultValue); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Moment": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::N": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function N(e, t) { return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::O": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "O = function (e, t) {\n      for (let n = 0, r = e.length; n < r; n++) if (e[n] === t) return n;\n      return -1;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Oe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Oe(e) { return (e.type || '').slice(0, 5) === 'true/' ? e.type = e.type.slice(5) : e.removeAttribute('type'), e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::P": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function P(e, t) { while ((e = e[t]) && e.nodeType !== 1); return e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Pe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Pe(e, t) {\n    let n; let r; let i; let o; let a; let s; let u; let\n      l; if (t.nodeType === 1) {\n      if (J.hasData(e) && (o = J.access(e), a = J.set(t, o), l = o.events)) {\n        delete a.handle, a.events = {}; for (i in l) for (n = 0, r = l[i].length; n < r; n++) w.event.add(t, i, l[i][n]);\n      }\n      K.hasData(e) && (s = K.access(e), u = w.extend({}, s), K.set(t, u));\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Q": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Q() { this.expando = w.expando + Q.uid++; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Qe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Qe(e) {\n    if (e in Ye) return e; const t = e[0].toUpperCase() + e.slice(1);\n    let n = Ge.length; while (n--) if ((e = Ge[n] + t) in Ye) return e;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::R": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function R(e) { const t = {}; return w.each(e.match(M) || [], (e, n) => { t[n] = !0; }), t; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Re": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Re(e, t, n, r) {\n    t = a.apply([], t); let i; let o; let s; let u; let l; let c; let f = 0;\n    const p = e.length;\n    const d = p - 1;\n    const y = t[0];\n    const v = g(y); if (v || p > 1 && typeof y === 'string' && !h.checkClone && je.test(y)) {\n      return e.each(function (i) {\n        const o = e.eq(i);\n        v && (t[0] = y.call(this, i, o.html())), Re(o, t, n, r);\n      });\n    } if (p && (i = xe(t, e[0].ownerDocument, !1, e, r), o = i.firstChild, i.childNodes.length === 1 && (i = o), o || r)) {\n      for (u = (s = w.map(ye(i, 'script'), He)).length; f < p; f++) l = i, f !== d && (l = w.clone(l, !0, !0), u && w.merge(s, ye(l, 'script'))), n.call(e[f], l, f); if (u) for (c = s[s.length - 1].ownerDocument, w.map(s, Oe), f = 0; f < u; f++) l = s[f], he.test(l.type || '') && !J.access(l, 'globalEval') && w.contains(c, l) && (l.src && (l.type || '').toLowerCase() !== 'module' ? w._evalUrl && w._evalUrl(l.src) : m(l.textContent.replace(qe, ''), c, l));\n    } return e;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::S": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "S = function (e, t) { for (var n = []; e; e = e.nextSibling) e.nodeType === 1 && e !== t && n.push(e); return n; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Se": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Se() { try { return r.activeElement; } catch (e) {} }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Te": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Te(e, t, n, r, i, o) {\n      return r && !r[b] && (r = Te(r)), i && !i[b] && (i = Te(i, o)), se((o, a, s, u) => {\n        let l; let c; let f; const p = [];\n        const d = [];\n        const h = a.length;\n        const g = o || be(t || '*', s.nodeType ? [s] : s, []);\n        const y = !e || !o && t ? g : we(g, p, e, s, u);\n        let v = n ? i || (o ? e : h || r) ? [] : a : y; if (n && n(y, v, s, u), r) { l = we(v, d), r(l, [], s, u), c = l.length; while (c--)(f = l[c]) && (v[d[c]] = !(y[d[c]] = f)); } if (o) {\n          if (i || e) {\n            if (i) {\n              l = [], c = v.length; while (c--)(f = v[c]) && l.push(y[c] = f);\n              i(null, v = [], l, u);\n            }\n            c = v.length; while (c--)(f = v[c]) && (l = i ? O(o, f) : p[c]) > -1 && (o[l] = !(a[l] = f));\n          }\n        } else v = we(v === a ? v.splice(h, v.length) : v), i ? i(null, a, v, u) : L.apply(a, v);\n      });\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Tt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "Tt = function (e) { e.stopPropagation(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Ut": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Ut(e, t, n, r) {\n    let i; let o; let a; let s; let u; const l = {};\n    const c = e.dataTypes.slice(); if (c[1]) for (a in e.converters) l[a.toLowerCase()] = e.converters[a];\n    o = c.shift(); while (o) {\n      if (e.responseFields[o] && (n[e.responseFields[o]] = t), !u && r && e.dataFilter && (t = e.dataFilter(t, e.dataType)), u = o, o = c.shift()) {\n        if (o === '*') o = u;\n        else if (u !== '*' && u !== o) {\n          if (!(a = l[`${u} ${o}`] || l[`* ${o}`])) for (i in l) if ((s = i.split(' '))[1] === o && (a = l[`${u} ${s[0]}`] || l[`* ${s[0]}`])) { !0 === a ? a = l[i] : !0 !== l[i] && (o = s[0], c.unshift(s[1])); break; }\n          if (!0 !== a) {\n            if (a && e.throws) t = a(t);\n            else try { t = a(t); } catch (e) { return { state: 'parsererror', error: a ? e : `No conversion from ${u} to ${o}` }; }\n          }\n        }\n      }\n    } return { state: 'success', data: t };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::V": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function V(e, t) { return t.toUpperCase(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::W": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function W(e) { throw e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Xt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Xt(e, t, n) {\n    let r; let i; let o; let a; const s = e.contents;\n    const u = e.dataTypes; while (u[0] === '*') u.shift(), void 0 === r && (r = e.mimeType || t.getResponseHeader('Content-Type')); if (r) for (i in s) if (s[i] && s[i].test(r)) { u.unshift(i); break; }\n    if (u[0] in n) o = u[0];\n    else {\n      for (i in n) {\n        if (!u[0] || e.converters[`${i} ${u[0]}`]) { o = i; break; }\n        a || (a = i);\n      }\n      o = o || a;\n    } if (o) return o !== u[0] && u.unshift(o), n[o];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Y": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "Y = function (e) { return e.nodeType === 1 || e.nodeType === 9 || !+e.nodeType; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::Ze": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function Ze(e, t, n, r, i, o) {\n    let a = t === 'width' ? 1 : 0;\n    let s = 0;\n    let u = 0; if (n === (r ? 'border' : 'content')) return 0; for (; a < 4; a += 2) n === 'margin' && (u += w.css(e, n + oe[a], !0, i)), r ? (n === 'content' && (u -= w.css(e, `padding${oe[a]}`, !0, i)), n !== 'margin' && (u -= w.css(e, `border${oe[a]}Width`, !0, i))) : (u += w.css(e, `padding${oe[a]}`, !0, i), n !== 'padding' ? u += w.css(e, `border${oe[a]}Width`, !0, i) : s += w.css(e, `border${oe[a]}Width`, !0, i)); return !r && o >= 0 && (u += Math.max(0, Math.ceil(e[`offset${t[0].toUpperCase()}${t.slice(1)}`] - o - u - s - 0.5))), u;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::_": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function _() { r.removeEventListener('DOMContentLoaded', _), e.removeEventListener('load', _), w.ready(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::_e": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function _e(e, t) {\n    return {\n      get() {\n        if (!e()) return (this.get = t).apply(this, arguments);\n        delete this.get;\n      },\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::_t": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function _t(e, t, n, r) {\n    const i = {};\n    const o = e === Wt;\n\n    function a(s) { let u; return i[s] = !0, w.each(e[s] || [], (e, s) => { const l = s(t, n, r); return typeof l !== 'string' || o || i[l] ? o ? !(u = l) : void 0 : (t.dataTypes.unshift(l), a(l), !1); }), u; } return a(t.dataTypes[0]) || !i['*'] && a('*');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::a": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function a(t, n, r, i) {\n            return function () {\n              let s = this;\n              let u = arguments;\n              const l = function () {\n                let e; let\n                  l; if (!(t < o)) {\n                  if ((e = r.apply(s, u)) === n.promise()) throw new TypeError('Thenable self-resolution');\n                  l = e && (typeof e === 'object' || typeof e === 'function') && e.then, g(l) ? i ? l.call(e, a(o, n, I, i), a(o, n, W, i)) : (o++, l.call(e, a(o, n, I, i), a(o, n, W, i), a(o, n, I, n.notifyWith))) : (r !== I && (s = void 0, u = [e]), (i || n.resolveWith)(s, u));\n                }\n              };\n              var c = i ? l : function () { try { l(); } catch (e) { w.Deferred.exceptionHook && w.Deferred.exceptionHook(e, c.stackTrace), t + 1 >= o && (r !== W && (s = void 0, u = [e]), n.rejectWith(s, u)); } };\n              t ? c() : (w.Deferred.getStackHook && (c.stackTrace = w.Deferred.getStackHook()), e.setTimeout(c));\n            };\n          }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::abs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function abs() {\n    const data = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::absCeil": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    }\n    return Math.ceil(number);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::absFloor": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    }\n    return Math.floor(number);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::absRound": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    }\n    return Math.round(number);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::add$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addFormatToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addFormatToken(token, padded, ordinal, callback) {\n    let func = callback;\n    if (typeof callback === 'string') {\n      func = function () {\n        return this[callback]();\n      };\n    }\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addParseToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addParseToken(token, callback) {\n    let i; let\n      func = callback;\n    if (typeof token === 'string') {\n      token = [token];\n    }\n    if (isNumber(callback)) {\n      func = function (input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addRegexToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addSubtract": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addSubtract(mom, duration, isAdding, updateOffset) {\n    const milliseconds = duration._milliseconds;\n    const days = absRound(duration._days);\n    const months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addSubtract$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addSubtract$1(duration, input, value, direction) {\n    const other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n\n    return duration._bubble();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addTimeToArrayFromToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addUnitAlias": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addUnitAlias(unit, shorthand) {\n    const lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = unit;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addUnitPriority": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addWeekParseToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addWeekParseToken(token, callback) {\n    addParseToken(token, (input, array, config, token) => {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::addWeekYearFormatToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ae": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ae() {\n      const e = [];\n\n      function t(n, i) { return e.push(`${n} `) > r.cacheLength && delete t[e.shift()], t[`${n} `] = i; } return t;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::as": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    let days;\n    let months;\n    const milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      switch (units) {\n        case 'month':\n          return months;\n        case 'quarter':\n          return months / 3;\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n        case 'day':\n          return days + milliseconds / 864e5;\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n          // Math.floor prevents floating point math errors here\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n        default:\n          throw new Error(`Unknown unit ${units}`);\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::at": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function at() { rt && (!1 === r.hidden && e.requestAnimationFrame ? e.requestAnimationFrame(at) : e.setTimeout(at, w.fx.interval), w.fx.tick()); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::be": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function be(e, t, n) { for (let r = 0, i = t.length; r < i; r++) oe(e, t[r], n); return n; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::bubble": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function bubble() {\n    let milliseconds = this._milliseconds;\n    let days = this._days;\n    let months = this._months;\n    const data = this._data;\n    let seconds; let minutes; let hours; let years; let\n      monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0)\n        || (milliseconds <= 0 && days <= 0 && months <= 0))) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days = days;\n    data.months = months;\n    data.years = years;\n\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::buildClock": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function buildClock(clockSettings) {\n  document.querySelector('html').classList.add(getAllUrlclockSettings().lang);\n  if (typeof clockSettings.blockClass === 'undefined') { clockSettings.blockClass = 'block'; }\n  if (typeof clockSettings.activeClass === 'undefined') { clockSettings.activeClass = 'active'; }\n\n  document.getElementById('rolexClockWim-container').style.width = `${clockSettings.contentWidth}px`;\n  document.getElementById('rolexClockWim-container').style.height = `${clockSettings.contentHeight}px`;\n  // document.getElementById(\"col-1\").style.height = clockSettings.contentHeight + \"px\";\n  // var col2 = document.getElementById(\"col-2\");\n  // // col2.style.height = clockSettings.contentHeight + \"px\";\n  // for (var i in col2.childNodes) {\n  //     var child = col2.childNodes[i];\n  //     if (child.nodeType == 1)\n  //         child.style.height = clockSettings.contentHeight + \"px\";\n  // }\n  // document.getElementById(\"col-3\").style.height = clockSettings.contentHeight + \"px\";\n  // document.getElementById(\"tracker\").style.height = clockSettings.contentHeight + \"px\";\n  const trcking = document.querySelectorAll('.tracker');\n  for (var i = 0; i < trcking.length; i++) {\n    trcking[i].href = clockSettings.trackingurl;\n  }\n\n  // document.getElementById(\"rolexClockWim-backToRolex\").style.width = clockSettings.clockWidth + \"px\";\n  // document.getElementById(\"rolexClockWim-backToRolex\").style.height = clockSettings.clockHeight + \"px\";\n  // document.getElementById(\"tracker\").href = clockSettings.trackingurl;\n\n  global_watch_p.xscale = clockSettings.retinaXscale;\n  global_watch_p.yscale = clockSettings.retinaYscale;\n\n  // else {\n  //  document.getElementById(\"rolexClockWim-container\").style.background = \"transparent url('\" + imgFolder + \"/\" + clockSettings.bgFileName + \"') 00% 50% no-repeat\"\n  // }\n  if (!clockSettings.forceFallback && !clockSettings.forceFlash) {\n    // document.getElementById(\"trackUrl\").href = clockSettings.trackingurl;\n    if (clockSettings.showText == false) {\n      document.getElementById('rolexClockWim-container').removeChild(document.getElementById('timezone'));\n      document.getElementById('rolexClockWim-container').removeChild(document.getElementById('yourtime'));\n    } else {\n      const yourtime = document.getElementById('yourTime');\n      const timeTimezon = document.getElementById('timezone');\n\n      var language = getAllUrlclockSettings().lang;\n      var language = language.toLowerCase();\n      const now_date = new Date();\n\n      const year = now_date.getFullYear();\n      let month = now_date.getMonth() + 1;\n      let day = now_date.getDate();\n      if (month < 10) {\n        month = `0${month}`;\n      }\n      if (day < 10) {\n        day = `0${day}`;\n      }\n      const names = [];\n      const timezones = [];\n      const timezone_dst = [];\n      const myTimeText = [];\n      const teeTimeText = [];\n      const eventText = [];\n      const teeTimeAccessibiltyTextEvent = [];\n      const teeTimeAccessibiltyTextMyTime = [];\n      const teeTimeGotoRolex = [];\n      const todayfull = Number(`${year}${month}${day}`);\n      String.prototype.trim = function () {\n        return this.replace(/\\s/g, '');\n      };\n      let index = null;\n      for (var i = 0; i < cityArray.length; i++) {\n        if (todayfull >= cityArray[i].startDate && todayfull <= cityArray[i].endDate) {\n          index = i;\n\n          function changeBg(bg) {\n            global_watch_p.xscale = clockSettings.globalXscale;\n            global_watch_p.yscale = clockSettings.globalYscale;\n            global_watch_p.xcenter = clockSettings.globalXcenter;\n            global_watch_p.ycenter = clockSettings.globalYcenter;\n            // yourtime.style.top = clockSettings.yourtTop;\n            // yourtime.style.left = clockSettings.yourtLeft;\n            // timeTimezon.style.top = clockSettings.timeZTop;\n            // timeTimezon.style.left = clockSettings.timeZLeft;\n            if (bg == 'full') {\n              document.getElementById('rolexClockWim-container').style.background = `#fff url(''${imgFolder}/bg.jpg') no-repeat`;\n              // timeTimezon.style.display = \"block\";\n              // yourtime.style.display = \"block\";\n              // trackUrl.style.left = clockSettings.trackUrlL + 'px';\n              // trackUrl.style.height = clockSettings.trackUrlH + 'px';\n              // trackUrl.style.width = clockSettings.trackUrlW + 'px';\n            } else {\n              document.getElementById('rolexClockWim-container').style.background = `transparent url('${imgFolder}/bg.jpg') no-repeat`;\n              // yourtime.style.display = \"none\";\n              // timeTimezon.style.display = \"none\";\n              // trackUrl.style.left = clockSettings.trackUrlL + 'px';\n              // trackUrl.style.height = clockSettings.trackUrlH + 'px';\n              // trackUrl.style.width = clockSettings.trackUrlW + 'px';\n            }\n          }\n          if (language == '') {\n            names.push(cityArray[index].city.en);\n          } else {\n            names.push(cityArray[index].city.en);\n            myTimeText.push(cityArray[index].myTimeText[language]);\n            teeTimeText.push(cityArray[index].teeTimeText[language]);\n            eventText.push(cityArray[index].eventText[language]);\n            teeTimeAccessibiltyTextEvent.push(cityArray[index].teeTimeAccessibiltyTextEvent[language]);\n            teeTimeAccessibiltyTextMyTime.push(cityArray[index].teeTimeAccessibiltyTextMyTime[language]);\n            teeTimeGotoRolex.push(cityArray[index].teeTimeGotoRolex[language]);\n          }\n          timezones.push(cityArray[index].timezone);\n          timezone_dst.push(cityArray[index].dst);\n          clockSettings.theLocalText = myTimeText[0];\n          clockSettings.eventText = eventText[0];\n          clockSettings.teeTimeText = teeTimeText[0];\n          clockSettings.teeTimeAccessibiltyTextEvent = teeTimeAccessibiltyTextEvent[0];\n          clockSettings.teeTimeAccessibiltyTextMyTime = teeTimeAccessibiltyTextMyTime[0];\n          clockSettings.teeTimeGotoRolex = teeTimeGotoRolex[0];\n\n          if (names.length == 1) {\n            changeBg('full');\n            clockSettings.theCityText = (names[0]).replace(/\\+\\b/gi, ' ');\n            clockSettings.eventText = (eventText[0]).replace(/\\+\\b/gi, ' ');\n            clockSettings.theLocalText = (myTimeText[0]).replace(/\\+\\b/gi, ' ');\n            clockSettings.teeTimeText = (teeTimeText[0]).replace(/\\+\\b/gi, ' ');\n            clockSettings.customOffset = timezones[0],\n            clockSettings.theCity = (names[0].toLowerCase()).trim();\n\n            clockSettings.customDST = timezone_dst[0];\n          } else if (names.length == 0 || names.length == '') {\n            changeBg();\n          }\n        }\n      }\n\n      const Arrow = document.getElementById('arrow');\n      const Arrow0 = document.getElementById('arrow0');\n\n      let thenewOffset;\n      let customOffset;\n      let elem;\n\n      //                 yourtime.onclick = function() {\n      //                     // console.log(this)\n      //                     document.querySelector('.block-city1').classList.remove(clockSettings.activeClass);\n      //                     this.classList.add(clockSettings.activeClass);\n      //                     Arrow.style.display = \"block\";\n      //                     Arrow0.style.display = \"none\";\n\n      //                     showCurrentTime();\n\n      //                 };\n      //                 timeTimezon.onclick = function() {\n      // // console.log(this)\n      //                 document.querySelector('.block-local').classList.remove(clockSettings.activeClass);\n      //                 this.classList.add(clockSettings.activeClass);\n      //                 Arrow.style.display = \"none\";\n      //                 Arrow0.style.display = \"block\";\n\n      //                 showTimeIn(clockSettings.theCity, clockSettings.customOffset, \"\", clockSettings.customDST);\n\n      //             };\n\n      $('.switch').on('click', function (event) {\n        event.preventDefault();\n        const { origin } = document.location;\n\n        if ($('#teetime').attr('aria-checked') === 'true') {\n          // console.log($('#teetime').attr('aria-label'))\n          $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextEvent + $('#rolexClockCityTime').text());\n          $('#teetime').attr('aria-checked', 'false').removeAttr('checked');\n          $('.label').html(clockSettings.eventText);\n          $(this).removeClass('active');\n          // console.log($('#teetime').att('checked'))\n          $('.mytime').css({ color: '#333' });\n          $('.event').css({ color: 'rgb(0,96,57)' });\n          var data = {\n            name: 'rolex-teetime-toggle', value: 'On', offset: getAllUrlclockSettings().utc, lang: getAllUrlclockSettings().lang,\n          };\n          // console.log(data)\n          $('#regular_timepiece_canvas').attr('aria-label', $('#rolexClockCityTime').text());\n          showTimeIn(clockSettings.theCity, clockSettings.customOffset, '');\n          window.top.postMessage(JSON.stringify(data), origin);\n        } else\n\n        if ($('#teetime').attr('aria-checked') === 'false') {\n          // console.log($('#teetime').attr('aria-label'))\n          $(this).addClass('active');\n          $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextMyTime + $('#rolexClockYourTime').text());\n          $('#teetime').attr('aria-checked', 'true').attr('checked', 'checked');\n          $('.label').html(clockSettings.theLocalText);\n          $('.mytime').css({ color: 'rgb(0,96,57)' });\n          $('.event').css({ color: '#333' });\n          showCurrentTime();\n          $('#regular_timepiece_canvas').attr('aria-label', $('#rolexClockYourTime').text());\n          var data = {\n            name: 'rolex-teetime-toggle', value: 'Off', offset: getAllUrlclockSettings().utc, lang: getAllUrlclockSettings().lang,\n          };\n          window.top.postMessage(JSON.stringify(data), origin);\n        }\n      });\n      $('.switch').on('keypress', function (event) {\n        event.preventDefault();\n        const { origin } = document.location;\n\n        if (event.which === 13) {\n          if ($('#teetime').attr('aria-checked') === 'true') {\n            // console.log($('#teetime').attr('aria-label'))\n            $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextEvent + $('#rolexClockCityTime').text());\n            $('#teetime').attr('aria-checked', 'false').removeAttr('checked');\n            $('.label').html(clockSettings.eventText);\n            $(this).removeClass('active');\n            // console.log($('#teetime').att('checked'))\n            $('.mytime').css({ color: '#333' });\n            $('.event').css({ color: 'rgb(0,96,57)' });\n            var data = {\n              name: 'rolex-teetime-toggle', value: 'On', offset: getAllUrlclockSettings().utc, lang: getAllUrlclockSettings().lang,\n            };\n            // console.log(data)\n            $('#regular_timepiece_canvas').attr('aria-label', $('#rolexClockCityTime').text());\n            showTimeIn(clockSettings.theCity, clockSettings.customOffset, '');\n            window.top.postMessage(JSON.stringify(data), origin);\n          } else\n\n          if ($('#teetime').attr('aria-checked') === 'false') {\n            // console.log($('#teetime').attr('aria-label'))\n            $(this).addClass('active');\n            $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextMyTime + $('#rolexClockYourTime').text());\n            $('#teetime').attr('aria-checked', 'true').attr('checked', 'checked');\n            $('.label').html(clockSettings.theLocalText);\n            $('.mytime').css({ color: 'rgb(0,96,57)' });\n            $('.event').css({ color: '#333' });\n            showCurrentTime();\n            $('#regular_timepiece_canvas').attr('aria-label', $('#rolexClockYourTime').text());\n            var data = {\n              name: 'rolex-teetime-toggle', value: 'Off', offset: getAllUrlclockSettings().utc, lang: getAllUrlclockSettings().lang,\n            };\n            window.top.postMessage(JSON.stringify(data), origin);\n          }\n        }\n      });\n\n      if (clockSettings.showTime == true) {\n        document.getElementById('timezone').removeChild(document.getElementById('textContainer1'));\n        document.getElementById('yourtime').removeChild(document.getElementById('textContainer'));\n      } else {\n        document.getElementById('cityText').innerHTML = clockSettings.theCityText;\n        document.getElementById('event').innerHTML = clockSettings.eventText;\n        document.getElementById('teeTimeText').innerHTML = clockSettings.teeTimeText;\n        document.getElementById('title').innerHTML = clockSettings.teeTimeText;\n        document.getElementById('mytime').innerHTML = clockSettings.theLocalText;\n        document.getElementById('textContainer1').title = clockSettings.theCityText.replace('\"', '&quot;');\n        document.getElementById('textContainer').title = clockSettings.theLocalText.replace('\"', '&quot;');\n        $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextEvent);\n        $('.label').html(clockSettings.eventText);\n        if (clockSettings.upperCase == true) {\n          document.getElementById('cityText').style.textTransform = 'uppercase';\n          document.getElementById('localtext').style.textTransform = 'uppercase';\n        }\n      }\n\n      function updateShownTimeInHTMLComponentOvertime() {\n        updateShownTimeInHTMLComponent();\n        requestAnimFrame(updateShownTimeInHTMLComponentOvertime());\n      }\n\n      function showTimeIn(a, offset, elem, DST_TiMEZONE) {\n        const b = new Date();\n        let tempOffset = b.getTimezoneOffset();\n        // console.log(b.getTimezoneOffset())\n        today = `${b.getFullYear()}-${b.getMonth()}-${b.getDate()}-${b.getHours()}`;\n        if (clockSettings.theCityText !== '' && elem == '') {\n          if (a) {\n            if ((names[0]).replace(/\\+\\b/gi, ' ') == clockSettings.theCityText) {\n              tempOffset += 60 * timezones[0];\n              // gettimezoneDST = getDST(new Date(), clockSettings.customDST);\n              // if (gettimezoneDST == 100) {\n              //     tempOffset += 60;\n              // }\n              cityTime(tempOffset, timezones[0], '');\n              // console.log((getAllUrlclockSettings().dst*60) + b.getTimezoneOffset())\n              tOffset = getAllUrlclockSettings().utc * 60;\n              t2Offset = tOffset + b.getTimezoneOffset();\n              // console.log(tOffset)\n              setMinutesOffset(t2Offset);\n            }\n          }\n        }\n      }\n      /* timezone text clock */\n\n      function cityTime(thenewOffset, customOffset, elem) {\n        // console.log(thenewOffset)\n        const localTime = new Date();\n        const localOffset = localTime.getTimezoneOffset() / 60;\n        const cityTime = new Date(moment().utc().add(thenewOffset, 'hours'));\n        // console.log(localOffset)\n        // console.log(moment.utc().add(5.5, 'hours').format('MMM DD h:mm A'))\n        // console.log(moment().utc().add(5.5, 'hours').toDate())\n        cityTime.setHours(cityTime.getHours() + localOffset);\n        cityTime.setMinutes(cityTime.getMinutes());\n        cityTime.setSeconds(cityTime.getSeconds());\n        const cityTime_millisecondes = cityTime.getMilliseconds();\n        const cityTime_seconds = cityTime.getSeconds();\n        let cityTime_minutes = cityTime.getMinutes();\n        let cityTime_hours = cityTime.getHours();\n        const cityTime_day = cityTime.getDay();\n        if (cityTime_day == 0) {\n          var f = 'Sun';\n        } else if (cityTime_day == 1) {\n          var f = 'Mon';\n        } else if (cityTime_day == 2) {\n          var f = 'Tue';\n        } else if (cityTime_day == 3) {\n          var f = 'Wed';\n        } else if (cityTime_day == 4) {\n          var f = 'Thu';\n        } else if (cityTime_day == 5) {\n          var f = 'Fri';\n        } else if (cityTime_day == 6) {\n          var f = 'Sat';\n        }\n        if (language === 'en' || language === 'kr') clockSettings.amPm = true;\n        clockSettings.time24hours = false;\n        // console.log(cityTime_hours)\n        if (clockSettings.amPm == true) {\n          var g = ' ';\n          if (cityTime_hours >= 12) {\n            g = ' PM';\n          } else {\n            g = ' AM';\n          }\n        } else {\n          g = '';\n        }\n        if (clockSettings.time24hours == true) {\n          g = '';\n        } else if (cityTime_hours >= 13) {\n          cityTime_hours -= 12;\n        } else if (cityTime_hours == 0) {\n          cityTime_hours = 12;\n        }\n        if (clockSettings.trailingZero == true) {\n          if (cityTime_hours < 10) {\n            cityTime_hours = `0${cityTime_hours}`;\n          }\n        }\n\n        if (cityTime_minutes < 10) { cityTime_minutes = `0${cityTime_minutes}`; }\n\n        if (clockSettings.showText == true) {\n          if (clockSettings.showDay == true) {\n            f = f;\n          } else {\n            f = '';\n          }\n        }\n\n        function updateText(updated) {\n          if (cityTime_seconds >= 0 && cityTime_seconds < 1) {\n            update = document.getElementById(`rolexClockCityTime${elem}`).innerHTML = `${f} ${cityTime_hours}:${cityTime_minutes}${g}`;\n            updateTime(thenewOffset, customOffset, elem);\n          } else if (checked === undefined) {\n            update = document.getElementById(`rolexClockCityTime${elem}`).innerHTML = `${f} ${cityTime_hours}:${cityTime_minutes}${g}`;\n            var checked = 1;\n\n            updateTime(thenewOffset, customOffset, elem);\n          }\n        }\n        requestAnimFrame(updateText);\n      }\n\n      function updateTime(thenewOffset, customOffset, elem) {\n        cityTime(getAllUrlclockSettings().utc, customOffset, elem);\n      }\n      /* yourtime text clock */\n      function yourTime() {\n        const a = new Date();\n        a.setHours(a.getHours());\n        a.setMinutes(a.getMinutes());\n        a.setSeconds(a.getSeconds());\n        const b = a.getSeconds();\n        let c = a.getMinutes();\n        let d = a.getHours();\n        const e = a.getDay();\n        if (e == 0) {\n          var f = 'Sun';\n        } else if (e == 1) {\n          var f = 'Mon';\n        } else if (e == 2) {\n          var f = 'Tue';\n        } else if (e == 3) {\n          var f = 'Wed';\n        } else if (e == 4) {\n          var f = 'Thu';\n        } else if (e == 5) {\n          var f = 'Fri';\n        } else if (e == 6) {\n          var f = 'Sat';\n        }\n        if (language === 'en' || language === 'kr') clockSettings.amPm = true;\n        clockSettings.time24hours = false;\n        if (clockSettings.amPm == true) {\n          var g = ' ';\n          if (d >= 12) {\n            g = ' PM';\n          } else {\n            g = ' AM';\n          }\n        } else {\n          g = '';\n        }\n        if (clockSettings.time24hours == true) {\n          g = '';\n        } else if (d >= 13) {\n          d -= 12;\n        }\n        if (clockSettings.trailingZero == true) {\n          if (d < 10) {\n            d = `0${d}`;\n          }\n        }\n        if (c < 10) { c = `0${c}`; }\n\n        if (clockSettings.showText == true) {\n          if (clockSettings.showDay == true) {\n            f = f;\n          } else {\n            f = '';\n          }\n          update = document.getElementById('rolexClockYourTime').innerHTML = `${f} ${d}:${c}${g}`;\n        }\n        if (clockSettings.upperCase == true) {\n          document.getElementById('rolexClockYourTime').style.textTransform = 'uppercase';\n        }\n\n        setTimeout(() => {\n          document.getElementById(canvasId).setAttribute('tabindex', '0');\n          document.getElementById(canvasId).setAttribute('role', 'img');\n          // if (lang == )\n        }, 1000);\n        requestAnimFrame(yourTime);\n      }\n\n      function showCurrentTime() {\n        setMinutesOffset(0);\n      }\n\n      function updateShownTimeInHTMLComponent() {\n        tempString = getCurrentShownTime();\n      }\n      // cityTime();\n\n      if (clockSettings.theCity != '') {\n        showTimeIn(clockSettings.theCity, clockSettings.customOffset, '');\n      }\n\n      yourTime();\n\n      const data = {\n        name: 'rolex-teetime-toggle', value: 'On', offset: getAllUrlclockSettings().utc, lang: getAllUrlclockSettings().lang,\n      };\n\n      showTimeIn(clockSettings.theCity, clockSettings.customOffset, '');\n      setTimeout(() => {\n        $('#regular_timepiece_canvas').attr('aria-label', $('#rolexClockCityTime').text());\n        $('.sr-only').attr('aria-label', clockSettings.teeTimeGotoRolex);\n        $('.rolexClockWim-backToRolex').attr('aria-label', clockSettings.teeTimeGotoRolex);\n        $('#teetime').attr('aria-label', clockSettings.teeTimeAccessibiltyTextEvent + $('#rolexClockCityTime').text());\n      }, 1000);\n    }\n\n    startWatchEngine();\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::calculateOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    }\n    const hm = parseInt(numOffset, 10);\n    const m = hm % 100;\n    const h = (hm - m) / 100;\n    return h * 60 + m;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::calendar": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function calendar(key, mom, now) {\n    const output = this._calendar[key] || this._calendar.sameElse;\n    return isFunction(output) ? output.call(mom, now) : output;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::calendar$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    const now = time || createLocal();\n    const sod = cloneWithOffset(now, this).startOf('day');\n    const format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    const output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ce(e, t) {\n      let n = t && e;\n      const r = n && e.nodeType === 1 && t.nodeType === 1 && e.sourceIndex - t.sourceIndex; if (r) return r; if (n) while (n = n.nextSibling) if (n === t) return -1;\n      return e ? 1 : -1;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::changeBg": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function changeBg(bg) {\n            global_watch_p.xscale = clockSettings.globalXscale;\n            global_watch_p.yscale = clockSettings.globalYscale;\n            global_watch_p.xcenter = clockSettings.globalXcenter;\n            global_watch_p.ycenter = clockSettings.globalYcenter;\n            // yourtime.style.top = clockSettings.yourtTop;\n            // yourtime.style.left = clockSettings.yourtLeft;\n            // timeTimezon.style.top = clockSettings.timeZTop;\n            // timeTimezon.style.left = clockSettings.timeZLeft;\n            if (bg == 'full') {\n              document.getElementById('rolexClockWim-container').style.background = `#fff url(''${imgFolder}/bg.jpg') no-repeat`;\n              // timeTimezon.style.display = \"block\";\n              // yourtime.style.display = \"block\";\n              // trackUrl.style.left = clockSettings.trackUrlL + 'px';\n              // trackUrl.style.height = clockSettings.trackUrlH + 'px';\n              // trackUrl.style.width = clockSettings.trackUrlW + 'px';\n            } else {\n              document.getElementById('rolexClockWim-container').style.background = `transparent url('${imgFolder}/bg.jpg') no-repeat`;\n              // yourtime.style.display = \"none\";\n              // timeTimezon.style.display = \"none\";\n              // trackUrl.style.left = clockSettings.trackUrlL + 'px';\n              // trackUrl.style.height = clockSettings.trackUrlH + 'px';\n              // trackUrl.style.width = clockSettings.trackUrlW + 'px';\n            }\n          }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::checkOverflow": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function checkOverflow(m) {\n    let overflow;\n    const a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH\n        : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE\n          : a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR\n            : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE\n              : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND\n                : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND\n                  : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::checkWeekday": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n      const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n    return true;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::chooseLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function chooseLocale(names) {\n    let i = 0;\n    let j; let next; let locale; let\n      split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n        if (locale) {\n          return locale;\n        }\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          // the next array item is better than a shallower substring of this one\n          break;\n        }\n        j--;\n      }\n      i++;\n    }\n    return globalLocale;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::cityTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function cityTime(thenewOffset, customOffset, elem) {\n        // console.log(thenewOffset)\n        const localTime = new Date();\n        const localOffset = localTime.getTimezoneOffset() / 60;\n        const cityTime = new Date(moment().utc().add(thenewOffset, 'hours'));\n        // console.log(localOffset)\n        // console.log(moment.utc().add(5.5, 'hours').format('MMM DD h:mm A'))\n        // console.log(moment().utc().add(5.5, 'hours').toDate())\n        cityTime.setHours(cityTime.getHours() + localOffset);\n        cityTime.setMinutes(cityTime.getMinutes());\n        cityTime.setSeconds(cityTime.getSeconds());\n        const cityTime_millisecondes = cityTime.getMilliseconds();\n        const cityTime_seconds = cityTime.getSeconds();\n        let cityTime_minutes = cityTime.getMinutes();\n        let cityTime_hours = cityTime.getHours();\n        const cityTime_day = cityTime.getDay();\n        if (cityTime_day == 0) {\n          var f = 'Sun';\n        } else if (cityTime_day == 1) {\n          var f = 'Mon';\n        } else if (cityTime_day == 2) {\n          var f = 'Tue';\n        } else if (cityTime_day == 3) {\n          var f = 'Wed';\n        } else if (cityTime_day == 4) {\n          var f = 'Thu';\n        } else if (cityTime_day == 5) {\n          var f = 'Fri';\n        } else if (cityTime_day == 6) {\n          var f = 'Sat';\n        }\n        if (language === 'en' || language === 'kr') clockSettings.amPm = true;\n        clockSettings.time24hours = false;\n        // console.log(cityTime_hours)\n        if (clockSettings.amPm == true) {\n          var g = ' ';\n          if (cityTime_hours >= 12) {\n            g = ' PM';\n          } else {\n            g = ' AM';\n          }\n        } else {\n          g = '';\n        }\n        if (clockSettings.time24hours == true) {\n          g = '';\n        } else if (cityTime_hours >= 13) {\n          cityTime_hours -= 12;\n        } else if (cityTime_hours == 0) {\n          cityTime_hours = 12;\n        }\n        if (clockSettings.trailingZero == true) {\n          if (cityTime_hours < 10) {\n            cityTime_hours = `0${cityTime_hours}`;\n          }\n        }\n\n        if (cityTime_minutes < 10) { cityTime_minutes = `0${cityTime_minutes}`; }\n\n        if (clockSettings.showText == true) {\n          if (clockSettings.showDay == true) {\n            f = f;\n          } else {\n            f = '';\n          }\n        }\n\n        function updateText(updated) {\n          if (cityTime_seconds >= 0 && cityTime_seconds < 1) {\n            update = document.getElementById(`rolexClockCityTime${elem}`).innerHTML = `${f} ${cityTime_hours}:${cityTime_minutes}${g}`;\n            updateTime(thenewOffset, customOffset, elem);\n          } else if (checked === undefined) {\n            update = document.getElementById(`rolexClockCityTime${elem}`).innerHTML = `${f} ${cityTime_hours}:${cityTime_minutes}${g}`;\n            var checked = 1;\n\n            updateTime(thenewOffset, customOffset, elem);\n          }\n        }\n        requestAnimFrame(updateText);\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::clone": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function clone() {\n    return new Moment(this);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::clone$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function clone$1() {\n    return createDuration(this);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::cloneWithOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function cloneWithOffset(input, model) {\n    let res; let\n      diff;\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n      // Use low-level api, because this fn is low-level api.\n      res._d.setTime(res._d.valueOf() + diff);\n      hooks.updateOffset(res, false);\n      return res;\n    }\n    return createLocal(input).local();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::cmpLenRev": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::compareArrays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function compareArrays(array1, array2, dontConvert) {\n    const len = Math.min(array1.length, array2.length);\n    const lengthDiff = Math.abs(array1.length - array2.length);\n    let diffs = 0;\n    let i;\n    for (i = 0; i < len; i++) {\n      if ((dontConvert && array1[i] !== array2[i])\n        || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n        diffs++;\n      }\n    }\n    return diffs + lengthDiff;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::computeMonthsParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n    let i; let\n      mom;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::computeWeekdaysParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    const minPieces = [];\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n    let i; let mom; let minp; let shortp; let\n      longp;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::configFromArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function configFromArray(config) {\n    let i; let date; const input = [];\n    let currentDate; let expectedWeekday; let\n      yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    // compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    }\n\n    // if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24\n      && config._a[MINUTE] === 0\n      && config._a[SECOND] === 0\n      && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    }\n\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::configFromISO": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function configFromISO(config) {\n    let i; let l;\n    const string = config._i;\n    const match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string);\n    let allowTime; let dateFormat; let timeFormat; let\n      tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::configFromInput": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function configFromInput(config) {\n    const input = config._i;\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), (obj) => parseInt(obj, 10));\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::configFromObject": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    const i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], (obj) => obj && parseInt(obj, 10));\n\n    configFromArray(config);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::configFromRFC2822": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function configFromRFC2822(config) {\n    const match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (match) {\n      const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n      config._d = createUTCDate.apply(null, config._a);\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::configFromString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function configFromString(config) {\n    const matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::configFromStringAndArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function configFromStringAndArray(config) {\n    let tempConfig;\n    let bestMoment;\n\n    let scoreToBeat;\n    let i;\n    let currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      }\n\n      // if there is any input that was not parsed add a penalty for that format\n      currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n      // or tokens\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::configFromStringAndFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    let string = `${config._i}`;\n    let i; let parsedInput; let tokens; let token; let skipped;\n    const stringLength = string.length;\n    let totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n      // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      }\n      // don't parse if it's not a known token\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12\n      && getParsingFlags(config).bigHour === true\n      && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::copyConfig": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function copyConfig(to, from) {\n    let i; let prop; let\n      val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::countProperties": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function countProperties(a) {\n  let b = 0;\n  for (const c in a) {\n    if (a.hasOwnProperty(c)) { ++b; }\n  }\n  return b;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createAdder": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createAdder(direction, name) {\n    return function (val, period) {\n      let dur; let\n        tmp;\n      // invert the arguments, but complain about it\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, `moment().${name}(period, number) is deprecated. Please use moment().${name}(number, period). `\n          + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    let date;\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createDuration": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createDuration(input, key) {\n    let duration = input;\n    // matching against regexp is expensive, do it on demand\n    let match = null;\n    let sign;\n    let ret;\n    let diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months,\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (match = aspNetRegex.exec(input)) {\n      sign = (match[1] === '-') ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n      };\n    } else if (match = isoRegex.exec(input)) {\n      sign = (match[1] === '-') ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign),\n      };\n    } else if (duration == null) { // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createFromConfig": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createFromConfig(config) {\n    const res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createInZone": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createInvalid": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createInvalid(flags) {\n    const m = createUTC(NaN);\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createInvalid$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createInvalid$1() {\n    return createDuration(NaN);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createLocal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createLocalOrUTC": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    const c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input))\n      || (isArray(input) && input.length === 0)) {\n      input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createUTC": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createUTCDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createUTCDate(y) {\n    let date;\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      const args = Array.prototype.slice.call(arguments);\n      // preserve leap years using a full 400 year cycle, then reset\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::createUnix": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function createUnix(input) {\n    return createLocal(input * 1000);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::creationData": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict,\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ct": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ct(e, t, n) {\n    let r; let i; let o; let a; let s; let u; let l; let c; const f = 'width' in t || 'height' in t;\n    const p = this;\n    const d = {};\n    const h = e.style;\n    let g = e.nodeType && ae(e);\n    let y = J.get(e, 'fxshow');\n    n.queue || ((a = w._queueHooks(e, 'fx')).unqueued == null && (a.unqueued = 0, s = a.empty.fire, a.empty.fire = function () { a.unqueued || s(); }), a.unqueued++, p.always(() => { p.always(() => { a.unqueued--, w.queue(e, 'fx').length || a.empty.fire(); }); })); for (r in t) {\n      if (i = t[r], it.test(i)) {\n        if (delete t[r], o = o || i === 'toggle', i === (g ? 'hide' : 'show')) {\n          if (i !== 'show' || !y || void 0 === y[r]) continue;\n          g = !0;\n        }\n        d[r] = y && y[r] || w.style(e, r);\n      }\n    }\n    if ((u = !w.isEmptyObject(t)) || !w.isEmptyObject(d)) { f && e.nodeType === 1 && (n.overflow = [h.overflow, h.overflowX, h.overflowY], (l = y && y.display) == null && (l = J.get(e, 'display')), (c = w.css(e, 'display')) === 'none' && (l ? c = l : (fe([e], !0), l = e.style.display || l, c = w.css(e, 'display'), fe([e]))), (c === 'inline' || c === 'inline-block' && l != null) && w.css(e, 'float') === 'none' && (u || (p.done(() => { h.display = l; }), l == null && (c = h.display, l = c === 'none' ? '' : c)), h.display = 'inline-block')), n.overflow && (h.overflow = 'hidden', p.always(() => { h.overflow = n.overflow[0], h.overflowX = n.overflow[1], h.overflowY = n.overflow[2]; })), u = !1; for (r in d) u || (y ? 'hidden' in y && (g = y.hidden) : y = J.access(e, 'fxshow', { display: l }), o && (y.hidden = !g), g && fe([e], !0), p.done(() => { g || fe([e]), J.remove(e, 'fxshow'); for (r in d) w.style(e, r, d[r]); })), u = lt(g ? y[r] : 0, r, p), r in y || (y[r] = u.start, g && (u.end = u.start, u.start = 0)); }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::currentDateArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    const nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::dayOfYearFromWeekInfo": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function dayOfYearFromWeekInfo(config) {\n    let w; let weekYear; let week; let weekday; let dow; let doy; let temp; let\n      weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4;\n\n      // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n\n      const curWeek = weekOfYear(createLocal(), dow, doy);\n\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n      // Default to current week.\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::dayOfYearFromWeeks": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    const localWeekday = (7 + weekday - dow) % 7;\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n    let resYear; let\n      resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear,\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::daysInMonth": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n    const modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::daysInYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::daysToMonths": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::de": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function de(e) { return function (t) { return 'form' in t ? t.parentNode && !1 === t.disabled ? 'label' in t ? 'label' in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && ie(t) === e : t.disabled === e : 'label' in t && t.disabled === e; }; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::defaultParsingFlags": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false,\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::defaults": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n    if (b != null) {\n      return b;\n    }\n    return c;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::defineLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function defineLocale(name, config) {\n    if (config !== null) {\n      let locale; let\n        parentConfig = baseConfig;\n      config.abbr = name;\n      if (locales[name] != null) {\n        deprecateSimple(\n          'defineLocaleOverride',\n          'use moment.updateLocale(localeName, config) to change '\n          + 'an existing locale. moment.defineLocale(localeName, '\n          + 'config) should only be used for creating a new locale '\n          + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.',\n        );\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({\n              name,\n              config,\n            });\n            return null;\n          }\n        }\n      }\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach((x) => {\n          defineLocale(x.name, x.config);\n        });\n      }\n\n      // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n      getSetGlobalLocale(name);\n\n      return locales[name];\n    }\n    // useful for testing\n    delete locales[name];\n    return null;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::deprecate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function deprecate(msg, fn) {\n    let firstTime = true;\n\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n      if (firstTime) {\n        const args = [];\n        let arg;\n        for (let i = 0; i < arguments.length; i++) {\n          arg = '';\n          if (typeof arguments[i] === 'object') {\n            arg += `\\n[${i}] `;\n            for (const key in arguments[0]) {\n              arg += `${key}: ${arguments[0][key]}, `;\n            }\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n          args.push(arg);\n        }\n        warn(`${msg}\\nArguments: ${Array.prototype.slice.call(args).join('')}\\n${(new Error()).stack}`);\n        firstTime = false;\n      }\n      return fn.apply(this, arguments);\n    }, fn);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::deprecateSimple": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::diff": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function diff(input, units, asFloat) {\n    let that;\n    let zoneDelta;\n    let output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n      case 'second':\n        output = (this - that) / 1e3;\n        break; // 1000\n      case 'minute':\n        output = (this - that) / 6e4;\n        break; // 1000 * 60\n      case 'hour':\n        output = (this - that) / 36e5;\n        break; // 1000 * 60 * 60\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break; // 1000 * 60 * 60 * 24, negate dst\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break; // 1000 * 60 * 60 * 24 * 7, negate dst\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::drawTimepiece": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function drawTimepiece(a, b) {\n  magnify_x_offset = 0;\n  magnify_y_offset = 0;\n  magnify_x_scale = 1;\n  magnify_y_scale = 1;\n  if (b == true) {\n    magnify_x_offset = cyclop_mask_p.xcenteroffset;\n    magnify_y_offset = cyclop_mask_p.ycenteroffset;\n    magnify_x_scale = cyclop_mask_p.xscale;\n    magnify_y_scale = cyclop_mask_p.yscale;\n  }\n  a.globalCompositeOperation = 'source-over';\n  for (let i = 0; i < all_parts.length; i++) {\n    const c = all_p[i];\n    a.save();\n    if (all_p[i].update_mode != null) {\n      if (all_p[i].update_mode == 'monthdate') {\n        if (all_p[i].url == null) {\n          document.getElementById(`${all_parts[i]}_div`).innerHTML = monthdate;\n        } else {\n          document.getElementById(`${all_parts[i]}_div`).style.background = `url('${image_folder}num_${monthdate}.${all_p[i].fileformat}')`;\n        }\n      } else if (all_p[i].update_mode == 'weekday') {\n        document.getElementById(`${all_parts[i]}_div`).style.background = `url('${image_folder}weekday_${weekday_num}.${all_p[i].fileformat}')`;\n      } else {\n        a.translate(c.xcenteroffset, c.ycenteroffset);\n        a.translate(magnify_x_offset, magnify_y_offset);\n        a.translate(c.offset_alternate_x_center, c.offset_alternate_y_center);\n        a.scale(global_watch_p.xscale * magnify_x_scale, global_watch_p.yscale * magnify_y_scale);\n        a.rotate(display_calculation[c.update_mode]);\n        a.translate(-c.xrotation, -c.yrotation);\n\n        //                        var img = c[\"image\"];\n        //                        console.log(img, c[\"width\"],c[\"height\"])\n        const img = document.getElementById(`p_${all_parts[i]}`);\n        //                        console.log(\"p_\" + all_parts[i]);\n        //                        canvas = document.getElementById(canvasId)\n        //                        ctx = canvas.getContext('2d')\n        //                        ctx.drawImage(img, 0, 0, c[\"width\"], c[\"height\"]);\n        a.drawImage(img, 0, 0, c.width, c.height);\n        for (const d in all_p[i].__lightEffects) {\n          if (all_p[i].__lightEffects[d].height > 0) {\n            a.globalAlpha = getAlphaForRotation(d, display_calculation[c.update_mode], 'normal');\n            a.drawImage(c.__lightEffects[d], 0, 0, c.width, c.height);\n          }\n        }\n      }\n    } else {\n      a.translate(all_p[i].xcenteroffset, all_p[i].ycenteroffset);\n      a.translate(-all_p[i].xcenter, -all_p[i].ycenter);\n      a.drawImage(all_p[i].image, 0, 0, all_p[i].width, all_p[i].height);\n    }\n    a.restore();\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::easeInOutQuad": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function easeInOutQuad(a, b, c, d) {\n  if (a < d / 2) { return 2 * c * a * a / (d * d) + b; }\n  ts = a - d / 2;\n  return -2 * c * ts * ts / (d * d) + 2 * c * ts / d + c / 2 + b;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ee": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "ee = function (e, t, n) { const r = `0x${t}` - 65536; return r !== r || n ? t : r < 0 ? String.fromCharCode(r + 65536) : String.fromCharCode(r >> 10 | 55296, 1023 & r | 56320); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::endOf": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function endOf(units) {\n    let time;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    const startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::et": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function et(e, t, n) {\n    const r = $e(e);\n    let i = Fe(e, t, r);\n    const o = w.css(e, 'boxSizing', !1, r) === 'border-box';\n    let a = o; if (We.test(i)) {\n      if (!n) return i;\n      i = 'auto';\n    } return a = a && (h.boxSizingReliable() || i === e.style[t]), (i === 'auto' || !parseFloat(i) && w.css(e, 'display', !1, r) === 'inline') && (i = e[`offset${t[0].toUpperCase()}${t.slice(1)}`], a = !0), `${(i = parseFloat(i) || 0) + Ze(e, t, n || (o ? 'border' : 'content'), a, r, i)}px`;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::expandFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function expandFormat(format, locale) {\n    let i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::extend": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function extend(a, b) {\n    for (const i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::extractFromRFC2822Strings": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    const result = [\n      untruncateYear(yearStr),\n      defaultLocaleMonthsShort.indexOf(monthStr),\n      parseInt(dayStr, 10),\n      parseInt(hourStr, 10),\n      parseInt(minuteStr, 10),\n    ];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::f_calculate_additional_vars": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function f_calculate_additional_vars() {\n  if (GLOBAL_LIGHT_SOURCE != undefined) {\n    TOP_LIGHT_START = GLOBAL_LIGHT_SOURCE - 90;\n    TOP_LIGHT_END = GLOBAL_LIGHT_SOURCE + 90;\n    BOTTOM_LIGHT_START = GLOBAL_LIGHT_SOURCE - 90;\n    BOTTOM_LIGHT_END = GLOBAL_LIGHT_SOURCE + 90;\n    TOP_SHADE_START = GLOBAL_LIGHT_SOURCE + 90;\n    TOP_SHADE_END = GLOBAL_LIGHT_SOURCE - 90;\n    BOTTOM_SHADE_START = GLOBAL_LIGHT_SOURCE + 90;\n    BOTTOM_SHADE_END = GLOBAL_LIGHT_SOURCE - 90;\n    LEFT_LIGHT_START = GLOBAL_LIGHT_SOURCE;\n    LEFT_LIGHT_END = GLOBAL_LIGHT_SOURCE + 180;\n    RIGHT_LIGHT_START = GLOBAL_LIGHT_SOURCE + 180;\n    RIGHT_LIGHT_END = GLOBAL_LIGHT_SOURCE;\n    LEFT_SHADE_START = GLOBAL_LIGHT_SOURCE + 180;\n    LEFT_SHADE_END = GLOBAL_LIGHT_SOURCE;\n    RIGHT_SHADE_START = GLOBAL_LIGHT_SOURCE;\n    RIGHT_SHADE_END = GLOBAL_LIGHT_SOURCE + 180;\n  }\n  if (GLOBAL_MIN_ALPHA != undefined) {\n    TOP_LIGHT_MIN = BOTTOM_LIGHT_MIN = TOP_SHADE_MIN = BOTTOM_SHADE_MIN = LEFT_LIGHT_MIN = RIGHT_LIGHT_MIN = LEFT_SHADE_MIN = RIGHT_SHADE_MIN = GLOBAL_MIN_ALPHA;\n  }\n  if (GLOBAL_MAX_ALPHA != undefined) {\n    TOP_LIGHT_MAX = BOTTOM_LIGHT_MAX = TOP_SHADE_MAX = BOTTOM_SHADE_MAX = LEFT_LIGHT_MAX = RIGHT_LIGHT_MAX = LEFT_SHADE_MAX = RIGHT_SHADE_MAX = GLOBAL_MAX_ALPHA;\n  }\n  while (TOP_LIGHT_START > TOP_LIGHT_END) {\n    TOP_LIGHT_END += 360;\n  }\n  while (BOTTOM_LIGHT_START > BOTTOM_LIGHT_END) {\n    BOTTOM_LIGHT_END += 360;\n  }\n  while (TOP_SHADE_START > TOP_SHADE_END) {\n    TOP_SHADE_END += 360;\n  }\n  while (BOTTOM_SHADE_START > BOTTOM_SHADE_END) {\n    BOTTOM_SHADE_END += 360;\n  }\n  while (LEFT_LIGHT_START > LEFT_LIGHT_END) {\n    LEFT_LIGHT_END += 360;\n  }\n  while (RIGHT_LIGHT_START > RIGHT_LIGHT_END) {\n    RIGHT_LIGHT_END += 360;\n  }\n  while (LEFT_SHADE_START > LEFT_SHADE_END) {\n    LEFT_SHADE_END += 360;\n  }\n  while (RIGHT_SHADE_START > RIGHT_SHADE_END) {\n    RIGHT_SHADE_END += 360;\n  }\n  while (TOP_LIGHT_END > 360) {\n    TOP_LIGHT_START -= 360;\n    TOP_LIGHT_END -= 360;\n  }\n  while (BOTTOM_LIGHT_END > 360) {\n    BOTTOM_LIGHT_START -= 360;\n    BOTTOM_LIGHT_END -= 360;\n  }\n  while (TOP_SHADE_END > 360) {\n    TOP_SHADE_START -= 360;\n    TOP_SHADE_END -= 360;\n  }\n  while (BOTTOM_SHADE_END > 360) {\n    BOTTOM_SHADE_START -= 360;\n    BOTTOM_SHADE_END -= 360;\n  }\n  while (LEFT_LIGHT_END > 360) {\n    LEFT_LIGHT_START -= 360;\n    LEFT_LIGHT_END -= 360;\n  }\n  while (RIGHT_LIGHT_END > 360) {\n    RIGHT_LIGHT_START -= 360;\n    RIGHT_LIGHT_END -= 360;\n  }\n  while (LEFT_SHADE_END > 360) {\n    LEFT_SHADE_START -= 360;\n    LEFT_SHADE_END -= 360;\n  }\n  while (RIGHT_SHADE_END > 360) {\n    RIGHT_SHADE_START -= 360;\n    RIGHT_SHADE_END -= 360;\n  }\n  if (TOP_LIGHT_START < TOP_LIGHT_END) {\n    top_light_max_point = (TOP_LIGHT_START + TOP_LIGHT_END) / 2 % 360;\n    top_light_range = TOP_LIGHT_END - TOP_LIGHT_START;\n  } else {\n    top_light_max_point = (TOP_LIGHT_START + TOP_LIGHT_END) % 360 / 2;\n    top_light_range = 360 + TOP_LIGHT_END - TOP_LIGHT_START;\n  }\n  top_light_mid_range = top_light_range / 2;\n  if (BOTTOM_LIGHT_START < BOTTOM_LIGHT_END) {\n    bottom_light_max_point = (BOTTOM_LIGHT_START + BOTTOM_LIGHT_END) / 2 % 360;\n    bottom_light_range = BOTTOM_LIGHT_END - BOTTOM_LIGHT_START;\n  } else {\n    bottom_light_max_point = (BOTTOM_LIGHT_START + BOTTOM_LIGHT_END) % 360 / 2;\n    bottom_light_range = 360 + BOTTOM_LIGHT_END - BOTTOM_LIGHT_START;\n  }\n  bottom_light_mid_range = bottom_light_range / 2;\n  if (TOP_SHADE_START < TOP_SHADE_END) {\n    top_shade_max_point = (TOP_SHADE_START + TOP_SHADE_END) / 2 % 360;\n    top_shade_range = TOP_SHADE_END - TOP_SHADE_START;\n  } else {\n    top_shade_max_point = (TOP_SHADE_START + TOP_SHADE_END) % 360 / 2;\n    top_shade_range = 360 + TOP_SHADE_END - TOP_SHADE_START;\n  }\n  top_shade_mid_range = top_shade_range / 2;\n  if (BOTTOM_SHADE_START < BOTTOM_SHADE_END) {\n    bottom_shade_max_point = (BOTTOM_SHADE_START + BOTTOM_SHADE_END) / 2 % 360;\n    bottom_shade_range = BOTTOM_SHADE_END - BOTTOM_SHADE_START;\n  } else {\n    bottom_shade_max_point = (BOTTOM_SHADE_START + BOTTOM_SHADE_END) % 360 / 2;\n    bottom_shade_range = 360 + BOTTOM_SHADE_END - BOTTOM_SHADE_START;\n  }\n  bottom_shade_mid_range = bottom_shade_range / 2;\n  if (LEFT_LIGHT_START < LEFT_LIGHT_END) {\n    left_light_max_point = (LEFT_LIGHT_START + LEFT_LIGHT_END) / 2 % 360;\n    left_light_range = LEFT_LIGHT_END - LEFT_LIGHT_START;\n  } else {\n    left_light_max_point = (LEFT_LIGHT_START + LEFT_LIGHT_END) % 360 / 2;\n    left_light_range = 360 + LEFT_LIGHT_END - LEFT_LIGHT_START;\n  }\n  left_light_mid_range = left_light_range / 2;\n  if (RIGHT_LIGHT_START < RIGHT_LIGHT_END) {\n    right_light_max_point = (RIGHT_LIGHT_START + RIGHT_LIGHT_END) / 2 % 360;\n    right_light_range = RIGHT_LIGHT_END - RIGHT_LIGHT_START;\n  } else {\n    right_light_max_point = (RIGHT_LIGHT_START + RIGHT_LIGHT_END) % 360 / 2;\n    right_light_range = 360 + RIGHT_LIGHT_END - RIGHT_LIGHT_START;\n  }\n  right_light_mid_range = right_light_range / 2;\n  if (LEFT_SHADE_START < LEFT_SHADE_END) {\n    left_shade_max_point = (LEFT_SHADE_START + LEFT_SHADE_END) / 2 % 360;\n    left_shade_range = LEFT_SHADE_END - LEFT_SHADE_START;\n  } else {\n    left_shade_max_point = (LEFT_SHADE_START + LEFT_SHADE_END) % 360 / 2;\n    left_shade_range = 360 + LEFT_SHADE_END - LEFT_SHADE_START;\n  }\n  left_shade_mid_range = left_shade_range / 2;\n  if (RIGHT_SHADE_START < RIGHT_SHADE_END) {\n    right_shade_max_point = (RIGHT_SHADE_START + RIGHT_SHADE_END) / 2 % 360;\n    right_shade_range = RIGHT_SHADE_END - RIGHT_SHADE_START;\n  } else {\n    right_shade_max_point = (RIGHT_SHADE_START + RIGHT_SHADE_END) % 360 / 2;\n    right_shade_range = 360 + RIGHT_SHADE_END - RIGHT_SHADE_START;\n  }\n  right_shade_mid_range = right_shade_range / 2;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::fe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function fe(e) { return function (t) { return t.nodeName.toLowerCase() === 'input' && t.type === e; }; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::firstWeekOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function firstWeekOffset(year, dow, doy) {\n    const // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n      fwd = 7 + dow - doy;\n      // first-week day local weekday -- which local weekday is fwd\n    const fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::format": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    const output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::formatMoment": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::from": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function from(time, withoutSuffix) {\n    if (this.isValid()\n      && ((isMoment(time) && time.isValid())\n        || createLocal(time).isValid())) {\n      return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);\n    }\n    return this.localeData().invalidDate();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::fromNow": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ft": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ft(e, t) {\n    let n; let r; let i; let o; let\n      a; for (n in e) if (r = G(n), i = t[r], o = e[n], Array.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), (a = w.cssHooks[r]) && 'expand' in a) { o = a.expand(o), delete e[r]; for (n in o) n in e || (e[n] = o[n], t[n] = i); } else t[r] = i;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::g": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "g = function e(t) { return typeof t === 'function' && typeof t.nodeType !== 'number'; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ge": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ge(e) { return e && typeof e.getElementsByTagName !== 'undefined' && e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::get": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function get(mom, unit) {\n    return mom.isValid()\n      ? mom._d[`get${mom._isUTC ? 'UTC' : ''}${unit}`]() : NaN;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::get$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function get$1(format, index, field, setter) {\n    const locale = getLocale();\n    const utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::get$2": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[`${units}s`]() : NaN;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getAllUrlclockSettings": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getAllUrlclockSettings(url) {\n  // get query string from url (optional) or window\n  let queryString = url ? url.split('?')[1] : window.location.search.slice(1);\n\n  // we'll store the parameters here\n  const obj = {};\n\n  // if query string exists\n  if (queryString) {\n    // stuff after # is not part of query string, so get rid of it\n    queryString = queryString.split('#')[0];\n\n    // split our query string into its component parts\n    const arr = queryString.split('&');\n\n    for (let i = 0; i < arr.length; i++) {\n      // separate the keys and the values\n      const a = arr[i].split('=');\n\n      // set parameter name and value (use 'true' if empty)\n      let paramName = a[0];\n      let paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\n\n      // (optional) keep case consistent\n      paramName = paramName.toLowerCase();\n      if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\n\n      // if the paramName ends with square brackets, e.g. colors[] or colors[2]\n      if (paramName.match(/\\[(\\d+)?\\]$/)) {\n        // create key if it doesn't exist\n        const key = paramName.replace(/\\[(\\d+)?\\]/, '');\n        if (!obj[key]) obj[key] = [];\n\n        // if it's an indexed array e.g. colors[2]\n        if (paramName.match(/\\[\\d+\\]$/)) {\n          // get the index value and add the entry at the appropriate position\n          const index = /\\[(\\d+)\\]/.exec(paramName)[1];\n          obj[key][index] = paramValue;\n        } else {\n          // otherwise add the value to the end of the array\n          obj[key].push(paramValue);\n        }\n      } else {\n        // we're dealing with a string\n        if (!obj[paramName]) {\n          // if it doesn't exist, create property\n          obj[paramName] = paramValue;\n        } else if (obj[paramName] && typeof obj[paramName] === 'string') {\n          // if property does exist and it's a string, convert it to an array\n          obj[paramName] = [obj[paramName]];\n          obj[paramName].push(paramValue);\n        } else {\n          // otherwise add the property\n          obj[paramName].push(paramValue);\n        }\n      }\n    }\n  }\n\n  return obj;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getAlphaForRotation": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getAlphaForRotation(a, b, c) {\n  b = 180 * b / Math.PI + 90;\n  subf_find_distance_to_max_point = function (a) {\n    let c = Math.abs(a - b);\n    if (c > 180) {\n      c = Math.abs(180 - (c - 180));\n    }\n    return c;\n  };\n  let d;\n  if (a == 'top_light') {\n    if (c == 'reverse') {\n      this_hand_distance_to_top_light_point = subf_find_distance_to_max_point(-top_light_max_point);\n    } else {\n      this_hand_distance_to_top_light_point = subf_find_distance_to_max_point(top_light_max_point);\n    }\n    if (this_hand_distance_to_top_light_point <= top_light_mid_range) {\n      d = TOP_LIGHT_MIN + (1 - this_hand_distance_to_top_light_point / top_light_mid_range) * (TOP_LIGHT_MAX - TOP_LIGHT_MIN);\n    } else {\n      d = TOP_LIGHT_MIN;\n    }\n  } else if (a == 'bottom_light') {\n    if (c == 'reverse') {\n      this_hand_distance_to_bottom_light_point = subf_find_distance_to_max_point(-bottom_light_max_point);\n    } else {\n      this_hand_distance_to_bottom_light_point = subf_find_distance_to_max_point(bottom_light_max_point);\n    }\n    if (180 - this_hand_distance_to_bottom_light_point <= bottom_light_mid_range) {\n      d = BOTTOM_LIGHT_MIN + (1 - (180 - this_hand_distance_to_bottom_light_point) / bottom_light_mid_range) * (BOTTOM_LIGHT_MAX - BOTTOM_LIGHT_MIN);\n    } else {\n      d = BOTTOM_LIGHT_MIN;\n    }\n  } else if (a == 'top_shade') {\n    if (c == 'reverse') {\n      this_hand_distance_to_top_shade_point = subf_find_distance_to_max_point(-top_shade_max_point);\n    } else {\n      this_hand_distance_to_top_shade_point = subf_find_distance_to_max_point(top_shade_max_point);\n    }\n    if (this_hand_distance_to_top_shade_point <= top_shade_mid_range) {\n      d = TOP_SHADE_MIN + (1 - this_hand_distance_to_top_shade_point / top_shade_mid_range) * (TOP_SHADE_MAX - TOP_SHADE_MIN);\n    } else {\n      d = TOP_SHADE_MIN;\n    }\n  } else if (a == 'bottom_shade') {\n    if (c == 'reverse') {\n      this_hand_distance_to_bottom_shade_point = subf_find_distance_to_max_point(-bottom_shade_max_point);\n    } else {\n      this_hand_distance_to_bottom_shade_point = subf_find_distance_to_max_point(bottom_shade_max_point);\n    }\n    if (180 - this_hand_distance_to_bottom_shade_point <= bottom_shade_mid_range) {\n      d = BOTTOM_SHADE_MIN + (1 - (180 - this_hand_distance_to_bottom_shade_point) / bottom_shade_mid_range) * (BOTTOM_SHADE_MAX - BOTTOM_SHADE_MIN);\n    } else {\n      d = BOTTOM_SHADE_MIN;\n    }\n  }\n  if (c == 'reverse') {\n    if (a == 'left_light') {\n      this_hand_distance_to_left_light_point = subf_find_distance_to_max_point(-left_light_max_point);\n      if (this_hand_distance_to_left_light_point <= left_light_mid_range) {\n        d = LEFT_LIGHT_MIN + (1 - this_hand_distance_to_left_light_point / left_light_mid_range) * (LEFT_LIGHT_MAX - LEFT_LIGHT_MIN);\n      } else {\n        d = LEFT_LIGHT_MIN;\n      }\n    } else if (a == 'right_light') {\n      if (this_hand_distance_to_right_light_point <= right_light_mid_range) {\n        d = RIGHT_LIGHT_MIN + (1 - this_hand_distance_to_right_light_point / right_light_mid_range) * (RIGHT_LIGHT_MAX - RIGHT_LIGHT_MIN);\n      } else {\n        d = RIGHT_LIGHT_MIN;\n      }\n    } else if (a == 'left_shade') {\n      this_hand_distance_to_left_shade_point = subf_find_distance_to_max_point(-left_shade_max_point);\n      if (this_hand_distance_to_left_shade_point <= left_shade_mid_range) {\n        d = (1 - this_hand_distance_to_left_shade_point / left_shade_mid_range) * (LEFT_SHADE_MAX - LEFT_SHADE_MIN);\n      } else {\n        d = LEFT_SHADE_MIN;\n      }\n    } else if (a == 'right_shade') {\n      this_hand_distance_to_right_shade_point = subf_find_distance_to_max_point(-right_shade_max_point);\n      if (this_hand_distance_to_right_shade_point <= right_shade_mid_range) {\n        d = (1 - this_hand_distance_to_right_shade_point / right_shade_mid_range) * (RIGHT_SHADE_MAX - RIGHT_SHADE_MIN);\n      } else {\n        d = RIGHT_SHADE_MIN;\n      }\n    }\n  } else if (a == 'left_light') {\n    this_hand_distance_to_left_light_point = subf_find_distance_to_max_point(left_light_max_point);\n    if (this_hand_distance_to_left_light_point <= left_light_mid_range) {\n      d = LEFT_LIGHT_MIN + (1 - this_hand_distance_to_left_light_point / left_light_mid_range) * (LEFT_LIGHT_MAX - LEFT_LIGHT_MIN);\n    } else {\n      d = LEFT_LIGHT_MIN;\n    }\n  } else if (a == 'right_light') {\n    this_hand_distance_to_right_light_point = subf_find_distance_to_max_point(-right_light_max_point);\n    this_hand_distance_to_right_light_point = subf_find_distance_to_max_point(right_light_max_point);\n    if (this_hand_distance_to_right_light_point <= right_light_mid_range) {\n      d = RIGHT_LIGHT_MIN + (1 - this_hand_distance_to_right_light_point / right_light_mid_range) * (RIGHT_LIGHT_MAX - RIGHT_LIGHT_MIN);\n    } else {\n      d = RIGHT_LIGHT_MIN;\n    }\n  } else if (a == 'left_shade') {\n    this_hand_distance_to_left_shade_point = subf_find_distance_to_max_point(left_shade_max_point);\n    if (this_hand_distance_to_left_shade_point <= left_shade_mid_range) {\n      d = LEFT_SHADE_MIN + (1 - this_hand_distance_to_left_shade_point / left_shade_mid_range) * (LEFT_SHADE_MAX - LEFT_SHADE_MIN);\n    } else {\n      d = LEFT_SHADE_MIN;\n    }\n  } else if (a == 'right_shade') {\n    this_hand_distance_to_right_shade_point = subf_find_distance_to_max_point(right_shade_max_point);\n    if (this_hand_distance_to_right_shade_point <= right_shade_mid_range) {\n      d = RIGHT_SHADE_MIN + (1 - this_hand_distance_to_right_shade_point / right_shade_mid_range) * (RIGHT_SHADE_MAX - RIGHT_SHADE_MIN);\n    } else {\n      d = RIGHT_SHADE_MIN;\n    }\n  }\n  return d / 100;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getCalendarFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getCalendarFormat(myMoment, now) {\n    const diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse'\n      : diff < -1 ? 'lastWeek'\n        : diff < 0 ? 'lastDay'\n          : diff < 1 ? 'sameDay'\n            : diff < 2 ? 'nextDay'\n              : diff < 7 ? 'nextWeek' : 'sameElse';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getCurrentShownTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getCurrentShownTime() {\n  let a = '';\n  if (current_hours < 10) {\n    a += '0';\n  }\n  a += current_hours;\n  a += ':';\n  if (current_minutes < 10) {\n    a += '0';\n  }\n  a += current_minutes;\n  return a;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getDateOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getDaysInMonth": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getHiddenProp": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getHiddenProp() {\n  const prefixes = ['webkit', 'moz', 'ms', 'o'];\n\n  // if 'hidden' is natively supported just return it\n  if ('hidden' in document) { return 'hidden'; }\n\n  // otherwise loop over all the known prefixes until we find one\n  for (let i = 0; i < prefixes.length; i++) {\n    if ((`${prefixes[i]}Hidden`) in document) { return `${prefixes[i]}Hidden`; }\n  }\n\n  // otherwise it's not supported\n  return null;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getISOWeeksInYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getIsLeapYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getLocale(key) {\n    let locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      // short-circuit everything else\n      locale = loadLocale(key);\n      if (locale) {\n        return locale;\n      }\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getParseRegexForToken": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getParsingFlags": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getPrioritizedUnits": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getPrioritizedUnits(unitsObj) {\n    const units = [];\n    for (const u in unitsObj) {\n      units.push({ unit: u, priority: priorities[u] });\n    }\n    units.sort((a, b) => a.priority - b.priority);\n    return units;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetDayOfWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    const day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    }\n    return day;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetDayOfYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetDayOfYear(input) {\n    const dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetGlobalLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetGlobalLocale(key, values) {\n    let data;\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else if ((typeof console !== 'undefined') && console.warn) {\n        // warn user if arguments are passed but the locale could not be set\n        console.warn(`Locale ${key} not found. Did you forget to load it?`);\n      }\n    }\n\n    return globalLocale._abbr;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetISODayOfWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n      const weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    }\n    return this.day() || 7;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetISOWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetISOWeek(input) {\n    const { week } = weekOfYear(this, 1, 4);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetISOWeekYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(\n      this,\n      input,\n\n      this.isoWeek(),\n\n      this.isoWeekday(),\n\n      1,\n\n      4,\n    );\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetLocaleDayOfWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    const weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetMonth": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    }\n    return get(this, 'Month');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetOffset(input, keepLocalTime, keepMinutes) {\n    const offset = this._offset || 0;\n    let localAdjust;\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input *= 60;\n      }\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n      this._offset = input;\n      this._isUTC = true;\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n      return this;\n    }\n    return this._isUTC ? offset : getDateOffset(this);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetQuarter": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetRelativeTimeRounding": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n    if (typeof (roundingFunction) === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n    return false;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetRelativeTimeThreshold": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n    return true;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetWeek(input) {\n    const week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetWeekYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(\n      this,\n      input,\n      this.week(),\n      this.weekday(),\n      this.localeData()._week.dow,\n      this.localeData()._week.doy,\n    );\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetWeekYearHelper": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    let weeksTarget;\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    }\n    weeksTarget = weeksInYear(input, dow, doy);\n    if (week > weeksTarget) {\n      week = weeksTarget;\n    }\n    return setWeekAll.call(this, input, week, weekday, dow, doy);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getSetZone": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n\n      return this;\n    }\n    return -this.utcOffset();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getWeeksInYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getWeeksInYear() {\n    const weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getZoneAbbr": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::getZoneName": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::hFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function hFormat() {\n    return this.hours() % 12 || 12;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::handleStrictParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function handleStrictParse(monthName, format, strict) {\n    let i; let ii; let mom; const\n      llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n      ii = indexOf.call(this._longMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n    if (format === 'MMM') {\n      ii = indexOf.call(this._shortMonthsParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._longMonthsParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n    ii = indexOf.call(this._longMonthsParse, llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = indexOf.call(this._shortMonthsParse, llc);\n    return ii !== -1 ? ii : null;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::handleStrictParse$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function handleStrictParse$1(weekdayName, format, strict) {\n    let i; let ii; let mom; const\n      llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n      ii = indexOf.call(this._minWeekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n    if (format === 'dddd') {\n      ii = indexOf.call(this._weekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._shortWeekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._minWeekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    } if (format === 'ddd') {\n      ii = indexOf.call(this._shortWeekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._weekdaysParse, llc);\n      if (ii !== -1) {\n        return ii;\n      }\n      ii = indexOf.call(this._minWeekdaysParse, llc);\n      return ii !== -1 ? ii : null;\n    }\n    ii = indexOf.call(this._minWeekdaysParse, llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = indexOf.call(this._weekdaysParse, llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = indexOf.call(this._shortWeekdaysParse, llc);\n    return ii !== -1 ? ii : null;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::hasAlignedHourOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::hasOwnProp": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::he": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function he(e) {\n      return se((t) => (t = +t, se((n, r) => {\n        let i; const o = e([], n.length, t);\n        let a = o.length; while (a--) n[i = o[a]] && (n[i] = !(r[i] = n[i]));\n      })));\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::hooks": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function hooks() {\n    return hookCallback.apply(null, arguments);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::humanize": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    const locale = this.localeData();\n    let output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::i": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "i = function (e, t) {\n      const n = g(t) ? t() : t;\n      r[r.length] = `${encodeURIComponent(e)}=${encodeURIComponent(n == null ? '' : n)}`;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::inspect": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function inspect() {\n    if (!this.isValid()) {\n      return `moment.invalid(/* ${this._i} */)`;\n    }\n    let func = 'moment';\n    let zone = '';\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n    const prefix = `[${func}(\"]`;\n    const year = (this.year() >= 0 && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    const datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    const suffix = `${zone}[\")]`;\n\n    return this.format(prefix + year + datetime + suffix);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::invalidAt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::invalidDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function invalidDate() {\n    return this._invalidDate;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isAfter": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isAfter(input, units) {\n    const localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    }\n    return localInput.valueOf() < this.clone().startOf(units).valueOf();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isBefore": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isBefore(input, units) {\n    const localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    }\n    return this.clone().endOf(units).valueOf() < localInput.valueOf();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isBetween": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isBetween(from, to, units, inclusivity) {\n    const localFrom = isMoment(from) ? from : createLocal(from);\n    const localTo = isMoment(to) ? to : createLocal(to);\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units))\n      && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isDaylightSavingTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isDaylightSavingTime() {\n    return (\n      this.utcOffset() > this.clone().month(0).utcOffset()\n      || this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isDaylightSavingTimeShifted": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    let c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid()\n        && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isDuration": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isDuration(obj) {\n    return obj instanceof Duration;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isDurationValid": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isDurationValid(m) {\n    for (const key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    let unitHasDecimal = false;\n    for (let i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isFunction": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isHidden": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isHidden() {\n  const prop = getHiddenProp();\n  if (!prop) { return false; }\n\n  return document[prop];\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isLeapYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isLocal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isMoment": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isMoment(obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isNumber": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isObject": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isObjectEmpty": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return (Object.getOwnPropertyNames(obj).length === 0);\n    }\n    let k;\n    for (k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        return false;\n      }\n    }\n    return true;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isSame": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isSame(input, units) {\n    const localInput = isMoment(input) ? input : createLocal(input);\n    let inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n    units = normalizeUnits(units) || 'millisecond';\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    }\n    inputMs = localInput.valueOf();\n    return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isSameOrAfter": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isSameOrBefore": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isUndefined": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isUndefined(input) {\n    return input === void 0;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isUtc": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isUtcOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isValid": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isValid(m) {\n    if (m._isValid == null) {\n      const flags = getParsingFlags(m);\n      const parsedParts = some.call(flags.parsedDateParts, (i) => i != null);\n      let isNowValid = !isNaN(m._d.getTime())\n        && flags.overflow < 0\n        && !flags.empty\n        && !flags.invalidMonth\n        && !flags.invalidWeekday\n        && !flags.weekdayMismatch\n        && !flags.nullInput\n        && !flags.invalidFormat\n        && !flags.userInvalidated\n        && (!flags.meridiem || (flags.meridiem && parsedParts));\n\n      if (m._strict) {\n        isNowValid = isNowValid\n          && flags.charsLeftOver === 0\n          && flags.unusedTokens.length === 0\n          && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n    return m._isValid;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isValid$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isValid$1() {\n    return this._isValid;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::isValid$2": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function isValid$2() {\n    return isValid(this);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::j": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function j(e, t, n) { return g(t) ? w.grep(e, (e, r) => !!t.call(e, r, e) !== n) : t.nodeType ? w.grep(e, (e) => e === t !== n) : typeof t !== 'string' ? w.grep(e, (e) => u.call(t, e) > -1 !== n) : w.filter(t, e, n); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::jt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function jt(e, t, n, r) {\n    let i; if (Array.isArray(t)) w.each(t, (t, i) => { n || St.test(e) ? r(e, i) : jt(`${e}[${typeof i === 'object' && i != null ? t : ''}]`, i, n, r); });\n    else if (n || x(t) !== 'object') r(e, t);\n    else for (i in t) jt(`${e}[${i}]`, t[i], n, r);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::k": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "k = function (e, t, n) {\n    const r = [];\n    const i = void 0 !== n; while ((e = e[t]) && e.nodeType !== 9) {\n      if (e.nodeType === 1) {\n        if (i && w(e).is(n)) break;\n        r.push(e);\n      }\n    }\n    return r;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::kFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function kFormat() {\n    return this.hours() || 24;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ke": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ke() { return !1; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::l": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "l = function () {\n                let e; let\n                  l; if (!(t < o)) {\n                  if ((e = r.apply(s, u)) === n.promise()) throw new TypeError('Thenable self-resolution');\n                  l = e && (typeof e === 'object' || typeof e === 'function') && e.then, g(l) ? i ? l.call(e, a(o, n, I, i), a(o, n, W, i)) : (o++, l.call(e, a(o, n, I, i), a(o, n, W, i), a(o, n, I, n.notifyWith))) : (r !== I && (s = void 0, u = [e]), (i || n.resolveWith)(s, u));\n                }\n              }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::le": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function le(e, t) {\n      const n = e.split('|');\n      let i = n.length; while (i--) r.attrHandle[n[i]] = t;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::listLocales": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function listLocales() {\n    return keys(locales);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::listMonths": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::listMonthsImpl": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    let i;\n    const out = [];\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::listMonthsShort": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::listWeekdays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::listWeekdaysImpl": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    const locale = getLocale();\n    const shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    let i;\n    const out = [];\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::listWeekdaysMin": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::listWeekdaysShort": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::loadLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function loadLocale(name) {\n    let oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined')\n      && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        const aliasedRequire = require;\n        aliasedRequire(`./locale/${name}`);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n    return locales[name];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::loadSprite": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function loadSprite(i, src) {\n  //            console.log(\"i=\" + i + \"; src=\" + src);\n  const deferred = $.Deferred();\n  all_p[i].image = document.createElement('img');\n  all_p[i].image.id = `p_${all_parts[i]}`;\n  all_p[i].image.onload = function () {\n    deferred.resolve();\n  };\n  all_p[i].image.onerror = function () {\n    loadSpriteErrors.push(src);\n    $('.content').hide();\n    $('.fallback').show();\n  };\n  partsContainer.appendChild(all_p[i].image);\n  all_p[i].image.src = src;\n  return deferred.promise();\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localStartOfDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    }\n    return new Date(y, m, d).valueOf();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::locale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function locale(key) {\n    let newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    }\n    newLocaleData = getLocale(key);\n    if (newLocaleData != null) {\n      this._locale = newLocaleData;\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeData": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeData() {\n    return this._locale;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeFirstDayOfWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeFirstDayOfYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeFirstDayOfYear() {\n    return this._week.doy;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeIsPM": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((`${input}`).toLowerCase().charAt(0) === 'p');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeMeridiem": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n    return isLower ? 'am' : 'AM';\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeMonths": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months\n        : this._months.standalone;\n    }\n    return isArray(this._months) ? this._months[m.month()]\n      : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeMonthsParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeMonthsParse(monthName, format, strict) {\n    let i; let mom; let\n      regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp(`^${this.months(mom, '').replace('.', '')}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${this.monthsShort(mom, '').replace('.', '')}$`, 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(mom, '')}|^${this.monthsShort(mom, '')}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeMonthsShort": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort\n        : this._monthsShort.standalone;\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()]\n      : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeWeek": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeWeekdays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeWeekdays(m, format) {\n    const weekdays = isArray(this._weekdays) ? this._weekdays\n      : this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n    return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n      : (m) ? weekdays[m.day()] : weekdays;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeWeekdaysMin": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeWeekdaysMin(m) {\n    return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n      : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeWeekdaysParse": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeWeekdaysParse(weekdayName, format, strict) {\n    let i; let mom; let\n      regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n\n      mom = createUTC([2000, 1]).day(i);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(mom, '').replace('.', '\\\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(mom, '').replace('.', '\\\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(mom, '').replace('.', '\\\\.?')}$`, 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(mom, '')}|^${this.weekdaysShort(mom, '')}|^${this.weekdaysMin(mom, '')}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::localeWeekdaysShort": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function localeWeekdaysShort(m) {\n    return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n      : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::longDateFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function longDateFormat(key) {\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val) => val.slice(1));\n\n    return this._longDateFormat[key];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::lt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function lt(e, t, n) {\n    for (var r, i = (pt.tweeners[t] || []).concat(pt.tweeners['*']), o = 0, a = i.length; o < a; o++) if (r = i[o].call(n, t, e)) return r;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::m": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function m(e, t, n) {\n    let i; const\n      o = (t = t || r).createElement('script'); if (o.text = e, n) for (i in v) n[i] && (o[i] = n[i]);\n    t.head.appendChild(o).parentNode.removeChild(o);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::makeAs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::makeFormatFunction": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function makeFormatFunction(format) {\n    const array = format.match(formattingTokens);\n    let i; let\n      length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      let output = '';\n      let i;\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n      return output;\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::makeGetSet": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      }\n      return get(this, unit);\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::makeGetter": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::map": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function map(arr, fn) {\n    const res = [];\n    let i;\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::matchMeridiem": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::max": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function max() {\n    const args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::me": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function me(e, t, n) {\n      const r = t.dir;\n      const i = t.next;\n      const o = i || r;\n      const a = n && o === 'parentNode';\n      const s = C++; return t.first ? function (t, n, i) {\n        while (t = t[r]) if (t.nodeType === 1 || a) return e(t, n, i);\n        return !1;\n      } : function (t, n, u) {\n        let l; let c; let f; const\n          p = [T, s]; if (u) {\n          while (t = t[r]) if ((t.nodeType === 1 || a) && e(t, n, u)) return !0;\n        } else {\n          while (t = t[r]) {\n            if (t.nodeType === 1 || a) {\n              if (f = t[b] || (t[b] = {}), c = f[t.uniqueID] || (f[t.uniqueID] = {}), i && i === t.nodeName.toLowerCase()) t = t[r] || t;\n              else { if ((l = c[o]) && l[0] === T && l[1] === s) return p[2] = l[2]; if (c[o] = p, p[2] = e(t, n, u)) return !0; }\n            }\n          }\n        } return !1;\n      };\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::mergeConfigs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function mergeConfigs(parentConfig, childConfig) {\n    const res = extend({}, parentConfig);\n    let prop;\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop)\n        && !hasOwnProp(childConfig, prop)\n        && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::meridiem": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::meridiemFixWrap": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function meridiemFixWrap(locale, hour, meridiem) {\n    let isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n      return hour;\n    }\n    // this is not supposed to happen\n    return hour;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::min": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function min() {\n    const args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::mod": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function mod(n, x) {\n    return ((n % x) + x) % x;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::mod$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::momentsDifference": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function momentsDifference(base, other) {\n    let res;\n    if (!(base.isValid() && other.isValid())) {\n      return { milliseconds: 0, months: 0 };\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::monthDiff": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function monthDiff(a, b) {\n    // difference in months\n    const wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month());\n    // b is in (anchor - 1 month, anchor + 1 month)\n    const anchor = a.clone().add(wholeMonthDiff, 'months');\n    let anchor2; let\n      adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n      // linear across the month\n      adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    // check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::monthsRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n      return this._monthsRegex;\n    }\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n    return this._monthsStrictRegex && isStrict\n      ? this._monthsStrictRegex : this._monthsRegex;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::monthsShortRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n      return this._monthsShortRegex;\n    }\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n    return this._monthsShortStrictRegex && isStrict\n      ? this._monthsShortStrictRegex : this._monthsShortRegex;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::monthsToDays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::mt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function mt(e) { return e.getAttribute && e.getAttribute('class') || ''; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::n": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function n(e) { return Math.round(parseFloat(e)); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ne": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "ne = function (e, t) { return t ? e === '\\0' ? '\\ufffd' : `${e.slice(0, -1)}\\\\${e.charCodeAt(e.length - 1).toString(16)} ` : `\\\\${e}`; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::normalizeLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::normalizeObjectUnits": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function normalizeObjectUnits(inputObject) {\n    const normalizedInput = {};\n    let normalizedProp;\n    let prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::normalizeUnits": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::now": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "now = function () {\n    return Date.now ? Date.now() : +(new Date());\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::o": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "o = function (o, a, s, u, c) {\n        let f; let h; let y; let v = 0;\n        let m = '0';\n        const x = o && [];\n        let b = [];\n        const w = l;\n        const C = o || i && r.find.TAG('*', c);\n        const E = T += w == null ? 1 : Math.random() || 0.1;\n        const k = C.length; for (c && (l = a === d || a || c); m !== k && (f = C[m]) != null; m++) {\n          if (i && f) {\n            h = 0, a || f.ownerDocument === d || (p(f), s = !g); while (y = e[h++]) if (y(f, a || d, s)) { u.push(f); break; }\n            c && (T = E);\n          }\n          n && ((f = !y && f) && v--, o && x.push(f));\n        } if (v += m, n && m !== v) {\n          h = 0; while (y = t[h++]) y(x, b, a, s); if (o) {\n            if (v > 0) while (m--) x[m] || b[m] || (b[m] = j.call(u));\n            b = we(b);\n          }\n          L.apply(u, b), c && !o && b.length > 0 && v + t.length > 1 && oe.uniqueSort(u);\n        } return c && (T = E, l = w), x;\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::oe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function oe(e, t, r, i) {\n      let o; let s; let l; let c; let f; let h; let v; let m = t && t.ownerDocument;\n      const T = t ? t.nodeType : 9; if (r = r || [], typeof e !== 'string' || !e || T !== 1 && T !== 9 && T !== 11) return r; if (!i && ((t ? t.ownerDocument || t : w) !== d && p(t), t = t || d, g)) {\n        if (T !== 11 && (f = J.exec(e))) if (o = f[1]) { if (T === 9) { if (!(l = t.getElementById(o))) return r; if (l.id === o) return r.push(l), r; } else if (m && (l = m.getElementById(o)) && x(t, l) && l.id === o) return r.push(l), r; } else { if (f[2]) return L.apply(r, t.getElementsByTagName(e)), r; if ((o = f[3]) && n.getElementsByClassName && t.getElementsByClassName) return L.apply(r, t.getElementsByClassName(o)), r; }\n        if (n.qsa && !S[`${e} `] && (!y || !y.test(e))) {\n          if (T !== 1) m = t, v = e;\n          else if (t.nodeName.toLowerCase() !== 'object') {\n            (c = t.getAttribute('id')) ? c = c.replace(te, ne) : t.setAttribute('id', c = b), s = (h = a(e)).length; while (s--) h[s] = `#${c} ${ve(h[s])}`;\n            v = h.join(','), m = K.test(e) && ge(t.parentNode) || t;\n          } if (v) try { return L.apply(r, m.querySelectorAll(v)), r; } catch (e) {} finally { c === b && t.removeAttribute('id'); }\n        }\n      } return u(e.replace(B, '$1'), t, r, i);\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::offset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      let offset = this.utcOffset();\n      let sign = '+';\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::offsetFromString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function offsetFromString(matcher, string) {\n    const matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    const chunk = matches[matches.length - 1] || [];\n    const parts = (`${chunk}`).match(chunkOffset) || ['-', 0, 0];\n    const minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0\n      ? 0\n      : parts[0] === '+' ? minutes : -minutes;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ordinal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::parseIso": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    const res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::parseIsoWeekday": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::parseMs": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function parseMs(input, array) {\n    array[MILLISECOND] = toInt((`0.${input}`) * 1000);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::parseWeekday": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::parsingFlags": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::pastFuture": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function pastFuture(diff, output) {\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::pe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function pe(e) { return function (t) { const n = t.nodeName.toLowerCase(); return (n === 'input' || n === 'button') && t.type === e; }; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::pickBy": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function pickBy(fn, moments) {\n    let res; let\n      i;\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n    if (!moments.length) {\n      return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::placeCanvas": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function placeCanvas(a, b, c) {\n  a.clearRect(-global_watch_p.width, -global_watch_p.height, global_watch_p.width * 2, global_watch_p.height * 2);\n  if (b == false) {} else {\n    a.save();\n    if (c) {\n      a.translate(global_watch_p[c.watch_x_center], global_watch_p[c.watch_y_center]);\n    } else {\n      a.translate(global_watch_p.xcenter, global_watch_p.ycenter);\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::positiveMomentsDifference": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function positiveMomentsDifference(base, other) {\n    const res = {};\n\n    res.months = other.month() - base.month()\n      + (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::preParsePostFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function preParsePostFormat(string) {\n    return string;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::prepareConfig": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function prepareConfig(config) {\n    let input = config._i;\n    const format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n      return createInvalid({ nullInput: true });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::prepareTimepieceElements": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function prepareTimepieceElements() {\n  if (prepareTimepieceElementsIsDone == false) {\n    for (i = 0; i < all_parts.length; i++) {\n      if (all_p[i].update_mode == 'monthdate' || all_p[i].update_mode == 'weekday') {\n        if (all_p[i].url == null) {\n          var a = document.createElement('DIV');\n        } else {\n          var a = document.createElement('CANVAS');\n        }\n        document.getElementById(watchContainer).appendChild(a);\n        if (typeof G_vmlCanvasManager !== 'undefined') {\n          a = G_vmlCanvasManager.initElement(a);\n        }\n        a.setAttribute('id', `${all_parts[i]}_div`);\n        a.style.position = 'absolute';\n        a.style.width = `${all_p[i].width}px`;\n        a.style.height = `${all_p[i].height}px`;\n        a.style.left = `${all_p[i].xoriginoffset}px`;\n        a.style.top = `${all_p[i].yoriginoffset}px`;\n        if (all_p[i].url == null) {\n          a.style.color = `#${all_p[i].txt_color}`;\n          a.style.fontSize = all_p[i].txt_fontSize;\n          a.style.fontFamily = 'Arial';\n          a.style.textAlign = 'center';\n        }\n        parts_starting_z_index += i;\n        a.style.zIndex = parts_starting_z_index;\n      }\n    }\n    var b = document.createElement('CANVAS');\n    document.getElementById(watchContainer).appendChild(b);\n    if (typeof G_vmlCanvasManager !== 'undefined') {\n      b = G_vmlCanvasManager.initElement(b);\n    }\n    b.setAttribute('id', 'regular_timepiece_canvas');\n    b.style.position = 'absolute';\n    b.setAttribute('width', global_watch_p.width);\n    b.setAttribute('height', global_watch_p.height);\n    b.style.zIndex = parts_starting_z_index;\n    if (cyclop_mask_p.url) {\n      var b = document.createElement('CANVAS');\n      document.getElementById(watchContainer).appendChild(b);\n      if (typeof G_vmlCanvasManager !== 'undefined') {\n        b = G_vmlCanvasManager.initElement(b);\n      }\n      b.setAttribute('id', 'magnified_timepiece_canvas');\n      b.style.position = 'absolute';\n      b.setAttribute('width', global_watch_p.width);\n      b.setAttribute('height', global_watch_p.height);\n      b.style.zIndex = parts_starting_z_index + 1;\n    }\n    prepareTimepieceElementsIsDone = true;\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::preprocessRFC2822": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::pt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function pt(e, t, n) {\n    let r; let i; let o = 0;\n    const a = pt.prefilters.length;\n    const s = w.Deferred().always(() => { delete u.elem; });\n    var u = function () { if (i) return !1; for (var t = nt || st(), n = Math.max(0, l.startTime + l.duration - t), r = 1 - (n / l.duration || 0), o = 0, a = l.tweens.length; o < a; o++) l.tweens[o].run(r); return s.notifyWith(e, [l, r, n]), r < 1 && a ? n : (a || s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l]), !1); };\n    var l = s.promise({\n      elem: e,\n      props: w.extend({}, t),\n      opts: w.extend(!0, { specialEasing: {}, easing: w.easing._default }, n),\n      originalProperties: t,\n      originalOptions: n,\n      startTime: nt || st(),\n      duration: n.duration,\n      tweens: [],\n      createTween(t, n) { const r = w.Tween(e, l.opts, t, n, l.opts.specialEasing[t] || l.opts.easing); return l.tweens.push(r), r; },\n      stop(t) {\n        let n = 0;\n        const r = t ? l.tweens.length : 0; if (i) return this; for (i = !0; n < r; n++) l.tweens[n].run(1); return t ? (s.notifyWith(e, [l, 1, 0]), s.resolveWith(e, [l, t])) : s.rejectWith(e, [l, t]), this;\n      },\n    });\n    const c = l.props; for (ft(c, l.opts.specialEasing); o < a; o++) if (r = pt.prefilters[o].call(l, e, c, l.opts)) return g(r.stop) && (w._queueHooks(l.elem, l.opts.queue).stop = r.stop.bind(r)), r;\n    return w.map(c, lt, l), g(l.opts.start) && l.opts.start.call(e, l), l.progress(l.opts.progress).done(l.opts.done, l.opts.complete).fail(l.opts.fail).always(l.opts.always), w.fx.timer(w.extend(u, { elem: e, anim: l, queue: l.opts.queue })), l;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::r": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "r = function (e) {\n        const t = e.stop;\n        delete e.stop, t(n);\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::re": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "re = function () { p(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::regexEscape": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::relativeTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function relativeTime(number, withoutSuffix, string, isFuture) {\n    const output = this._relativeTime[string];\n    return (isFunction(output))\n      ? output(number, withoutSuffix, string, isFuture)\n      : output.replace(/%d/i, number);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::relativeTime$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    const duration = createDuration(posNegDuration).abs();\n    const seconds = round(duration.as('s'));\n    const minutes = round(duration.as('m'));\n    const hours = round(duration.as('h'));\n    const days = round(duration.as('d'));\n    const months = round(duration.as('M'));\n    const years = round(duration.as('y'));\n\n    const a = seconds <= thresholds.ss && ['s', seconds]\n      || seconds < thresholds.s && ['ss', seconds]\n      || minutes <= 1 && ['m']\n      || minutes < thresholds.m && ['mm', minutes]\n      || hours <= 1 && ['h']\n      || hours < thresholds.h && ['hh', hours]\n      || days <= 1 && ['d']\n      || days < thresholds.d && ['dd', days]\n      || months <= 1 && ['M']\n      || months < thresholds.M && ['MM', months]\n      || years <= 1 && ['y'] || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::removeElement": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function removeElement(id) {\n  const element = document.getElementById(id);\n  element.parentNode.removeChild(element);\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::removeFormattingTokens": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::replaceLongDateFormatTokens": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::s": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "s = function (e) { return function (n) { r[e] = this, i[e] = arguments.length > 1 ? o.call(arguments) : n, --t || a.resolveWith(r, i); }; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::se": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function se(e) { return e[b] = !0, e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::set": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function set(config) {\n    let prop; let\n      i;\n    for (i in config) {\n      prop = config[i];\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this[`_${i}`] = prop;\n      }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n      `${this._dayOfMonthOrdinalParse.source || this._ordinalParse.source\n      }|${(/\\d{1,2}/).source}`,\n    );\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::set$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d[`set${mom._isUTC ? 'UTC' : ''}${unit}`](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d[`set${mom._isUTC ? 'UTC' : ''}${unit}`](value);\n      }\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setHookCallback": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setHookCallback(callback) {\n    hookCallback = callback;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setHoursOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setHoursOffset(a) {\n  hoursOffset = a;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setMinutesOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setMinutesOffset(a) {\n  minutesOffset = a;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setMonth": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setMonth(mom, value) {\n    let dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value);\n        // TODO: Another silent failure?\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d[`set${mom._isUTC ? 'UTC' : ''}Month`](value, dayOfMonth);\n    return mom;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setOffsetToLocal": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setOffsetToParsedOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      const tZone = offsetFromString(matchOffset, this._i);\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setOffsetToUTC": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setSecondsOffset": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setSecondsOffset(a) {\n  secondsOffset = a;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setTimeToDefaultTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setTimeToDefaultTime() {\n  currentTime = new Date();\n  currentTime.setHours(10);\n  currentTime.setMinutes(11);\n  currentTime.setSeconds(31);\n  monthdate = currentTime.getDate();\n  weekday_num = currentTime.getDay();\n  current_seconds = currentTime.getSeconds();\n  current_minutes = currentTime.getMinutes();\n  current_hours = currentTime.getHours();\n  current_milliseconds = currentTime.getMilliseconds();\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::setWeekAll": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function setWeekAll(weekYear, week, weekday, dow, doy) {\n    const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    const date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::shiftWeekdays": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::showCurrentTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function showCurrentTime() {\n        setMinutesOffset(0);\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::showStaticWatchOnTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function showStaticWatchOnTime() {\n  if (all_p_to_be_loaded < 1) {\n    prepareTimepieceElements();\n    setTimeToDefaultTime();\n    updateOnTimeDisplayOnce();\n  } else {\n    timeoutID = window.setTimeout('showStaticWatchOnTime()', tickDelay);\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::showTimeIn": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function showTimeIn(a, offset, elem, DST_TiMEZONE) {\n        const b = new Date();\n        let tempOffset = b.getTimezoneOffset();\n        // console.log(b.getTimezoneOffset())\n        today = `${b.getFullYear()}-${b.getMonth()}-${b.getDate()}-${b.getHours()}`;\n        if (clockSettings.theCityText !== '' && elem == '') {\n          if (a) {\n            if ((names[0]).replace(/\\+\\b/gi, ' ') == clockSettings.theCityText) {\n              tempOffset += 60 * timezones[0];\n              // gettimezoneDST = getDST(new Date(), clockSettings.customDST);\n              // if (gettimezoneDST == 100) {\n              //     tempOffset += 60;\n              // }\n              cityTime(tempOffset, timezones[0], '');\n              // console.log((getAllUrlclockSettings().dst*60) + b.getTimezoneOffset())\n              tOffset = getAllUrlclockSettings().utc * 60;\n              t2Offset = tOffset + b.getTimezoneOffset();\n              // console.log(tOffset)\n              setMinutesOffset(t2Offset);\n            }\n          }\n        }\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::sign": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function sign(x) {\n    return ((x > 0) - (x < 0)) || +x;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::spinToCurrentTimeAfterDelay": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function spinToCurrentTimeAfterDelay(a) {}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::st": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function st() { return e.setTimeout(() => { nt = void 0; }), nt = Date.now(); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::startOf": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function startOf(units) {\n    let time;\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    const startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n    hooks.updateOffset(this, true);\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::startWatchEngine": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function startWatchEngine() {\n  //            if (window.addEventListener) {\n  //                window.addEventListener(\"load\", function() {\n  startWatchEngineWhenReady();\n  //                }, false)\n  //            } else if (window.attachEvent) {\n  //                window.attachEvent(\"onload\", function() {\n  //                    startWatchEngineWhenReady()\n  //                })\n  //            }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::startWatchEngineWhenReady": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function startWatchEngineWhenReady() {\n  if (all_p_to_be_loaded < 1) {\n    prepareTimepieceElements();\n    //                updateOnTimeDisplayOvertime();\n    window.setTimeout(updateOnTimeDisplayOvertime, 0);\n  } else {\n    requestAnimFrame(startWatchEngineWhenReady);\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::stringGet": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function stringGet(units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::stringSet": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      const prioritized = getPrioritizedUnits(units);\n      for (let i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n    return this;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::substituteTimeAgo": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::subtract$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::t": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function t(n, i) { return e.push(`${n} `) > r.cacheLength && delete t[e.shift()], t[`${n} `] = i; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::te": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function te(e) { return e === 'true' || e !== 'false' && (e === 'null' ? null : e === `${+e}` ? +e : Z.test(e) ? JSON.parse(e) : e); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::to": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function to(time, withoutSuffix) {\n    if (this.isValid()\n      && ((isMoment(time) && time.isValid())\n        || createLocal(time).isValid())) {\n      return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);\n    }\n    return this.localeData().invalidDate();\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toArray": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toArray() {\n    const m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toDate() {\n    return new Date(this.valueOf());\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toISOString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n    const utc = keepOffset !== true;\n    const m = utc ? this.clone().utc() : this;\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      }\n      return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n    }\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toISOString$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    let seconds = abs$1(this._milliseconds) / 1000;\n    const days = abs$1(this._days);\n    let months = abs$1(this._months);\n    let minutes; let hours; let\n      years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    const Y = years;\n    const M = months;\n    const D = days;\n    const h = hours;\n    const m = minutes;\n    const s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    const total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    const totalSign = total < 0 ? '-' : '';\n    const ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    const daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    const hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n    return `${totalSign}P${\n      Y ? `${ymSign + Y}Y` : ''\n    }${M ? `${ymSign + M}M` : ''\n    }${D ? `${daysSign + D}D` : ''\n    }${(h || m || s) ? 'T' : ''\n    }${h ? `${hmsSign + h}H` : ''\n    }${m ? `${hmsSign + m}M` : ''\n    }${s ? `${hmsSign + s}S` : ''}`;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toInt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toInt(argumentForCoercion) {\n    const coercedNumber = +argumentForCoercion;\n    let value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toJSON": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toNow": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toObject": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toObject() {\n    const m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds(),\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::toString": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::tt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function tt(e, t, n, r, i) { return new tt.prototype.init(e, t, n, r, i); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::u": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "u = function () {\n      for (i = i || e.once, r = t = !0; a.length; s = -1) { n = a.shift(); while (++s < o.length) !1 === o[s].apply(n[0], n[1]) && e.stopOnFalse && (s = o.length, n = !1); }\n      e.memory || (n = !1), t = !1, i && (o = n ? [] : '');\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ue": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ue(e) { let t = d.createElement('fieldset'); try { return !!e(t); } catch (e) { return !1; } finally { t.parentNode && t.parentNode.removeChild(t), t = null; } }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::unescapeFormat": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4));\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::unix": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::untruncateYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function untruncateYear(yearStr) {\n    const year = parseInt(yearStr, 10);\n    if (year <= 49) {\n      return 2000 + year;\n    } if (year <= 999) {\n      return 1900 + year;\n    }\n    return year;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateDisplay": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateDisplay() {\n  if (cyclop_mask_p.url) {\n    var a = document.getElementById(canvasId);\n    var b = a.getContext('2d');\n    placeCanvas(b, true);\n    drawTimepiece(b, true);\n    b.save();\n    b.translate(-global_watch_p.xcenter, -global_watch_p.ycenter);\n    b.globalCompositeOperation = 'destination-in';\n    b.drawImage(cyclop_mask_p.image, 0, 0, cyclop_mask_p.width, cyclop_mask_p.height);\n    b.restore();\n    b.restore();\n  }\n  var a = document.getElementById(canvasId);\n  if (a.getContext) {\n    var b = a.getContext('2d');\n    placeCanvas(b, true);\n    drawTimepiece(b, false);\n    if (cyclop_mask_p.url) {\n      b.save();\n      b.translate(-global_watch_p.xcenter, -global_watch_p.ycenter);\n      b.globalCompositeOperation = 'destination-out';\n      b.drawImage(cyclop_mask_p.image, 0, 0, cyclop_mask_p.width, cyclop_mask_p.height);\n      b.restore();\n    }\n    b.restore();\n  } else {\n    alert('no context');\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateLocale": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateLocale(name, config) {\n    if (config != null) {\n      let locale; let tmpLocale; let\n        parentConfig = baseConfig;\n      // MERGE\n      tmpLocale = loadLocale(name);\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale;\n\n      // backwards compat for now: also set the locale\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n    return locales[name];\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateOnTimeDisplayOnce": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateOnTimeDisplayOnce() {\n  updateTimeCalculations();\n  updateDisplay();\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateOnTimeDisplayOvertime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateOnTimeDisplayOvertime() {\n  updateTime();\n  updateOnTimeDisplayOnce();\n  timeoutID = window.setTimeout(updateOnTimeDisplayOvertime, tickDelay);\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateShownTimeInHTMLComponent": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateShownTimeInHTMLComponent() {\n        tempString = getCurrentShownTime();\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateShownTimeInHTMLComponentOvertime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateShownTimeInHTMLComponentOvertime() {\n        updateShownTimeInHTMLComponent();\n        requestAnimFrame(updateShownTimeInHTMLComponentOvertime());\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateText": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateText(updated) {\n          if (cityTime_seconds >= 0 && cityTime_seconds < 1) {\n            update = document.getElementById(`rolexClockCityTime${elem}`).innerHTML = `${f} ${cityTime_hours}:${cityTime_minutes}${g}`;\n            updateTime(thenewOffset, customOffset, elem);\n          } else if (checked === undefined) {\n            update = document.getElementById(`rolexClockCityTime${elem}`).innerHTML = `${f} ${cityTime_hours}:${cityTime_minutes}${g}`;\n            var checked = 1;\n\n            updateTime(thenewOffset, customOffset, elem);\n          }\n        }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateTime() {\n  if (clockSettings.isCountdownClock) {\n    if (updated == true) {\n      current_seconds += 1000 / 10;\n\n      if (current_seconds >= 60) {\n        // console.log(current_seconds)\n        currentTime = new Date();\n        currentTime.setHours(currentTime.getHours() + hoursOffset);\n        currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n        currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n        current_hours = currentTime.getHours();\n        current_minutes = currentTime.getMinutes();\n        current_seconds = currentTime.getSeconds();\n        current_milliseconds = currentTime.getMilliseconds();\n      }\n      // console.log(currentTime)\n    } else {\n      currentTime = new Date();\n      // console.log(current_seconds)\n      currentTime.setHours(currentTime.getHours() + hoursOffset);\n      currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n      currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n      monthdate = currentTime.getDate(); // n\u00ac\u00a8\u00ac\u00ae\u00ac\u00a8\u00ac\u00c6\u00ac\u00a8\u00ac\u00ae\u00ac\u00a8\u221a\u00dc\u201a\u00c4\u00f6\u221a\u00d1\u221a\u2202\u201a\u00e0\u00f6\u221a\u00eb\u201a\u00e0\u00f6\u201a\u00e0\u00c7\u201a\u00c4\u00f6\u221a\u2020\u221a\u2202\u201a\u00c4\u00f6\u221a\u00d1\u201a\u00c4\u2020\u201a\u00c4\u00f6\u221a\u2020\u221a\u2202\u00ac\u00a8\u201a\u00d1\u00a2 du jour local: 0..31\n      weekday_num = currentTime.getDay(); // jour de la semaine local: 0=> sun, ..., 6=> sat\n      current_hours = currentTime.getHours();\n      current_minutes = currentTime.getMinutes();\n      current_seconds = currentTime.getSeconds();\n      current_milliseconds = currentTime.getMilliseconds();\n      // console.log(current_seconds,currentTime.getMilliseconds())\n      // console.log(monthdate,weekday_num,current_hours,current_minutes,current_seconds)\n      updated = true;\n    }\n  } else {\n    currentTime = new Date();\n    currentTime.setHours(currentTime.getHours() + hoursOffset);\n    currentTime.setMinutes(currentTime.getMinutes() + minutesOffset);\n    currentTime.setSeconds(currentTime.getSeconds() + secondsOffset);\n    monthdate = currentTime.getDate();\n    weekday_num = currentTime.getDay();\n    current_seconds = currentTime.getSeconds();\n    current_minutes = currentTime.getMinutes();\n    current_hours = currentTime.getHours();\n    current_milliseconds = currentTime.getMilliseconds();\n  }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::updateTimeCalculations": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function updateTimeCalculations() {\n  let a = current_hours;\n  weekday_num++;\n  if (a > 12) {\n    a -= 12;\n  }\n  display_calculation.seconds_base_60 = current_seconds * timeSlice;\n  display_calculation.seconds_base_60 += current_milliseconds * timeSlice / 1e3;\n  display_calculation.seconds_base_60 += rotCorrect;\n  display_calculation.minutes_base_60 = current_minutes * timeSlice;\n  display_calculation.minutes_base_60 += current_seconds * timeSlice / 60;\n  display_calculation.minutes_base_60 += rotCorrect;\n  display_calculation.minutes_base_30 = current_minutes * timeSlice * 2;\n  display_calculation.minutes_base_30 += current_seconds * timeSlice * 2 / 60;\n  display_calculation.minutes_base_30 += rotCorrect;\n  display_calculation.hours_base_12 = a * timeSlice * 5;\n  display_calculation.hours_base_12 += current_minutes * timeSlice / 12;\n  display_calculation.hours_base_12 += rotCorrect;\n  display_calculation.monthdate_base_31 = monthdate * (timeSlice / 6) * (360 / 31);\n  display_calculation.monthdate_base_31 += rotCorrect;\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ut": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ut(e, t) {\n    let n; let r = 0;\n    const i = { height: e }; for (t = t ? 1 : 0; r < 4; r += 2 - t) i[`margin${n = oe[r]}`] = i[`padding${n}`] = e; return t && (i.opacity = i.width = e), i;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::utcStartOfDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    }\n    return Date.UTC(y, m, d);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::valueOf": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function valueOf() {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::valueOf$1": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    return (\n      this._milliseconds\n      + this._days * 864e5\n      + (this._months % 12) * 2592e6\n      + toInt(this._months / 12) * 31536e6\n    );\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ve": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ve(e) { for (var t = 0, n = e.length, r = ''; t < n; t++) r += e[t].value; return r; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::visChange": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function visChange() {\n  if (isHidden()) { updated = false; } else { updateTime(); }\n}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::vt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function vt(e) { return (e.match(M) || []).join(' '); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::w": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "w = function (e, t) { return new w.fn.init(e, t); }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::warn": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false\n      && (typeof console !== 'undefined') && console.warn) {\n      console.warn(`Deprecation warning: ${msg}`);\n    }\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::we": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function we(e, t, n, r, i) { for (var o, a = [], s = 0, u = e.length, l = t != null; s < u; s++)(o = e[s]) && (n && !n(o, r, i) || (a.push(o), l && t.push(s))); return a; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::weekOfYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function weekOfYear(mom, dow, doy) {\n    const weekOffset = firstWeekOffset(mom.year(), dow, doy);\n    const week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1;\n    let resWeek; let\n      resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear,\n    };\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::weekdaysMinRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      }\n      return this._weekdaysMinRegex;\n    }\n    if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n      this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n    }\n    return this._weekdaysMinStrictRegex && isStrict\n      ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::weekdaysRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      }\n      return this._weekdaysRegex;\n    }\n    if (!hasOwnProp(this, '_weekdaysRegex')) {\n      this._weekdaysRegex = defaultWeekdaysRegex;\n    }\n    return this._weekdaysStrictRegex && isStrict\n      ? this._weekdaysStrictRegex : this._weekdaysRegex;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::weekdaysShortRegex": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      }\n      return this._weekdaysShortRegex;\n    }\n    if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n      this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n    }\n    return this._weekdaysShortStrictRegex && isStrict\n      ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::weeks": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function weeks() {\n    return absFloor(this.days() / 7);\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::weeksInYear": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function weeksInYear(year, dow, doy) {\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::x": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function x(e) { return e == null ? `${e}` : typeof e === 'object' || typeof e === 'function' ? l[c.call(e)] || 'object' : typeof e; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::xe": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function xe(e) {\n      return e.length > 1 ? function (t, n, r) {\n        let i = e.length; while (i--) if (!e[i](t, n, r)) return !1;\n        return !0;\n      } : e[0];\n    }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::xt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function xt(e) { return Array.isArray(e) ? e : typeof e === 'string' ? e.match(M) || [] : []; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::y": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "y = function e(t) { return t != null && t === t.window; }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::ye": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function ye() {}",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::yourTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function yourTime() {\n        const a = new Date();\n        a.setHours(a.getHours());\n        a.setMinutes(a.getMinutes());\n        a.setSeconds(a.getSeconds());\n        const b = a.getSeconds();\n        let c = a.getMinutes();\n        let d = a.getHours();\n        const e = a.getDay();\n        if (e == 0) {\n          var f = 'Sun';\n        } else if (e == 1) {\n          var f = 'Mon';\n        } else if (e == 2) {\n          var f = 'Tue';\n        } else if (e == 3) {\n          var f = 'Wed';\n        } else if (e == 4) {\n          var f = 'Thu';\n        } else if (e == 5) {\n          var f = 'Fri';\n        } else if (e == 6) {\n          var f = 'Sat';\n        }\n        if (language === 'en' || language === 'kr') clockSettings.amPm = true;\n        clockSettings.time24hours = false;\n        if (clockSettings.amPm == true) {\n          var g = ' ';\n          if (d >= 12) {\n            g = ' PM';\n          } else {\n            g = ' AM';\n          }\n        } else {\n          g = '';\n        }\n        if (clockSettings.time24hours == true) {\n          g = '';\n        } else if (d >= 13) {\n          d -= 12;\n        }\n        if (clockSettings.trailingZero == true) {\n          if (d < 10) {\n            d = `0${d}`;\n          }\n        }\n        if (c < 10) { c = `0${c}`; }\n\n        if (clockSettings.showText == true) {\n          if (clockSettings.showDay == true) {\n            f = f;\n          } else {\n            f = '';\n          }\n          update = document.getElementById('rolexClockYourTime').innerHTML = `${f} ${d}:${c}${g}`;\n        }\n        if (clockSettings.upperCase == true) {\n          document.getElementById('rolexClockYourTime').style.textTransform = 'uppercase';\n        }\n\n        setTimeout(() => {\n          document.getElementById(canvasId).setAttribute('tabindex', '0');\n          document.getElementById(canvasId).setAttribute('role', 'img');\n          // if (lang == )\n        }, 1000);\n        requestAnimFrame(yourTime);\n      }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::z": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "z = function (e, t, n, r, i, o, a) {\n    let s = 0;\n    const u = e.length;\n    let l = n == null; if (x(n) === 'object') { i = !0; for (s in n) z(e, t, s, n[s], !0, o, a); } else if (void 0 !== r && (i = !0, g(r) || (a = !0), l && (a ? (t.call(e, r), t = null) : (l = t, t = function (e, t, n) { return l.call(w(e), n); })), t)) for (; s < u; s++) t(e[s], n, a ? r : r.call(e[s], s, t(e[s], n))); return i ? e : l ? t.call(e) : u ? t(e[0], n) : o;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::zeroFill": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function zeroFill(number, targetLength, forceSign) {\n    const absNumber = `${Math.abs(number)}`;\n    const zerosToFill = targetLength - absNumber.length;\n    const sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-')\n      + (10 ** Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }",
            "score": -1.0
        },
        "blocks/promotion/rolex/toggle.min.js::zt": {
            "changes_after_merge": 0,
            "file_path": "blocks/promotion/rolex/toggle.min.js",
            "merged_function": "function zt(e, t) {\n    let n; let r; const\n      i = w.ajaxSettings.flatOptions || {}; for (n in t) void 0 !== t[n] && ((i[n] ? e : r || (r = {}))[n] = t[n]); return r && w.extend(!0, e, r), e;\n  }",
            "score": -1.0
        },
        "blocks/related-stories/related-stories.js::decorate": {
            "changes_after_merge": 4,
            "file_path": "blocks/related-stories/related-stories.js",
            "merged_function": "async function decorate(block) {\n  // const stories = block.querySelectorAll('a');\n  const videoPrefix = 'https://pga-tour-res.cloudinary.com/image/upload/c_fill,f_auto,g_face,h_311,q_auto,w_425/v1/';\n  const damPrefix = 'https://www.pgatour.com';\n  const config = readBlockConfig(block);\n  const storiesURL = 'https://www.pgatour.com/bin/data/feeds/relatedcontent.json';\n  const limit = config.limit || 5;\n  block.innerHTML = '';\n\n  const observer = new IntersectionObserver(async (entries) => {\n    if (entries.some((entry) => entry.isIntersecting)) {\n      observer.disconnect();\n      if (storiesURL) {\n        // populate related stories content\n        /* TODO: add CORS header, to be replaced with direct API */\n        const directURL = `${storiesURL}/path=/content&tags=${config.tags.replace(/ /g, '')}&relatedTo=/content/the-players${window.location.pathname}&size=${limit}`;\n        const resp = await fetch(`https://little-forest-58aa.david8603.workers.dev/?url=${encodeURIComponent(directURL)}`);\n        const json = await resp.json();\n        const title = document.createElement('h3');\n        title.textContent = 'Related to this story';\n        const ul = document.createElement('ul');\n        json.items.forEach((story) => {\n          const prefix = story.image.startsWith('brightcove') ? videoPrefix : damPrefix;\n          const li = document.createElement('li');\n          li.classList.add('related-stories-story', `related-stories-story-${story.type}`);\n          const video = story.videoId ? '<div class=\"related-stories-story-play\"></div>' : '';\n          const a = document.createElement('a');\n          a.href = story.link;\n          a.innerHTML = `\n            <div class=\"related-stories-story-image\">\n              <picture><img src=\"${prefix}${story.image}\" alt=\"${story.description}\" /></picture>${video}\n            </div>\n            <div class=\"related-stories-story-body\">\n              ${story.franchise ? `<p>${story.franchise}</p>` : ''}\n              <a href=\"${story.link}\">${story.title}</a>\n            </div>\n          `;\n          li.append(a);\n          ul.append(li);\n        });\n        block.append(title, ul);\n      }\n      updateExternalLinks(block);\n    }\n  }, { threshold: 0 });\n\n  observer.observe(block);\n}",
            "score": -0.813953488372093
        },
        "blocks/related-stories/related-stories.js::getArticles": {
            "changes_after_merge": 1,
            "file_path": "blocks/related-stories/related-stories.js",
            "merged_function": "async function getArticles(limit, placeholders) {\n  try {\n    const resp = await fetchGraphQL(`query GetNewsArticles($tour: TourCode, $franchise: String, $franchises: [String!], $playerId: ID, $playerIds: [ID!], $limit: Int, $offset: Int, $tournamentNum: String) {\n      newsArticles(tour: $tour, franchise: $franchise, franchises: $franchises, playerId: $playerId, playerIds: $playerIds, limit: $limit, offset: $offset, tournamentNum: $tournamentNum) {\n          articles {\n              id\n              franchise\n              franchiseDisplayName\n              articleImage\n              headline\n              publishDate\n              teaserContent\n              teaserHeadline\n              updateDate\n              url\n          }\n      }\n  }`, {\n      tournamentNum: placeholders.tournamentId,\n      limit,\n    });\n    if (resp.ok) {\n      const json = await resp.json();\n      if (json.data && json.data.newsArticles && json.data.newsArticles.articles) {\n        const articles = json.data.newsArticles.articles.map((article) => ({\n          url: article.url,\n          type: 'article',\n          image: article.articleImage,\n          title: article.teaserHeadline,\n          date: article.updateDate,\n          franchise: article.franchise,\n          franchiseDisplayName: article.franchiseDisplayName,\n        }));\n        return articles;\n      }\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Could not load news', err);\n  }\n\n  // return an empty array if fail, so that local news can still be displayed\n  return [];\n}",
            "score": -0.9534883720930233
        },
        "blocks/social/social.js::alterRows": {
            "changes_after_merge": 1,
            "file_path": "blocks/social/social.js",
            "merged_function": "function alterRows(wrapper, offset, moreButton, lessButton) {\n  let rows = parseInt(wrapper.dataset.rows, 10);\n  rows += offset;\n  revealRows(wrapper, rows, moreButton, lessButton);\n}",
            "score": -0.9534883720930233
        },
        "blocks/social/social.js::buildFacebookTile": {
            "changes_after_merge": 0,
            "file_path": "blocks/social/social.js",
            "merged_function": "function buildFacebookTile(tile, data) {\n  const { from } = data;\n  const profileURL = from.link;\n  buildSocialTile(tile, {\n    user: {\n      profileUrl: profileURL,\n      name: from.name,\n      handle: from.broadcast_name,\n      img: {\n        url: from.picture.data.url,\n      },\n    },\n    created_time: data.created_time,\n    message: data.message,\n    media: {\n      src: data?.attachments?.data[0]?.media?.image?.src,\n    },\n  }, 'facebook');\n\n  // setup facebook footer\n  const foot = document.createElement('div');\n  foot.className = 'social-tile-footer';\n  foot.innerHTML = '';\n  tile.append(foot);\n}",
            "score": -1.0
        },
        "blocks/social/social.js::buildImageFeed": {
            "changes_after_merge": 0,
            "file_path": "blocks/social/social.js",
            "merged_function": "async function buildImageFeed(wrapper, config) {\n  const resp = await fetch(`https://api.massrelevance.com/6krq3qgxx2/${config.stream}.json?limit=40&tweet_mode=extended`);\n  const availableTiles = [];\n  const tilesOnPage = [];\n  if (resp.ok) {\n    const stream = await resp.json();\n    let index = 0;\n    stream.forEach((item, i) => {\n      const tile = document.createElement('li');\n      const { network } = item;\n      let username;\n      let profileUrl;\n      let postUrl;\n      let imageUrl;\n      if (network === 'twitter') {\n        username = item.user.screen_name;\n        profileUrl = `${TWITTER_URL}${username}/`;\n        postUrl = item.full_text.split(' ').pop();\n        imageUrl = item.entities.media[0].media_url_https;\n      } else if (network === 'instagram') {\n        username = item.user.username;\n        profileUrl = `${INSTAGRAM_URL}${username}/`;\n        postUrl = item.link;\n        imageUrl = item.images.low_resolution.url;\n      }\n      if (network === 'twitter' || network === 'instagram') {\n        const imageTile = buildImageTile(tile, {\n          network, username, profileUrl, postUrl, imageUrl,\n        });\n        if (tilesOnPage.length < 10 && i % 2 === 0) { // attempt to avoid duplicates\n          [...wrapper.children][index].replaceWith(tile);\n          tilesOnPage.push(tile);\n          index += 1;\n        } else {\n          availableTiles.push(imageTile);\n        }\n      }\n    });\n    refreshImageTiles(wrapper, availableTiles, tilesOnPage);\n  }\n}",
            "score": -1.0
        },
        "blocks/social/social.js::buildImageTile": {
            "changes_after_merge": 0,
            "file_path": "blocks/social/social.js",
            "merged_function": "function buildImageTile(tile, data) {\n  tile.innerHTML = `<a href=\"${data.postUrl}\"></a>`;\n  const a = tile.querySelector('a');\n  const image = document.createElement('div');\n  image.className = 'social-tile-img';\n  image.innerHTML = `<img src=\"${data.imageUrl}\" />`;\n  const body = document.createElement('div');\n  body.className = 'social-tile-body';\n  body.innerHTML = `<p><a href=\"${data.profileUrl}\"><span class=\"icon icon-${data.network}\"></span></a></p>\n    <p class=\"social-tile-screenname\"><a href=\"${data.profileUrl}\" target=\"_blank\">${data.username}</span></a></p>`;\n  a.append(image, body);\n  decorateIcons(tile);\n  return tile;\n}",
            "score": -1.0
        },
        "blocks/social/social.js::buildProfilesTile": {
            "changes_after_merge": 1,
            "file_path": "blocks/social/social.js",
            "merged_function": "function buildProfilesTile(config) {\n  const profiles = document.createElement('li');\n  profiles.className = 'social-tile-profiles';\n  const socialProfiles = document.createElement('div');\n  socialProfiles.innerHTML = '<h3>Follow Us</h3><p class=\"button-container\"></p>';\n  Object.keys(config).forEach((key) => {\n    if (key === 'newsletter') {\n      const newsletter = document.createElement('div');\n      newsletter.innerHTML = `<h3>Get Updates</h3>\n      <p class=\"button-container\">\n        <a href=\"${config[key]}\" class=\"button social-profile\"><span class=\"icon icon-email\"></span></a>\n      </p>`;\n      profiles.append(newsletter);\n    } else {\n      const a = document.createElement('a');\n      a.className = 'button social-profile';\n      a.href = config[key];\n      a.innerHTML = `<span class=\"icon icon-${key}\"></span>`;\n      socialProfiles.querySelector('.button-container').append(a);\n    }\n  });\n  if (socialProfiles.querySelector('a')) profiles.append(socialProfiles);\n  decorateIcons(profiles);\n  return profiles;\n}",
            "score": -0.9534883720930233
        },
        "blocks/social/social.js::buildSocialFeed": {
            "changes_after_merge": 2,
            "file_path": "blocks/social/social.js",
            "merged_function": "async function buildSocialFeed(wrapper, config) {\n  const placeholders = await fetchPlaceholders();\n  // setup profiles tile\n  const profilesTile = buildProfilesTile(config);\n  // fetch social feed\n  wrapper.append(profilesTile);\n  const tournament = `${placeholders.tourCode}${placeholders.tournamentId}`;\n  const resp = await fetch(`https://api.massrelevance.com/brgyan07p/tournament_${tournament}.json`);\n  if (resp.ok) {\n    const feed = await resp.json();\n    feed.forEach((item) => {\n      const tile = document.createElement('li');\n      if (item.network === 'twitter') buildTwitterTile(tile, item);\n      decorateIcons(tile);\n      wrapper.append(tile);\n    });\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/social/social.js::buildSocialTile": {
            "changes_after_merge": 0,
            "file_path": "blocks/social/social.js",
            "merged_function": "function buildSocialTile(tile, data, network) {\n  const profileURL = data.user.profileUrl;\n  const grid = document.createElement('div');\n  grid.className = `social-tile-grid social-tile social-tile-${network}`;\n  // setup header\n  const head = document.createElement('div');\n  head.className = `social-header social-${network}-header`;\n  head.innerHTML = `<a href=\"${profileURL}\" class=\"social-img social-${network}-img\"><img src=\"${data.user.img.url}\" alt=\"${data.user.name} profile picture\" /></a>\n     <p class=\"social-username social-${network}-username\"><a href=\"${profileURL}\">${data.user.name}</a></p>\n     <a href=\"${FACEBOOK_URL}\" class=\"social-network social-${network}-network\"><span class=\"icon icon-${network}\"></span></a>\n     <p class=\"social-screenname social-${network}-screenname\"><a href=\"${profileURL}\">${data.user.handle}</a></p>\n     <p class=\"social-date social-${network}-date\">${writeDate(data.created_time)}</p>`;\n  grid.append(head);\n  // setup  post\n  const post = document.createElement('div');\n  post.className = `social-post social-${network}-post`;\n  post.innerHTML = `<div class=\"social-post-body social-${network}-post-body\">\n    <p>${data.message ? data.message : ''}</p>\n  </div>`;\n  wrapInLinks(post.querySelector('.social-post-body'));\n  if (data.media && data.media.src) {\n    const img = document.createElement('img');\n    img.className = 'social-post-img';\n    img.src = data.media.src;\n    post.prepend(img);\n  }\n  grid.append(post);\n  tile.append(grid);\n}",
            "score": -1.0
        },
        "blocks/social/social.js::buildTwitterTile": {
            "changes_after_merge": 2,
            "file_path": "blocks/social/social.js",
            "merged_function": "function buildTwitterTile(tile, data) {\n  const { user } = data;\n  const profileURL = `${TWITTER_URL}${user.screen_name}`;\n  const grid = document.createElement('div');\n  grid.className = 'social-tile-grid social-tile-twitter';\n  // setup twitter header\n  const head = document.createElement('div');\n  head.className = 'social-twitter-header';\n  head.innerHTML = `<a href=\"${profileURL}\" class=\"social-twitter-img\"><img src=\"${user.profile_image_url_https}\" alt=\"${user.name} profile picture\" /></a>\n    <p class=\"social-twitter-username\"><a href=\"${profileURL}\">${user.name}</a></p>\n    <a href=\"${TWITTER_URL}\" class=\"social-twitter-network\"><span class=\"icon icon-twitter\"></span></a>\n    <p class=\"social-twitter-screenname\"><a href=\"${profileURL}\">${user.screen_name}</a></p>\n    <p class=\"social-twitter-date\">${writeDate(data.created_at)}</p>`;\n  grid.append(head);\n  // setup twitter tweet\n  const tweet = document.createElement('div');\n  tweet.className = 'social-twitter-tweet';\n  tweet.innerHTML = `<div class=\"social-tweet-body\">\n    <p>${data.text}</p>\n  </div>`;\n  wrapInLinks(tweet.querySelector('.social-tweet-body'));\n  if (data.extended_entities && data.extended_entities.media) {\n    const media = data.extended_entities.media[0];\n    const img = document.createElement('img');\n    img.className = 'social-tweet-img';\n    img.src = media.media_url_https;\n    tweet.prepend(img);\n  }\n  grid.append(tweet);\n  // setup twitter footer\n  const foot = document.createElement('div');\n  foot.className = 'social-tile-footer';\n  foot.innerHTML = `<a href=\"${TWITTER_URL}intent/tweet?in_reply_to=${data.id_str}\"><span class=\"icon icon-reply\"></span></a>\n    <a href=\"${TWITTER_URL}intent/retweet?tweet_id=${data.id_str}\"><span class=\"icon icon-retweet\"></span></a>\n    <a href=\"${TWITTER_URL}intent/favorite?tweet_id=${data.id_str}\"><span class=\"icon icon-like\"></span></a>`;\n  tile.append(grid);\n  tile.append(foot);\n}",
            "score": -0.9069767441860466
        },
        "blocks/social/social.js::decorate": {
            "changes_after_merge": 8,
            "file_path": "blocks/social/social.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  block.textContent = '';\n  const placeholders = await fetchPlaceholders();\n\n  const wrapper = document.createElement('ul');\n\n  // setup profiles tile\n  const profilesTile = buildProfilesTile(config);\n  wrapper.append(profilesTile);\n\n  // fetch social feed\n  const tournament = `${placeholders.tourCode}${placeholders.tournamentId}`;\n  const resp = await fetch(`https://api.massrelevance.com/brgyan07p/tournament_${tournament}.json`);\n  if (resp.ok) {\n    const feed = await resp.json();\n    feed.forEach((item) => {\n      const tile = document.createElement('li');\n      if (item.network === 'twitter') buildTwitterTile(tile, item);\n      decorateIcons(tile);\n      wrapper.append(tile);\n    });\n  }\n  block.append(wrapper);\n}",
            "score": -0.627906976744186
        },
        "blocks/social/social.js::initCollapsing": {
            "changes_after_merge": 1,
            "file_path": "blocks/social/social.js",
            "merged_function": "function initCollapsing(wrapper) {\n  wrapper.classList.add('collapsible');\n\n  const buttonContainer = document.createElement('p');\n  buttonContainer.classList.add('button-container');\n\n  const moreButton = document.createElement('a');\n  moreButton.classList.add('button', 'primary', 'more');\n  moreButton.innerText = 'Show More';\n  moreButton.href = '#';\n  moreButton.title = 'More';\n\n  const lessButton = document.createElement('a');\n  lessButton.classList.add('button', 'primary', 'less');\n  lessButton.innerText = 'Show Less';\n  lessButton.href = '#';\n  lessButton.title = 'Less';\n\n  moreButton.addEventListener('click', (e) => {\n    e.preventDefault();\n    alterRows(wrapper, 1, moreButton, lessButton);\n  });\n  lessButton.addEventListener('click', (e) => {\n    e.preventDefault();\n    alterRows(wrapper, -1, moreButton, lessButton);\n  });\n\n  buttonContainer.appendChild(moreButton);\n  buttonContainer.appendChild(lessButton);\n\n  revealRows(wrapper, 2, moreButton, lessButton);\n  window.addEventListener('resize', () => {\n    revealRows(wrapper, wrapper.dataset.rows, moreButton, lessButton);\n  });\n\n  return buttonContainer;\n}",
            "score": -0.9534883720930233
        },
        "blocks/social/social.js::randomIndex": {
            "changes_after_merge": 0,
            "file_path": "blocks/social/social.js",
            "merged_function": "randomIndex = (max) => Math.floor(Math.random() * (max + 1))",
            "score": -1.0
        },
        "blocks/social/social.js::refreshImageTiles": {
            "changes_after_merge": 1,
            "file_path": "blocks/social/social.js",
            "merged_function": "function refreshImageTiles(wrapper, available, onPage) {\n  setInterval(() => {\n    const randomIndex = (max) => Math.floor(Math.random() * (max + 1));\n    const tiles = wrapper.children;\n    const toRefreshIndex = randomIndex(tiles.length);\n    const tileToRefresh = tiles[toRefreshIndex];\n    if (tileToRefresh) {\n      const refreshIndex = randomIndex(available.length);\n      const newTile = available[refreshIndex];\n      if (newTile) {\n        available.splice(refreshIndex, 1);\n        available.push(tileToRefresh);\n        onPage.splice(toRefreshIndex, 1);\n        onPage.push(newTile);\n        tileToRefresh.replaceWith(newTile);\n      }\n    }\n  }, 3 * 1000);\n}",
            "score": -0.9534883720930233
        },
        "blocks/social/social.js::revealRows": {
            "changes_after_merge": 1,
            "file_path": "blocks/social/social.js",
            "merged_function": "function revealRows(wrapper, rows, moreButton, lessButton) {\n  wrapper.dataset.rows = rows;\n  let perRow = 1;\n  let rowsPerCLick = 3;\n  const large = window.matchMedia('(min-width: 1200px)');\n  const mid = window.matchMedia('(min-width: 900px)');\n  const small = window.matchMedia('(min-width: 700px)');\n  if (small.matches) {\n    perRow = 2;\n    rowsPerCLick = 1;\n  }\n  if (mid.matches) {\n    perRow = 3;\n    rowsPerCLick = 1;\n  }\n  if (large.matches) {\n    perRow = 4;\n    rowsPerCLick = 1;\n  }\n\n  let all = true;\n  wrapper.querySelectorAll('li').forEach((item, idx) => {\n    if (idx >= (perRow * rowsPerCLick * rows)) {\n      item.style.display = 'none';\n      all = false;\n    } else {\n      item.style.display = 'flex';\n    }\n  });\n\n  if (rows < 3) {\n    lessButton.style.display = 'none';\n  } else {\n    lessButton.style.display = 'block';\n  }\n\n  if (all) {\n    moreButton.style.display = 'none';\n  } else {\n    moreButton.style.display = 'block';\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/social/social.js::wrapInLinks": {
            "changes_after_merge": 0,
            "file_path": "blocks/social/social.js",
            "merged_function": "function wrapInLinks(tweet) {\n  const words = tweet.textContent.replace(/\\n/g, ' ').split(' ').filter((w) => w);\n  words.forEach((word, i) => {\n    if (word.startsWith('#')) { // setup hashtag\n      words[i] = `<a href=\"${TWITTER_URL}search?=${word.replace('#', '')}\">${word}</a>`;\n    } else if (word.startsWith('@')) { // setup mention\n      words[i] = `<a href=\"${TWITTER_URL}${word.replace('@', '')}\">${word}</a>`;\n    } else if (word.startsWith('.@')) { // setup mention at beginning of tweet\n      words[i] = `.<a href=\"${TWITTER_URL}${word.replace('.@', '')}\">${word.replace('.', '')}</a>`;\n    } else if (word.startsWith('http')) { // setup link\n      words[i] = `<a href=\"${word}\">${word}</a>`;\n    }\n  });\n  tweet.innerHTML = words.join(' ');\n}",
            "score": -1.0
        },
        "blocks/social/social.js::writeDate": {
            "changes_after_merge": 0,
            "file_path": "blocks/social/social.js",
            "merged_function": "function writeDate(timestamp) {\n  const date = new Date(timestamp);\n  const month = date.toString().substring(4, 7);\n  const day = date.getDate().toString().padStart(2, '0');\n  return `${day} ${month}`;\n}",
            "score": -1.0
        },
        "blocks/sponsors/sponsors.js::decorate": {
            "changes_after_merge": 5,
            "file_path": "blocks/sponsors/sponsors.js",
            "merged_function": "async function decorate(block) {\n  const pages = await lookupPages();\n  const { sponsorOrder } = await fetchPlaceholders();\n  const sponsors = pages.filter((e) => e.path.startsWith('/sponsors/'));\n  const orderedSponsors = [];\n  if (sponsorOrder) {\n    sponsorOrder.split(',').forEach((sp) => {\n      // eslint-disable-next-line no-param-reassign\n      sp = sp.trim();\n      const match = sponsors.find((sponsor) => sponsor.title === sp);\n      if (match) {\n        // remove match from sponsors\n        sponsors.splice(sponsors.indexOf(match), 1);\n        // add match to ordered sponsors\n        orderedSponsors.push(match);\n      }\n    });\n  }\n\n  // combine ordered sponsors with any remaining unordered sponsors\n  [...orderedSponsors, ...sponsors].forEach((sponsor) => {\n    const card = document.createElement('div');\n    card.className = 'sponsors-sponsor';\n    const wrapper = document.createElement('div');\n    const front = document.createElement('div');\n    front.className = 'sponsors-sponsor-front';\n    front.innerHTML = `${createOptimizedPicture(sponsor.image, sponsor.title, false, [{ width: '300' }]).outerHTML}`;\n    const back = document.createElement('div');\n    back.className = `sponsors-sponsor-back sponsor-${toClassName(sponsor.title)}`;\n    back.innerHTML = `<h2>${sponsor.title}</h2>\n      <p>${sponsor.description}</p>\n      <p class=\"button-container\"><a class=\"button\" href=\"${sponsor.link}\">${sponsor.title.replace(' ', '')}.com</a></p>`;\n    wrapper.append(front, back);\n    card.append(wrapper);\n    block.append(card);\n  });\n}",
            "score": -0.7674418604651163
        },
        "blocks/sponsors/sponsors.js::setupSponsors": {
            "changes_after_merge": 0,
            "file_path": "blocks/sponsors/sponsors.js",
            "merged_function": "async function setupSponsors(sponsorLinks = []) {\n  let sponsors = [];\n  let orderedSponsors = [];\n\n  if (sponsorLinks.length) {\n    for (let i = 0; i < sponsorLinks.length; i += 1) {\n      const sponsorLink = sponsorLinks[i];\n      // eslint-disable-next-line no-await-in-loop\n      const resp = await fetch(sponsorLink);\n      // eslint-disable-next-line no-await-in-loop\n      const html = await resp.text();\n      const dp = new DOMParser();\n      const sponsorDoc = dp.parseFromString(html, 'text/html');\n      const title = sponsorDoc.querySelector('title').textContent;\n      const image = sponsorDoc.querySelector('meta[property=\"og:image\"]').content;\n      const description = sponsorDoc.querySelector('meta[property=\"og:description\"]').content;\n      const link = sponsorDoc.querySelector('meta[name=\"external-link\"]').content;\n      const logoWhite = sponsorDoc.querySelector('meta[name=\"logo-white\"]').content;\n\n      sponsors.push({\n        title, image, description, link, logoWhite,\n      });\n    }\n  } else {\n    const pages = await lookupPages();\n    const { sponsorOrder } = await fetchPlaceholders();\n    sponsors = pages.filter((e) => e.path.startsWith('/sponsors/'));\n    orderedSponsors = [];\n    if (sponsorOrder) {\n      sponsorOrder.split(',').forEach((sp) => {\n        // eslint-disable-next-line no-param-reassign\n        sp = sp.trim();\n        const match = sponsors.find((sponsor) => sponsor.title === sp);\n        if (match) {\n          // remove match from sponsors\n          sponsors.splice(sponsors.indexOf(match), 1);\n          // add match to ordered sponsors\n          orderedSponsors.push(match);\n        }\n      });\n    }\n  }\n  return ([...orderedSponsors, ...sponsors]);\n}",
            "score": -1.0
        },
        "blocks/sponsors/sponsors.js::setupSponsorsV2": {
            "changes_after_merge": 0,
            "file_path": "blocks/sponsors/sponsors.js",
            "merged_function": "async function setupSponsorsV2(sponsorRows = []) {\n  const sponsors = [];\n  sponsorRows.forEach((sponsorRow) => {\n    const link = sponsorRow.querySelector('a');\n    const images = sponsorRow.querySelectorAll('picture');\n    const headline = sponsorRow.querySelector('h1');\n    const description = sponsorRow.querySelector('h1 + p');\n\n    sponsors.push({\n      title: headline.textContent,\n      image: images[0].querySelector('img').src,\n      logoWhite: images[1].querySelector('img').src,\n      description: description.textContent,\n      link: link.href,\n    });\n  });\n\n  return sponsors;\n}",
            "score": -1.0
        },
        "blocks/table/table.js::buildCell": {
            "changes_after_merge": 0,
            "file_path": "blocks/table/table.js",
            "merged_function": "function buildCell(col, rowNum) {\n  const cell = rowNum > 0 ? document.createElement('td') : document.createElement('th');\n  cell.innerHTML = typeof col === 'object' ? col.innerHTML : col;\n  if (rowNum) {\n    // eslint-disable-next-line eqeqeq\n    if (cell.textContent == parseInt(cell.textContent, 10)) {\n      // if cell contents are only numerical\n      cell.classList.add('table-cell-num');\n    }\n  }\n  return cell;\n}",
            "score": -1.0
        },
        "blocks/table/table.js::buildDataTable": {
            "changes_after_merge": 0,
            "file_path": "blocks/table/table.js",
            "merged_function": "async function buildDataTable(table, head, body, src, config) {\n  const resp = await fetch(src);\n  if (resp.ok) {\n    const { tours } = await resp.json();\n    if (\n      tours && tours[0]\n      && tours[0].years && tours[0].years && tours[0].years[0]\n      && tours[0].years[0].stats && tours[0].years[0].stats[0]\n    ) {\n      const stats = tours[0].years[0].stats[0];\n      // build table head\n      const headData = [\n        'Rank This Week',\n        'Rank Last Week',\n        'Player Name',\n        stats.rndOrEvt,\n        ...Object.values(stats.statTitles).slice(1),\n      ];\n      headData.forEach((hd) => head.append(buildCell(hd)));\n      // build table body\n      for (let i = 0; i < 5; i += 1) { // display top five\n        const player = stats.details[i];\n        const playerLink = document.createElement('p');\n        playerLink.innerHTML = `<a\n          href=\"https://www.pgatour.com/players/player.${player.plrNum}.${player.plrName.first}-${player.plrName.last}.html\">\n            ${player.plrName.first} ${player.plrName.last}\n          </a>`;\n        const rowData = [\n          player.curRank,\n          player.prevRank,\n          playerLink,\n          ...Object.values(player.statValues),\n        ];\n        const row = document.createElement('tr');\n        rowData.forEach((rd) => row.append(buildCell(rd, i + 1)));\n        body.append(row);\n      }\n      table.append(head, body);\n      // build caption\n      if (stats.statName) {\n        const caption = document.createElement('caption');\n        caption.innerHTML = `${config.year || new Date().getFullYear()} <strong>${stats.statName}</strong>`;\n        table.prepend(caption);\n      }\n    }\n  }\n  return table;\n}",
            "score": -1.0
        },
        "blocks/table/table.js::buildStatsURL": {
            "changes_after_merge": 0,
            "file_path": "blocks/table/table.js",
            "merged_function": "function buildStatsURL(config) {\n  return `https://statdata.pgatour.com/r/stats/${config.year || new Date().getFullYear}/${config['stat-id']}.json`;\n}",
            "score": -1.0
        },
        "blocks/table/table.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/table/table.js",
            "merged_function": "async function decorate(block) {\n  const table = document.createElement('table');\n  const head = document.createElement('thead');\n  const body = document.createElement('tbody');\n  if (block.className.includes('stats')) {\n    const config = readBlockConfig(block);\n    block.innerHTML = '';\n    if (config['stat-id']) {\n      const observer = new IntersectionObserver(async (entries) => {\n        if (entries.some((entry) => entry.isIntersecting)) {\n          observer.disconnect();\n          const statsTable = await buildDataTable(table, head, body, buildStatsURL(config), config);\n          block.innerHTML = statsTable.outerHTML;\n        }\n      }, { threshold: 0 });\n\n      observer.observe(block);\n    }\n  } else {\n    // build rows\n    block.querySelectorAll(':scope > div').forEach((row, i) => {\n      const tr = document.createElement('tr');\n      // build cells\n      row.querySelectorAll('div').forEach((col) => {\n        tr.append(buildCell(col, i));\n      });\n      if (i > 0) body.append(tr);\n      else head.append(tr);\n    });\n    // populate table\n    table.append(head, body);\n  }\n  block.innerHTML = table.outerHTML;\n}",
            "score": -1.0
        },
        "blocks/tee-times/tee-times.js::buildDisplayTime": {
            "changes_after_merge": 0,
            "file_path": "blocks/tee-times/tee-times.js",
            "merged_function": "function buildDisplayTime(epoch, courseText, timezone) {\n  const h3 = document.createElement('h3');\n\n  const date = new Date(Number(epoch));\n  const formatter = new Intl.DateTimeFormat('en-US', { timeStyle: 'short', timeZone: timezone });\n  const formatted = formatter.format(date);\n\n  h3.innerHTML = `<h3>${courseText}${formatted}</h3>`;\n\n  return h3;\n}",
            "score": -1.0
        },
        "blocks/tee-times/tee-times.js::convertTime": {
            "changes_after_merge": 1,
            "file_path": "blocks/tee-times/tee-times.js",
            "merged_function": "function convertTime(serial) {\n  const fractionalDay = serial - Math.floor(serial) + 0.0000001;\n\n  let totalSeconds = Math.floor(86400 * fractionalDay);\n  const seconds = totalSeconds % 60;\n  totalSeconds -= seconds;\n\n  const hours = Math.floor(totalSeconds / (60 * 60));\n  const minutes = (Math.floor(totalSeconds / 60) % 60).toString().padStart(2, '0');\n\n  return { hours, minutes };\n}",
            "score": -0.9534883720930233
        },
        "blocks/tee-times/tee-times.js::decorate": {
            "changes_after_merge": 8,
            "file_path": "blocks/tee-times/tee-times.js",
            "merged_function": "async function decorate(block) {\n  const config = readBlockConfig(block);\n  block.textContent = '';\n\n  if (config.source) {\n    const resp = await fetch(config.source);\n    if (resp.ok) {\n      const json = await resp.json();\n      if (json.data) {\n        const data = formatTeeTimesData(json.data);\n        // setup dropdown\n        const dropdown = document.createElement('select');\n        dropdown.addEventListener('change', () => {\n          const { value } = dropdown;\n          const allTimes = document.querySelectorAll('.tee-times-time');\n          allTimes.forEach((time) => time.classList.add('filtered'));\n          const selectedRounds = [...allTimes].filter((time) => time.getAttribute('data-round') === value);\n          selectedRounds.forEach((time) => time.classList.remove('filtered'));\n        });\n        block.prepend(dropdown);\n        let currentRound = '';\n        Object.keys(data).forEach((round) => { // iterate through rounds\n          // populate round dropdown\n          if (round !== currentRound) {\n            const option = document.createElement('option');\n            option.value = round;\n            option.textContent = `Round ${round}`;\n            dropdown.append(option);\n            // reset current round\n            currentRound = round;\n          }\n          Object.keys(data[round]).forEach((time) => { // iterate through times\n            const timeWrapper = document.createElement('div');\n            timeWrapper.className = 'tee-times-time filtered';\n            const [hours, minutes] = time.split('_');\n            timeWrapper.setAttribute('data-round', round);\n            timeWrapper.setAttribute('data-hours', hours);\n            timeWrapper.setAttribute('data-minutes', minutes);\n            timeWrapper.innerHTML = `<h3>\n              <span class=\"tee-times-hour\">${hours > 12 ? hours - 12 : hours}</span>:<span class=\"tee-times-minute\">${minutes}</span>\n              <span class=\"tee-times-suffix\">${hours >= 12 ? 'pm' : 'am'}</span>\n            </h3>`;\n            Object.keys(data[round][time]).forEach((tee) => { // iterate through tees\n              const teeWrapper = document.createElement('div');\n              teeWrapper.className = 'tee-times-tee';\n              teeWrapper.innerHTML = `<h4>Tee #${tee}</h4>`;\n              data[round][time][tee].forEach((player) => { // iterate through players\n                const playerWrapper = document.createElement('div');\n                playerWrapper.className = 'tee-times-player';\n                playerWrapper.innerHTML = `<img\n                    src=\"https://pga-tour-res.cloudinary.com/image/upload/f_auto,q_auto,c_fill,r_max,dpr_2.0,g_face:center,h_190,w_190,d_headshots_default.png/headshots_${player.playerId}.png\"\n                    alt=\"${player.playerName}\"\n                  />\n                  <p>\n                    <span class=\"icon icon-flag-${player.playerFlag.toLowerCase()}\"></span>\n                    ${player.playerName}\n                  </p>`;\n                teeWrapper.append(playerWrapper);\n              });\n              timeWrapper.append(teeWrapper);\n            });\n            decorateIcons(timeWrapper);\n            block.append(timeWrapper);\n          });\n        });\n        // set default view to current round\n        dropdown.value = currentRound;\n        block.querySelectorAll(`[data-round=\"${currentRound}\"]`).forEach((time) => time.classList.remove('filtered'));\n      }\n    }\n  }\n}",
            "score": -0.627906976744186
        },
        "blocks/tee-times/tee-times.js::formatTeeTimesData": {
            "changes_after_merge": 0,
            "file_path": "blocks/tee-times/tee-times.js",
            "merged_function": "function formatTeeTimesData(data) {\n  const teeTimes = {};\n  data.forEach((player) => {\n    const { hours, minutes } = convertTime(player.time);\n    const timeStr = `${hours}_${minutes}`;\n    if (!teeTimes[player.round]) {\n      // if round doesn't exist, create round > time > tee > player(s)\n      teeTimes[player.round] = { // set round\n        [timeStr]: { // set time\n          [player.tee]: [player], // set tee and push player\n        },\n      };\n    } else if (!teeTimes[player.round][timeStr]) {\n      // if round exists but time doesn't, create time > tee > player(s)\n      teeTimes[player.round][timeStr] = { // set time\n        [player.tee]: [player], // set tee and push player\n      };\n    } else if (!teeTimes[player.round][timeStr][player.tee]) {\n      // if round and time exist but tee doesn't, create tee > player(s)\n      teeTimes[player.round][timeStr][player.tee] = [player]; // set tee and push player\n    } else if (teeTimes[player.round][timeStr][player.tee]) {\n      // round, time, and tee exist, push player into tee\n      teeTimes[player.round][timeStr][player.tee].push(player);\n    }\n  });\n  return teeTimes;\n}",
            "score": -1.0
        },
        "blocks/video/video.js::buildDefaultVideo": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "function buildDefaultVideo(id, inHero) {\n  const videoUrl = 'https://players.brightcove.net/6082840763001/6QBtcb032_default/index.html?videoId=';\n  return `<div class=\"video-iframe-wrapper\">\n    <iframe loading=\"lazy\" ${inHero ? 'data-' : ''}src='${videoUrl}${id}' allow=\"encrypted-media\" allowfullscreen></iframe>\n  </div>`;\n}",
            "score": -1.0
        },
        "blocks/video/video.js::closeVideo": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "function closeVideo(e) {\n  const video = e.target.closest('.video');\n  video.classList.remove('video-play-mode');\n  const iframe = video.querySelector('iframe');\n  iframe.src = iframe.getAttribute('src').replace('&autoplay=1', '');\n}",
            "score": -1.0
        },
        "blocks/video/video.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "function decorate(block) {\n  const observer = new IntersectionObserver(intersectHandler, { threshold: 0 });\n  observer.observe(block);\n}",
            "score": -1.0
        },
        "blocks/video/video.js::displayVideo": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "function displayVideo(e) {\n  const block = e.target.closest('.block');\n  const video = block.querySelector('.video');\n  video.classList.add('video-play-mode');\n  const iFrame = video.querySelector('iframe');\n  if (!iFrame.src && iFrame.dataset.src) {\n    iFrame.src = iFrame.dataset.src;\n  }\n  iFrame.src += '&autoplay=1';\n}",
            "score": -1.0
        },
        "blocks/video/video.js::intersectHandler": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "function intersectHandler(entries) {\n  const entry = entries[0];\n  if (entry.isIntersecting) {\n    const block = entry.target;\n    loadVideo(block);\n  }\n}",
            "score": -1.0
        },
        "blocks/video/video.js::loadBrightcoveVideo": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "function loadBrightcoveVideo(id, block) {\n  const inHero = [...block.classList].includes('video-hero');\n  const video = buildDefaultVideo(id, inHero);\n  block.innerHTML = video;\n\n  if (inHero) {\n    block.parentNode.classList.add('video-wrapper-hero');\n    // build play button\n    const playButton = document.createElement('div');\n    playButton.classList.add('video-hero-play');\n    playButton.addEventListener('click', displayVideo);\n    block.parentNode.append(playButton);\n    // build close button\n    const closeButton = document.createElement('div');\n    closeButton.classList.add('video-hero-close');\n    closeButton.addEventListener('click', closeVideo);\n    block.prepend(closeButton);\n  }\n\n  block.setAttribute('data-video-status', 'loaded');\n}",
            "score": -1.0
        },
        "blocks/video/video.js::loadFranklinVideo": {
            "changes_after_merge": 0,
            "file_path": "blocks/video/video.js",
            "merged_function": "function loadFranklinVideo(videoHref, block) {\n  block.innerHTML = `<video controls>\n    <source src=\"${videoHref}\" type=\"video/${videoHref.split('.').pop()}\" >\n  </video>`;\n\n  block.setAttribute('data-video-status', 'loaded');\n}",
            "score": -1.0
        },
        "blocks/video/video.js::loadVideo": {
            "changes_after_merge": 1,
            "file_path": "blocks/video/video.js",
            "merged_function": "function loadVideo(block) {\n  const status = block.getAttribute('data-video-status');\n  // eslint-disable-next-line no-useless-return\n  if (status === 'loaded') return;\n\n  const id = block.textContent.trim();\n  if (id) {\n    const inHero = [...block.classList].includes('video-hero');\n    const video = buildDefaultVideo(id, inHero);\n    block.innerHTML = video;\n\n    if (inHero) {\n      block.parentNode.classList.add('video-wrapper-hero');\n      // build play button\n      const playButton = document.createElement('div');\n      playButton.classList.add('video-hero-play');\n      playButton.addEventListener('click', displayVideo);\n      block.parentNode.append(playButton);\n      // build close button\n      const closeButton = document.createElement('div');\n      closeButton.classList.add('video-hero-close');\n      closeButton.addEventListener('click', closeVideo);\n      block.prepend(closeButton);\n    }\n\n    block.setAttribute('data-video-status', 'loaded');\n  }\n}",
            "score": -0.9534883720930233
        },
        "blocks/weather/weather.js::buildForecast": {
            "changes_after_merge": 0,
            "file_path": "blocks/weather/weather.js",
            "merged_function": "function buildForecast(block, weatherData) {\n  // setup toggle\n  const toggle = ['Hourly', '7 Day Forecast'];\n  const container = document.createElement('div');\n  container.classList.add('button-container', 'weather-toggle');\n  toggle.forEach((t, i) => {\n    const button = document.createElement('button');\n    button.textContent = t;\n    button.setAttribute('aria-selected', !i); // first toggle is default view\n    button.setAttribute('role', 'tab');\n    button.setAttribute('data-toggle', toClassName(t));\n    button.addEventListener('click', toggleWeather);\n    container.append(button);\n  });\n  block.prepend(container);\n  // build table\n  const table = document.createElement('div');\n  table.classList.add('weather-table');\n  // setup table titles column\n  const titleCol = document.createElement('div');\n  titleCol.classList.add('weather-table-titles');\n  const rowNames = [' ', 'Wind', 'Conditions', 'Temp', 'Humidity', 'Chance of Rain'];\n  rowNames.forEach((name) => titleCol.append(buildRow(name)));\n  table.append(titleCol);\n  // setup table body\n  const body = document.createElement('div');\n  body.classList.add('weather-table-body', 'weather-table-hourly');\n  // populate hourly forecast\n  weatherData.hourly.forEach((hour) => {\n    const col = document.createElement('div');\n    col.className = 'weather-col-hourly';\n    // eslint-disable-next-line no-underscore-dangle\n    const temp = hour.temperature.__typename === 'StandardWeatherTemp' ? hour.temperature.tempF : hour.temperature.maxTempF;\n    col.append(\n      buildRow(hour.title),\n      buildRow(`${hour.windSpeedMPH} mp/h ${windDirections[hour.windDirection] ? windDirections[hour.windDirection] : hour.windDirection}`),\n      buildRow(`<span class=\"icon icon-weather-${hour.condition.toLowerCase().replaceAll('_', '-')}\"></span>`),\n      buildRow(`<span class=\"weather-temp\">${temp.replace('\u00b0F', '')}</span>`),\n      buildRow(`<span class=\"weather-humidity\">${hour.humidity.replace('%', '')}</span>`),\n      buildRow(`<span class=\"weather-chance-of-rain\">${hour.precipitation.replace('%', '')}</span>`),\n    );\n    decorateIcons(col);\n    body.append(col);\n  });\n  // populate 7 day forecast\n  weatherData.daily.forEach((day) => {\n    const col = document.createElement('div');\n    col.className = 'weather-col-7-day-forecast';\n    // eslint-disable-next-line no-underscore-dangle\n    const temp = day.temperature.__typename === 'StandardWeatherTemp' ? day.temperature.tempF : day.temperature.maxTempF;\n    col.append(\n      buildRow(day.title),\n      buildRow(`${day.windSpeedMPH} mp/h ${windDirections[day.windDirection] ? windDirections[day.windDirection] : day.windDirection}`),\n      buildRow(`<span class=\"icon icon-weather-${day.condition.toLowerCase().replaceAll('_', '-')}\"></span>`),\n      buildRow(`<span class=\"weather-temp\">${temp.replace('\u00b0F', '')}</span>`),\n      buildRow(`<span class=\"weather-humidity\">${day.humidity.replace('%', '')}</span>`),\n      buildRow(`<span class=\"weather-chance-of-rain\">${day.precipitation.replace('%', '')}</span>`),\n    );\n    decorateIcons(col);\n    body.append(col);\n  });\n  table.append(body);\n  block.append(table);\n}",
            "score": -1.0
        },
        "blocks/weather/weather.js::buildRow": {
            "changes_after_merge": 0,
            "file_path": "blocks/weather/weather.js",
            "merged_function": "function buildRow(data) {\n  const cell = document.createElement('div');\n  cell.innerHTML = data;\n  return cell;\n}",
            "score": -1.0
        },
        "blocks/weather/weather.js::buildWeather": {
            "changes_after_merge": 0,
            "file_path": "blocks/weather/weather.js",
            "merged_function": "function buildWeather(block, weatherData) {\n  block.parentNode.classList.add('forecast-wrapper');\n  // setup title\n  const location = weatherData.title;\n  const title = block.querySelector('h2');\n  if (title) {\n    title.textContent = `${title.textContent} | ${location}`;\n  } else {\n    const h2 = document.createElement('h2');\n    h2.textContent = location;\n    h2.id = toClassName(location);\n    block.prepend(h2);\n  }\n  // add bg image\n  const currentWeather = weatherData.hourly[0];\n  const weatherCondition = currentWeather.condition.toLowerCase();\n  let condition = 'fair';\n  if (weatherCondition.includes('cloud')) {\n    condition = 'cloudy';\n  } else if (weatherCondition.includes('shower') || weatherCondition.includes('rain')) {\n    condition = 'rain';\n  } else if (weatherCondition.includes('thunder') || weatherCondition.includes('storm')) {\n    condition = 'thunderstorm';\n  } else if (weatherCondition.includes('sun')) {\n    condition = 'sunny';\n  } else if (weatherCondition.includes('fog')) {\n    condition = 'fog';\n  } else if (weatherCondition.includes('snow')) {\n    condition = 'snow';\n  }\n\n  const bgImg = createOptimizedPicture(`/blocks/weather/weather-${condition}.png`);\n\n  bgImg.className = 'weather-background';\n  block.prepend(bgImg);\n  const weatherGrid = document.createElement('div');\n  weatherGrid.className = 'weather-grid';\n  // temperature\n  const temperature = document.createElement('div');\n  temperature.className = 'weather-temp';\n  // eslint-disable-next-line no-underscore-dangle\n  const temp = currentWeather.temperature.__typename === 'StandardWeatherTemp' ? currentWeather.temperature.tempF : currentWeather.temperature.maxTempF;\n  temperature.innerHTML = `\n  <p class=\"weather-data\"><span>${temp.replace('\u00b0F', '')}</span></p>\n  <p class=\"weather-desc\">Temperature</p>`;\n  // conditions\n  const conditions = document.createElement('div');\n  conditions.className = 'weather-conditions';\n  // TODO figure out where to get this image from in new system\n  conditions.innerHTML = `\n  <p class=\"weather-data\"><span class=\"icon icon-weather-${currentWeather.condition.toLowerCase().replaceAll('_', '-')}\"></span></p>\n  <p class=\"weather-desc\">Conditions</p>`;\n  // wind speed\n  const wind = document.createElement('div');\n  wind.className = 'weather-wind';\n  wind.innerHTML = `\n  <p class=\"weather-data\"><span class=\"icon icon-wind\"></span>${currentWeather.windSpeedMPH}<span>mp/h<br />${windDirections[currentWeather.windDirection] ? windDirections[currentWeather.windDirection] : currentWeather.windDirection}</span></p>\n  <p class=\"weather-desc\">Wind Speed</p>`;\n  // humidity\n  const humidity = document.createElement('div');\n  humidity.className = 'weather-humidity';\n  humidity.innerHTML = `\n   <p class=\"weather-data\"><span class=\"icon icon-humidity\"></span><span>${currentWeather.humidity.replace('%', '')}</span></p>\n   <p class=\"weather-desc\">Humidity</p>`;\n  weatherGrid.append(temperature, conditions, wind, humidity);\n  decorateIcons(weatherGrid);\n  block.append(weatherGrid);\n}",
            "score": -1.0
        },
        "blocks/weather/weather.js::decorate": {
            "changes_after_merge": 4,
            "file_path": "blocks/weather/weather.js",
            "merged_function": "async function decorate(block) {\n  const blockClasses = [...block.classList];\n  const weatherPrefix = 'https://little-forest-58aa.david8603.workers.dev/?url=https://www.pgatour.com/bin/data/feeds';\n  if (blockClasses.includes('forecast')) {\n    block.parentNode.classList.add('forecast-wrapper');\n    // fetch weather\n    try {\n      const hourlyResp = await fetch(`${weatherPrefix}/hourly.json/r011`);\n      const dailyResp = await fetch(`${weatherPrefix}/forecast10day.json/r011`);\n      if (hourlyResp.ok && dailyResp.ok) {\n        const { hourly_forecast: hourlyData } = await hourlyResp.json();\n        const { forecast } = await dailyResp.json();\n        const dailyData = forecast.simpleforecast.forecastday;\n        // setup toggle\n        const toggle = ['Hourly', '10 Days Forecast'];\n        const container = document.createElement('div');\n        container.classList.add('button-container', 'weather-toggle');\n        toggle.forEach((t, i) => {\n          const button = document.createElement('button');\n          button.textContent = t;\n          button.setAttribute('aria-selected', !i); // first toggle is default view\n          button.setAttribute('role', 'tab');\n          button.setAttribute('data-toggle', toClassName(t));\n          button.addEventListener('click', toggleWeather);\n          container.append(button);\n        });\n        block.prepend(container);\n        // build table\n        const table = document.createElement('div');\n        table.classList.add('weather-table');\n        // setup table titles column\n        const titleCol = document.createElement('div');\n        titleCol.classList.add('weather-table-titles');\n        const rowNames = [' ', 'Wind', 'Conditions', 'Temp', 'Humidity', 'Chance of Rain'];\n        rowNames.forEach((name) => titleCol.append(buildRow(name)));\n        table.append(titleCol);\n        // setup table body\n        const body = document.createElement('div');\n        body.classList.add('weather-table-body', 'weather-table-hourly');\n        // populate hourly forecast\n        hourlyData.forEach((hour) => {\n          const col = document.createElement('div');\n          col.className = 'weather-col-hourly';\n          col.append(\n            buildRow(hour.FCTTIME.civil),\n            buildRow(`${hour.wspd.english} mp/h ${hour.wdir.dir}`),\n            buildRow(`<img src=\"${hour.icon_url.replace('.gif', '.png')}\" alt=\"${hour.condition}\" /> ${hour.condition}`),\n            buildRow(`<span class=\"weather-temp\">${hour.temp.english}</span>`),\n            buildRow(`<span class=\"weather-humidity\">${hour.humidity}</span>`),\n            buildRow(`<span class=\"weather-chance-of-rain\">${hour.pop}</span>`),\n          );\n          body.append(col);\n        });\n        // populate 10 day forecast\n        dailyData.forEach((day) => {\n          const col = document.createElement('div');\n          col.className = 'weather-col-10-days-forecast';\n          col.append(\n            buildRow(day.date.weekday),\n            buildRow(`${day.avewind.mph} mp/h ${day.avewind.dir}`),\n            buildRow(`<img src=\"${day.icon_url.replace('.gif', '.png')}\" alt=\"${day.conditions}\" /> ${day.conditions}`),\n            buildRow(`<span class=\"weather-temp\">${day.high.fahrenheit}</span>`),\n            buildRow(`<span class=\"weather-humidity\">${day.avehumidity}</span>`),\n            buildRow(`<span class=\"weather-chance-of-rain\">${day.pop}</span>`),\n          );\n          body.append(col);\n        });\n        table.append(body);\n        block.append(table);\n      } else block.parentNode.remove();\n    } catch (error) {\n      block.parentNode.remove();\n      // eslint-disable-next-line no-console\n      console.warn('Could not load weather', error);\n    }\n  } else {\n    try {\n      // fetch weather\n      const resp = await fetch(`${weatherPrefix}/weather.json/r011`);\n      if (resp.ok) {\n        const { current_observation: weatherData } = await resp.json();\n        // setup title\n        const location = weatherData.display_location.full;\n        const title = block.querySelector('h2');\n        if (title) {\n          title.textContent = `${title.textContent} | ${location}`;\n        } else {\n          const h2 = document.createElement('h2');\n          h2.textContent = location;\n          h2.id = toClassName(location);\n          block.prepend(h2);\n        }\n        // add bg image\n        let condition = weatherData.weather.toLowerCase();\n        if (condition.includes('cloud')) {\n          condition = 'cloudy';\n        } else if (condition.includes('shower')) {\n          condition = 'rain';\n        } else if (condition.includes('thunder') || condition.includes('storm')) {\n          condition = 'thunderstorm';\n        }\n        const bgConditions = ['cloudy', 'fair', 'fog', 'rain', 'snow', 'sunny', 'thunderstorm'];\n        let bgImg;\n        if (bgConditions.includes(condition)) {\n          bgImg = createOptimizedPicture(`/blocks/weather/weather-${condition}.png`);\n        } else {\n          bgImg = createOptimizedPicture('/blocks/weather/weather-fair.png');\n        }\n        bgImg.className = 'weather-background';\n        block.prepend(bgImg);\n        const weatherGrid = document.createElement('div');\n        weatherGrid.className = 'weather-grid';\n        // temperature\n        const temperature = document.createElement('div');\n        temperature.className = 'weather-temp';\n        temperature.innerHTML = `\n        <p class=\"weather-data\"><span>${weatherData.temp_f}</span></p>\n        <p class=\"weather-desc\">Temperature</p>`;\n        // conditions\n        const conditions = document.createElement('div');\n        conditions.className = 'weather-conditions';\n        conditions.innerHTML = `\n        <p class=\"weather-data\"><img src=\"${weatherData.icon_url.replace('.gif', '.png').replace(/_50/g, '_100')}\" alt=\"${weatherData.weather}\" /></p>\n        <p class=\"weather-desc\">Conditions</p>`;\n        // wind speed\n        const wind = document.createElement('div');\n        wind.className = 'weather-wind';\n        wind.innerHTML = `\n        <p class=\"weather-data\"><span class=\"icon icon-wind\"></span>${weatherData.wind_mph}<span>mp/h<br />${weatherData.wind_dir}</span></p>\n        <p class=\"weather-desc\">Wind Speed</p>`;\n        // humidity\n        const humidity = document.createElement('div');\n        humidity.className = 'weather-humidity';\n        humidity.innerHTML = `\n        <p class=\"weather-data\"><span class=\"icon icon-humidity\"></span><span>${weatherData.relative_humidity.replace('%', '')}</span></p>\n        <p class=\"weather-desc\">Humidity</p>`;\n        weatherGrid.append(temperature, conditions, wind, humidity);\n        decorateIcons(weatherGrid);\n        block.append(weatherGrid);\n      } else block.parentNode.remove();\n    } catch (error) {\n      block.parentNode.remove();\n      // eslint-disable-next-line no-console\n      console.warn('Could not load weather', error);\n    }\n  }\n}",
            "score": -0.813953488372093
        },
        "blocks/weather/weather.js::toggleWeather": {
            "changes_after_merge": 1,
            "file_path": "blocks/weather/weather.js",
            "merged_function": "function toggleWeather(e) {\n  const button = e.target.closest('button');\n  const block = button.closest('.block');\n  const toggle = button.getAttribute('data-toggle');\n  // update button\n  const buttons = block.querySelectorAll('.button-container > button');\n  buttons.forEach((btn) => btn.setAttribute('aria-selected', false));\n  button.setAttribute('aria-selected', true);\n  // toggle table view\n  const table = block.querySelector('.weather-table-body');\n  if (toggle.includes('hourly')) {\n    table.classList.remove('weather-table-10-days-forecast');\n    table.classList.add('weather-table-hourly');\n  } else if (toggle.includes('10-days-forecast')) {\n    table.classList.remove('weather-table-hourly');\n    table.classList.add('weather-table-10-days-forecast');\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::OneTrustActiveGroup": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "OneTrustActiveGroup = () => {\n    /* eslint-disable */\n    var y = true, n = false;\n    var y_y_y = {'aa': y, 'aam': y, 'ecid': y};\n    var n_n_n = {'aa': n, 'aam': n, 'ecid': n};\n    var y_n_y = {'aa': y, 'aam': n, 'ecid': y};\n    var n_y_y = {'aa': n, 'aam': y, 'ecid': y};\n    \n    if (typeof OnetrustActiveGroups != 'undefined')\n      if (OnetrustActiveGroups.includes(',C0002,'))\n        return OnetrustActiveGroups.includes(',C0004,')?y_y_y:y_n_y;\n      else\n        return OnetrustActiveGroups.includes(',C0004,')?n_y_y:n_n_n;\n    \n    return geoInfo.country == 'US'?y_y_y:n_n_n;\n    /* eslint-enable */\n  }",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::OptanonWrapper": {
            "changes_after_merge": 12,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function OptanonWrapper() {\n  const geoInfo = window.Optanon.getGeolocationData();\n  Object.keys(geoInfo).forEach((key) => {\n    const cookieName = `PGAT_${key.charAt(0).toUpperCase() + key.slice(1)}`;\n    const cookie = getCookie(cookieName);\n    if (!cookie || cookie !== geoInfo[key]) document.cookie = `${cookieName}=${geoInfo[key]}`;\n  });\n\n  const OneTrustActiveGroup = () => {\n    /* eslint-disable */\n    var y = true, n = false;\n    var y_y_y = {'aa': y, 'aam': y, 'ecid': y};\n    var n_n_n = {'aa': n, 'aam': n, 'ecid': n};\n    var y_n_y = {'aa': y, 'aam': n, 'ecid': y};\n    var n_y_y = {'aa': n, 'aam': y, 'ecid': y};\n    \n    if (typeof OnetrustActiveGroups != 'undefined')\n      if (OnetrustActiveGroups.includes(',C0002,'))\n        return OnetrustActiveGroups.includes(',C0004,')?y_y_y:y_n_y;\n      else\n        return OnetrustActiveGroups.includes(',C0004,')?n_y_y:n_n_n;\n    \n    return geoInfo.country == 'US'?y_y_y:n_n_n;\n    /* eslint-enable */\n  };\n  if (!localStorage.getItem('OptIn_PreviousPermissions')) {\n    const adobeSettings = OneTrustActiveGroup();\n    adobeSettings.tempImplied = true;\n    localStorage.setItem('OptIn_PreviousPermissions', JSON.stringify(adobeSettings));\n  }\n\n  loadScript(`https://assets.adobedtm.com/d17bac9530d5/90b3c70cfef1/launch-1ca88359b76c${isProd ? '.min' : ''}.js`);\n}",
            "score": -0.4418604651162791
        },
        "scripts/delayed.js::addFavoritePlayer": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function addFavoritePlayer(res) {\n  const { favorites } = res.data;\n  const playerId = getPlayerIdFromForm();\n  const tourCode = getTourCodeFromForm();\n  const alreadyInFavorites = favorites.find((fave) => fave.playerId === playerId);\n  if (!alreadyInFavorites) {\n    favorites.push({\n      createdDate: new Date().toISOString(),\n      tourCode,\n      playerId,\n    });\n    // eslint-disable-next-line no-undef\n    gigya.accounts.setAccountInfo({\n      data: { favorites },\n      callback: updateFavoritePlayersAfterAdd,\n    });\n  } else {\n    clearFindPlayer();\n    clearSelectPlayer();\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::addFavoritePlayerFromLeaderboard": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function addFavoritePlayerFromLeaderboard(e) {\n  const button = e.target.closest('button');\n  button.setAttribute('data-selected', true);\n  // eslint-disable-next-line no-undef\n  gigya.accounts.getAccountInfo({ callback: updateFavoritePlayerFromLeaderboard });\n}",
            "score": -1.0
        },
        "scripts/delayed.js::addFavoritePlayerFromMenu": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function addFavoritePlayerFromMenu(res) {\n  const { favorites } = res.data;\n  const playerId = getPlayerIdFromForm();\n  const tourCode = getTourCodeFromForm();\n  const alreadyInFavorites = favorites.find((fave) => fave.playerId === playerId);\n  if (!alreadyInFavorites) {\n    favorites.push({\n      createdDate: new Date().toISOString(),\n      tourCode,\n      playerId,\n    });\n    // eslint-disable-next-line no-undef\n    gigya.accounts.setAccountInfo({\n      data: { favorites },\n      callback: updateFavoritePlayersAfterAdd,\n    });\n  } else {\n    clearFindPlayer();\n    clearSelectPlayer();\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::alphabetize": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function alphabetize(a, b) {\n  if (a.nameL.toUpperCase() < b.nameL.toUpperCase()) return -1;\n  if (a.nameL.toUpperCase() > b.nameL.toUpperCase()) return 1;\n  return 0;\n}",
            "score": -1.0
        },
        "scripts/delayed.js::checkIfLoggedIn": {
            "changes_after_merge": 2,
            "file_path": "scripts/delayed.js",
            "merged_function": "function checkIfLoggedIn(res) {\n  if (res && res != null && res.errorCode === 0) { // user is logged in\n    // eslint-disable-next-line no-undef\n    gigya.accounts.getAccountInfo({ callback: setupUserButton });\n  } else {\n    setupUserButton();\n  }\n}",
            "score": -0.9069767441860466
        },
        "scripts/delayed.js::clearFindPlayer": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function clearFindPlayer() {\n  const findPlayer = document.querySelector('input[name=\"data.findPlayer\"]');\n  if (findPlayer) {\n    findPlayer.value = '';\n    findPlayer.removeAttribute('data-value');\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::clearSelectPlayer": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function clearSelectPlayer() {\n  const selectPlayer = document.querySelector('select[name=\"data.players\"]');\n  if (selectPlayer) selectPlayer.selectedIndex = 0;\n}",
            "score": -1.0
        },
        "scripts/delayed.js::clearUserButton": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "function clearUserButton() {\n  const button = document.getElementById('nav-user-button');\n  if (button) {\n    // remove caret\n    button.querySelector('.icon.icon-caret').remove();\n    // update button text\n    const text = button.querySelector('span:not([class])');\n    text.textContent = 'Login/Register';\n    // update button icon\n    const img = button.querySelector('img');\n    if (img) {\n      const icon = document.createElement('span');\n      icon.classList.add('icon', 'icon-user');\n      img.replaceWith(icon);\n      decorateIcons(button);\n    }\n    // reset click to open login menu\n    button.removeEventListener('click', showAccountMenu);\n    button.addEventListener('click', showLoginMenu);\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::filterFindPlayer": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function filterFindPlayer(e) {\n  const { target } = e;\n  const value = target.value.trim().toLowerCase();\n  const parent = target.parentNode.querySelector('.gigya-find-player-options');\n  let visibleOptions = 0;\n  parent.querySelectorAll('li').forEach((option) => {\n    if (value.length && option.textContent.toLowerCase().includes(value)) {\n      option.classList.remove('hide');\n      visibleOptions += 1;\n    } else {\n      option.classList.add('hide');\n    }\n  });\n  parent.setAttribute('data-options', visibleOptions);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::findTimeBetween": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function findTimeBetween(date, now = new Date()) {\n  return Math.abs(date - now);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::getCookie": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function getCookie(cookieName) {\n  const name = `${cookieName}=`;\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const split = decodedCookie.split(';');\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < split.length; i++) {\n    let c = split[i];\n    while (c.charAt(0) === ' ') c = c.substring(1);\n    if (c.indexOf(name) === 0) return c.substring(name.length, c.length);\n  }\n  return null;\n}",
            "score": -1.0
        },
        "scripts/delayed.js::getPlayerIdFromForm": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function getPlayerIdFromForm() {\n  const findPlayer = document.querySelector('input[name=\"data.findPlayer\"]');\n  const findValue = findPlayer.getAttribute('data-value');\n  const selectPlayer = document.querySelector('select[name=\"data.players\"]');\n  const selectValue = selectPlayer.value === 'Select Player' ? null : selectPlayer.value;\n  return findValue || selectValue;\n}",
            "score": -1.0
        },
        "scripts/delayed.js::getTourCodeFromForm": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function getTourCodeFromForm() {\n  return document.querySelector('select[name=\"data.tour\"]').value;\n}",
            "score": -1.0
        },
        "scripts/delayed.js::initGigya": {
            "changes_after_merge": 3,
            "file_path": "scripts/delayed.js",
            "merged_function": "function initGigya() {\n  loadScript(\n    'https://cdns.gigya.com/JS/socialize.js?apikey=3__4H034SWkmoUfkZ_ikv8tqNIaTA0UIwoX5rsEk96Ebk5vkojWtKRZixx60tZZdob',\n    setupGigya,\n  );\n}",
            "score": -0.8604651162790697
        },
        "scripts/delayed.js::injectFevoScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function injectFevoScript() {\n  let fevoWidget = window.GMWidget;\n  if (!fevoWidget) {\n    // eslint-disable-next-line\n    var fO, f1, ho = \"https://fevogm.com/react/dist/js/widget/gm-widget.js\", cs0 = \"position:fixed;top:0;bottom:0;left:0;right:0;background:#15232e99;transitio\" + \"n:opacity .5s;z-index:10000;\", cs1 = \"text-align:center;position:absolute;color:#5\" + \"E5E5E;top:50%;left:50%;transform:translate(-50%,-50%);background:white;border-r\" + \"adius:20px;\", wn = \"GMWidget\", aC = \"appendChild\", cE = \"createElement\", as = [], w = window, d = document, h = d.getElementsByTagName(\"head\")[0], s = d[cE](\"script\"); s.type = \"text/java\" + \"script\", s.src = ho, h[aC](s), w[wn] = { open: t => { as.push(t), (fO = d[cE](\"div\")).style.cssText = cs0, (f1 = d[cE](\"div\")).style.cssText = cs1, f1.innerHTML = '<img src=\"https://fe' + 'vogm.com/react/dist/assets/images/FEVO_Loading.gif\"/>', fO[aC](f1), d.body[aC](fO), w[wn].clear = () => (fO.remove(), as) } };\n    fevoWidget = window.GMWidget;\n  }\n\n  return fevoWidget;\n}",
            "score": -1.0
        },
        "scripts/delayed.js::injectWeFevoScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function injectWeFevoScript() {\n  loadScript('https://offer.fevo.com/js/fevo.js', () => { }, {\n    type: 'text/javascript',\n  });\n}",
            "score": -1.0
        },
        "scripts/delayed.js::loadLiveChat": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function loadLiveChat() {\n  const liveChat = getMetadata('live-chat');\n  if (liveChat && ['yes', 'on', 'true'].includes(liveChat.toLowerCase())) {\n    loadScript('//sdk.engage.co/sdk.js', () => { /* noop */ }, {\n      'data-company': placeholders.chatCompany,\n      'data-widget': placeholders.chatWidget,\n    });\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::loadPlayers": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function loadPlayers() {\n  if (!window.players) {\n    const resp = await fetch('https://statdata.pgatour.com/players/player.json');\n    if (resp.ok) {\n      const { plrs } = await resp.json();\n      const players = {\n        byId: {},\n        r: [],\n        s: [],\n        h: [],\n      };\n      plrs.forEach((p) => {\n        if (!players.byId[p.pid]) {\n          players.byId[p.pid] = p;\n          // display in pga tour (R)\n          if (p.disR === 'y') players.r.push(p);\n          // display in champions tour (S)\n          if (p.disS === 'y') players.s.push(p);\n          // display in korn ferry tour (H)\n          if (p.disH === 'y') players.h.push(p);\n        }\n      });\n      players.r.sort(alphabetize);\n      players.s.sort(alphabetize);\n      players.h.sort(alphabetize);\n      window.players = players;\n    }\n  }\n  return window.players || {};\n}",
            "score": -1.0
        },
        "scripts/delayed.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function loadScript(url, callback, type) {\n  const head = document.querySelector('head');\n  if (!head.querySelector(`script[src=\"${url}\"]`)) {\n    const script = document.createElement('script');\n    script.src = url;\n    if (type) script.setAttribute('type', type);\n    head.append(script);\n    script.onload = callback;\n    return script;\n  }\n  return head.querySelector(`script[src=\"${url}\"]`);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::logout": {
            "changes_after_merge": 2,
            "file_path": "scripts/delayed.js",
            "merged_function": "function logout() {\n  // eslint-disable-next-line no-undef\n  gigya.accounts.hideScreenSet({ screenSet: 'Website-ManageProfile' });\n  // eslint-disable-next-line no-undef\n  gigya.socialize.logout({ callback: clearUserButton });\n}",
            "score": -0.9069767441860466
        },
        "scripts/delayed.js::parseCountdown": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function parseCountdown(ms) {\n  const dayMs = 24 * 60 * 60 * 1000;\n  const hourMs = 60 * 60 * 1000;\n  let days = Math.floor(ms / dayMs);\n  let hours = Math.floor((ms - days * dayMs) / hourMs);\n  let minutes = Math.round((ms - days * dayMs - hours * hourMs) / 60000);\n  if (minutes === 60) {\n    hours += 1;\n    minutes = 0;\n  } else if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  if (hours === 24) {\n    days += 1;\n    hours = 0;\n  } else if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  return { days, hours, minutes };\n}",
            "score": -1.0
        },
        "scripts/delayed.js::populateStatusBar": {
            "changes_after_merge": 5,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function populateStatusBar(statusBar) {\n  if (statusBar) {\n    const data = document.createElement('div');\n    data.className = 'status-bar-data';\n    // fetch placeholders\n    try {\n      const placeholders = await fetchPlaceholders();\n      if (placeholders.course) data.insertAdjacentHTML('beforeend', `<div class=\"status-bar-course\"><p>${placeholders.course}</p></div>`);\n      if (placeholders.dates) data.insertAdjacentHTML('beforeend', `<div class=\"status-bar-dates\"><p>${placeholders.dates}</p></div>`);\n      // setup countdown\n      if (placeholders.countdown) {\n        window.placeholders.countdown = new Date(placeholders.countdown);\n        const countdownData = parseCountdown(findTimeBetween(window.placeholders.countdown));\n        const countdown = `<div class=\"status-bar-countdown\">\n          <p>\n            <span id=\"countdown-days\">${countdownData.days}</span> days : \n            <span id=\"countdown-hours\">${countdownData.hours}</span> hours : \n            <span id=\"countdown-minutes\">${countdownData.minutes}</span> minutes\n          </p>\n        </div>`;\n        data.insertAdjacentHTML('beforeend', countdown);\n        setInterval(updateCountdown, 60 * 1000); // update countdown every minute\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('failed to load placeholders', error);\n    }\n    // fetch weather\n    try {\n      const resp = await fetch('https://www.pgatour.com/bin/data/feeds/weather.json/r011');\n      const { current_observation: weatherData } = await resp.json();\n      const location = weatherData.display_location.full;\n      const icon = weatherData.icon_url.replace('.gif', '.png');\n      const temp = weatherData.temp_f;\n      const weather = document.createElement('div');\n      weather.className = 'status-bar-weather';\n      weather.innerHTML = `<p>\n          <a href=\"/weather\">\n            <span>${location}</span>\n            <img src=\"${icon}\" alt=\"${weatherData.weather}\"/ >\n            <span class=\"status-bar-temp\">${temp}</span>\n          </a>\n        </p>`;\n      data.append(weather);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log('failed to load weather', error);\n    }\n    if (data.hasChildNodes()) statusBar.append(data);\n  }\n}",
            "score": -0.7674418604651163
        },
        "scripts/delayed.js::promptToLogin": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function promptToLogin() {\n  const modal = document.createElement('aside');\n  modal.classList.add('login-modal');\n  modal.innerHTML = `<div class=\"login-modal-close-wrapper\">\n      <button class=\"login-modal-close\"><span class=\"icon icon-close\"></span></button>\n    </div>\n    <p>${placeholders.loginPrompt}</p>\n    <div class=\"button-container\">\n      <button class=\"button\" id=\"login-modal-button\">${placeholders.loginYes}</button> \n      <button class=\"button login-modal-close\">${placeholders.loginNo}</button> \n    </div>`;\n  modal.querySelector('#login-modal-button').addEventListener('click', () => {\n    // eslint-disable-next-line no-use-before-define\n    showLoginMenu();\n    modal.remove();\n  });\n  modal.querySelectorAll('.login-modal-close').forEach((btn) => {\n    btn.addEventListener('click', () => modal.remove());\n  });\n  document.querySelector('main').prepend(modal);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::removeFavoritePlayer": {
            "changes_after_merge": 2,
            "file_path": "scripts/delayed.js",
            "merged_function": "function removeFavoritePlayer(e) {\n  e.preventDefault();\n  const id = e.target.closest('div').getAttribute('data-id');\n  // console.log('remove pid:', id);\n}",
            "score": -0.9069767441860466
        },
        "scripts/delayed.js::removeFavoritePlayerFromLeaderboard": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function removeFavoritePlayerFromLeaderboard(e) {\n  const button = e.target.closest('button');\n  button.setAttribute('data-selected', true);\n  // eslint-disable-next-line no-undef\n  gigya.accounts.getAccountInfo({ callback: updateFavoritePlayerFromLeaderboard });\n}",
            "score": -1.0
        },
        "scripts/delayed.js::removeFavoritePlayerFromMenu": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function removeFavoritePlayerFromMenu(res) {\n  const { favorites } = res.data;\n  const favoritesList = document.querySelector('.gigya-your-favorites');\n  const selectedPlayer = favoritesList.querySelector('[data-selected=\"true\"]');\n  selectedPlayer.removeAttribute('data-selected');\n  const playerId = selectedPlayer.getAttribute('data-id');\n  const playerToRemove = favorites.find((fave) => fave.playerId === playerId);\n  if (playerToRemove) {\n    const newFavorites = favorites.filter((fave) => fave !== playerToRemove);\n    // eslint-disable-next-line no-undef\n    gigya.accounts.setAccountInfo({\n      data: { favorites: newFavorites },\n      callback: updateFavoritePlayersAfterRemove,\n    });\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::removeUserInfo": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function removeUserInfo() {\n  sessionStorage.removeItem('gigyaAccount');\n}",
            "score": -1.0
        },
        "scripts/delayed.js::resetFavoriteButtons": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function resetFavoriteButtons() {\n  const buttons = document.querySelectorAll('.leaderboard-favorite-button');\n  buttons.forEach((btn) => {\n    const icon = btn.querySelector('.icon');\n    const tooltip = btn.nextElementSibling;\n    btn.setAttribute('data-op', 'add');\n    // ensure add to favorite button\n    if (icon) icon.className = 'icon icon-plus';\n    if (tooltip && tooltip.className === 'tooltip') {\n      tooltip.querySelector('.tooltip-op').textContent = 'Add to';\n    }\n    btn.removeEventListener('click', removeFavoritePlayerFromLeaderboard);\n    btn.removeEventListener('click', addFavoritePlayerFromLeaderboard);\n    // eslint-disable-next-line no-use-before-define\n    btn.addEventListener('click', promptToLogin);\n  });\n}",
            "score": -1.0
        },
        "scripts/delayed.js::saveUserInfo": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function saveUserInfo(userInfo) {\n  sessionStorage.setItem('gigyaAccount', JSON.stringify(userInfo));\n}",
            "score": -1.0
        },
        "scripts/delayed.js::setGeoCookies": {
            "changes_after_merge": 2,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function setGeoCookies() {\n  try {\n    const resp = await fetch('https://geolocation.onetrust.com/cookieconsentpub/v1/geo/location');\n    if (resp.ok) {\n      const text = await resp.text();\n      const json = JSON.parse(text.replace('jsonFeed(', '').replace('\"});', '\"}'));\n      Object.keys(json).forEach((key) => {\n        const cookieName = `PGAT_${key.charAt(0).toUpperCase() + key.slice(1)}`;\n        const cookie = getCookie(cookieName);\n        if (!cookie || cookie !== json[key]) document.cookie = `${cookieName}=${json[key]}`;\n      });\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Setting geo cookies failed', error);\n  }\n}",
            "score": -0.9069767441860466
        },
        "scripts/delayed.js::setupAccountMenu": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function setupAccountMenu(res) {\n  // setup favorite players\n  if (res.currentScreen === 'gigya-players-screen') {\n    setupFavoritePlayersScreen(res.data);\n  }\n  // setup logout\n  const logoutBtn = document.querySelector('a[href=\"javascript:pgatour.GigyaSocialize.logout()\"]');\n  if (logoutBtn) {\n    logoutBtn.removeAttribute('href');\n    // eslint-disable-next-line no-use-before-define\n    logoutBtn.addEventListener('click', logout);\n    logoutBtn.style.cursor = 'pointer';\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::setupFavoriteButtons": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function setupFavoriteButtons(res) {\n  const favoriteButtons = document.querySelectorAll('.leaderboard-favorite-button');\n  favoriteButtons.forEach((button) => {\n    if (res && res != null && res.errorCode === 0) { // user is logged in\n      updateFavoriteButtons(res);\n    } else {\n      button.addEventListener('click', promptToLogin);\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/delayed.js::setupFavoritePlayersScreen": {
            "changes_after_merge": 3,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function setupFavoritePlayersScreen(userData) {\n  const players = await loadPlayers();\n  // setup user favorites\n  const wrapper = document.createElement('div');\n  wrapper.className = 'gigya-your-favorites';\n  const h2 = document.querySelector('h2[data-translation-key=\"HEADER_53211634253006840_LABEL\"]');\n  if (h2) h2.after(wrapper);\n  if (userData && userData.favorites) {\n    userData.favorites.forEach((favorite) => {\n      const player = players.byId[favorite.playerId];\n      const row = document.createElement('div');\n      row.setAttribute('data-tour', favorite.tourCode);\n      row.setAttribute('data-id', favorite.playerId);\n      row.innerHTML = `<p>${player.nameF} ${player.nameL}</p>\n        <button><span class=\"icon icon-close\"></span></button>`;\n      const button = row.querySelector('button');\n      button.addEventListener('click', removeFavoritePlayer);\n      wrapper.append(row);\n    });\n  }\n  // setup add more\n  const tourDropdown = document.querySelector('select[name=\"data.tour\"]');\n  const findPlayer = document.querySelector('input[name=\"data.findPlayer\"]');\n  const selectPlayer = document.querySelector('select[name=\"data.players\"]');\n  if (tourDropdown && findPlayer && selectPlayer) {\n    tourDropdown.addEventListener('change', () => {\n      const { value } = tourDropdown;\n      findPlayer.setAttribute('data-filter', value);\n      selectPlayer.setAttribute('data-filter', value);\n      updateSelectPlayer(selectPlayer, value, players[value]);\n    });\n    updateSelectPlayer(selectPlayer, tourDropdown.value, players[tourDropdown.value]);\n  }\n}",
            "score": -0.8604651162790697
        },
        "scripts/delayed.js::setupFindPlayer": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function setupFindPlayer(input) {\n  const options = document.createElement('ul');\n  options.className = 'gigya-find-player-options';\n  input.after(options);\n  input.addEventListener('keyup', filterFindPlayer);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::setupGigya": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function setupGigya() {\n  // eslint-disable-next-line no-undef\n  gigya.accounts.session.verify({ callback: checkIfLoggedIn });\n}",
            "score": -1.0
        },
        "scripts/delayed.js::setupGigyaButtons": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function setupGigyaButtons(res) {\n  setupUserButton(res);\n  setupFavoriteButtons(res);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::setupUserButton": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "function setupUserButton(res) {\n  const button = document.getElementById('nav-user-button');\n  if (button) {\n    if (res && res != null && res.errorCode === 0) { // user is logged in\n      const user = res.profile;\n      user.isConnected = true;\n      updateUserButton(user);\n    } else {\n      // set click to open login menu\n      button.addEventListener('click', showLoginMenu);\n    }\n    button.setAttribute('data-status', 'initialized');\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::showAccountMenu": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function showAccountMenu() {\n  // eslint-disable-next-line no-undef\n  gigya.accounts.showScreenSet({\n    screenSet: 'Website-ManageProfile',\n    onAfterScreenLoad: setupAccountMenu,\n  });\n}",
            "score": -1.0
        },
        "scripts/delayed.js::showLoginMenu": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "function showLoginMenu() {\n  // eslint-disable-next-line no-undef\n  gigya.accounts.showScreenSet({\n    screenSet: 'Website-RegistrationLogin',\n    startScreen: 'gigya-long-login-screen',\n    // eslint-disable-next-line no-use-before-define\n    onAfterSubmit: updateUserButton,\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::updateCountdown": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateCountdown() {\n  const days = document.getElementById('countdown-days');\n  const hours = document.getElementById('countdown-hours');\n  const minutes = document.getElementById('countdown-minutes');\n  const countdownData = parseCountdown(findTimeBetween(window.placeholders.countdown));\n  days.textContent = countdownData.days;\n  hours.textContent = countdownData.hours;\n  minutes.textContent = countdownData.minutes;\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateExternalLinks": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateExternalLinks() {\n  document.querySelectorAll('a[href]').forEach((a) => {\n    try {\n      const { origin } = new URL(a.href, window.location.href);\n      if (origin && origin !== window.location.origin) {\n        a.setAttribute('rel', 'noopener');\n        a.setAttribute('target', '_blank');\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn(`Invalid link: ${a.href}`);\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::updateFavoriteButtons": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateFavoriteButtons(res) {\n  const buttons = document.querySelectorAll('.leaderboard-favorite-button');\n  if (res && res != null && res.data) {\n    const favorites = res.data.favorites || [];\n    buttons.forEach((btn) => {\n      // eslint-disable-next-line no-use-before-define\n      btn.removeEventListener('click', promptToLogin);\n      const playerId = btn.getAttribute('data-id');\n      const isFavorite = favorites.find((fave) => fave.playerId === playerId);\n      const icon = btn.querySelector('.icon');\n      const tooltip = btn.nextElementSibling;\n      if (isFavorite) {\n        btn.setAttribute('data-op', 'remove');\n        if (icon) icon.className = 'icon icon-minus';\n        if (tooltip && tooltip.className === 'tooltip') {\n          tooltip.querySelector('.tooltip-op').textContent = 'Remove from';\n        }\n        btn.removeEventListener('click', addFavoritePlayerFromLeaderboard);\n        btn.addEventListener('click', removeFavoritePlayerFromLeaderboard);\n      } else {\n        btn.setAttribute('data-op', 'add');\n        // ensure add to favorite button\n        if (icon) icon.className = 'icon icon-plus';\n        if (tooltip && tooltip.className === 'tooltip') {\n          tooltip.querySelector('.tooltip-op').textContent = 'Add to';\n        }\n        btn.removeEventListener('click', removeFavoritePlayerFromLeaderboard);\n        btn.addEventListener('click', addFavoritePlayerFromLeaderboard);\n      }\n    });\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateFavoriteLeaderboardAfterOperation": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function updateFavoriteLeaderboardAfterOperation(res) {\n  // eslint-disable-next-line no-use-before-define\n  updateFavoriteButtons(res.requestParams);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateFavoritePlayerFromLeaderboard": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateFavoritePlayerFromLeaderboard(res) {\n  const button = document.querySelector('.leaderboard-favorite-button[data-selected=\"true\"]');\n  if (button) {\n    button.removeAttribute('data-selected');\n    const operation = button.getAttribute('data-op');\n    const playerId = button.getAttribute('data-id');\n    const tourCode = button.getAttribute('data-tour');\n    const { favorites } = res.data;\n    let newFavorites = favorites;\n    if (operation === 'add') {\n      newFavorites.push({\n        createdDate: new Date().toISOString(),\n        tourCode,\n        playerId,\n      });\n    } else if (operation === 'remove') {\n      newFavorites = newFavorites.filter((fave) => fave.playerId !== playerId);\n    }\n    // eslint-disable-next-line no-undef\n    gigya.accounts.setAccountInfo({\n      data: { favorites: newFavorites },\n      callback: updateFavoriteLeaderboardAfterOperation,\n    });\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateFavoritePlayers": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateFavoritePlayers(e, operation, id) {\n  e.preventDefault();\n  if (id && operation === 'add') {\n    // eslint-disable-next-line no-undef\n    gigya.accounts.getAccountInfo({ callback: addFavoritePlayer });\n  } else if (id && operation === 'remove') {\n    // eslint-disable-next-line no-undef\n    gigya.accounts.getAccountInfo({ callback: removeFavoritePlayer });\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateFavoritePlayersAfterAdd": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function updateFavoritePlayersAfterAdd(res) {\n  // eslint-disable-next-line no-use-before-define\n  await writeFavoritePlayers(res.requestParams.data.favorites);\n  clearFindPlayer();\n  clearSelectPlayer();\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::updateFavoritePlayersAfterRemove": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function updateFavoritePlayersAfterRemove(res) {\n  // eslint-disable-next-line no-use-before-define\n  await writeFavoritePlayers(res.requestParams.data.favorites);\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::updateFavoritePlayersFromMenu": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateFavoritePlayersFromMenu(e, operation, id) {\n  e.preventDefault();\n  if (id && operation === 'add') {\n    // eslint-disable-next-line no-undef\n    gigya.accounts.getAccountInfo({ callback: addFavoritePlayerFromMenu });\n  } else if (id && operation === 'remove') {\n    // eslint-disable-next-line no-undef\n    gigya.accounts.getAccountInfo({ callback: removeFavoritePlayerFromMenu });\n  }\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateFindPlayer": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateFindPlayer(input, tour, players) {\n  const wrapper = input.parentNode.querySelector('.gigya-find-player-options');\n  players.forEach((player) => {\n    const option = document.createElement('li');\n    option.className = 'hide';\n    option.setAttribute('data-tour', tour);\n    option.setAttribute('value', player.pid);\n    option.textContent = `${player.nameL}, ${player.nameF}`;\n    option.addEventListener('click', updateFindPlayerInput);\n    wrapper.append(option);\n  });\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateFindPlayerInput": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateFindPlayerInput(e) {\n  const target = e.target.closest('li');\n  const input = target.parentNode.parentNode.querySelector('input');\n  input.value = target.textContent;\n  input.setAttribute('data-value', target.getAttribute('value'));\n  // eslint-disable-next-line no-use-before-define\n  clearSelectPlayer();\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateGigyaButtons": {
            "changes_after_merge": 0,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateGigyaButtons(res) {\n  updateUserButton(res);\n  updateFavoriteButtons(res);\n}",
            "score": -1.0
        },
        "scripts/delayed.js::updateSelectPlayer": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateSelectPlayer(select, tour, players) {\n  select.innerHTML = '';\n  const defaultOption = document.createElement('option');\n  defaultOption.disabled = true;\n  defaultOption.selected = true;\n  defaultOption.textContent = 'Select Player';\n  select.prepend(defaultOption);\n  players.forEach((player) => {\n    const option = document.createElement('option');\n    option.setAttribute('data-tour', tour);\n    option.setAttribute('value', player.pid);\n    option.textContent = `${player.nameL}, ${player.nameF}`;\n    select.append(option);\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::updateUserButton": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "function updateUserButton(user) {\n  // eslint-disable-next-line no-param-reassign\n  if (user.eventName === 'afterSubmit') user = user.response.user;\n  const button = document.getElementById('nav-user-button');\n  if (user && user != null && user.isConnected) {\n    // add button caret\n    button.innerHTML = `${button.innerHTML}<span class=\"icon icon-caret\"></span>`;\n    // update button text\n    const text = button.querySelector('span:not([class])');\n    text.textContent = 'Manage Profile';\n    // update button icon\n    if (user.thumbnailURL.length > 0) {\n      const icon = button.querySelector('span.icon');\n      const img = document.createElement('img');\n      img.src = user.thumbnailURL;\n      img.alt = 'User Profile Thumbnail';\n      icon.replaceWith(img);\n    }\n    // reset click to open manage account\n    button.removeEventListener('click', showLoginMenu);\n    button.addEventListener('click', showAccountMenu);\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::writeFavoritePlayers": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function writeFavoritePlayers(favorites) {\n  const wrapper = document.querySelector('.gigya-your-favorites');\n  wrapper.innerHTML = '';\n  const players = await loadPlayers();\n  favorites.forEach((favorite) => {\n    const player = players.byId[favorite.playerId];\n    const row = document.createElement('div');\n    row.setAttribute('data-tour', favorite.tourCode);\n    row.setAttribute('data-id', favorite.playerId);\n    row.innerHTML = `<p>${player.nameF} ${player.nameL}</p>\n      <button><span class=\"icon icon-close\"></span></button>`;\n    const button = row.querySelector('button');\n    button.addEventListener('click', (e) => {\n      const target = e.target.closest('[data-id]');\n      target.setAttribute('data-selected', true);\n      const id = target.getAttribute('data-id');\n      updateFavoritePlayers(e, 'remove', id);\n    });\n    wrapper.append(row);\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::addFavIcon": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function addFavIcon(href) {\n  const link = document.createElement('link');\n  link.rel = 'icon';\n  link.type = 'image/svg+xml';\n  link.href = href;\n  const existingLink = document.querySelector('head link[rel=\"icon\"]');\n  if (existingLink) {\n    existingLink.parentElement.replaceChild(link, existingLink);\n  } else {\n    document.getElementsByTagName('head')[0].appendChild(link);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::addHeaderSizing": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function addHeaderSizing(block, classPrefix = 'heading', selector = 'h1, h2') {\n  const headings = block.querySelectorAll(selector);\n  const sizes = [\n    { name: 'long', threshold: 30 },\n    { name: 'very-long', threshold: 40 },\n    { name: 'x-long', threshold: 50 },\n  ];\n  headings.forEach((h) => {\n    const { length } = h.textContent;\n    sizes.forEach((size) => {\n      if (length >= size.threshold) h.classList.add(`${classPrefix}-${size.name}`);\n    });\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::addPublishDependencies": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function addPublishDependencies(url) {\n  const urls = Array.isArray(url) ? url : [url];\n  window.hlx = window.hlx || {};\n  if (window.hlx.dependencies && Array.isArray(window.hlx.dependencies)) {\n    window.hlx.dependencies = window.hlx.dependencies.concat(urls);\n  } else {\n    window.hlx.dependencies = urls;\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::buildAdPlaceholders": {
            "changes_after_merge": 5,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function buildAdPlaceholders(main) {\n  const ads = await fetchAds();\n  // find if ad on page\n  const { pathname } = window.location;\n  const adOnPage = ads.find((ad) => {\n    if (ad.URL.includes('**')) { // wildcard selector\n      const folder = ad.URL.replace('**', '');\n      return pathname.startsWith(folder);\n    }\n    return ad.URL === pathname;\n  });\n  if (adOnPage) { // build ad placeholder(s)\n    adOnPage.positions.split(',').forEach((position) => {\n      // eslint-disable-next-line no-param-reassign\n      position = position.trim();\n      const placements = {\n        'leftpromo toggle': {\n          slot: 'pb-slot-sponsor-banner',\n          insertBefore: main.querySelector('.tee-times'),\n        },\n        'leftpromo clock': {\n          slot: 'pb-slot-sponsor-banner',\n          insertBefore: main.querySelector('.leaderboard, .columns'),\n        },\n        top: {\n          slot: 'pb-slot-content-1',\n          insertAfter: main.querySelector('.hero, .carousel'),\n        },\n        right: {\n          slot: 'pb-slot-sidebar-1',\n          append: findNonFullWidthSection(main),\n        },\n      };\n      if (placements[position]) {\n        const pos = placements[position];\n        const placeholder = document.createElement('aside');\n        placeholder.setAttribute('data-slot', pos.slot);\n        placeholder.className = `ad ad-${toClassName(position)}`;\n        placeholder.innerHTML = `<div id=\"${pos.slot}\"></div>`;\n        if (pos.insertBefore) {\n          const parent = pos.insertBefore.parentNode.parentNode;\n          // container > wrapper > block\n          parent.parentNode.insertBefore(placeholder, parent);\n        } else if (pos.insertAfter) {\n          // container > wrapper > block\n          pos.insertAfter.parentNode.parentNode.after(placeholder);\n        } else if (pos.append) {\n          const existingColumn = pos.append.querySelector('.col-right');\n          if (existingColumn) {\n            existingColumn.append(placeholder);\n          } else {\n            // build column\n            const column = document.createElement('section');\n            column.className = 'col-right';\n            column.append(placeholder);\n            pos.append.classList.add('two-col');\n            pos.append.append(column);\n          }\n        }\n      }\n    });\n    main.append(buildBlock('ads', ''));\n  }\n}",
            "score": -0.7674418604651163
        },
        "scripts/scripts.js::buildAutoBlocks": {
            "changes_after_merge": 23,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildAutoBlocks(main) {\n  try {\n    buildHeroBlock(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": 0.06976744186046502
        },
        "scripts/scripts.js::buildBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::buildHeroBlock": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildHeroBlock(main) {\n  const h1 = main.querySelector('h1');\n  const picture = main.querySelector('picture');\n\n  // eslint-disable-next-line no-bitwise\n  if (h1 && picture && (h1.compareDocumentPosition(picture) & Node.DOCUMENT_POSITION_PRECEDING)) {\n    const section = document.createElement('div');\n    const elems = [];\n    const currentSection = h1.closest('main > div');\n    if (!currentSection.previousElementSibling && currentSection.children.length < 5) {\n      [...currentSection.children].forEach((child) => { elems.push(child); });\n    } else {\n      elems.push(picture);\n      elems.push(h1);\n    }\n\n    section.append(buildBlock('hero', { elems }));\n    main.prepend(section);\n  }\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::buildImageBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildImageBlocks(main) {\n  // select all non-featured, default (non-images block) images\n  const imgs = [...main.querySelectorAll(':scope > div > p > picture')];\n  let lastImagesBlock;\n  imgs.forEach((img) => {\n    const parent = img.parentNode;\n    const imgBlock = buildBlock('images', {\n      elems: [img.cloneNode(true), getImageCaption(img)],\n    });\n    if (parent.parentNode) {\n      parent.replaceWith(imgBlock);\n      lastImagesBlock = imgBlock;\n    } else {\n      // same parent, add image to last images block\n      lastImagesBlock.firstChild.append(imgBlock.firstChild.firstChild);\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::buildRelatedStoriesBlock": {
            "changes_after_merge": 15,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildRelatedStoriesBlock(main, tags) {\n  let storiesSection = findNonFullWidthSection(main);\n  if (!storiesSection) { // if no section without full-width content, create one\n    storiesSection = document.createElement('div');\n    main.append(storiesSection);\n  } else {\n    storiesSection.classList.add('related-stories-cols');\n  }\n  storiesSection.append(buildBlock('related-stories', [['<div>Tags</div>', `<div>${tags}</div>`]]));\n}",
            "score": -0.3023255813953488
        },
        "scripts/scripts.js::buildShareBlock": {
            "changes_after_merge": 9,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildShareBlock(main) {\n  const firstSection = main.querySelector('div');\n  const section = document.createElement('div');\n  section.append(buildBlock('share', ''));\n  firstSection.after(section);\n}",
            "score": -0.5813953488372092
        },
        "scripts/scripts.js::clearDataLayer": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function clearDataLayer() {\n  window.adobeDataLayer = [];\n}",
            "score": -1.0
        },
        "scripts/scripts.js::createOptimizedPicture": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 400px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateBlock(block) {\n  const trimDashes = (str) => str.replace(/(^\\s*-)|(-\\s*$)/g, '');\n  const classes = Array.from(block.classList.values());\n  const blockName = classes[0];\n  if (!blockName) return;\n  const section = block.closest('.section');\n  if (section) {\n    section.classList.add(`${blockName}-container`.replace(/--/g, '-'));\n  }\n  const blockWithVariants = blockName.split('--');\n  const shortBlockName = trimDashes(blockWithVariants.shift());\n  const variants = blockWithVariants.map((v) => trimDashes(v));\n  block.classList.add(shortBlockName);\n  block.classList.add(...variants);\n\n  block.classList.add('block');\n  block.setAttribute('data-block-name', shortBlockName);\n  block.setAttribute('data-block-status', 'initialized');\n\n  const blockWrapper = block.parentElement;\n  blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach((block) => decorateBlock(block));\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateButtons": {
            "changes_after_merge": 4,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          a.className = 'button primary'; // default\n          up.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n            && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n            && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}",
            "score": -0.813953488372093
        },
        "scripts/scripts.js::decorateFevoButtons": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateFevoButtons(main) {\n  const fevoButtons = main.querySelectorAll('a[href*=\"fevogm.com\"]');\n  if (fevoButtons.length > 0) {\n    fevoButtons.forEach((a) => {\n      const offerCode = new URL(a.href).searchParams.get('offercode');\n      if (offerCode) {\n        a.classList.add('fevo-btn');\n        a.addEventListener('click', (e) => {\n          e.preventDefault();\n          // this gets loaded in delayed, so checking JIC\n          if (window.GMWidget) {\n            window.GMWidget.open(offerCode);\n          }\n        });\n      }\n    });\n  }\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::decorateIcons": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateIcons(element) {\n  // prepare for forward compatible icon handling\n  replaceIcons(element);\n\n  element.querySelectorAll('span.icon').forEach((span) => {\n    const iconName = span.className.split('icon-')[1];\n    fetch(`${window.hlx.codeBasePath}/icons/${iconName}.svg`).then((resp) => {\n      if (resp.status === 200) resp.text().then((svg) => { span.innerHTML = svg; });\n    });\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::decorateLinkedPictures": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateLinkedPictures($main) {\n  /* thanks to word online */\n  $main.querySelectorAll('picture').forEach(($picture) => {\n    if (!$picture.closest('div.block')) {\n      linkPicture($picture);\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::decorateMain": {
            "changes_after_merge": 11,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateMain(main) {\n  // forward compatible pictures redecoration\n  decoratePictures(main);\n  // forward compatible link rewriting\n  makeLinksRelative(main);\n  decorateLinkedPictures(main);\n\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n\n  const sections = [...main.querySelectorAll('.section')];\n  sections.forEach((section) => {\n    const bg = section.dataset.background;\n    if (bg) {\n      const picture = createOptimizedPicture(bg);\n      picture.classList.add('section-background');\n      section.prepend(picture);\n    }\n  });\n\n  decorateBlocks(main);\n}",
            "score": -0.4883720930232558
        },
        "scripts/scripts.js::decoratePictures": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decoratePictures(main) {\n  main.querySelectorAll('img[src*=\"/media_\"').forEach((img, i) => {\n    const newPicture = createOptimizedPicture(img.src, img.alt, !i);\n    const picture = img.closest('picture');\n    if (picture) picture.parentElement.replaceChild(newPicture, picture);\n    if (['EM', 'STRONG'].includes(newPicture.parentElement.tagName)) {\n      const styleEl = newPicture.parentElement;\n      styleEl.parentElement.replaceChild(newPicture, styleEl);\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateSections": {
            "changes_after_merge": 18,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateSections($main) {\n  $main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.setAttribute('data-section-status', 'initialized');\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      const keys = Object.keys(meta);\n      keys.forEach((key) => {\n        if (key === 'style') section.classList.add(toClassName(meta.style));\n        else section.dataset[toCamelCase(key)] = meta[key];\n      });\n      sectionMeta.remove();\n    }\n  });\n}",
            "score": -0.16279069767441856
        },
        "scripts/scripts.js::decorateTemplateAndTheme": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateTemplateAndTheme() {\n  const template = getMetadata('template');\n  if (template) document.body.classList.add(template);\n  const theme = getMetadata('theme');\n  if (theme) document.body.classList.add(theme);\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::fetchAds": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function fetchAds(prefix = 'default') {\n  window.ads = window.ads || {};\n  const loaded = window.ads[`${prefix}-loaded`];\n  if (!loaded) {\n    window.ads[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      try {\n        fetch(`${prefix === 'default' ? '' : prefix}/ads.json`)\n          .then((resp) => resp.json())\n          .then((json) => {\n            const ads = [];\n            json.data.forEach((ad) => {\n              ads.push({\n                URL: ad.URL,\n                positions: ad.Position,\n              });\n            });\n            window.ads[prefix] = ads;\n            resolve();\n          });\n      } catch (e) {\n        // error loading ads\n        window.ads[prefix] = [];\n        reject();\n      }\n    });\n  }\n  await window.ads[`${prefix}-loaded`];\n  return window.ads[prefix];\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::fetchCors": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function fetchCors(url) {\n  const worker = 'https://little-forest-58aa.david8603.workers.dev';\n  const fetchUrl = `${worker}/?url=${encodeURIComponent(url)}`;\n  return fetch(fetchUrl);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::fetchGraphQL": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function fetchGraphQL(query, variables) {\n  const placeholders = await fetchPlaceholders();\n  if (placeholders.graphqlApiEndpoint && placeholders.graphqlApiKey) {\n    return fetch(placeholders.graphqlApiEndpoint, {\n      method: 'POST',\n      body: JSON.stringify({\n        variables,\n        query,\n      }),\n      headers: {\n        // todo replace with value from placeholders\n        'x-api-key': placeholders.graphqlApiKey,\n        'x-pgat-platform': 'web',\n      },\n    });\n  }\n  throw new Error('fail');\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::fetchPlaceholders": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      try {\n        fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n          .then((resp) => resp.json())\n          .then((json) => {\n            const placeholders = {};\n            json.data.forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n            window.placeholders[prefix] = placeholders;\n            resolve();\n          });\n      } catch (e) {\n        // error loading placeholders\n        window.placeholders[prefix] = {};\n        reject();\n      }\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return (window.placeholders[prefix]);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::findNonFullWidthSection": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function findNonFullWidthSection(main) {\n  const FULL_WIDTH_BLOCKS = ['carousel', 'carousel course', 'hero', 'news', 'player-feature', 'teaser', 'weather'];\n  const sections = main.querySelectorAll(':scope > div');\n  const nonFullWidthSection = [...sections]\n    .find((section) => ![...section.children] // check section\n      .find((child) => FULL_WIDTH_BLOCKS.includes(child.className))); // check content in section\n  return nonFullWidthSection;\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::getImageCaption": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getImageCaption(picture) {\n  const parent = picture.parentNode;\n  const parentSibling = parent.nextElementSibling;\n  return parentSibling && parentSibling.firstChild.nodeName === 'EM' ? parentSibling : undefined;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || null;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getPageNameAndSections": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getPageNameAndSections() {\n  const pageSectionParts = window.location.pathname.split('/').filter((subPath) => subPath !== '');\n  const pageName = pageSectionParts.join(':');\n  const finalPageName = pageName === '' ? 'Home' : pageName;\n\n  return {\n    pageName: finalPageName,\n    sections: pageSectionParts,\n  };\n}",
            "score": -1.0
        },
        "scripts/scripts.js::hashCode": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0)",
            "score": -1.0
        },
        "scripts/scripts.js::initHlx": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function initHlx() {\n  window.hlx = window.hlx || {};\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n  window.hlx.codeBasePath = '';\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::isAppView": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function isAppView() {\n  const params = new URLSearchParams(window.location.search);\n  return params.get('view') === 'app';\n}",
            "score": -1.0
        },
        "scripts/scripts.js::linkPicture": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function linkPicture($picture) {\n  const $nextSib = $picture.parentNode.nextElementSibling;\n  if ($nextSib) {\n    const $a = $nextSib.querySelector('a');\n    if ($a && $a.textContent.startsWith('https://')) {\n      $a.innerHTML = '';\n      $a.className = '';\n      $a.appendChild($picture);\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::loadAds": {
            "changes_after_merge": 6,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadAds(doc) {\n  window.ads = window.ads || {};\n  // fetch ads\n  const { loaded } = window.ads;\n  if (!loaded) {\n    window.ads.loaded = new Promise((resolve, reject) => {\n      try {\n        fetch('/ads.json')\n          .then((resp) => resp.json())\n          .then((json) => {\n            const ads = [];\n            json.data.forEach((ad) => {\n              ads.push({\n                URL: ad.URL,\n                positions: ad.Position.split(',').map((a) => a.trim()),\n              });\n            });\n            window.ads.locations = ads;\n            resolve();\n          });\n      } catch (e) {\n        // error loading placeholders\n        window.ads.locations = [];\n        reject();\n      }\n    });\n  }\n  await window.ads.loaded;\n  // find if add on page\n  const { pathname } = window.location;\n  const adOnPage = window.ads.locations.find((ad) => ad.URL === pathname);\n  if (adOnPage) {\n    // find ad location\n    adOnPage.positions.forEach((position) => {\n      let block;\n      if (position.includes('leftpromo')) {\n        const sectionBefore = doc.querySelector('.leaderboard-container, .tee-times-container');\n        if (sectionBefore) {\n          const adSection = document.createElement('div');\n          adSection.className = `section ads-container ads-container-${toClassName(position)}`;\n          block = buildBlock('ads', [['<div>Position</div>', `<div>${position}</div>`]]);\n          block.classList.add(`ads-${toClassName(position)}`);\n          adSection.append(block);\n          sectionBefore.parentNode.insertBefore(adSection, sectionBefore);\n        }\n      }\n      if (block) {\n        decorateBlock(block);\n        loadBlock(block);\n      }\n    });\n  }\n}",
            "score": -0.7209302325581395
        },
        "scripts/scripts.js::loadBlock": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadBlock(block, eager = false) {\n  if (!(block.getAttribute('data-block-status') === 'loading' || block.getAttribute('data-block-status') === 'loaded')) {\n    block.setAttribute('data-block-status', 'loading');\n    const blockName = block.getAttribute('data-block-name');\n    try {\n      const cssLoaded = new Promise((resolve) => {\n        loadCSS(`${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`, resolve);\n      });\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(`../blocks/${blockName}/${blockName}.js`);\n            if (mod.default) {\n              await mod.default(block, blockName, document, eager);\n            }\n          } catch (err) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, err);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, err);\n    }\n    block.setAttribute('data-block-status', 'loaded');\n  }\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::loadBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadCSS": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadCSS(href, callback) {\n  if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n    const link = document.createElement('link');\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('href', href);\n    if (typeof callback === 'function') {\n      link.onload = (e) => callback(e.type);\n      link.onerror = (e) => callback(e.type);\n    }\n    document.head.appendChild(link);\n  } else if (typeof callback === 'function') {\n    callback('noop');\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadDelayed": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::loadEager": {
            "changes_after_merge": 14,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadEager(doc) {\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    await waitForLCP();\n  }\n}",
            "score": -0.34883720930232553
        },
        "scripts/scripts.js::loadFooter": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  await loadBlock(footerBlock);\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::loadHeader": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  await loadBlock(headerBlock);\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::loadLazy": {
            "changes_after_merge": 26,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadBlocks(main);\n\n  const { hash } = window.location;\n  const element = hash ? main.querySelector(hash) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  addFavIcon(`${window.hlx.codeBasePath}/styles/favicon.ico`);\n}",
            "score": 0.20930232558139528
        },
        "scripts/scripts.js::loadPage": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadPage(doc) {\n  // eslint-disable-next-line no-use-before-define\n  await loadEager(doc);\n  // eslint-disable-next-line no-use-before-define\n  await loadLazy(doc);\n  // eslint-disable-next-line no-use-before-define\n  loadDelayed(doc);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadScript": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadScript(url, callback, type) {\n  const head = document.querySelector('head');\n  if (!head.querySelector(`script[src=\"${url}\"]`)) {\n    const script = document.createElement('script');\n    script.src = url;\n    if (type) script.setAttribute('type', type);\n    head.append(script);\n    script.onload = callback;\n    return script;\n  }\n  return head.querySelector(`script[src=\"${url}\"]`);\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::lookupPages": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function lookupPages(pathnames) {\n  if (!window.pageIndex) {\n    const resp = await fetch('/query-index.json');\n    const json = await resp.json();\n    const lookup = {};\n    json.data.forEach((row) => {\n      lookup[row.path] = row;\n    });\n    window.pageIndex = { data: json.data, lookup };\n  }\n  if (pathnames) {\n    const result = pathnames.map((path) => window.pageIndex.lookup[path]).filter((e) => e);\n    return (result);\n  }\n  return window.pageIndex.data;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::makeLinksRelative": {
            "changes_after_merge": 8,
            "file_path": "scripts/scripts.js",
            "merged_function": "function makeLinksRelative(main) {\n  main.querySelectorAll('a').forEach((a) => {\n    // eslint-disable-next-line no-use-before-define\n    const hosts = ['hlx.page', 'hlx.live', ...PRODUCTION_DOMAINS];\n    if (a.href) {\n      try {\n        const url = new URL(a.href);\n        const relative = hosts.some((host) => url.hostname.includes(host));\n        if (relative) a.href = `${url.pathname.split('.')[0]}${url.search}${url.hash}`;\n      } catch (e) {\n        // something went wrong\n        // eslint-disable-next-line no-console\n        console.log(e);\n      }\n    }\n  });\n}",
            "score": -0.627906976744186
        },
        "scripts/scripts.js::normalizeHeadings": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::populatePlayerFeature": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function populatePlayerFeature(block, link) {\n  const source = link.getAttribute('href');\n  const resp = await fetch(`${source}.plain.html`);\n  if (resp.ok) {\n    const html = await resp.text();\n    const feature = document.createElement('div');\n    feature.innerHTML = html;\n    block.innerHTML = `<div>${feature.querySelector('div').outerHTML}</div>`;\n    const video = block.querySelector('.embed, .video');\n    decorateButtons(block);\n    if (video) {\n      decorateBlock(video);\n      await loadBlock(video);\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::preloadAdPlaceholders": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function preloadAdPlaceholders(doc) {\n  const ads = await fetchAds();\n  // find if add on page\n  const { pathname } = window.location;\n  const adOnPage = ads.find((ad) => {\n    if (ad.URL.includes('**')) { // wildcard selector\n      const folder = ad.URL.replace('**', '');\n      return pathname.startsWith(folder);\n    }\n    return ad.URL === pathname;\n  });\n  if (adOnPage) { // build ad placeholder(s)\n    window.adOnPage = true;\n    adOnPage.positions.split(',').forEach((position) => {\n      // eslint-disable-next-line no-param-reassign\n      position = position.trim();\n      const placements = {\n        top: {\n          slot: 'pb-slot-content-1',\n          insertAfter: doc.querySelector('.hero-container, .carousel-container'),\n        },\n      };\n      if (placements[position]) {\n        const pos = placements[position];\n        const placeholder = document.createElement('aside');\n        placeholder.className = `ad ad-${toClassName(position)}`;\n        placeholder.innerHTML = `<div id=\"${pos.slot}\"></div>`;\n        if (pos.insertAfter) {\n          pos.insertAfter.after(placeholder);\n        }\n      }\n    });\n  } else window.adOnPage = false;\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::pushOneTrustConsentGroups": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function pushOneTrustConsentGroups() {\n  window.adobeDataLayer = window.adobeDataLayer || [];\n  const dl = window.adobeDataLayer;\n  dl.push({\n    event: 'LaunchOTLoaded',\n    // eslint-disable-next-line no-undef\n    OnetrustActiveGroups: typeof OnetrustActiveGroups !== 'undefined' ? OnetrustActiveGroups : '',\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::readBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope>div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}",
            "score": -1.0
        },
        "scripts/scripts.js::replaceIcons": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function replaceIcons(element) {\n  element.querySelectorAll('img.icon').forEach((img) => {\n    const span = document.createElement('span');\n    span.className = img.className;\n    img.replaceWith(span);\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::sampleRUM": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function sampleRUM(checkpoint, data = {}) {\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      // eslint-disable-next-line object-curly-newline\n      window.hlx.rum = { weight, id, random, isSelected };\n    }\n    const { random, weight, id } = window.hlx.rum;\n    if (random && (random * weight < 1)) {\n      const sendPing = () => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.location.href, generation: RUM_GENERATION, checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n      };\n      sendPing();\n      // special case CWV\n      if (checkpoint === 'cwv') {\n        // use classic script to avoid CORS issues\n        const script = document.createElement('script');\n        script.src = 'https://rum.hlx.page/.rum/web-vitals/dist/web-vitals.iife.js';\n        script.onload = () => {\n          const storeCWV = (measurement) => {\n            data.cwv = {};\n            data.cwv[measurement.name] = measurement.value;\n            sendPing();\n          };\n            // When loading `web-vitals` using a classic script, all the public\n            // methods can be found on the `webVitals` global namespace.\n          window.webVitals.getCLS(storeCWV);\n          window.webVitals.getFID(storeCWV);\n          window.webVitals.getLCP(storeCWV);\n        };\n        document.head.appendChild(script);\n      }\n    }\n  } catch (e) {\n    // something went wrong\n  }\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::sendAnalyticsPageEvent": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function sendAnalyticsPageEvent() {\n  window.adobeDataLayer = window.adobeDataLayer || [];\n  const dl = window.adobeDataLayer;\n  const placeholders = await fetchPlaceholders();\n  const isUserLoggedIn = window.gigyaAccountInfo && window.gigyaAccountInfo != null\n    && window.gigyaAccountInfo.errorCode === 0;\n\n  const { pageName, sections } = getPageNameAndSections();\n  dl.push({\n    event: 'pageLoaded',\n    pageName,\n    pageUrl: window.location.href,\n    siteSection: sections[0] || '',\n    siteSubSection: sections[1] || '',\n    siteSubSection2: sections[2] || '',\n    gigyaID: isUserLoggedIn && window.gigyaAccountInfo.UID ? window.gigyaAccountInfo.UID : '',\n    userLoggedIn: isUserLoggedIn ? 'Logged In' : 'Logged Out',\n    tourName: 'pgatour',\n    tournamentID: `${placeholders.tourCode.toUpperCase()}${placeholders.currentYear}${placeholders.tournamentId}`,\n    ipAddress: '127.0.0.1',\n    deviceType: 'Web',\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::sendPing": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "sendPing = () => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.location.href, generation: RUM_GENERATION, checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n      }",
            "score": -1.0
        },
        "scripts/scripts.js::storeCWV": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "storeCWV = (measurement) => {\n            data.cwv = {};\n            data.cwv[measurement.name] = measurement.value;\n            sendPing();\n          }",
            "score": -1.0
        },
        "scripts/scripts.js::toCamelCase": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}",
            "score": -1.0
        },
        "scripts/scripts.js::toClassName": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function toClassName(name) {\n  return name && typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-')\n    : '';\n}",
            "score": -1.0
        },
        "scripts/scripts.js::trimDashes": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "trimDashes = (str) => str.replace(/(^\\s*-)|(-\\s*$)/g, '')",
            "score": -1.0
        },
        "scripts/scripts.js::updateExternalLinks": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function updateExternalLinks(container) {\n  const REFERERS = [\n    window.location.origin,\n    'http://pubads.g.doubleclick.net',\n    'https://googleads.g.doubleclick.net',\n    'https://adclick.g.doubleclick.net',\n    'https://www.pgatour.com',\n    'https://www.pgatourfanshop.com',\n    'https://www.grantthornton.com',\n    'http://www.morganstanley.com',\n    'http://www.optum.com',\n    'https://www.rolex.com',\n  ];\n  container.querySelectorAll('a[href]').forEach((a) => {\n    try {\n      const { origin, pathname, hash } = new URL(a.href, window.location.href);\n      const targetHash = hash && hash.startsWith('#_');\n      const isPDF = pathname.split('.').pop() === 'pdf';\n      if ((origin && origin !== window.location.origin && !targetHash) || isPDF) {\n        a.setAttribute('target', '_blank');\n        if (!REFERERS.includes(origin)) a.setAttribute('rel', 'noopener');\n      } else if (targetHash) {\n        a.setAttribute('target', hash.replace('#', ''));\n        a.href = a.href.replace(hash, '');\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn(`Invalid link in ${container}: ${a.href}`);\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::updateSectionsStatus": {
            "changes_after_merge": 11,
            "file_path": "scripts/scripts.js",
            "merged_function": "function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.getAttribute('data-section-status');\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.setAttribute('data-section-status', 'loading');\n        break;\n      } else {\n        section.setAttribute('data-section-status', 'loaded');\n      }\n    }\n  }\n}",
            "score": -0.4883720930232558
        },
        "scripts/scripts.js::waitForLCP": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function waitForLCP() {\n  // eslint-disable-next-line no-use-before-define\n  const lcpBlocks = LCP_BLOCKS;\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.getAttribute('data-block-name')));\n  if (hasLCPBlock) await loadBlock(block, true);\n\n  document.querySelector('body').classList.add('appear');\n  const lcpCandidate = document.querySelector('main img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', () => resolve());\n      lcpCandidate.addEventListener('error', () => resolve());\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/scripts.js::wrapImgsInLinks": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function wrapImgsInLinks(container) {\n  const pictures = container.querySelectorAll('p picture');\n  pictures.forEach((pic) => {\n    const parent = pic.parentNode;\n    const link = parent.nextElementSibling.querySelector('a');\n    if (link && link.textContent.includes(link.getAttribute('href'))) {\n      link.parentElement.remove();\n      link.innerHTML = pic.outerHTML;\n      parent.replaceWith(link);\n    }\n  });\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createMetadata": {
            "changes_after_merge": 0,
            "file_path": "tools/importer/import.js",
            "merged_function": "createMetadata = (main, document) => {\n  const meta = {};\n\n  const title = document.querySelector('title');\n  if (title) {\n    meta.Title = title.innerHTML.replace(/[\\n\\t]/gm, '');\n  }\n\n  const desc = document.querySelector('[property=\"og:description\"]');\n  if (desc) {\n    meta.Description = desc.content;\n  }\n\n  const img = document.querySelector('[property=\"og:image\"]');\n  if (img) {\n    const el = document.createElement('img');\n    el.src = img.content;\n    meta.Image = el;\n  }\n\n  const block = WebImporter.Blocks.getMetadataBlock(document, meta);\n  main.append(block);\n\n  return meta;\n}",
            "score": -1.0
        },
        "tools/importer/import.js::createRelatedStoriesBlock": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/import.js",
            "merged_function": "createRelatedStoriesBlock = (main, document) => {\n  const related = document.querySelectorAll('.relatedStories .thumb');\n  if (related) {\n    const cells = [];\n    cells.push(['Related Stories']);\n    const p = document.createElement('p');\n    related.forEach((r) => {\n      // eslint-disable-next-line no-param-reassign\n      let ref = r.getAttribute('href');\n      if (!ref) {\n        ref = r.getAttribute('data-video-link');\n      }\n      const a = document.createElement('a');\n      a.href = ref;\n      a.innerHTML = ref;\n      p.append(a);\n      p.append(document.createElement('br'));\n    });\n    cells.push([p]);\n    const table = WebImporter.DOMUtils.createTable(cells, document);\n    main.append(table);\n  }\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/import.js::makeAbsoluteLinks": {
            "changes_after_merge": 1,
            "file_path": "tools/importer/import.js",
            "merged_function": "makeAbsoluteLinks = (main, host) => {\n  main.querySelectorAll('a').forEach((a) => {\n    if (a.href.startsWith('/')) {\n      const ori = a.href;\n      const u = new URL(a.href, host);\n      a.href = u.toString();\n\n      if (a.textContent === ori) {\n        a.textContent = a.href;\n      }\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "tools/importer/import.js::makeProxySrcs": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/import.js",
            "merged_function": "makeProxySrcs = (main, host) => {\n  main.querySelectorAll('img').forEach((img) => {\n    console.log('ori img.src', img.src)\n    if (img.src.startsWith('/')) {\n      // make absolute\n      const cu = new URL(host);\n      img.src = `${cu.origin}${img.src}`;\n    }\n    try {\n      const u = new URL(img.src);\n      u.searchParams.append('host', u.origin);\n      img.src = `http://localhost:3001${u.pathname}${u.search}`;\n    } catch (error) {\n      console.warn(`Unable to make proxy src for ${img.src}: ${error.message}`);\n    }\n    console.log('computed img.src', img.src)\n  });\n}",
            "score": -0.9069767441860466
        },
        "tools/importer/import.js::reorganiseHero": {
            "changes_after_merge": 5,
            "file_path": "tools/importer/import.js",
            "merged_function": "reorganiseHero = (main, document) => {\n  const articleBodyText = document.querySelector('.articleBodyText');\n  if (articleBodyText) {\n    main.prepend(articleBodyText);\n  }\n\n  const heroLegend = document.querySelector('.image-autor');\n  if (heroLegend) {\n    const p = document.createElement('p');\n    const em = document.createElement('em');\n    em.innerHTML = heroLegend.innerHTML;\n    p.append(em);\n    main.prepend(p);\n    heroLegend.remove();\n  }\n  \n  const hero = document.querySelector('.main-image');\n  if (hero) {\n    main.prepend(hero);\n  }\n\n  const video = document.querySelector('.hero-module .video-container')\n  if (video) {\n    let ref = video.getAttribute('data-video-link-url');\n    if (!ref) {\n      ref = video.getAttribute('data-video-id');\n    } else {\n      const a = document.createElement('a');\n      a.href = ref;\n      a.innerHTML = ref;\n      ref = a;\n    }\n    if (ref) {\n      const cells = [['Video'], [ref]]\n      const table = WebImporter.DOMUtils.createTable(cells, document);\n      main.prepend(table);\n    }\n  }\n\n  const subtitle = document.querySelector('.subtitle');\n  if (subtitle) {\n    main.prepend(subtitle);\n  }\n\n  const h1 = document.querySelector('h1');\n  if (h1 && h1.textContent.trim() !== '') {\n    main.prepend(h1);\n  }\n}",
            "score": -0.7674418604651163
        },
        "tools/importer/import.js::ticketSummaryToColumnsBlock": {
            "changes_after_merge": 2,
            "file_path": "tools/importer/import.js",
            "merged_function": "ticketSummaryToColumnsBlock = (main, document) => {\n  const items = document.querySelectorAll('.ticketSummary .item');\n  if (items && items.length > 0) {\n    const cells = [];\n    cells.push(['Columns']);\n    let lastItem = null;\n    items.forEach((item, index) => {\n      const media = item.querySelector('.media');\n      const info = item.querySelector('.info');\n\n      const title = info.querySelector('.info-title');\n      if (title) {\n        const h2 = document.createElement('h2');\n        h2.innerHTML = title.innerHTML;\n        title.replaceWith(h2);\n      }\n\n      if (item.classList.contains('flipped')) {\n        cells.push([info, media]);\n      } else {\n        cells.push([media, info]);\n      }\n\n      if (index === items.length - 1) {\n        lastItem = item;\n      } else {\n        item.remove();\n      }\n    });\n    \n    const table = WebImporter.DOMUtils.createTable(cells, document);\n    lastItem.replaceWith(table);\n  };\n}",
            "score": -0.9069767441860466
        }
    },
    "walgreens": {
        "blocks/breadcrumb/breadcrumb.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/breadcrumb/breadcrumb.js",
            "merged_function": "async function decorate(block) {\n  block.querySelectorAll('li a').forEach((link, idx, arr) => {\n    if (!idx < arr.length - 1) {\n      return;\n    }\n\n    const icon = document.createElement('span');\n    icon.classList.add('icon');\n    icon.classList.add('icon-arrow-right');\n\n    link.appendChild(icon);\n  });\n\n  await decorateIcons(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/cards/cards.js::apiCardLink": {
            "changes_after_merge": 0,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function apiCardLink(offer) {\n  if ('plucode' in offer) {\n    return `https://www.walgreens.com/store/store/xpo_products.jsp?pluCode=${offer.plucode}`;\n  }\n\n  if ('eventCode' in offer) {\n    return `https://www.walgreens.com/store/BalanceRewardsOffers/balance-rewards-offer.jsp?eventCode=${offer.eventCode}`;\n  }\n\n  // eslint-disable-next-line no-console\n  console.warn('Could not generate link for the following offer', offer);\n  return '';\n}",
            "score": -1.0
        },
        "blocks/cards/cards.js::decorate": {
            "changes_after_merge": 8,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function decorate(block) {\n  const cardsWithBorder = block.classList.contains('border');\n\n  /* change to ul, li */\n  const ul = document.createElement('ul');\n  [...block.children].forEach((row) => {\n    const li = document.createElement('li');\n    li.classList.add('card');\n    if (cardsWithBorder) {\n      li.classList.add('with-border');\n    }\n\n    const link = row.querySelector('a');\n    let parent = li;\n    if (link) {\n      link.textContent = '';\n      parent = link;\n      li.appendChild(link);\n    }\n\n    while (row.firstElementChild) parent.append(row.firstElementChild);\n    [...parent.children].forEach((div) => {\n      if (div.children.length === 1 && div.querySelector('picture')) div.className = 'card-image';\n      else div.className = 'card-body';\n    });\n    ul.append(li);\n  });\n  ul.querySelectorAll('img').forEach((img) => img.closest('picture').replaceWith(createOptimizedPicture(img.src, img.alt, false, [{ width: '750' }])));\n  block.textContent = '';\n  block.append(ul);\n}",
            "score": -0.627906976744186
        },
        "blocks/cards/cards.js::decorateAPICards": {
            "changes_after_merge": 7,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "async function decorateAPICards(block) {\n  const cardsWithBorder = block.classList.contains('border');\n  const apiEndpoint = block.querySelector('a').href;\n  block.innerHTML = '';\n  const apiResponse = await fetch(apiEndpoint);\n\n  if (!apiResponse.ok) {\n    return;\n  }\n\n  const apiInfo = JSON.parse(await apiResponse.text());\n  block.append(\n    ul(\n      ...apiInfo.offers.map((offer) => (\n        li({ class: `card ${cardsWithBorder ? ' with-border' : ''}` },\n          a({ href: apiCardLink(offer) },\n            div({ class: 'card-image' },\n              img({\n                src: new URL(offer.imageUrl, 'https://www.walgreens.com').toString(),\n                loading: 'lazy',\n                alt: `Offer Image: ${offer.title}`,\n              }),\n            ),\n            div({ class: 'card-body' },\n              p(strong(offer.title)),\n              offer.brand ? p(strong(offer.brand)) : '',\n              offer.offerDescription ? p(offer.offerDescription) : '',\n            ),\n          ),\n        )),\n      ),\n    ),\n  );\n}",
            "score": -0.6744186046511628
        },
        "blocks/cards/cards.js::decorateCuratedCards": {
            "changes_after_merge": 5,
            "file_path": "blocks/cards/cards.js",
            "merged_function": "function decorateCuratedCards(block) {\n  const cardsWithBorder = block.classList.contains('border');\n\n  /* change to ul, li */\n  const list = ul();\n  [...block.children].forEach((row) => {\n    const listItem = li({ class: `card ${cardsWithBorder ? ' with-border' : ''}` });\n\n    const link = row.querySelector('a');\n    let parent = listItem;\n    if (link) {\n      link.textContent = '';\n      parent = link;\n      listItem.appendChild(link);\n    }\n\n    while (row.firstElementChild) parent.append(row.firstElementChild);\n    [...parent.children].forEach((child) => {\n      if (child.children.length === 1 && child.querySelector('picture')) child.className = 'card-image';\n      else child.className = 'card-body';\n    });\n    list.append(listItem);\n  });\n  list.querySelectorAll('img').forEach((image) => image.closest('picture').replaceWith(\n    createOptimizedPicture(image.src, image.alt, false, [{ width: '750' }]),\n  ));\n  block.textContent = '';\n  block.append(list);\n}",
            "score": -0.7674418604651163
        },
        "blocks/carousel/carousel.js::addCarouselNav": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function addCarouselNav(block) {\n  return block.append(\n    div({ class: 'carousel-nav' },\n      button({ class: 'carousel-nav-left', onclick: () => navCarousel(block, 'left') },\n        span({ class: 'icon icon-arrow-right left-arrow' }),\n      ),\n      button({ class: 'carousel-nav-right', onclick: () => navCarousel(block, 'right') },\n        span({ class: 'icon icon-arrow-right' }),\n      ),\n    ),\n  );\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::couponsLoaded": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function couponsLoaded() {\n  pushToDataLayer({\n    eventData: {\n      contentName: 'WD',\n      contentType: 'coupon recommendation carousel',\n      impressionType: 'present',\n      recommendationType: 'none',\n    },\n    eventName: 'ContentImpression',\n    status: 'processed',\n    triggered: true,\n  },\n  );\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "async function decorate(block) {\n  const cardsCSSPromise = loadCSS('/blocks/cards/cards.css');\n  block.classList.add('cards');\n  if (block.children.length === 1 && block.querySelectorAll('a').length === 1) {\n    await decorateAPICarousel(block);\n  } else {\n    await decorateCuratedCards(block, true);\n  }\n\n  makeCarouselDraggable(block);\n\n  block.append(\n    div({ class: 'carousel-nav' },\n      button({ class: 'carousel-nav-left', onclick: () => navCarousel(block, 'left') },\n        span({ class: 'icon icon-arrow-right left-arrow' }),\n      ),\n      button({ class: 'carousel-nav-right', onclick: () => navCarousel(block, 'right') },\n        span({ class: 'icon icon-arrow-right' }),\n      ),\n    ),\n  );\n\n  decorateIcons(block);\n  await cardsCSSPromise;\n}",
            "score": -0.9069767441860466
        },
        "blocks/carousel/carousel.js::decorateAPICarousel": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "async function decorateAPICarousel(block) {\n  const apiEndpoint = block.querySelector('a').href;\n  block.innerHTML = '';\n  const apiResponse = await fetch(apiEndpoint);\n\n  if (!apiResponse.ok) {\n    return;\n  }\n\n  const apiInfo = JSON.parse(await apiResponse.text());\n  block.append(decorateAPICards(apiInfo.offers, true));\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::getDragXPosition": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function getDragXPosition(e) {\n    if (e.type.startsWith('touch')) {\n      return e.touches[0].pageX;\n    }\n    return e.pageX;\n  }",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::handleDragEnd": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function handleDragEnd() {\n    isDown = false;\n  }",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::handleDragMove": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function handleDragMove(e) {\n    if (!isDown) {\n      return;\n    }\n    e.preventDefault();\n    const currentX = getDragXPosition(e);\n    walk = currentX - startX;\n    navCarousel(carousel, walk);\n  }",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::handleDragStart": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function handleDragStart(e) {\n    isDown = true;\n    startX = getDragXPosition(e);\n  }",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::makeCarouselDraggable": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function makeCarouselDraggable(carousel) {\n  let isDown = false;\n  let startX = 0;\n  let walk = 0;\n\n  function getDragXPosition(e) {\n    if (e.type.startsWith('touch')) {\n      return e.touches[0].pageX;\n    }\n    return e.pageX;\n  }\n\n  function handleDragStart(e) {\n    isDown = true;\n    startX = getDragXPosition(e);\n  }\n\n  function handleDragEnd() {\n    isDown = false;\n  }\n\n  function handleDragMove(e) {\n    if (!isDown) {\n      return;\n    }\n    e.preventDefault();\n    const currentX = getDragXPosition(e);\n    walk = currentX - startX;\n    navCarousel(carousel, walk);\n  }\n\n  carousel.addEventListener('mousedown', handleDragStart);\n  carousel.addEventListener('touchstart', handleDragStart, { passive: true });\n\n  carousel.addEventListener('mouseleave', handleDragEnd);\n  carousel.addEventListener('mouseup', handleDragEnd);\n  carousel.addEventListener('touchend', handleDragEnd);\n\n  carousel.addEventListener('mousemove', handleDragMove);\n  carousel.addEventListener('touchmove', handleDragMove, { passive: true });\n}",
            "score": -1.0
        },
        "blocks/carousel/carousel.js::navCarousel": {
            "changes_after_merge": 0,
            "file_path": "blocks/carousel/carousel.js",
            "merged_function": "function navCarousel(block, direction) {\n  const ul = block.querySelector('ul');\n  if (typeof direction === 'number') {\n    ul.scrollLeft -= direction;\n    return;\n  }\n  if (direction === 'left') {\n    ul.scrollLeft -= ul.offsetWidth;\n  } else {\n    ul.scrollLeft += ul.offsetWidth;\n  }\n}",
            "score": -1.0
        },
        "blocks/categories/categories.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/categories/categories.js",
            "merged_function": "async function decorate(block) {\n  const apiEndpoint = block.querySelector('a').href;\n  block.innerHTML = '';\n  const apiResponse = await fetch(apiEndpoint);\n\n  if (!apiResponse.ok) {\n    return;\n  }\n\n  const apiInfo = JSON.parse(await apiResponse.text());\n  block.append(\n    ul(\n      ...apiInfo.map((category) => (\n        li(\n          div({ class: 'category' },\n            div({ class: 'category-image' },\n              img({ src: walgreensUrl(category.imageUrl), alt: `${category.name} Category` }),\n            ),\n            div({ class: 'category-body' },\n              h3(category.name),\n              ul({ class: 'category-links' },\n                ...category.childCategories.slice(0, 4).map((link) => (\n                  li(\n                    a({ href: walgreensUrl(link.url), 'aria-label': `${link.name} Category` }, link.name),\n                  )),\n                ),\n                li(\n                  a({ href: walgreensUrl(category.url), 'aria-label': `More ${category.name}` },\n                    strong('More'),\n                  ),\n                ),\n              ),\n            ),\n          ),\n        )),\n      ),\n    ),\n  );\n}",
            "score": -1.0
        },
        "blocks/columns/columns.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/columns/columns.js",
            "merged_function": "function decorate(block) {\n  //  deals of the weekn column\n  const dotwColumn = block.classList.contains('dotw');\n  if (dotwColumn) {\n    const headerDiv = (block.children[0].children[0]);\n    const subtitleDiv = (block.children[0].children[1]);\n    const headerP = document.createElement('p');\n    const subtitleP = document.createElement('p');\n    headerP.innerHTML = headerDiv.innerHTML;\n    headerDiv.parentNode.replaceChild(headerP, headerDiv);\n    subtitleP.innerHTML = subtitleDiv.innerHTML;\n    subtitleDiv.parentNode.replaceChild(subtitleP, subtitleDiv);\n\n    const strong1 = document.createElement('strong');\n    const span = document.createElement('span');\n    const strong2 = document.createElement('strong');\n    const headerArray = headerP.innerHTML.split(' ');\n\n    strong1.innerHTML = `${headerArray[0]} `;\n    span.innerHTML = `${headerArray[1]} ${headerArray[2]} `;\n    strong2.innerHTML = `${headerArray[3]}`;\n    strong1.classList.add('large-text');\n    strong2.classList.add('large-text');\n    headerP.append(strong1, span, strong2);\n    headerP.childNodes[0].remove();\n  }\n\n  const cols = [...block.firstElementChild.children];\n  block.classList.add(`columns-${cols.length}-cols`);\n\n  // setup image columns\n  [...block.children].forEach((row) => {\n    [...row.children].forEach((col) => {\n      const pic = col.querySelector('picture');\n      if (pic) {\n        const picWrapper = pic.closest('div');\n        if (picWrapper && picWrapper.children.length === 1) {\n          // picture is only content in column\n          picWrapper.classList.add('columns-img-col');\n        }\n      }\n    });\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/faq/faq.js::closeAllOtherFaqs": {
            "changes_after_merge": 1,
            "file_path": "blocks/faq/faq.js",
            "merged_function": "function closeAllOtherFaqs(faq) {\n  const allFaqs = document.querySelectorAll('.faq-accordion');\n  allFaqs.forEach((acc) => {\n    if (acc !== faq && acc.classList.contains('active')) {\n      acc.querySelector('.faq-answer').style.maxHeight = '0';\n      acc.classList.remove('active');\n    }\n  });\n}",
            "score": -0.9534883720930233
        },
        "blocks/faq/faq.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/faq/faq.js",
            "merged_function": "async function decorate(block) {\n  const faqs = [];\n  [...block.children].forEach((row) => {\n    const cells = [...row.children];\n    const question = cells[0] && cells[0].textContent;\n    const answer = cells[1] || div();\n    answer.classList.add('faq-answer');\n    faqs.push({ question, answer });\n  });\n\n  block.innerHTML = '';\n  faqs.forEach((faq) => {\n    const { question, answer } = faq;\n\n    block.append(\n      div({ class: 'faq-accordion' },\n        div({ class: 'faq-question', onclick: toggleFaq },\n          question,\n          span({ class: 'icon icon-arrow-down' }),\n        ),\n        answer,\n      ),\n    );\n  });\n\n  await decorateIcons(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/faq/faq.js::toggleFaq": {
            "changes_after_merge": 2,
            "file_path": "blocks/faq/faq.js",
            "merged_function": "function toggleFaq(e) {\n  const faq = e.target.closest('.faq-accordion');\n  const answer = faq.querySelector('.faq-answer');\n  const arrowIcon = faq.querySelector('.icon');\n  if (arrowIcon === e.target) {\n    faq.classList.toggle('active');\n    if (answer.style.maxHeight === '0px' || answer.style.maxHeight === '') {\n      answer.style.maxHeight = `${answer.scrollHeight}px`;\n    } else {\n      answer.style.maxHeight = '0';\n    }\n  } else {\n    closeAllOtherFaqs(faq);\n    faq.classList.toggle('active');\n    if (answer.style.maxHeight === '0px' || answer.style.maxHeight === '') {\n      answer.style.maxHeight = `${answer.scrollHeight}px`;\n    } else {\n      answer.style.maxHeight = '0';\n    }\n  }\n}",
            "score": -0.9069767441860466
        },
        "blocks/footer/footer.js::decorate": {
            "changes_after_merge": 14,
            "file_path": "blocks/footer/footer.js",
            "merged_function": "async function decorate(block) {\n  // fetch footer content\n  const resp = await fetch('https://www.walgreens.com/common/v1/footerui');\n  if (resp.ok) {\n    const data = await resp.json();\n    // decorate footer DOM\n    const footer = document.createElement('div');\n    footer.innerHTML = data.content;\n    decorateIcons(footer);\n    block.append(footer);\n    const footerStyles = document.createElement('style');\n    footerStyles.innerHTML = data.clientLSGCSSContent;\n    document.head.appendChild(footerStyles);\n  }\n}",
            "score": -0.34883720930232553
        },
        "blocks/header/header.js::addCSSStyle": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function addCSSStyle(css) {\n  const styleEl = document.querySelector('style');\n  if (styleEl) {\n    styleEl.innerHTML += css;\n  } else {\n    const style = document.createElement('style');\n    style.innerHTML = css;\n    document.head.append(style);\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::addContent": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function addContent(block, jsonData) {\n  const nav = document.createElement('nav');\n  nav.id = 'nav';\n  nav.innerHTML = jsonData.content;\n  const navWrapper = document.createElement('div');\n  navWrapper.className = 'nav-wrapper';\n  navWrapper.append(nav);\n  block.firstElementChild.replaceWith(navWrapper);\n}",
            "score": -1.0
        },
        "blocks/header/header.js::closeOnEscape": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function closeOnEscape(e) {\n  if (e.code === 'Escape') {\n    const nav = document.getElementById('nav');\n    const navSections = nav.querySelector('.nav-sections');\n    const navSectionExpanded = navSections.querySelector('[aria-expanded=\"true\"]');\n    if (navSectionExpanded && isDesktop.matches) {\n      // eslint-disable-next-line no-use-before-define\n      toggleAllNavSections(navSections);\n      navSectionExpanded.focus();\n    } else if (!isDesktop.matches) {\n      // eslint-disable-next-line no-use-before-define\n      toggleMenu(nav, navSections);\n      nav.querySelector('button').focus();\n    }\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::decorate": {
            "changes_after_merge": 30,
            "file_path": "blocks/header/header.js",
            "merged_function": "async function decorate(block) {\n  // fetch nav content\n  const navMeta = getMetadata('nav');\n  const navPath = navMeta ? new URL(navMeta).pathname : '/nav';\n  const resp = await fetch(`${navPath}.plain.html`);\n\n  if (resp.ok) {\n    const html = await resp.text();\n\n    // decorate nav DOM\n    const nav = document.createElement('nav');\n    nav.id = 'nav';\n    nav.innerHTML = html;\n\n    const classes = ['banner', 'brand', 'sections', 'search', 'tools', 'cart', 'location'];\n    classes.forEach((c, i) => {\n      const section = nav.children[i];\n      if (section) section.classList.add(`nav-${c}`);\n    });\n\n    const navSections = nav.querySelector('.nav-sections');\n    if (navSections) {\n      navSections.querySelectorAll(':scope > ul > li').forEach((navSection) => {\n        if (navSection.querySelector('ul')) navSection.classList.add('nav-drop');\n        navSection.addEventListener('click', () => {\n          if (isDesktop.matches) {\n            const expanded = navSection.getAttribute('aria-expanded') === 'true';\n            toggleAllNavSections(navSections);\n            navSection.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n          }\n        });\n      });\n    }\n\n    decorateIcons(nav);\n    const navWrapper = document.createElement('div');\n    navWrapper.className = 'nav-wrapper';\n    navWrapper.append(nav);\n    block.firstElementChild.replaceWith(navWrapper);\n  }\n}",
            "score": 0.39534883720930236
        },
        "blocks/header/header.js::focusNavSection": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function focusNavSection() {\n  document.activeElement.addEventListener('keydown', openOnKeydown);\n}",
            "score": -1.0
        },
        "blocks/header/header.js::openOnKeydown": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function openOnKeydown(e) {\n  const focused = document.activeElement;\n  const isNavDrop = focused.className === 'nav-drop';\n  if (isNavDrop && (e.code === 'Enter' || e.code === 'Space')) {\n    const dropExpanded = focused.getAttribute('aria-expanded') === 'true';\n    // eslint-disable-next-line no-use-before-define\n    toggleAllNavSections(focused.closest('.nav-sections'));\n    focused.setAttribute('aria-expanded', dropExpanded ? 'false' : 'true');\n  }\n}",
            "score": -1.0
        },
        "blocks/header/header.js::toggleAllNavSections": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function toggleAllNavSections(sections, expanded = false) {\n  sections.querySelectorAll('.nav-sections > ul > li').forEach((section) => {\n    section.setAttribute('aria-expanded', expanded);\n  });\n}",
            "score": -1.0
        },
        "blocks/header/header.js::toggleMenu": {
            "changes_after_merge": 0,
            "file_path": "blocks/header/header.js",
            "merged_function": "function toggleMenu(nav, navSections, forceExpanded = null) {\n  const expanded = forceExpanded !== null ? !forceExpanded : nav.getAttribute('aria-expanded') === 'true';\n  const button = nav.querySelector('.nav-hamburger button');\n  document.body.style.overflowY = (expanded || isDesktop.matches) ? '' : 'hidden';\n  nav.setAttribute('aria-expanded', expanded ? 'false' : 'true');\n  toggleAllNavSections(navSections, expanded || isDesktop.matches ? 'false' : 'true');\n  button.setAttribute('aria-label', expanded ? 'Open navigation' : 'Close navigation');\n  // enable nav dropdown keyboard accessibility\n  const navDrops = navSections.querySelectorAll('.nav-drop');\n  if (isDesktop.matches) {\n    navDrops.forEach((drop) => {\n      if (!drop.hasAttribute('tabindex')) {\n        drop.setAttribute('role', 'button');\n        drop.setAttribute('tabindex', 0);\n        drop.addEventListener('focus', focusNavSection);\n      }\n    });\n  } else {\n    navDrops.forEach((drop) => {\n      drop.removeAttribute('role');\n      drop.removeAttribute('tabindex');\n      drop.removeEventListener('focus', focusNavSection);\n    });\n  }\n  // enable menu collapse on escape keypress\n  if (!expanded || isDesktop.matches) {\n    // collapse menu on escape press\n    window.addEventListener('keydown', closeOnEscape);\n  } else {\n    window.removeEventListener('keydown', closeOnEscape);\n  }\n}",
            "score": -1.0
        },
        "blocks/hero/hero.js::decorate": {
            "changes_after_merge": 5,
            "file_path": "blocks/hero/hero.js",
            "merged_function": "function decorate(block) {\n  const link = block.querySelector('a');\n  if (link) {\n    link.textContent = '';\n  }\n}",
            "score": -0.7674418604651163
        },
        "blocks/recent-items/recent-items.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-items/recent-items.js",
            "merged_function": "async function decorate(block) {\n  const resource = toCamelCase(block.textContent);\n  const riCookie = getCookie(resource);\n  const sourceUrl = placeholders[resource];\n  // if the cookie doesn't exist, display nothing.\n  if (riCookie) {\n    const heading = buildBlock('underlined-heading', h2(block.textContent.trim()));\n    block.textContent = '';\n    block.parentElement.parentElement.prepend(div(heading));\n    decorateBlock(heading);\n    await loadBlock(heading);\n\n    // Define the POST request options\n    let requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({ rvi: riCookie }),\n    };\n    // Set to null if localhost avoid CORS error\n    if (window.location.hostname === 'localhost') {\n      requestOptions = null;\n    }\n\n    // Make the POST request\n    fetch(sourceUrl, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          // Check if the response is gzip-encoded\n          if (response.headers.get('Content-Encoding') === 'gzip') {\n            return response.blob();\n          }\n          return response.json();\n        }\n        return null;\n      })\n      .then((data) => {\n        if (data instanceof Blob) {\n          // If response is gzip-encoded, decode it\n          return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = function onloadCallback() {\n              try {\n                resolve(JSON.parse(reader.result));\n              } catch (error) {\n                reject(error);\n              }\n            };\n            reader.readAsText(data);\n          });\n        }\n        return data;\n      })\n      .then((decodedData) => {\n        block.classList.add('carousel', 'cards', 'cards-4');\n        const { productList, products } = decodedData;\n        const combinedProducts = mergeProductInfo(productList, products);\n        rviLoaded(combinedProducts);\n        // build block\n        const carouselBl = buildBlock('carousel', decorateRIBlock(combinedProducts));\n        const carouselUl = carouselBl.querySelector('ul');\n        block.append(carouselUl);\n        addCarouselNav(block);\n        decorateIcons(block);\n      });\n  } else {\n    block.textContent = '';\n  }\n}",
            "score": -1.0
        },
        "blocks/recent-items/recent-items.js::decorateRIBlock": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-items/recent-items.js",
            "merged_function": "function decorateRIBlock(data) {\n  return (\n    ul(\n      ...data.map((offer, index) => (\n        li({ class: 'card with-border' },\n          a({\n            onclick: productClick,\n            href: reconstructURL(offer.productUrl, offer.productInfo.wic, index),\n          },\n          div({ class: 'card-image' },\n            img({\n              src: offer.productInfo.imageUrl,\n              loading: 'lazy',\n              alt: `Offer Image: ${offer.productInfo.productName}`,\n            }),\n          ),\n          div({ class: 'card-body' },\n            p({ class: 'product-title' }, strong(offer.productInfo.productDisplayName)),\n            offer.productInfo.reviewURL\n              ? span({ class: 'product-rating' },\n                img({\n                  src: walgreensUrl(offer.productInfo.reviewURL),\n                  loading: 'lazy',\n                  alt: offer.productInfo.reviewHoverMessage,\n                }),\n                div(offer.productInfo.reviewCount))\n              : '',\n            offer.priceInfo.salePriceHtml\n              ? div(parseHTML(offer.priceInfo.salePriceHtml))\n              : div(parseHTML(offer.priceInfo.regularPriceHtml)),\n            offer.priceInfo.ruleMessage ? div({ class: 'color__text-red' }, offer.priceInfo.ruleMessage.prefix) : '',\n            offer.priceInfo.salePriceHtml ? div({ class: 'regularprice text__line-through', 'aria-hidden': true }, offer.priceInfo.regularPrice) : '',\n            Object.keys(offer.productInfo.availableSkus).length > 0\n              ? div({ class: 'options' }, 'Choose Options')\n              : '',\n          ),\n          ),\n        )),\n      ),\n    )\n  );\n}",
            "score": -1.0
        },
        "blocks/recent-items/recent-items.js::getCookie": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-items/recent-items.js",
            "merged_function": "function getCookie(name) {\n  const cookies = document.cookie.split('; ');\n  let source = 'rvi';\n  if (name === 'buyItAgain') source = 'rpi';\n  for (let i = 0; i < cookies.length; i += 1) {\n    const cookie = cookies[i].split('=');\n    if (cookie[0] === source) {\n      return decodeURIComponent(cookie[1]);\n    }\n  }\n  return null;\n}",
            "score": -1.0
        },
        "blocks/recent-items/recent-items.js::mergeProductInfo": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-items/recent-items.js",
            "merged_function": "function mergeProductInfo(productList, products) {\n  const productMap = {};\n  // Populate productMap with products from \"products\" using skuId as the key\n  products.forEach((product) => {\n    productMap[product.productInfo.skuId] = product;\n  });\n  // Merge products from \"productList\" with products from \"products\"\n  const combinedProducts = productList.map((productListItem) => {\n    const { skuId } = productListItem.productInfo;\n    const existingProduct = productMap[skuId];\n\n    if (existingProduct) {\n      // Check if the products are exactly the same\n      const isSameProduct = JSON.stringify(productListItem) === JSON.stringify(existingProduct);\n      // If the products are the same, return the original productListItem\n      if (isSameProduct) {\n        return productListItem;\n      }\n      // If a product with the same skuId exists in \"products,\" merge the properties\n      return { ...productListItem, ...existingProduct };\n    }\n    // If not found in \"products,\" return the original productListItem\n    return productListItem;\n  });\n  return combinedProducts;\n}",
            "score": -1.0
        },
        "blocks/recent-items/recent-items.js::parseHTML": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-items/recent-items.js",
            "merged_function": "function parseHTML(htmlString) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(htmlString, 'text/html');\n  return doc.querySelector('span');\n}",
            "score": -1.0
        },
        "blocks/recent-items/recent-items.js::productClick": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-items/recent-items.js",
            "merged_function": "function productClick() {\n  const children = Array.from(this.parentElement.parentElement.children);\n  const index = children.indexOf(this.parentElement) + 1;\n  const idMatch = this.href.match(/ID=(.*?)-product/);\n  const prodID = idMatch ? idMatch[1] : null;\n  const searchParams = new URLSearchParams(this.href);\n  const wic = searchParams.get('product');\n\n  const customEvent = {\n    recommendation: {\n      type: 'product recommendations',\n      name: 'Recently viewed items',\n      placement: index,\n    },\n    prodRecoData: {\n      position: `${index}`,\n      productProdID: `${prodID}`,\n      productWIC: `${wic}`,\n    },\n    productFinding: {\n      method: 'product recommendations',\n    },\n  };\n\n  window.digitalData.triggerCustomEvent('recommendationClick', customEvent);\n}",
            "score": -1.0
        },
        "blocks/recent-items/recent-items.js::reconstructURL": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-items/recent-items.js",
            "merged_function": "function reconstructURL(url, product, index) {\n  let position = index;\n  const criteria = 'Recently%20viewed%20items';\n  const newURL = walgreensUrl(`${url.split('?')[0]}?criteria=${criteria}&product=${product}&position=${position += 1}`);\n  return newURL;\n}",
            "score": -1.0
        },
        "blocks/recent-items/recent-items.js::rviLoaded": {
            "changes_after_merge": 0,
            "file_path": "blocks/recent-items/recent-items.js",
            "merged_function": "function rviLoaded(products) {\n  const prodRecoData = [];\n  if (products.length) {\n    products.forEach((product, index) => {\n      const position = index + 1;\n      prodRecoData.push({\n        position: `${position}`,\n        productProdID: `${product.productInfo.prodId}`,\n        productWIC: `${product.productInfo.wic}`,\n      });\n    });\n  }\n\n  pushToDataLayer({\n    eventData: {\n      prodRecoData,\n      recommendation: {\n        name: 'Recently viewed items',\n        placement: '1',\n        type: 'product recommendations',\n      },\n    },\n    eventName: 'recommendationImpression',\n    status: 'processed',\n    triggered: true,\n  },\n  );\n}",
            "score": -1.0
        },
        "blocks/sidepanel/sidepanel.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "blocks/sidepanel/sidepanel.js",
            "merged_function": "function decorate(block) {\n  [...block.children].forEach((row) => {\n    const panel = row.children[0];\n    panel.querySelectorAll('a').forEach((link) => {\n      if (!link.previousElementSibling || link.previousElementSibling.nodeName.toLowerCase() !== 'picture') {\n        return;\n      }\n\n      const text = link.textContent;\n      link.innerHTML = '';\n      link.append(\n        span({ class: 'link-image' }, link.previousElementSibling),\n        span({ class: 'link-text' }, text),\n      );\n    });\n\n    const header = panel.querySelector('h2');\n    const list = panel.querySelector('ul');\n    panel.innerHTML = '';\n\n    const openCloseAccordion = (e) => {\n      const parent = e.currentTarget.parentElement;\n      parent.setAttribute('aria-expanded', `${!(parent.getAttribute('aria-expanded') === 'true')}`);\n    };\n\n    panel.classList.add('panel-accordion');\n    panel.setAttribute('aria-expanded', false);\n    panel.setAttribute('role', 'button');\n\n    panel.append(\n      div({ class: 'accordion-button', onclick: openCloseAccordion },\n        header,\n        span({ class: 'icon icon-arrow-down' }),\n      ),\n      div({ class: 'accordion-content' },\n        list,\n      ),\n    );\n  });\n\n  decorateIcons(block);\n}",
            "score": -0.9534883720930233
        },
        "blocks/sidepanel/sidepanel.js::decorateAPIListOfLinks": {
            "changes_after_merge": 2,
            "file_path": "blocks/sidepanel/sidepanel.js",
            "merged_function": "async function decorateAPIListOfLinks(panel) {\n  const link = panel.querySelector('a');\n  const apiEndpoint = link.href;\n  link.parentElement.remove();\n  const apiResponse = await fetch(apiEndpoint);\n\n  if (!apiResponse.ok) {\n    return;\n  }\n\n  const apiInfo = await apiResponse.json();\n\n  panel.append(\n    ul(\n      ...apiInfo.categories.map((category) => (\n        li(\n          a({ href: walgreensUrl(category.url) },\n            span({ class: 'link-image' }, img({ src: category.imageUrl })),\n            span({ class: 'link-text' }, category.name),\n          ),\n        )\n      )),\n    ),\n  );\n}",
            "score": -0.9069767441860466
        },
        "blocks/sidepanel/sidepanel.js::decorateCuratedListOfLinks": {
            "changes_after_merge": 0,
            "file_path": "blocks/sidepanel/sidepanel.js",
            "merged_function": "function decorateCuratedListOfLinks(panel) {\n  panel.querySelectorAll('ul a').forEach((link) => {\n    if (!link.previousElementSibling || link.previousElementSibling.nodeName.toLowerCase() !== 'picture') {\n      return;\n    }\n\n    const text = link.textContent;\n    link.innerHTML = '';\n    link.append(\n      span({ class: 'link-image' }, link.previousElementSibling),\n      span({ class: 'link-text' }, text),\n    );\n  });\n}",
            "score": -1.0
        },
        "blocks/sidepanel/sidepanel.js::openCloseAccordion": {
            "changes_after_merge": 0,
            "file_path": "blocks/sidepanel/sidepanel.js",
            "merged_function": "openCloseAccordion = (e) => {\n      const parent = e.currentTarget.parentElement;\n      parent.setAttribute('aria-expanded', `${!(parent.getAttribute('aria-expanded') === 'true')}`);\n    }",
            "score": -1.0
        },
        "external-topic/blocks/breadcrumb/breadcrumb.js::decorate": {
            "changes_after_merge": 2,
            "file_path": "external-topic/blocks/breadcrumb/breadcrumb.js",
            "merged_function": "async function decorate(block) {\n  const desktopBlock = block;\n  desktopBlock.classList.add('desktop');\n\n  // duplicate breadcrumb information in a new section + block for mobile\n  // at the and of the page\n  const mobileSection = (\n    div({ class: 'section breadcrumb-container', 'data-section-status': 'loading' },\n      div({ class: 'breadcrumb-wrapper' },\n        div({\n          class: 'breadcrumb block mobile',\n          style: 'display: none;', // hide in the beginning to avoid CLS\n          'data-block-name': 'breadcrumb',\n          'data-block-status': 'loaded',\n        }),\n      ),\n    )\n  );\n  const mobileBlock = mobileSection.querySelector('.block');\n  mobileBlock.append(desktopBlock.children[0].cloneNode(true));\n\n  const main = block.closest('main');\n  main.append(mobileSection);\n\n  // decorate desktop block\n  desktopBlock.querySelectorAll('li').forEach((item) => {\n    const link = item.querySelector('a');\n    if (!link) return;\n\n    link.appendChild(span({ class: 'icon icon-arrow-right' }));\n  });\n  await decorateIcons(desktopBlock);\n\n  // decorate mobile block\n  mobileBlock.querySelectorAll('li a').forEach((link) => {\n    const linkText = link.textContent;\n    link.textContent = '';\n\n    link.append(\n      document.createTextNode('\u2039 '),\n      strong(linkText),\n    );\n  });\n\n  // only show the mobile breadcrumb, once the previous section is fully loaded\n  const previousSection = mobileSection.previousElementSibling;\n  const observer = new MutationObserver((mutationList) => {\n    mutationList.forEach((mutation) => {\n      if (mutation.type === 'attributes'\n        && mutation.attributeName === 'data-section-status'\n        && previousSection.attributes.getNamedItem('data-section-status').value === 'loaded') {\n        observer.disconnect();\n        mobileBlock.style.display = null;\n      }\n    });\n  });\n\n  observer.observe(previousSection, { attributes: true });\n}",
            "score": -0.9069767441860466
        },
        "external-topic/blocks/cards/cards.js::apiCardLink": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/cards/cards.js",
            "merged_function": "function apiCardLink(offer) {\n  if ('plucode' in offer) {\n    return `https://www.walgreens.com/store/store/xpo_products.jsp?pluCode=${offer.plucode}`;\n  }\n\n  if ('eventCode' in offer) {\n    return `https://www.walgreens.com/store/BalanceRewardsOffers/balance-rewards-offer.jsp?eventCode=${offer.eventCode}`;\n  }\n\n  // eslint-disable-next-line no-console\n  console.warn('Could not generate link for the following offer', offer);\n  return '';\n}",
            "score": -1.0
        },
        "external-topic/blocks/cards/cards.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/cards/cards.js",
            "merged_function": "async function decorate(block) {\n  if (block.children.length === 1 && block.querySelectorAll('a').length === 1) {\n    const apiEndpoint = block.querySelector('a').href;\n    block.innerHTML = '';\n    const apiResponse = await fetch(apiEndpoint);\n\n    if (!apiResponse.ok) {\n      return;\n    }\n\n    const apiInfo = JSON.parse(await apiResponse.text());\n\n    block.append(decorateAPICards(apiInfo.offers, block.classList.contains('border')));\n  } else {\n    decorateCuratedCards(block);\n  }\n}",
            "score": -1.0
        },
        "external-topic/blocks/cards/cards.js::decorateAPICards": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/cards/cards.js",
            "merged_function": "function decorateAPICards(cardsInfo, cardsWithBorder) {\n  return (\n    ul(\n      ...cardsInfo.map((offer) => (\n        li({ class: `card ${cardsWithBorder ? ' with-border' : ''}` },\n          a({ href: apiCardLink(offer) },\n            div({ class: 'card-image' },\n              img({\n                src: walgreensUrl(offer.imageUrl),\n                loading: 'lazy',\n                alt: `Offer Image: ${offer.title}`,\n              }),\n            ),\n            div({ class: 'card-body' },\n              p(strong(offer.title)),\n              offer.brand ? p(strong(offer.brand)) : '',\n              offer.offerDescription ? p(offer.offerDescription) : '',\n            ),\n          ),\n        )),\n      ),\n    )\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/cards/cards.js::decorateCuratedCards": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/cards/cards.js",
            "merged_function": "function decorateCuratedCards(block, withBorder) {\n  const cardsWithBorder = block.classList.contains('border');\n\n  /* change to ul, li */\n  const list = ul();\n  [...block.children].forEach((row) => {\n    const listItem = li({ class: `card ${cardsWithBorder || withBorder ? ' with-border' : ''}` });\n\n    const link = row.querySelector('a');\n    let parent = listItem;\n    if (link) {\n      link.textContent = '';\n      parent = link;\n      listItem.appendChild(link);\n    }\n\n    while (row.firstElementChild) parent.append(row.firstElementChild);\n    [...parent.children].forEach((child) => {\n      if (child.children.length === 1 && child.querySelector('picture')) child.className = 'card-image';\n      else child.className = 'card-body';\n      if (child.innerHTML === '') child.remove();\n    });\n    list.append(listItem);\n  });\n  list.querySelectorAll('img').forEach((image) => image.closest('picture').replaceWith(\n    createOptimizedPicture(image.src, image.alt, false, [{ width: '750' }]),\n  ));\n  block.textContent = '';\n  block.append(list);\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/carousel/carousel.js::addCarouselNav": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "function addCarouselNav(block) {\n  return block.append(\n    div({ class: 'carousel-nav' },\n      button({ class: 'carousel-nav-left', onclick: () => navCarousel(block, 'left') },\n        span({ class: 'icon icon-arrow-right left-arrow' }),\n      ),\n      button({ class: 'carousel-nav-right', onclick: () => navCarousel(block, 'right') },\n        span({ class: 'icon icon-arrow-right' }),\n      ),\n    ),\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/carousel/carousel.js::couponsLoaded": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "function couponsLoaded() {\n  pushToDataLayer({\n    eventData: {\n      contentName: 'WD',\n      contentType: 'coupon recommendation carousel',\n      impressionType: 'present',\n      recommendationType: 'none',\n    },\n    eventName: 'ContentImpression',\n    status: 'processed',\n    triggered: true,\n  },\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/carousel/carousel.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "async function decorate(block) {\n  const cardsCSSPromise = loadCSS('/blocks/cards/cards.css');\n  block.classList.add('cards');\n  if (block.children.length === 1 && block.querySelectorAll('a').length === 1) {\n    await decorateAPICarousel(block);\n  } else {\n    await decorateCuratedCards(block, true);\n  }\n  // required to update analytics - no styling affects\n  if (block.classList.contains('dotw')) {\n    couponsLoaded();\n  }\n  makeCarouselDraggable(block);\n  addCarouselNav(block);\n  decorateIcons(block);\n  await cardsCSSPromise;\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/carousel/carousel.js::decorateAPICarousel": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "async function decorateAPICarousel(block) {\n  const apiEndpoint = block.querySelector('a').href;\n  block.innerHTML = '';\n  const apiResponse = await fetch(apiEndpoint);\n\n  if (!apiResponse.ok) {\n    return;\n  }\n\n  const apiInfo = JSON.parse(await apiResponse.text());\n  block.append(decorateAPICards(apiInfo.offers, true));\n}",
            "score": -1.0
        },
        "external-topic/blocks/carousel/carousel.js::getDragXPosition": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "function getDragXPosition(e) {\n    if (e.type.startsWith('touch')) {\n      return e.touches[0].pageX;\n    }\n    return e.pageX;\n  }",
            "score": -1.0
        },
        "external-topic/blocks/carousel/carousel.js::handleDragEnd": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "function handleDragEnd() {\n    isDown = false;\n  }",
            "score": -1.0
        },
        "external-topic/blocks/carousel/carousel.js::handleDragMove": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "function handleDragMove(e) {\n    if (!isDown) {\n      return;\n    }\n    e.preventDefault();\n    const currentX = getDragXPosition(e);\n    walk = currentX - startX;\n    navCarousel(carousel, walk);\n  }",
            "score": -1.0
        },
        "external-topic/blocks/carousel/carousel.js::handleDragStart": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "function handleDragStart(e) {\n    isDown = true;\n    startX = getDragXPosition(e);\n  }",
            "score": -1.0
        },
        "external-topic/blocks/carousel/carousel.js::makeCarouselDraggable": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "function makeCarouselDraggable(carousel) {\n  let isDown = false;\n  let startX = 0;\n  let walk = 0;\n\n  function getDragXPosition(e) {\n    if (e.type.startsWith('touch')) {\n      return e.touches[0].pageX;\n    }\n    return e.pageX;\n  }\n\n  function handleDragStart(e) {\n    isDown = true;\n    startX = getDragXPosition(e);\n  }\n\n  function handleDragEnd() {\n    isDown = false;\n  }\n\n  function handleDragMove(e) {\n    if (!isDown) {\n      return;\n    }\n    e.preventDefault();\n    const currentX = getDragXPosition(e);\n    walk = currentX - startX;\n    navCarousel(carousel, walk);\n  }\n\n  carousel.addEventListener('mousedown', handleDragStart);\n  carousel.addEventListener('touchstart', handleDragStart, { passive: true });\n\n  carousel.addEventListener('mouseleave', handleDragEnd);\n  carousel.addEventListener('mouseup', handleDragEnd);\n  carousel.addEventListener('touchend', handleDragEnd);\n\n  carousel.addEventListener('mousemove', handleDragMove);\n  carousel.addEventListener('touchmove', handleDragMove, { passive: true });\n}",
            "score": -1.0
        },
        "external-topic/blocks/carousel/carousel.js::navCarousel": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/carousel/carousel.js",
            "merged_function": "function navCarousel(block, direction) {\n  const ul = block.querySelector('ul');\n  if (typeof direction === 'number') {\n    ul.scrollLeft -= direction;\n    return;\n  }\n  if (direction === 'left') {\n    ul.scrollLeft -= ul.offsetWidth;\n  } else {\n    ul.scrollLeft += ul.offsetWidth;\n  }\n}",
            "score": -1.0
        },
        "external-topic/blocks/categories/categories.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/categories/categories.js",
            "merged_function": "async function decorate(block) {\n  const apiEndpoint = block.querySelector('a').href;\n  block.innerHTML = '';\n  const apiResponse = await fetch(apiEndpoint);\n\n  if (!apiResponse.ok) {\n    return;\n  }\n\n  const apiInfo = JSON.parse(await apiResponse.text());\n  block.append(\n    ul(\n      ...apiInfo.map((category) => (\n        li(\n          div({ class: 'category' },\n            div({ class: 'category-image' },\n              img({ src: walgreensUrl(category.imageUrl), alt: `${category.name} Category` }),\n            ),\n            div({ class: 'category-body' },\n              h3(category.name),\n              ul({ class: 'category-links' },\n                ...category.childCategories.slice(0, 4).map((link) => (\n                  li(\n                    a({ href: walgreensUrl(link.url), 'aria-label': `${link.name} Category` }, link.name),\n                  )),\n                ),\n                li(\n                  a({ href: walgreensUrl(category.url), 'aria-label': `More ${category.name}` },\n                    strong('More'),\n                  ),\n                ),\n              ),\n            ),\n          ),\n        )),\n      ),\n    ),\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/columns/columns.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/columns/columns.js",
            "merged_function": "function decorate(block) {\n  //  deals of the weekn column\n  const dotwColumn = block.classList.contains('dotw');\n  if (dotwColumn) {\n    const headerDiv = (block.children[0].children[0]);\n    const subtitleDiv = (block.children[0].children[1]);\n    const headerP = document.createElement('p');\n    const subtitleP = document.createElement('p');\n    headerP.innerHTML = headerDiv.innerHTML;\n    headerDiv.parentNode.replaceChild(headerP, headerDiv);\n    subtitleP.innerHTML = subtitleDiv.innerHTML;\n    subtitleDiv.parentNode.replaceChild(subtitleP, subtitleDiv);\n\n    const strong1 = document.createElement('strong');\n    const span = document.createElement('span');\n    const strong2 = document.createElement('strong');\n    const headerArray = headerP.innerHTML.split(' ');\n\n    strong1.innerHTML = `${headerArray[0]} `;\n    span.innerHTML = `${headerArray[1]} ${headerArray[2]} `;\n    strong2.innerHTML = `${headerArray[3]}`;\n    strong1.classList.add('large-text');\n    strong2.classList.add('large-text');\n    headerP.append(strong1, span, strong2);\n    headerP.childNodes[0].remove();\n  }\n\n  // If the text is all bold decorateButtons skips these links\n  // so this adds the button-container class\n  if (block.classList.contains('promo')) {\n    block.querySelectorAll('a').forEach((a) => {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n        up.classList.add('button-container');\n      }\n      if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n        && twoup.childNodes.length === 1 && twoup.tagName === 'DIV') {\n        twoup.classList.add('button-container');\n      }\n    });\n  }\n\n  const cols = [...block.firstElementChild.children];\n  block.classList.add(`columns-${cols.length}-cols`);\n\n  // setup image columns\n  [...block.children].forEach((row) => {\n    [...row.children].forEach((col) => {\n      const pic = col.querySelector('picture');\n      if (pic) {\n        const picWrapper = pic.closest('div');\n        if (picWrapper && picWrapper.children.length === 1) {\n          // picture is only content in column\n          picWrapper.classList.add('columns-img-col');\n        }\n      }\n    });\n  });\n}",
            "score": -1.0
        },
        "external-topic/blocks/faq/faq.js::closeAllOtherFaqs": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/faq/faq.js",
            "merged_function": "function closeAllOtherFaqs(faq) {\n  const allFaqs = document.querySelectorAll('.faq-question');\n  allFaqs.forEach((acc) => {\n    if (acc !== faq && acc.classList.contains('active')) {\n      acc.nextElementSibling.style.maxHeight = null;\n      acc.nextElementSibling.style.marginBottom = null;\n      acc.classList.remove('active');\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/blocks/faq/faq.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/faq/faq.js",
            "merged_function": "async function decorate(block) {\n  const faqs = [];\n  [...block.children].forEach((row) => {\n    const cells = [...row.children];\n    const question = cells[0] && cells[0].textContent;\n    const answer = cells[1] || div();\n    answer.classList.add('faq-answer');\n    faqs.push({ question, answer });\n  });\n\n  block.innerHTML = '';\n  faqs.forEach((faq) => {\n    const { question, answer } = faq;\n    block.append(\n      div({ class: 'faq-accordion' },\n        div({ class: 'faq-question', onclick: toggleFaq },\n          question,\n          span({ class: 'icon icon-arrow-down' }),\n        ),\n        answer,\n      ),\n    );\n  });\n\n  await decorateIcons(block);\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/faq/faq.js::toggleFaq": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/faq/faq.js",
            "merged_function": "function toggleFaq() {\n  this.classList.toggle('active');\n  const panel = this.nextElementSibling;\n  if (panel.style.maxHeight) {\n    panel.style.maxHeight = null;\n    panel.style.marginBottom = null;\n  } else {\n    closeAllOtherFaqs(this);\n    panel.style.maxHeight = `${panel.scrollHeight}px`;\n    panel.style.marginBottom = '10px';\n  }\n}",
            "score": -1.0
        },
        "external-topic/blocks/footer/footer.js::addContent": {
            "changes_after_merge": 2,
            "file_path": "external-topic/blocks/footer/footer.js",
            "merged_function": "async function addContent(block, jsonData) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(jsonData.content, 'text/html');\n  const includeContent = Array.from(doc.body.children);\n  block.parentElement.replaceWith(includeContent[0]);\n  let previousEl = includeContent[0];\n  includeContent.slice(1).forEach((node) => {\n    previousEl.insertAdjacentElement('afterend', node);\n    previousEl = node;\n  });\n}",
            "score": -0.9069767441860466
        },
        "external-topic/blocks/footer/footer.js::decorate": {
            "changes_after_merge": 5,
            "file_path": "external-topic/blocks/footer/footer.js",
            "merged_function": "async function decorate(block) {\n  const worker = new Worker('../../scripts/headerfooter-worker.js');\n  const { privacyIcon, localPrivacyIcon } = placeholders;\n  worker.onmessage = async (e) => {\n    worker.terminate();\n    if (!e.data.ok) {\n      return;\n    }\n\n    const footer = document.createElement('div');\n    footer.innerHTML = e.data.content;\n    decorateIcons(footer);\n    block.append(footer);\n  };\n  worker.postMessage({ source: 'footer', privacyIcon, localPrivacyIcon });\n}",
            "score": -0.7674418604651163
        },
        "external-topic/blocks/header/header.js::addContent": {
            "changes_after_merge": 3,
            "file_path": "external-topic/blocks/header/header.js",
            "merged_function": "async function addContent(block, jsonData) {\n  const nav = document.createElement('nav');\n  nav.id = 'nav';\n  nav.innerHTML = jsonData.content;\n  const navWrapper = document.createElement('div');\n  navWrapper.className = 'nav-wrapper';\n  navWrapper.append(nav);\n  block.firstElementChild.replaceWith(navWrapper);\n}",
            "score": -0.8604651162790697
        },
        "external-topic/blocks/header/header.js::decorate": {
            "changes_after_merge": 3,
            "file_path": "external-topic/blocks/header/header.js",
            "merged_function": "async function decorate(block) {\n  const worker = new Worker('../../scripts/headerfooter-worker.js');\n\n  worker.onmessage = async (e) => {\n    worker.terminate();\n\n    if (!e.data.ok) {\n      return;\n    }\n    const jsonData = e.data;\n    addContent(block, jsonData);\n    loadFileList(jsonData.fileList);\n  };\n  worker.postMessage({ source: 'header' });\n}",
            "score": -0.8604651162790697
        },
        "external-topic/blocks/hero/hero.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/hero/hero.js",
            "merged_function": "async function decorate(block) {\n  [...block.children].forEach((row) => {\n    if (row.children.length < 2) return;\n\n    const [configCell, contentCell] = row.children;\n\n    const config = configCell.textContent.toLowerCase().trim();\n    if (config === 'desktop') {\n      row.classList.add('background-desktop');\n    }\n\n    if (config === 'mobile') {\n      row.classList.add('background-mobile');\n    }\n\n    if (config === 'overlay') {\n      row.classList.add('hero-overlay');\n    }\n\n    const supportedOverrides = [\n      'text color',\n      'desktop text color',\n      'mobile text color',\n\n      'background color',\n      'desktop background color',\n      'mobile background color',\n\n      'text align',\n      'mobile text align',\n      'desktop text align',\n\n      'paragraph padding',\n      'mobile paragraph padding',\n      'desktop paragraph padding',\n\n      'title size',\n      'desktop title size',\n      'mobile title size',\n\n      'subtitle size',\n      'desktop subtitle size',\n      'mobile subtitle size',\n    ];\n\n    if (supportedOverrides.includes(config)) {\n      if (contentCell.textContent) {\n        const cssVar = `--hero-${toClassName(config)}`;\n        block.style.setProperty(cssVar, contentCell.textContent);\n      }\n      contentCell.remove();\n    }\n\n    configCell.remove();\n  });\n\n  const link = block.querySelector('a');\n  link.parentElement.remove();\n\n  if (link) {\n    link.textContent = '';\n    link.append(...block.children);\n    block.append(link);\n  }\n\n  if (document.querySelector('.hero') !== block) {\n    block.style.marginBottom = '50px';\n  }\n\n  /*\n   * avoid CLS by not displaying the block until the image has finished loading\n   * in this case, it is acceptable to block until the image has loaded,\n   * because the Hero background is also the LCP\n   */\n  let lcpImage = null;\n  if (window.matchMedia('(max-width: 768px)').matches) {\n    lcpImage = block.querySelector('.background-mobile img');\n  } else {\n    lcpImage = block.querySelector('.background-desktop img');\n  }\n  await waitForEagerImageLoad(lcpImage);\n}",
            "score": -1.0
        },
        "external-topic/blocks/recent-items/recent-items.js::decorate": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/recent-items/recent-items.js",
            "merged_function": "async function decorate(block) {\n  const resource = toCamelCase(block.textContent);\n  const riCookie = getCookie(resource);\n  const sourceUrl = placeholders[resource];\n  // if the cookie doesn't exist, display nothing.\n  if (riCookie) {\n    const heading = buildBlock('underlined-heading', h2(block.textContent.trim()));\n    block.textContent = '';\n    block.parentElement.parentElement.prepend(div(heading));\n    decorateBlock(heading);\n    await loadBlock(heading);\n\n    // Define the POST request options\n    let requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({ rvi: riCookie }),\n    };\n    // Set to null if localhost avoid CORS error\n    if (window.location.hostname === 'localhost') {\n      requestOptions = null;\n    }\n\n    // Make the POST request\n    fetch(sourceUrl, requestOptions)\n      .then((response) => {\n        if (response.ok) {\n          // Check if the response is gzip-encoded\n          if (response.headers.get('Content-Encoding') === 'gzip') {\n            return response.blob();\n          }\n          return response.json();\n        }\n        return null;\n      })\n      .then((data) => {\n        if (data instanceof Blob) {\n          // If response is gzip-encoded, decode it\n          return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = function onloadCallback() {\n              try {\n                resolve(JSON.parse(reader.result));\n              } catch (error) {\n                reject(error);\n              }\n            };\n            reader.readAsText(data);\n          });\n        }\n        return data;\n      })\n      .then((decodedData) => {\n        block.classList.add('carousel', 'cards', 'cards-4');\n        const { productList, products } = decodedData;\n        const combinedProducts = mergeProductInfo(productList, products);\n        rviLoaded(combinedProducts);\n        // build block\n        const carouselBl = buildBlock('carousel', decorateRIBlock(combinedProducts));\n        const carouselUl = carouselBl.querySelector('ul');\n        block.append(carouselUl);\n        addCarouselNav(block);\n        decorateIcons(block);\n      });\n  } else {\n    block.textContent = '';\n  }\n}",
            "score": -1.0
        },
        "external-topic/blocks/recent-items/recent-items.js::decorateRIBlock": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/recent-items/recent-items.js",
            "merged_function": "function decorateRIBlock(data) {\n  return (\n    ul(\n      ...data.map((offer, index) => (\n        li({ class: 'card with-border' },\n          a({\n            onclick: productClick,\n            href: reconstructURL(offer.productUrl, offer.productInfo.wic, index),\n          },\n          div({ class: 'card-image' },\n            img({\n              src: offer.productInfo.imageUrl,\n              loading: 'lazy',\n              alt: `Offer Image: ${offer.productInfo.productName}`,\n            }),\n          ),\n          div({ class: 'card-body' },\n            p({ class: 'product-title' }, strong(offer.productInfo.productDisplayName)),\n            offer.productInfo.reviewURL\n              ? span({ class: 'product-rating' },\n                img({\n                  src: walgreensUrl(offer.productInfo.reviewURL),\n                  loading: 'lazy',\n                  alt: offer.productInfo.reviewHoverMessage,\n                }),\n                div(offer.productInfo.reviewCount))\n              : '',\n            offer.priceInfo.salePriceHtml\n              ? div(parseHTML(offer.priceInfo.salePriceHtml))\n              : div(parseHTML(offer.priceInfo.regularPriceHtml)),\n            offer.priceInfo.ruleMessage ? div({ class: 'color__text-red' }, offer.priceInfo.ruleMessage.prefix) : '',\n            offer.priceInfo.salePriceHtml ? div({ class: 'regularprice text__line-through', 'aria-hidden': true }, offer.priceInfo.regularPrice) : '',\n            Object.keys(offer.productInfo.availableSkus).length > 0\n              ? div({ class: 'options' }, 'Choose Options')\n              : '',\n          ),\n          ),\n        )),\n      ),\n    )\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/recent-items/recent-items.js::getCookie": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/recent-items/recent-items.js",
            "merged_function": "function getCookie(name) {\n  const cookies = document.cookie.split('; ');\n  let source = 'rvi';\n  if (name === 'buyItAgain') source = 'rpi';\n  for (let i = 0; i < cookies.length; i += 1) {\n    const cookie = cookies[i].split('=');\n    if (cookie[0] === source) {\n      return decodeURIComponent(cookie[1]);\n    }\n  }\n  return null;\n}",
            "score": -1.0
        },
        "external-topic/blocks/recent-items/recent-items.js::mergeProductInfo": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/recent-items/recent-items.js",
            "merged_function": "function mergeProductInfo(productList, products) {\n  const productMap = {};\n  // Populate productMap with products from \"products\" using skuId as the key\n  products.forEach((product) => {\n    productMap[product.productInfo.skuId] = product;\n  });\n  // Merge products from \"productList\" with products from \"products\"\n  const combinedProducts = productList.map((productListItem) => {\n    const { skuId } = productListItem.productInfo;\n    const existingProduct = productMap[skuId];\n\n    if (existingProduct) {\n      // Check if the products are exactly the same\n      const isSameProduct = JSON.stringify(productListItem) === JSON.stringify(existingProduct);\n      // If the products are the same, return the original productListItem\n      if (isSameProduct) {\n        return productListItem;\n      }\n      // If a product with the same skuId exists in \"products,\" merge the properties\n      return { ...productListItem, ...existingProduct };\n    }\n    // If not found in \"products,\" return the original productListItem\n    return productListItem;\n  });\n  return combinedProducts;\n}",
            "score": -1.0
        },
        "external-topic/blocks/recent-items/recent-items.js::parseHTML": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/recent-items/recent-items.js",
            "merged_function": "function parseHTML(htmlString) {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(htmlString, 'text/html');\n  return doc.querySelector('span');\n}",
            "score": -1.0
        },
        "external-topic/blocks/recent-items/recent-items.js::productClick": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/recent-items/recent-items.js",
            "merged_function": "function productClick() {\n  const children = Array.from(this.parentElement.parentElement.children);\n  const index = children.indexOf(this.parentElement) + 1;\n  const idMatch = this.href.match(/ID=(.*?)-product/);\n  const prodID = idMatch ? idMatch[1] : null;\n  const searchParams = new URLSearchParams(this.href);\n  const wic = searchParams.get('product');\n\n  const customEvent = {\n    recommendation: {\n      type: 'product recommendations',\n      name: 'Recently viewed items',\n      placement: index,\n    },\n    prodRecoData: {\n      position: `${index}`,\n      productProdID: `${prodID}`,\n      productWIC: `${wic}`,\n    },\n    productFinding: {\n      method: 'product recommendations',\n    },\n  };\n\n  window.digitalData.triggerCustomEvent('recommendationClick', customEvent);\n}",
            "score": -1.0
        },
        "external-topic/blocks/recent-items/recent-items.js::reconstructURL": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/recent-items/recent-items.js",
            "merged_function": "function reconstructURL(url, product, index) {\n  let position = index;\n  const criteria = 'Recently%20viewed%20items';\n  const newURL = walgreensUrl(`${url.split('?')[0]}?criteria=${criteria}&product=${product}&position=${position += 1}`);\n  return newURL;\n}",
            "score": -1.0
        },
        "external-topic/blocks/recent-items/recent-items.js::rviLoaded": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/recent-items/recent-items.js",
            "merged_function": "function rviLoaded(products) {\n  const prodRecoData = [];\n  if (products.length) {\n    products.forEach((product, index) => {\n      const position = index + 1;\n      prodRecoData.push({\n        position: `${position}`,\n        productProdID: `${product.productInfo.prodId}`,\n        productWIC: `${product.productInfo.wic}`,\n      });\n    });\n  }\n\n  pushToDataLayer({\n    eventData: {\n      prodRecoData,\n      recommendation: {\n        name: 'Recently viewed items',\n        placement: '1',\n        type: 'product recommendations',\n      },\n    },\n    eventName: 'recommendationImpression',\n    status: 'processed',\n    triggered: true,\n  },\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/sidepanel/sidepanel.js::decorate": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/sidepanel/sidepanel.js",
            "merged_function": "async function decorate(block) {\n  for (let i = 0; i < block.children.length; i += 1) {\n    const row = block.children[i];\n    const panel = row.children[0];\n\n    if (panel.querySelector('ul')) {\n      decorateCuratedListOfLinks(panel);\n    } else {\n      // eslint-disable-next-line no-await-in-loop\n      await decorateAPIListOfLinks(panel);\n    }\n\n    if (!i) {\n      panel.querySelector('ul').append(\n        li({ class: 'shop-by-brand' },\n          a({ href: 'https://www.walgreens.com/store/store/brands/brand.jsp' },\n            'Shop by Brand',\n          ),\n        ),\n      );\n    }\n\n    const header = panel.querySelector('h2');\n    const list = panel.querySelector('ul');\n    panel.innerHTML = '';\n\n    const openCloseAccordion = (e) => {\n      const parent = e.currentTarget.parentElement;\n      parent.setAttribute('aria-expanded', `${!(parent.getAttribute('aria-expanded') === 'true')}`);\n    };\n\n    panel.classList.add('panel-accordion');\n    panel.setAttribute('aria-expanded', false);\n    panel.setAttribute('role', 'button');\n\n    panel.append(\n      div({ class: 'accordion-button', onclick: openCloseAccordion },\n        header,\n        span({ class: 'icon icon-arrow-down' }),\n      ),\n      div({ class: 'accordion-content' },\n        list,\n      ),\n    );\n  }\n\n  decorateIcons(block);\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/sidepanel/sidepanel.js::decorateAPIListOfLinks": {
            "changes_after_merge": 1,
            "file_path": "external-topic/blocks/sidepanel/sidepanel.js",
            "merged_function": "async function decorateAPIListOfLinks(panel) {\n  const link = panel.querySelector('a');\n  const apiEndpoint = link.href;\n  link.parentElement.remove();\n  const apiResponse = await fetch(apiEndpoint);\n\n  if (!apiResponse.ok) {\n    return;\n  }\n\n  const apiInfo = await apiResponse.json();\n\n  panel.append(\n    ul(\n      ...apiInfo.categories.map((category) => (\n        li(\n          a({ href: walgreensUrl(category.url) },\n            category.imageUrl === 'null' ? '' : span({ class: 'link-image' }, img({ src: category.imageUrl })),\n            span({ class: 'link-text' }, category.name),\n          ),\n        )\n      )),\n    ),\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/blocks/sidepanel/sidepanel.js::decorateCuratedListOfLinks": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/sidepanel/sidepanel.js",
            "merged_function": "function decorateCuratedListOfLinks(panel) {\n  panel.querySelectorAll('ul a').forEach((link) => {\n    if (!link.previousElementSibling || link.previousElementSibling.nodeName.toLowerCase() !== 'picture') {\n      return;\n    }\n\n    const text = link.textContent;\n    link.innerHTML = '';\n    link.append(\n      span({ class: 'link-image' }, link.previousElementSibling),\n      span({ class: 'link-text' }, text),\n    );\n  });\n}",
            "score": -1.0
        },
        "external-topic/blocks/sidepanel/sidepanel.js::openCloseAccordion": {
            "changes_after_merge": 0,
            "file_path": "external-topic/blocks/sidepanel/sidepanel.js",
            "merged_function": "openCloseAccordion = (e) => {\n      const parent = e.currentTarget.parentElement;\n      parent.setAttribute('aria-expanded', `${!(parent.getAttribute('aria-expanded') === 'true')}`);\n    }",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::addClasses": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  }",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::buildBlock": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return blockEl;\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::createOptimizedPicture": {
            "changes_after_merge": 1,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function createOptimizedPicture(\n  src,\n  alt = '',\n  eager = false,\n  breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }],\n) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}",
            "score": -0.9534883720930233
        },
        "external-topic/scripts/aem.js::decorateBlock": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.dataset.blockName = shortBlockName;\n    block.dataset.blockStatus = 'initialized';\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::decorateBlocks": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function decorateBlocks(main) {\n  main.querySelectorAll('div.section > div > div').forEach(decorateBlock);\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::decorateButtons": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV' || up.tagName === 'STRONG')) {\n          a.className = 'button'; // default\n          up.classList.add('button-container');\n        }\n        if (\n          up.childNodes.length === 1\n          && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1\n          && twoup.tagName === 'P'\n        ) {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (\n          up.childNodes.length === 1\n          && up.tagName === 'EM'\n          && twoup.childNodes.length === 1\n          && twoup.tagName === 'P'\n        ) {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::decorateIcon": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function decorateIcon(span, prefix = '') {\n  const iconName = Array.from(span.classList)\n    .find((c) => c.startsWith('icon-'))\n    .substring(5);\n  const img = document.createElement('img');\n  img.dataset.iconName = iconName;\n  img.src = `${window.hlx.codeBasePath}${prefix}/icons/${iconName}.svg`;\n  img.loading = 'lazy';\n  span.append(img);\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::decorateIcons": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function decorateIcons(element, prefix = '') {\n  const icons = [...element.querySelectorAll('span.icon')];\n  icons.forEach((span) => {\n    decorateIcon(span, prefix);\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::decorateSections": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    // Process section metadata\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::decorateTemplateAndTheme": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function decorateTemplateAndTheme() {\n  const addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::defer": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname] || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  }",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::fetchPlaceholders": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function fetchPlaceholders(prefix = '/external-topic') {\n  window.placeholders = window.placeholders || {};\n  if (!window.placeholders[prefix]) {\n    window.placeholders[prefix] = new Promise((resolve) => {\n      fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n        .then((resp) => {\n          if (resp.ok) {\n            return resp.json();\n          }\n          return {};\n        })\n        .then((json) => {\n          const placeholders = {};\n          json.data\n            .filter((placeholder) => placeholder.Key)\n            .forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n          window.placeholders[prefix] = placeholders;\n          resolve(window.placeholders[prefix]);\n        })\n        .catch(() => {\n          // error loading placeholders\n          window.placeholders[prefix] = {};\n          resolve(window.placeholders[prefix]);\n        });\n    });\n  }\n  return window.placeholders[`${prefix}`];\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::getMetadata": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function getMetadata(name, doc = document) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...doc.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)]\n    .map((m) => m.content)\n    .join(', ');\n  return meta || '';\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::init": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function init() {\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::loadBlock": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function loadBlock(block) {\n  const status = block.dataset.blockStatus;\n  if (status !== 'loading' && status !== 'loaded') {\n    block.dataset.blockStatus = 'loading';\n    const { blockName } = block.dataset;\n    try {\n      const cssLoaded = loadCSS(`${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`);\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(\n              `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.js`\n            );\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.dataset.blockStatus = 'loaded';\n  }\n  return block;\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::loadBlocks": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::loadCSS": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function loadCSS(href) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.append(link);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::loadFooter": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::loadHeader": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function loadScript(src, attrs) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > script[src=\"${src}\"]`)) {\n      const script = document.createElement('script');\n      script.src = src;\n      if (attrs) {\n        // eslint-disable-next-line no-restricted-syntax, guard-for-in\n        for (const attr in attrs) {\n          script.setAttribute(attr, attrs[attr]);\n        }\n      }\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.append(script);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::readBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope > div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::sampleRUM": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname] || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.always = sampleRUM.always || [];\n  sampleRUM.always.on = (chkpnt, fn) => {\n    sampleRUM.always[chkpnt] = fn;\n  };\n  sampleRUM.on = (chkpnt, fn) => {\n    sampleRUM.cases[chkpnt] = fn;\n  };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = usp.get('rum') === 'on' ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      const id = Array.from({ length: 75 }, (_, i) => String.fromCharCode(48 + i))\n        .filter((a) => /\\d|[A-Z]/i.test(a))\n        .filter(() => Math.random() * 75 > 70)\n        .join('');\n      const random = Math.random();\n      const isSelected = random * weight < 1;\n      const firstReadTime = Date.now();\n      const urlSanitizers = {\n        full: () => window.location.href,\n        origin: () => window.location.origin,\n        path: () => window.location.href.replace(/\\?.*$/, ''),\n      };\n      // eslint-disable-next-line object-curly-newline, max-len\n      window.hlx.rum = {\n        weight,\n        id,\n        random,\n        isSelected,\n        firstReadTime,\n        sampleRUM,\n        sanitizeURL: urlSanitizers[window.hlx.RUM_MASK_URL || 'path'],\n      };\n    }\n    const { weight, id, firstReadTime } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const knownProperties = [\n        'weight',\n        'id',\n        'referer',\n        'checkpoint',\n        't',\n        'source',\n        'target',\n        'cwv',\n        'CLS',\n        'FID',\n        'LCP',\n        'INP',\n      ];\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify(\n          {\n            weight,\n            id,\n            referer: window.hlx.rum.sanitizeURL(),\n            checkpoint,\n            t: Date.now() - firstReadTime,\n            ...data,\n          },\n          knownProperties,\n        );\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) {\n        sampleRUM.cases[checkpoint]();\n      }\n    }\n    if (sampleRUM.always[checkpoint]) {\n      sampleRUM.always[checkpoint](data);\n    }\n  } catch (error) {\n    // something went wrong\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::sendPing": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify(\n          {\n            weight,\n            id,\n            referer: window.hlx.rum.sanitizeURL(),\n            checkpoint,\n            t: Date.now() - firstReadTime,\n            ...data,\n          },\n          knownProperties,\n        );\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      }",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::setup": {
            "changes_after_merge": 1,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.RUM_MASK_URL = 'full';\n  window.hlx.codeBasePath = '/external-topic';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}",
            "score": -0.9534883720930233
        },
        "external-topic/scripts/aem.js::toCamelCase": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::toClassName": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function toClassName(name) {\n  return typeof name === 'string'\n    ? name\n      .toLowerCase()\n      .replace(/[^0-9a-z]/gi, '-')\n      .replace(/-+/g, '-')\n      .replace(/^-|-$/g, '')\n    : '';\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::updateSectionsStatus": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.dataset.sectionStatus;\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector(\n        '.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]',\n      );\n      if (loadingBlock) {\n        section.dataset.sectionStatus = 'loading';\n        break;\n      } else {\n        section.dataset.sectionStatus = 'loaded';\n        section.style.display = null;\n      }\n    }\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::waitForEagerImageLoad": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function waitForEagerImageLoad(img) {\n  if (!img) return;\n\n  await new Promise((resolve) => {\n    if (img && !img.complete) {\n      img.setAttribute('loading', 'eager');\n      img.addEventListener('load', resolve);\n      img.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/aem.js::waitForLCP": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/aem.js",
            "merged_function": "async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = block && lcpBlocks.includes(block.dataset.blockName);\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.body.style.display = null;\n  const lcpCandidate = document.querySelector('main img');\n\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/delayed.js::getEnvType": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/delayed.js",
            "merged_function": "function getEnvType(hostname = window.location.hostname) {\n  const fqdnToEnvType = {\n    'walgreens.com': 'live',\n    'www.walgreens.com': 'live',\n    'main--walgreens--hlxsites.hlx.page': 'dev',\n    'main--walgreens--hlxsites.hlx.live': 'dev',\n  };\n  return fqdnToEnvType[hostname] || 'dev';\n}",
            "score": -1.0
        },
        "external-topic/scripts/delayed.js::loadAdobeLaunch": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/delayed.js",
            "merged_function": "async function loadAdobeLaunch() {\n  const adobedtmSrc = {\n    dev: 'https://assets.adobedtm.com/98d94abf0996/ebfaa8e9c235/launch-e03a396c8cc7-development.min.js',\n    preview: 'https://assets.adobedtm.com/98d94abf0996/ebfaa8e9c235/launch-e03a396c8cc7-development.min.js',\n    live: 'https://assets.adobedtm.com/launch-ENdd5c82450e4a478ba693752c21000d75.min.js',\n  };\n  await loadScript(adobedtmSrc[getEnvType()], {\n    type: 'text/javascript',\n    async: true,\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::a": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function a(...items) { return domEl('a', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::article": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function article(...items) { return domEl('article', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::button": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function button(...items) { return domEl('button', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::div": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function div(...items) { return domEl('div', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::domEl": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function domEl(tag, ...items) {\n  const element = document.createElement(tag);\n\n  if (!items || items.length === 0) return element;\n\n  if (!(items[0] instanceof Element || items[0] instanceof HTMLElement) && typeof items[0] === 'object') {\n    const [attributes, ...rest] = items;\n    items = rest;\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      if (!key.startsWith('on')) {\n        element.setAttribute(key, Array.isArray(value) ? value.join(' ') : value);\n      } else {\n        element.addEventListener(key.substring(2).toLowerCase(), value);\n      }\n    });\n  }\n\n  items.forEach((item) => {\n    item = item instanceof Element || item instanceof HTMLElement\n      ? item\n      : document.createTextNode(item);\n    element.appendChild(item);\n  });\n\n  return element;\n}",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::fieldset": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function fieldset(...items) { return domEl('fieldset', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::form": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function form(...items) { return domEl('form', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::h1": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function h1(...items) { return domEl('h1', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::h2": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function h2(...items) { return domEl('h2', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::h3": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function h3(...items) { return domEl('h3', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::h4": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function h4(...items) { return domEl('h4', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::h5": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function h5(...items) { return domEl('h5', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::h6": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function h6(...items) { return domEl('h6', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::i": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function i(...items) { return domEl('i', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::iframe": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function iframe(...items) { return domEl('iframe', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::img": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function img(...items) { return domEl('img', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::input": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function input(...items) { return domEl('input', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::label": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function label(...items) { return domEl('label', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::li": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function li(...items) { return domEl('li', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::nav": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function nav(...items) { return domEl('nav', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::ol": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function ol(...items) { return domEl('ol', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::option": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function option(...items) { return domEl('option', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::p": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function p(...items) { return domEl('p', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::select": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function select(...items) { return domEl('select', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::span": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function span(...items) { return domEl('span', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::strong": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function strong(...items) { return domEl('strong', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/dom-helpers.js::ul": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/dom-helpers.js",
            "merged_function": "function ul(...items) { return domEl('ul', ...items); }",
            "score": -1.0
        },
        "external-topic/scripts/headerfooter-worker.js::resolveRelativeURLs": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/headerfooter-worker.js",
            "merged_function": "function resolveRelativeURLs(content, privacyIcon, localPrivacyIcon) {\n  const baseUrl = 'https://www.walgreens.com';\n\n  // Use a regular expression to find relative links (starting with \"/\")\n  const relativeLinkRegex = /(?:href|action)=\"(?!\\/images\\/)(\\/[^\"]+)\"/g;\n  let absoluteContent = content.replace(relativeLinkRegex, (match, relativePath) => {\n    // Combine the base URL and the relative path to create an absolute URL\n    const absoluteUrl = `${baseUrl}${relativePath}`;\n    return `href=\"${absoluteUrl}\"`;\n  });\n  absoluteContent = absoluteContent.replace(privacyIcon, localPrivacyIcon);\n  return absoluteContent;\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::addClasses": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  }",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::buildBlock": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::createOptimizedPicture": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::decorateBlock": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.dataset.blockName = shortBlockName;\n    block.dataset.blockStatus = 'initialized';\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::decorateBlocks": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::decorateButtons": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          up.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::decorateIcons": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "async function decorateIcons(element) {\n  // Prepare the inline sprite\n  let svgSprite = document.getElementById('franklin-svg-sprite');\n  if (!svgSprite) {\n    const div = document.createElement('div');\n    div.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"franklin-svg-sprite\" style=\"display: none\"></svg>';\n    svgSprite = div.firstElementChild;\n    document.body.append(div.firstElementChild);\n  }\n\n  // Download all new icons\n  const icons = [...element.querySelectorAll('span.icon')];\n  await Promise.all(icons.map(async (span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    if (!ICONS_CACHE[iconName]) {\n      ICONS_CACHE[iconName] = true;\n      try {\n        const response = await fetch(`${window.hlx.codeBasePath}/icons/${iconName}.svg`);\n        if (!response.ok) {\n          ICONS_CACHE[iconName] = false;\n          return;\n        }\n        // Styled icons don't play nice with the sprite approach because of shadow dom isolation\n        // and same for internal references\n        const svg = await response.text();\n        if (svg.match(/(<style | class=|url\\(#| xlink:href=\"#)/)) {\n          ICONS_CACHE[iconName] = {\n            styled: true,\n            html: svg\n              // rescope ids and references to avoid clashes across icons;\n              .replaceAll(/ id=\"([^\"]+)\"/g, (_, id) => ` id=\"${iconName}-${id}\"`)\n              .replaceAll(/=\"url\\(#([^)]+)\\)\"/g, (_, id) => `=\"url(#${iconName}-${id})\"`)\n              .replaceAll(/ xlink:href=\"#([^\"]+)\"/g, (_, id) => ` xlink:href=\"#${iconName}-${id}\"`),\n          };\n        } else {\n          ICONS_CACHE[iconName] = {\n            html: svg\n              .replace('<svg', `<symbol id=\"icons-sprite-${iconName}\"`)\n              .replace(/ width=\".*?\"/, '')\n              .replace(/ height=\".*?\"/, '')\n              .replace('</svg>', '</symbol>'),\n          };\n        }\n      } catch (error) {\n        ICONS_CACHE[iconName] = false;\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    }\n  }));\n\n  const symbols = Object\n    .keys(ICONS_CACHE).filter((k) => !svgSprite.querySelector(`#icons-sprite-${k}`))\n    .map((k) => ICONS_CACHE[k])\n    .filter((v) => !v.styled)\n    .map((v) => v.html)\n    .join('\\n');\n  svgSprite.innerHTML += symbols;\n\n  icons.forEach((span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    const parent = span.firstElementChild?.tagName === 'A' ? span.firstElementChild : span;\n    // Styled icons need to be inlined as-is, while unstyled ones can leverage the sprite\n    if (ICONS_CACHE[iconName].styled) {\n      parent.innerHTML = ICONS_CACHE[iconName].html;\n    } else {\n      parent.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\"><use href=\"#icons-sprite-${iconName}\"/></svg>`;\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::decorateSections": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::decorateTemplateAndTheme": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function decorateTemplateAndTheme() {\n  const addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::defer": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  }",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::fetchPlaceholders": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n        .then((resp) => {\n          if (resp.ok) {\n            return resp.json();\n          }\n          throw new Error(`${resp.status}: ${resp.statusText}`);\n        }).then((json) => {\n          const placeholders = {};\n          json.data\n            .filter((placeholder) => placeholder.Key)\n            .forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n          window.placeholders[prefix] = placeholders;\n          resolve();\n        }).catch((error) => {\n          // error loading placeholders\n          window.placeholders[prefix] = {};\n          reject(error);\n        });\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return window.placeholders[prefix];\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::getBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function getBlockConfig(block) {\n  const { blockName } = block.dataset;\n  const cssPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`;\n  const jsPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.js`;\n  const original = { blockName, cssPath, jsPath };\n  return window.hlx.patchBlockConfig\n    .filter((fn) => typeof fn === 'function')\n    .reduce(\n      (config, fn) => fn(config, original),\n      { blockName, cssPath, jsPath },\n    );\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::getMetadata": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::hashCode": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0)",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::init": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function init() {\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::loadBlock": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "async function loadBlock(block) {\n  const status = block.dataset.blockStatus;\n  if (status !== 'loading' && status !== 'loaded') {\n    block.dataset.blockStatus = 'loading';\n    const { blockName, cssPath, jsPath } = getBlockConfig(block);\n    try {\n      const cssLoaded = loadCSS(cssPath);\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(jsPath);\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.dataset.blockStatus = 'loaded';\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::loadBlocks": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::loadCSS": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "async function loadCSS(href) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.append(link);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::loadFooter": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::loadHeader": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "async function loadScript(src, attrs) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > script[src=\"${src}\"]`)) {\n      const script = document.createElement('script');\n      script.src = src;\n      if (attrs) {\n      // eslint-disable-next-line no-restricted-syntax, guard-for-in\n        for (const attr in attrs) {\n          script.setAttribute(attr, attrs[attr]);\n        }\n      }\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.append(script);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::normalizeHeadings": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::readBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope > div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::sampleRUM": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.always = sampleRUM.always || [];\n  sampleRUM.always.on = (chkpnt, fn) => { sampleRUM.always[chkpnt] = fn; };\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      const urlSanitizers = {\n        full: () => window.location.href,\n        origin: () => window.location.origin,\n        path: () => window.location.href.replace(/\\?.*$/, ''),\n      };\n      // eslint-disable-next-line object-curly-newline, max-len\n      window.hlx.rum = { weight, id, random, isSelected, sampleRUM, sanitizeURL: urlSanitizers[window.hlx.RUM_MASK_URL || 'path'] };\n    }\n    const { weight, id } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n    if (sampleRUM.always[checkpoint]) { sampleRUM.always[checkpoint](data); }\n  } catch (error) {\n    // something went wrong\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::sendPing": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      }",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::setup": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.RUM_MASK_URL = 'full';\n  window.hlx.codeBasePath = '/external-topic';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n  window.hlx.patchBlockConfig = [];\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::toCamelCase": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::toClassName": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-').replace(/-+/g, '-').replace(/^-|-$/g, '')\n    : '';\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::updateSectionsStatus": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.dataset.sectionStatus;\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.dataset.sectionStatus = 'loading';\n        break;\n      } else {\n        section.dataset.sectionStatus = 'loaded';\n        section.style.display = null;\n      }\n    }\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::waitForEagerImageLoad": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "async function waitForEagerImageLoad(img) {\n  if (!img) return;\n\n  await new Promise((resolve) => {\n    if (img && !img.complete) {\n      img.setAttribute('loading', 'eager');\n      img.addEventListener('load', resolve);\n      img.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "external-topic/scripts/lib-franklin.js::waitForLCP": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/lib-franklin.js",
            "merged_function": "async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.dataset.blockName));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.body.style.display = null;\n  const lcpCandidate = document.querySelector('main img');\n  waitForEagerImageLoad(lcpCandidate);\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::buildAutoBlocks": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function buildAutoBlocks(main) {\n  try {\n    buildBackToTop(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::buildBackToTop": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function buildBackToTop(main) {\n  const section = document.createElement('div');\n  const bttw = `<button aria-describedby=\"scrollToTop\" id=\"topBtn\" data-element-name=\"Back to Top\" data-element-type=\"Page Navigation\" class=\"btt btn__back-to-top backtoTopButton hide\" title=\"Go to top\">\n    <span class=\"icon icon-arrow-up\">\n      <svg aria-hidden=\"true\" focusable=\"false\">\n        <use xlink:href=\"/external-topic/images/adaptive/livestyleguide/walgreens.com/v4/themes/images/icons/symbol-defs.svg#icon__arrow-up\"></use>\n      </svg>\n      </span>\n    <span class=\"body-copy__fourteen\" id=\"scrollToTop\">TOP</span>\n    </button>`;\n  section.innerHTML = bttw;\n  main.append(section);\n  const btn = document.getElementById('topBtn');\n  const docEl = document.documentElement;\n\n  btn.addEventListener('click', () => {\n    docEl.scrollTop = 0;\n  });\n\n  window.onscroll = () => {\n    if (docEl.scrollTop > docEl.scrollHeight * 0.1) {\n      if (btn.classList.contains('hide')) pageScrolled();\n      btn.classList.remove('hide');\n    } else {\n      btn.classList.add('hide');\n    }\n  };\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::decorateMain": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n  detectSidebar(main);\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::detectSidebar": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function detectSidebar(main) {\n  const sidebar = main.querySelector('.section.sidebar');\n  if (sidebar) {\n    main.classList.add('sidebar');\n    const sidebarOffset = sidebar.getAttribute('data-start-sidebar-at-section');\n\n    const numSections = main.children.length - 1;\n    main.style = `grid-template-rows: repeat(${numSections}, auto);`;\n\n    if (sidebarOffset && Number.parseInt(sidebar.getAttribute('data-start-sidebar-at-section'), 10)) {\n      const offset = Number.parseInt(sidebar.getAttribute('data-start-sidebar-at-section'), 10);\n      sidebar.style = `grid-row: ${offset} / infinite;`;\n    }\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::getDeviceType": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function getDeviceType() {\n  const { userAgent } = navigator;\n  if (/Mobile/i.test(userAgent)) {\n    return 'mobile';\n  }\n  if (/Tablet/i.test(userAgent)) {\n    return 'tablet';\n  }\n  return 'desktop';\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::getEnvironment": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function getEnvironment(hostname) {\n  if (hostname.includes('hlx.page') || hostname.includes('hlx.live')) {\n    return 'stage';\n  }\n  if (hostname.includes(BASEURL)) {\n    return 'prod';\n  }\n  return 'dev';\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::getTags": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function getTags(tags) {\n  return tags ? tags.split(':').filter((tag) => !!tag).map((tag) => tag.trim()) : [];\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::loadDelayed": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), DELAYED_RESOURCES);\n  // load anything that can be postponed to the latest here\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::loadEager": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "async function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    document.body.classList.add('appear');\n    await waitForLCP(LCP_BLOCKS);\n  }\n\n  try {\n    /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n    if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n      loadFonts();\n    }\n  } catch (e) {\n    // do nothing\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::loadFileList": {
            "changes_after_merge": 4,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "async function loadFileList(fileList) {\n  const skip = ['dtm', 'speedIndex']; // ['dtm', 'googleApi', 'lsgScriptMin'];\n  const eager = ['jquery', 'headerSupport', 'sly', 'lsgURL'];\n  const scriptTags = document.querySelectorAll('script[src]');\n\n  const fileKeys = Object.keys(fileList);\n\n  fileKeys.forEach((fileName) => {\n    if (fileList[fileName]) {\n      const fileInfo = fileList[fileName];\n      const absolutePath = fileInfo.path.startsWith('http')\n        ? fileInfo.path\n        : BASEURL + fileInfo.path;\n\n      // Check if a script with the same URL is already on the page\n      const scriptExists = [...scriptTags].some((scriptTag) => scriptTag.src === absolutePath);\n\n      if (fileInfo.type === 'js' && !scriptExists && !skip.includes(fileName)) {\n        if (eager.includes(fileName)) {\n          loadScript(absolutePath, { type: 'text/javascript', charset: 'UTF-8', async: true });\n        } else {\n          setTimeout(() => {\n            loadScript(absolutePath, { type: 'text/javascript', charset: 'UTF-8', async: true });\n          }, DELAYED_RESOURCES);\n        }\n      } else if (fileInfo.type === 'css') {\n        loadCSS(absolutePath);\n      }\n    }\n  });\n}",
            "score": -0.813953488372093
        },
        "external-topic/scripts/scripts.js::loadFonts": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "async function loadFonts() {\n  await loadCSS(`${window.hlx.codeBasePath}/styles/fonts.css`);\n  try {\n    if (!window.location.hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (e) {\n    // do nothing\n  }\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::loadLazy": {
            "changes_after_merge": 1,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "async function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadBlocks(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  // TODO: remove this check before go-live\n  const noHeader = new URLSearchParams(window.location.search).has('test');\n  if (!noHeader) {\n    loadHeader(doc.querySelector('header'));\n    loadFooter(doc.querySelector('footer'));\n  }\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  loadFonts();\n\n  sampleRUM('lazy');\n  sampleRUM.observe(main.querySelectorAll('div[data-block-name]'));\n  sampleRUM.observe(main.querySelectorAll('picture > img'));\n}",
            "score": -0.9534883720930233
        },
        "external-topic/scripts/scripts.js::loadPage": {
            "changes_after_merge": 2,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "async function loadPage() {\n  pushPageLoadToDataLayer();\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}",
            "score": -0.9069767441860466
        },
        "external-topic/scripts/scripts.js::pageScrolled": {
            "changes_after_merge": 1,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function pageScrolled() {\n  const siteSection = window.location.pathname.split('/')[1];\n  pushToDataLayer({\n    eventData: {\n      contentName: `Back to Top - ${(siteSection === 'topic') ? 'Topic' : 'Shop Landing'}`,\n      contentType: 'Page Navigation - Back to Top',\n      impressionType: 'present',\n      recommendationType: 'none',\n    },\n    eventName: 'ContentImpression',\n    status: 'processed',\n    triggered: true,\n  },\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/scripts/scripts.js::pushPageLoadToDataLayer": {
            "changes_after_merge": 1,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function pushPageLoadToDataLayer() {\n  const { hostname, pathname } = window.location;\n  const environment = getEnvironment(hostname);\n  const siteSection = pathname.split('/')[1];\n  pushToDataLayer({\n    eventData: '',\n    eventName: 'DataLayerReady',\n    status: 'processed',\n    triggered: false,\n  },\n  {\n    pageInfo: {\n      cleanURL: window.location.href,\n      deviceType: getDeviceType(),\n      environment,\n      pageName: getMetadata('og:title'),\n      pageTemplate: (siteSection === 'topic') ? 'Topic' : 'Shop',\n      siteSection,\n      serverName: 'hlx.live', // indicator for AEM Edge Delivery\n    },\n  },\n  );\n}",
            "score": -0.9534883720930233
        },
        "external-topic/scripts/scripts.js::pushToDataLayer": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function pushToDataLayer(event, payload) {\n  if (!window.digitalData) {\n    window.digitalData = {};\n    window.digitalData.events = [];\n  }\n  window.digitalData.events.push(event);\n  if (payload) window.digitalData.page = payload;\n}",
            "score": -1.0
        },
        "external-topic/scripts/scripts.js::walgreensUrl": {
            "changes_after_merge": 0,
            "file_path": "external-topic/scripts/scripts.js",
            "merged_function": "function walgreensUrl(path) {\n  return new URL(path, BASEURL).toString();\n}",
            "score": -1.0
        },
        "scripts/delayed.js::getEnvType": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "function getEnvType(hostname = window.location.hostname) {\n  const fqdnToEnvType = {\n    'walgreens.com': 'live',\n    'www.walgreens.com': 'live',\n    'main--walgreens--hlxsites.hlx.page': 'dev',\n    'main--walgreens--hlxsites.hlx.live': 'live',\n  };\n  return fqdnToEnvType[hostname] || 'dev';\n}",
            "score": -0.9534883720930233
        },
        "scripts/delayed.js::loadAdobeLaunch": {
            "changes_after_merge": 1,
            "file_path": "scripts/delayed.js",
            "merged_function": "async function loadAdobeLaunch() {\n  const adobedtmSrc = {\n    dev: 'https://assets.adobedtm.com/98d94abf0996/ebfaa8e9c235/launch-e03a396c8cc7-development.min.js',\n    preview: '',\n    live: 'https://assets.adobedtm.com/launch-ENdd5c82450e4a478ba693752c21000d75.min.js',\n  };\n  await loadScript(adobedtmSrc[getEnvType()], {\n    type: 'text/javascript',\n    async: true,\n  });\n}",
            "score": -0.9534883720930233
        },
        "scripts/dom-helpers.js::a": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function a(...items) { return domEl('a', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::article": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function article(...items) { return domEl('article', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::button": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function button(...items) { return domEl('button', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::div": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function div(...items) { return domEl('div', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::domEl": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function domEl(tag, ...items) {\n  const element = document.createElement(tag);\n\n  if (!items || items.length === 0) return element;\n\n  if (!(items[0] instanceof Element || items[0] instanceof HTMLElement) && typeof items[0] === 'object') {\n    const [attributes, ...rest] = items;\n    items = rest;\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      if (!key.startsWith('on')) {\n        element.setAttribute(key, Array.isArray(value) ? value.join(' ') : value);\n      } else {\n        element.addEventListener(key.substring(2).toLowerCase(), value);\n      }\n    });\n  }\n\n  items.forEach((item) => {\n    item = item instanceof Element || item instanceof HTMLElement\n      ? item\n      : document.createTextNode(item);\n    element.appendChild(item);\n  });\n\n  return element;\n}",
            "score": -1.0
        },
        "scripts/dom-helpers.js::fieldset": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function fieldset(...items) { return domEl('fieldset', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::form": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function form(...items) { return domEl('form', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h1": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h1(...items) { return domEl('h1', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h2": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h2(...items) { return domEl('h2', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h3": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h3(...items) { return domEl('h3', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h4": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h4(...items) { return domEl('h4', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h5": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h5(...items) { return domEl('h5', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::h6": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function h6(...items) { return domEl('h6', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::i": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function i(...items) { return domEl('i', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::iframe": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function iframe(...items) { return domEl('iframe', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::img": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function img(...items) { return domEl('img', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::input": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function input(...items) { return domEl('input', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::label": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function label(...items) { return domEl('label', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::li": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function li(...items) { return domEl('li', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::nav": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function nav(...items) { return domEl('nav', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::ol": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function ol(...items) { return domEl('ol', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::option": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function option(...items) { return domEl('option', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::p": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function p(...items) { return domEl('p', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::select": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function select(...items) { return domEl('select', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::span": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function span(...items) { return domEl('span', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::strong": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function strong(...items) { return domEl('strong', ...items); }",
            "score": -1.0
        },
        "scripts/dom-helpers.js::ul": {
            "changes_after_merge": 0,
            "file_path": "scripts/dom-helpers.js",
            "merged_function": "function ul(...items) { return domEl('ul', ...items); }",
            "score": -1.0
        },
        "scripts/headerfooter-worker.js::resolveRelativeURLs": {
            "changes_after_merge": 2,
            "file_path": "scripts/headerfooter-worker.js",
            "merged_function": "function resolveRelativeURLs(content) {\n  const baseUrl = 'https://walgreens.com';\n\n  // Use a regular expression to find relative links (starting with \"/\")\n  const relativeLinkRegex = /(?:href|action)=\"(?!\\/images\\/)(\\/[^\"]+)\"/g;\n  const absoluteContent = content.replace(relativeLinkRegex, (match, relativePath) => {\n    // Combine the base URL and the relative path to create an absolute URL\n    const absoluteUrl = `${baseUrl}${relativePath}`;\n    return `href=\"${absoluteUrl}\"`;\n  });\n  return absoluteContent;\n}",
            "score": -0.9069767441860466
        },
        "scripts/lib-franklin.js::addClasses": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::buildBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::createOptimizedPicture": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.dataset.blockName = shortBlockName;\n    block.dataset.blockStatus = 'initialized';\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateButtons": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateButtons(element) {\n  element.querySelectorAll('a').forEach((a) => {\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      if (!a.querySelector('img')) {\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          up.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n        }\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button secondary';\n          twoup.classList.add('button-container');\n        }\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateIcons": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function decorateIcons(element) {\n  // Prepare the inline sprite\n  let svgSprite = document.getElementById('franklin-svg-sprite');\n  if (!svgSprite) {\n    const div = document.createElement('div');\n    div.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"franklin-svg-sprite\" style=\"display: none\"></svg>';\n    svgSprite = div.firstElementChild;\n    document.body.append(div.firstElementChild);\n  }\n\n  // Download all new icons\n  const icons = [...element.querySelectorAll('span.icon')];\n  await Promise.all(icons.map(async (span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    if (!ICONS_CACHE[iconName]) {\n      ICONS_CACHE[iconName] = true;\n      try {\n        const response = await fetch(`${window.hlx.codeBasePath}/icons/${iconName}.svg`);\n        if (!response.ok) {\n          ICONS_CACHE[iconName] = false;\n          return;\n        }\n        // Styled icons don't play nice with the sprite approach because of shadow dom isolation\n        // and same for internal references\n        const svg = await response.text();\n        if (svg.match(/(<style | class=|url\\(#| xlink:href=\"#)/)) {\n          ICONS_CACHE[iconName] = {\n            styled: true,\n            html: svg\n              // rescope ids and references to avoid clashes across icons;\n              .replaceAll(/ id=\"([^\"]+)\"/g, (_, id) => ` id=\"${iconName}-${id}\"`)\n              .replaceAll(/=\"url\\(#([^)]+)\\)\"/g, (_, id) => `=\"url(#${iconName}-${id})\"`)\n              .replaceAll(/ xlink:href=\"#([^\"]+)\"/g, (_, id) => ` xlink:href=\"#${iconName}-${id}\"`),\n          };\n        } else {\n          ICONS_CACHE[iconName] = {\n            html: svg\n              .replace('<svg', `<symbol id=\"icons-sprite-${iconName}\"`)\n              .replace(/ width=\".*?\"/, '')\n              .replace(/ height=\".*?\"/, '')\n              .replace('</svg>', '</symbol>'),\n          };\n        }\n      } catch (error) {\n        ICONS_CACHE[iconName] = false;\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    }\n  }));\n\n  const symbols = Object\n    .keys(ICONS_CACHE).filter((k) => !svgSprite.querySelector(`#icons-sprite-${k}`))\n    .map((k) => ICONS_CACHE[k])\n    .filter((v) => !v.styled)\n    .map((v) => v.html)\n    .join('\\n');\n  svgSprite.innerHTML += symbols;\n\n  icons.forEach((span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    const parent = span.firstElementChild?.tagName === 'A' ? span.firstElementChild : span;\n    // Styled icons need to be inlined as-is, while unstyled ones can leverage the sprite\n    if (ICONS_CACHE[iconName].styled) {\n      parent.innerHTML = ICONS_CACHE[iconName].html;\n    } else {\n      parent.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\"><use href=\"#icons-sprite-${iconName}\"/></svg>`;\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateSections": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::decorateTemplateAndTheme": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function decorateTemplateAndTheme() {\n  const addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  };\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::defer": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::fetchPlaceholders": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function fetchPlaceholders(prefix = 'default') {\n  window.placeholders = window.placeholders || {};\n  const loaded = window.placeholders[`${prefix}-loaded`];\n  if (!loaded) {\n    window.placeholders[`${prefix}-loaded`] = new Promise((resolve, reject) => {\n      fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`)\n        .then((resp) => {\n          if (resp.ok) {\n            return resp.json();\n          }\n          throw new Error(`${resp.status}: ${resp.statusText}`);\n        }).then((json) => {\n          const placeholders = {};\n          json.data\n            .filter((placeholder) => placeholder.Key)\n            .forEach((placeholder) => {\n              placeholders[toCamelCase(placeholder.Key)] = placeholder.Text;\n            });\n          window.placeholders[prefix] = placeholders;\n          resolve();\n        }).catch((error) => {\n          // error loading placeholders\n          window.placeholders[prefix] = {};\n          reject(error);\n        });\n    });\n  }\n  await window.placeholders[`${prefix}-loaded`];\n  return window.placeholders[prefix];\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getBlockConfig(block) {\n  const { blockName } = block.dataset;\n  const cssPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`;\n  const jsPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.js`;\n  const original = { blockName, cssPath, jsPath };\n  return window.hlx.patchBlockConfig\n    .filter((fn) => typeof fn === 'function')\n    .reduce(\n      (config, fn) => fn(config, original),\n      { blockName, cssPath, jsPath },\n    );\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::getMetadata": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::hashCode": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0)",
            "score": -1.0
        },
        "scripts/lib-franklin.js::init": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function init() {\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlock(block) {\n  const status = block.dataset.blockStatus;\n  if (status !== 'loading' && status !== 'loaded') {\n    block.dataset.blockStatus = 'loading';\n    const { blockName, cssPath, jsPath } = getBlockConfig(block);\n    try {\n      const cssLoaded = loadCSS(cssPath);\n      const decorationComplete = new Promise((resolve) => {\n        (async () => {\n          try {\n            const mod = await import(jsPath);\n            if (mod.default) {\n              await mod.default(block);\n            }\n          } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(`failed to load module for ${blockName}`, error);\n          }\n          resolve();\n        })();\n      });\n      await Promise.all([cssLoaded, decorationComplete]);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.dataset.blockStatus = 'loaded';\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadBlocks": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadCSS": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadCSS(href) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.append(link);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadFooter": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadHeader": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::loadScript": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function loadScript(src, attrs) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > script[src=\"${src}\"]`)) {\n      const script = document.createElement('script');\n      script.src = src;\n      if (attrs) {\n      // eslint-disable-next-line no-restricted-syntax, guard-for-in\n        for (const attr in attrs) {\n          script.setAttribute(attr, attrs[attr]);\n        }\n      }\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.append(script);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::normalizeHeadings": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::readBlockConfig": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope > div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::sampleRUM": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function sampleRUM(checkpoint, data = {}) {\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.always = sampleRUM.always || [];\n  sampleRUM.always.on = (chkpnt, fn) => { sampleRUM.always[chkpnt] = fn; };\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const hashCode = (s) => s.split('').reduce((a, b) => (((a << 5) - a) + b.charCodeAt(0)) | 0, 0);\n      const id = `${hashCode(window.location.href)}-${new Date().getTime()}-${Math.random().toString(16).substr(2, 14)}`;\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      const urlSanitizers = {\n        full: () => window.location.href,\n        origin: () => window.location.origin,\n        path: () => window.location.href.replace(/\\?.*$/, ''),\n      };\n      // eslint-disable-next-line object-curly-newline, max-len\n      window.hlx.rum = { weight, id, random, isSelected, sampleRUM, sanitizeURL: urlSanitizers[window.hlx.RUM_MASK_URL || 'path'] };\n    }\n    const { weight, id } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n    if (sampleRUM.always[checkpoint]) { sampleRUM.always[checkpoint](data); }\n  } catch (error) {\n    // something went wrong\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::sendPing": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "sendPing = (pdata = data) => {\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, ...data });\n        const url = `https://rum.hlx.page/.rum/${weight}`;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      }",
            "score": -1.0
        },
        "scripts/lib-franklin.js::setup": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.RUM_MASK_URL = 'full';\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n  window.hlx.patchBlockConfig = [];\n\n  const scriptEl = document.querySelector('script[src$=\"/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::toCamelCase": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::toClassName": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase().replace(/[^0-9a-z]/gi, '-').replace(/-+/g, '-').replace(/^-|-$/g, '')\n    : '';\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::updateSectionsStatus": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.dataset.sectionStatus;\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.dataset.sectionStatus = 'loading';\n        break;\n      } else {\n        section.dataset.sectionStatus = 'loaded';\n        section.style.display = null;\n      }\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::waitForEagerImageLoad": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function waitForEagerImageLoad(img) {\n  if (!img) return;\n\n  await new Promise((resolve) => {\n    if (img && !img.complete) {\n      img.setAttribute('loading', 'eager');\n      img.addEventListener('load', resolve);\n      img.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}",
            "score": -1.0
        },
        "scripts/lib-franklin.js::waitForLCP": {
            "changes_after_merge": 0,
            "file_path": "scripts/lib-franklin.js",
            "merged_function": "async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.dataset.blockName));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.body.style.display = null;\n  const lcpCandidate = document.querySelector('main img');\n  waitForEagerImageLoad(lcpCandidate);\n}",
            "score": -1.0
        },
        "scripts/scripts.js::buildAutoBlocks": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildAutoBlocks(main) {\n  try {\n    buildHeroBlock(main);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Auto Blocking failed', error);\n  }\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::buildBackToTop": {
            "changes_after_merge": 8,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildBackToTop(main) {\n  const section = document.createElement('div');\n  const bttw = `<div id=\"backtoTopWidget\">\n  <button aria-describedby=\"scrollToTop\" id=\"topBtn\" data-element-name=\"Back to Top\" data-element-type=\"Page Navigation\" class=\"btt btn__back-to-top backtoTopButton hide\" title=\"Go to top\">\n      <span class=\"hide\">\n          <span class=\"icon icon__arrow-up\">\n              <svg aria-hidden=\"true\" focusable=\"false\">\n                  <use xlink:href=\"/images/adaptive/livestyleguide/walgreens.com/v4/themes/images/icons/symbol-defs.svg#icon__arrow-up\"></use>\n              </svg>\n          </span>\n          <span class=\"body-copy__fourteen\" id=\"scrollToTop\">TOP</span>\n      </span>\n  </button>\n</div>`\n  section.innerHTML = bttw;\n  main.append(section);\n}",
            "score": -0.627906976744186
        },
        "scripts/scripts.js::buildHeroBlock": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function buildHeroBlock(main) {\n  const h1 = main.querySelector('h1');\n  const picture = main.querySelector('picture');\n  // eslint-disable-next-line no-bitwise\n  if (h1 && picture && (h1.compareDocumentPosition(picture) & Node.DOCUMENT_POSITION_PRECEDING)) {\n    const section = document.createElement('div');\n    section.append(buildBlock('hero', { elems: [picture, h1] }));\n    main.prepend(section);\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::decorateMain": {
            "changes_after_merge": 1,
            "file_path": "scripts/scripts.js",
            "merged_function": "function decorateMain(main) {\n  // hopefully forward compatible button decoration\n  decorateButtons(main);\n  decorateIcons(main);\n  buildAutoBlocks(main);\n  decorateSections(main);\n  decorateBlocks(main);\n}",
            "score": -0.9534883720930233
        },
        "scripts/scripts.js::detectSidebar": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function detectSidebar(main) {\n  const sidebar = main.querySelector('.section.sidebar');\n  if (sidebar) {\n    main.classList.add('sidebar');\n    const sidebarOffset = sidebar.getAttribute('data-start-sidebar-at-section');\n\n    const numSections = main.children.length - 1;\n    main.style = `grid-template-rows: repeat(${numSections}, auto);`;\n\n    if (sidebarOffset && Number.parseInt(sidebar.getAttribute('data-start-sidebar-at-section'), 10)) {\n      const offset = Number.parseInt(sidebar.getAttribute('data-start-sidebar-at-section'), 10);\n      sidebar.style = `grid-row: ${offset} / infinite;`;\n    }\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getDeviceType": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getDeviceType() {\n    const userAgent = navigator.userAgent;\n\n    if (/Mobile/i.test(userAgent)) {\n        // Mobile device (including tablets)\n        return 'mobile';\n    } else if (/Tablet/i.test(userAgent)) {\n        // Tablet device\n        return 'tablet';\n    } else {\n        // Desktop device\n        return 'desktop';\n    }\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::getEnvType": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getEnvType(hostname = window.location.hostname) {\n  const fqdnToEnvType = {\n    'walgreens.com': 'live',\n    'www.walgreens.com': 'live',\n    'main--walgreens--hlxsites.hlx.page': 'dev',\n    'main--walgreens--hlxsites.hlx.live': 'live',\n  };\n  return fqdnToEnvType[hostname] || 'dev';\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getEnvironment": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getEnvironment(hostname) {\n  if (hostname.includes('hlx.page') || hostname.includes('hlx.live')) {\n    return 'stage';\n  }\n  if (hostname.includes(BASEURL)) {\n    return 'prod';\n  }\n  return 'dev';\n}",
            "score": -1.0
        },
        "scripts/scripts.js::getTags": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function getTags(tags) {\n  return tags ? tags.split(':').filter((tag) => !!tag).map((tag) => tag.trim()) : [];\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadDelayed": {
            "changes_after_merge": 3,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadDelayed() {\n  // eslint-disable-next-line import/no-cycle\n  window.setTimeout(() => import('./delayed.js'), 3000);\n  // load anything that can be postponed to the latest here\n}",
            "score": -0.8604651162790697
        },
        "scripts/scripts.js::loadEager": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadEager(doc) {\n  document.documentElement.lang = 'en';\n  decorateTemplateAndTheme();\n  const main = doc.querySelector('main');\n  if (main) {\n    decorateMain(main);\n    document.body.classList.add('appear');\n    await waitForLCP(LCP_BLOCKS);\n  }\n\n  try {\n    /* if desktop (proxy for fast connection) or fonts already loaded, load fonts.css */\n    if (window.innerWidth >= 900 || sessionStorage.getItem('fonts-loaded')) {\n      loadFonts();\n    }\n  } catch (e) {\n    // do nothing\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadFileList": {
            "changes_after_merge": 15,
            "file_path": "scripts/scripts.js",
            "merged_function": "function loadFileList(fileList) {\n  const baseUrl = 'https://www.walgreens.com';\n\n  const scriptTags = document.querySelectorAll('script[src]');\n\n  const fileKeys = Object.keys(fileList);\n\n  fileKeys.forEach((fileName) => {\n    if (fileList[fileName]) {\n      const fileInfo = fileList[fileName];\n      const absolutePath = fileInfo.path.startsWith('http')\n        ? fileInfo.path\n        : baseUrl + fileInfo.path;\n\n      // Check if a script with the same URL is already on the page\n      const scriptExists = [...scriptTags].some((scriptTag) => scriptTag.src === absolutePath);\n\n      if (\n        fileInfo.type === 'js'\n        && !scriptExists\n        && !['dtm', 'googleApi', 'speedIndex'].includes(fileName)\n      ) {\n        loadScript(absolutePath, {\n          type: 'text/javascript',\n          charset: 'UTF-8',\n          async: true,\n        });\n      } else if (fileInfo.type === 'css') {\n        loadCSS(absolutePath);\n      }\n    }\n  });\n}",
            "score": -0.3023255813953488
        },
        "scripts/scripts.js::loadFonts": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadFonts() {\n  await loadCSS(`${window.hlx.codeBasePath}/styles/fonts.css`);\n  try {\n    if (!window.location.hostname.includes('localhost')) sessionStorage.setItem('fonts-loaded', 'true');\n  } catch (e) {\n    // do nothing\n  }\n}",
            "score": -1.0
        },
        "scripts/scripts.js::loadLazy": {
            "changes_after_merge": 13,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadLazy(doc) {\n  const main = doc.querySelector('main');\n  await loadBlocks(main);\n\n  const { hash } = window.location;\n  const element = hash ? doc.getElementById(hash.substring(1)) : false;\n  if (hash && element) element.scrollIntoView();\n\n  loadHeader(doc.querySelector('header'));\n  loadFooter(doc.querySelector('footer'));\n\n  loadCSS(`${window.hlx.codeBasePath}/styles/lazy-styles.css`);\n  loadFonts();\n\n  sampleRUM('lazy');\n  sampleRUM.observe(main.querySelectorAll('div[data-block-name]'));\n  sampleRUM.observe(main.querySelectorAll('picture > img'));\n}",
            "score": -0.39534883720930236
        },
        "scripts/scripts.js::loadPage": {
            "changes_after_merge": 5,
            "file_path": "scripts/scripts.js",
            "merged_function": "async function loadPage() {\n  await loadEager(document);\n  await loadLazy(document);\n  loadDelayed();\n}",
            "score": -0.7674418604651163
        },
        "scripts/scripts.js::pageScrolled": {
            "changes_after_merge": 0,
            "file_path": "scripts/scripts.js",
            "merged_function": "function pageScrolled() {\n  const siteSection = window.location.pathname.split('/')[1];\n  pushToDataLayer({\n    eventData: {\n      contentName: `Back to Top - ${(siteSection === 'topic') ? 'Topic' : 'Shop Landing'}`,\n      contentType: 'Page Navigation - Back to Top',\n      impressionType: 'present',\n      recommendationType: 'none',\n    },\n    eventName: 'ContentImpression',\n    status: 'processed',\n    triggered: true,\n  },\n  );\n}",
            "score": -1.0
        },
        "scripts/scripts.js::pushPageLoadToDataLayer": {
            "changes_after_merge": 6,
            "file_path": "scripts/scripts.js",
            "merged_function": "function pushPageLoadToDataLayer() {\n  const { hostname, pathname } = window.location;\n  const environment = getEnvironment(hostname);\n  const setSection = pathname.split('/')[1];\n  pushToDataLayer(\n    { eventData: '',\n      eventName: 'DataLayerReady',\n      status: 'processed',\n      triggered: false,\n    },\n    { pageInfo: {\n        cleanURL: window.location.href,\n        deviceType: getDeviceType(),\n        environment: environment,\n        pageName: getMetadata('og:title'),\n        pageTemplate: setSection.replace(/^\\w/, (char) => char.toUpperCase()),\n        setSection: setSection,\n        serverName: 'hlx.live', // indicator for AEM Edge Delivery\n      }\n    }\n  );\n}",
            "score": -0.7209302325581395
        },
        "scripts/scripts.js::pushToDataLayer": {
            "changes_after_merge": 2,
            "file_path": "scripts/scripts.js",
            "merged_function": "function pushToDataLayer(event, payload) {\n  if (!window.digitalData) {\n    window.digitalData = {};\n    window.digitalData.events = [];\n  }\n  window.digitalData.events.push( event );\n  window.digitalData.page = payload;\n}",
            "score": -0.9069767441860466
        },
        "scripts/scripts.js::resolveRelativeURLs": {
            "changes_after_merge": 7,
            "file_path": "scripts/scripts.js",
            "merged_function": "function resolveRelativeURLs(content) {\n  const baseUrl = 'https://walgreens.com';\n\n  // Use a regular expression to find relative links (starting with \"/\")\n  const relativeLinkRegex = /(?:href|action)=\"(?!\\/images\\/)(\\/[^\"]+)\"/g;\n  const absoluteContent = content.replace(relativeLinkRegex, (match, relativePath) => {\n    // Combine the base URL and the relative path to create an absolute URL\n    const absoluteUrl = `${baseUrl}/${relativePath}`;\n    return `href=\"${absoluteUrl}\"`;\n  });\n  return absoluteContent;\n}",
            "score": -0.6744186046511628
        },
        "scripts/scripts.js::walgreensUrl": {
            "changes_after_merge": 5,
            "file_path": "scripts/scripts.js",
            "merged_function": "function walgreensUrl(path) {\n  return new URL(path, 'https://www.walgreens.com').toString();\n}",
            "score": -0.7674418604651163
        }
    }
}